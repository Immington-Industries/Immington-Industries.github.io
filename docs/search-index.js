var N = null;var searchIndex = {};
searchIndex["bitflags"]={"doc":"A typesafe bitmask flag generator useful for sets of C-style bitmask flags. It can be used for creating typesafe wrappers around C APIs.","items":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",N,N]],"paths":[]};
searchIndex["calloop"]={"doc":"Calloop, a Callback-based Event Loop","items":[[3,"EventLoop","calloop","An event loop",N,N],[3,"InsertError","","An error generated when trying to insert an event source",N,N],[12,"source","","The source that could not be inserted",0,N],[12,"error","","The generated error",0,N],[3,"LoopHandle","","An handle to an event loop",N,N],[3,"LoopSignal","","A signal that can be shared between thread to stop or wakeup a running event loop",N,N],[3,"Source","","An event source that has been inserted into the event loop",N,N],[3,"Idle","","An idle callback that was inserted in this loop",N,N],[0,"channel","","An MPSC channel whose receiving end is an event source",N,N],[4,"SendError","calloop::channel","An error returned from the `Sender::send` or `SyncSender::send` function.",N,N],[13,"Io","","An IO error.",1,N],[13,"Disconnected","","The receiving half of the channel has disconnected.",1,N],[3,"Sender","","The sending half of a channel.",N,N],[3,"SyncSender","","The sending half of a synchronous channel.",N,N],[4,"TrySendError","","An error returned from the `SyncSender::try_send` function.",N,N],[13,"Io","","An IO error.",2,N],[13,"Full","","Data could not be sent because it would require the callee to block.",2,N],[13,"Disconnected","","The receiving half of the channel has disconnected.",2,N],[3,"Channel","","The receiving end of the channel",N,N],[4,"Event","","The events generated by the channel event source",N,N],[13,"Msg","","A message was received and is bundled here",3,N],[13,"Closed","","The channel was closed",3,N],[5,"channel","","Create a new asynchronous channel",N,N],[5,"sync_channel","","Create a new synchronous, bounded channel",N,N],[0,"generic","calloop","A generic event source wrapping an `Evented` type",N,N],[3,"Generic","calloop::generic","A generic event source wrapping an `Evented` type",N,N],[3,"Event","","An event generated by the `Generic` source",N,N],[12,"source","","An access to the source that generated this event",4,N],[12,"readiness","","The associated rediness",4,N],[3,"EventedFd","","An owning wrapper implementing Evented for any file descriptor based type in Unix",N,N],[12,"0","","",5,N],[3,"EventedRawFd","","A wrapper implementing Evented for any raw file descriptor.",N,N],[12,"0","","",6,N],[0,"signals","calloop","Event source for tracking Unix signals",N,N],[4,"Signal","calloop::signals","",N,N],[13,"SIGHUP","","",7,N],[13,"SIGINT","","",7,N],[13,"SIGQUIT","","",7,N],[13,"SIGILL","","",7,N],[13,"SIGTRAP","","",7,N],[13,"SIGABRT","","",7,N],[13,"SIGBUS","","",7,N],[13,"SIGFPE","","",7,N],[13,"SIGKILL","","",7,N],[13,"SIGUSR1","","",7,N],[13,"SIGSEGV","","",7,N],[13,"SIGUSR2","","",7,N],[13,"SIGPIPE","","",7,N],[13,"SIGALRM","","",7,N],[13,"SIGTERM","","",7,N],[13,"SIGSTKFLT","","",7,N],[13,"SIGCHLD","","",7,N],[13,"SIGCONT","","",7,N],[13,"SIGSTOP","","",7,N],[13,"SIGTSTP","","",7,N],[13,"SIGTTIN","","",7,N],[13,"SIGTTOU","","",7,N],[13,"SIGURG","","",7,N],[13,"SIGXCPU","","",7,N],[13,"SIGXFSZ","","",7,N],[13,"SIGVTALRM","","",7,N],[13,"SIGPROF","","",7,N],[13,"SIGWINCH","","",7,N],[13,"SIGIO","","",7,N],[13,"SIGPWR","","",7,N],[13,"SIGSYS","","",7,N],[3,"siginfo","","",N,N],[12,"ssi_signo","","",8,N],[12,"ssi_errno","","",8,N],[12,"ssi_code","","",8,N],[12,"ssi_pid","","",8,N],[12,"ssi_uid","","",8,N],[12,"ssi_fd","","",8,N],[12,"ssi_tid","","",8,N],[12,"ssi_band","","",8,N],[12,"ssi_overrun","","",8,N],[12,"ssi_trapno","","",8,N],[12,"ssi_status","","",8,N],[12,"ssi_int","","",8,N],[12,"ssi_ptr","","",8,N],[12,"ssi_utime","","",8,N],[12,"ssi_stime","","",8,N],[12,"ssi_addr","","",8,N],[12,"ssi_addr_lsb","","",8,N],[12,"ssi_syscall","","",8,N],[12,"ssi_call_addr","","",8,N],[12,"ssi_arch","","",8,N],[3,"Event","","An event generated by the signal event source",N,N],[3,"Signals","","An event source for receiving Unix signals",N,N],[0,"timer","calloop","Timer-based event sources",N,N],[3,"Timeout","calloop::timer","A timeout, as returned by `Timer::set_timeout`.",N,N],[3,"Timer","","A Timer event source",N,N],[3,"TimerHandle","","An handle to a timer, used to set or cancel timeouts",N,N],[11,"clone","calloop","",9,[[["self"]],["loophandle"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"insert_source","","Insert an new event source in the loop",9,[[["self"],["e"],["f"]],["result",["source","inserterror"]]]],[11,"insert_idle","","Insert an idle callback",9,[[["self"],["f"]],["idle"]]],[11,"new","","Create a new event loop",10,[[],["result",["eventloop"]]]],[11,"handle","","Retrieve a loop handle",10,[[["self"]],["loophandle"]]],[11,"dispatch","","Dispatch pending events to their callbacks",10,[[["self"],["option",["duration"]],["data"]],["result"]]],[11,"get_signal","","Get a signal to stop this event loop from running",10,[[["self"]],["loopsignal"]]],[11,"run","","Run this event loop",10,[[["self"],["option",["duration"]],["data"],["f"]],["result"]]],[11,"clone","","",11,[[["self"]],["loopsignal"]]],[11,"stop","","Stop the event loop",11,[[["self"]]]],[11,"wakeup","","Wake up the event loop",11,[[["self"]]]],[11,"register","calloop::channel","",12,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",12,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",12,[[["self"],["poll"]],["result"]]],[11,"interest","","",12,[[["self"]],["ready"]]],[11,"pollopts","","",12,[[["self"]],["pollopt"]]],[11,"make_dispatcher","","",12,[[["self"],["f"]],["rc",["refcell"]]]],[11,"new","calloop::generic","Wrap an `Evented` type into a `Generic` event source",13,[[["e"]],["generic"]]],[11,"from_rc","","Wrap an `Evented` type from an `Rc` into a `Generic` event source",13,[[["rc",["refcell"]]],["generic"]]],[11,"set_interest","","Change the interest for this evented source",13,[[["self"],["ready"]]]],[11,"set_pollopts","","Change the poll options for this evented source",13,[[["self"],["pollopt"]]]],[11,"clone_inner","","Get a clone of the inner `Rc` wrapping your event source",13,[[["self"]],["rc",["refcell"]]]],[11,"unwrap","","Unwrap the `Generic` source to retrieve the underlying `Evented`.",13,[[["self"]],["rc",["refcell"]]]],[11,"from_fd_source","","Wrap a file descriptor based source into a `Generic` event source.",13,[[["fd"]],["generic",["eventedfd"]]]],[11,"from_raw_fd","","Wrap a raw file descriptor into a `Generic` event source.",13,[[["rawfd"]],["generic",["eventedrawfd"]]]],[11,"register","","",5,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",5,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",5,[[["self"],["poll"]],["result"]]],[11,"register","","",6,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",6,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",6,[[["self"],["poll"]],["result"]]],[11,"register","","",13,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",13,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",13,[[["self"],["poll"]],["result"]]],[11,"interest","","",13,[[["self"]],["ready"]]],[11,"pollopts","","",13,[[["self"]],["pollopt"]]],[11,"make_dispatcher","","",13,[[["self"],["f"]],["rc",["refcell"]]]],[11,"clone","calloop::signals","",14,[[["self"]],["event"]]],[11,"signal","","Retrieve the signal number that was receive",14,[[["self"]],["signal"]]],[11,"full_info","","Access the full `siginfo_t` associated with this signal event",14,[[["self"]],["siginfo"]]],[11,"new","","Create a new signal event source listening on the specified list of signals",15,N],[11,"add_signals","","Add a list of signals to the signals source",15,N],[11,"remove_signals","","Remove a list of signals to the signals source",15,N],[11,"set_signals","","Replace the list of signals of the source",15,N],[11,"drop","","",15,[[["self"]]]],[11,"register","","",15,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",15,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",15,[[["self"],["poll"]],["result"]]],[11,"interest","","",15,[[["self"]],["ready"]]],[11,"pollopts","","",15,[[["self"]],["pollopt"]]],[11,"make_dispatcher","","",15,[[["self"],["f"]],["rc",["refcell"]]]],[11,"new","calloop::timer","Create a new timer with default parameters",16,[[],["timer"]]],[11,"with_resolution","","Create a new timer with a specific time resolution",16,[[["duration"]],["timer"]]],[11,"handle","","Get an handle for this timer",16,[[["self"]],["timerhandle"]]],[11,"clone","","",17,[[["self"]],["timerhandle"]]],[11,"add_timeout","","Set a new timeout",17,[[["self"],["duration"],["t"]],["timeout"]]],[11,"cancel_timeout","","Cancel a previsouly set timeout and retrieve the associated data",17,[[["self"],["timeout"]],["option"]]],[11,"register","","",16,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",16,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",16,[[["self"],["poll"]],["result"]]],[11,"interest","","",16,[[["self"]],["ready"]]],[11,"pollopts","","",16,[[["self"]],["pollopt"]]],[11,"make_dispatcher","","",16,[[["self"],["f"]],["rc",["refcell"]]]],[11,"reregister","calloop","Refresh the registration of this event source to the loop",18,[[["self"]],["result"]]],[11,"remove","","Remove this source from the event loop",18,[[["self"]],["e"]]],[11,"deref","","",18,[[["self"]],["e"]]],[11,"deref_mut","","",18,[[["self"]],["e"]]],[11,"cancel","","Cancel the idle callback if it was not already run",19,[[["self"]]]],[8,"EventSource","","Trait representing a source that can be inserted into an EventLoop",N,N],[16,"Event","","The type of events generated by your sources",20,N],[10,"interest","","The interest value that will be given to `mio` when registering your source",20,[[["self"]],["ready"]]],[10,"pollopts","","The pollopt value that will be given to `mio` when registering your source",20,[[["self"]],["pollopt"]]],[10,"make_dispatcher","","Wrap an user callback into a dispatcher, that will convert an `mio` readiness into an event",20,[[["self"],["f"]],["rc",["refcell"]]]],[8,"EventDispatcher","","An event dispatcher",N,N],[10,"ready","","The source has a readiness event",21,[[["self"],["ready"],["data"]]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","calloop::channel","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","calloop::signals","",8,[[["self"]],["signalfd_siginfo"]]],[11,"fmt","calloop::timer","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","calloop::channel","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"from","","",2,[[["error"]],["trysenderror"]]],[11,"from","","",2,[[["trysenderror"]],["trysenderror"]]],[11,"from","","",2,[[["senderror"]],["trysenderror"]]],[11,"from","","",1,[[["error"]],["senderror"]]],[11,"from","","",1,[[["senderror"]],["senderror"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","calloop::timer","",22,[[["self"]],["timeout"]]],[11,"clone","calloop::channel","",23,[[["self"]],["sender"]]],[11,"clone","","",24,[[["self"]],["syncsender"]]],[11,"partial_cmp","calloop::signals","",7,[[["self"],["signal"]],["option",["ordering"]]]],[11,"cmp","","",7,[[["self"],["signal"]],["ordering"]]],[11,"eq","","",7,[[["self"],["signal"]],["bool"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"hash","","",7,N],[11,"clone","","",7,[[["self"]],["signal"]]],[11,"send","calloop::channel","Attempts to send a value on this channel, returning it back if it could not be sent.",23,[[["self"],["t"]],["result",["senderror"]]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"send","","Sends a value on this synchronous channel.",24,[[["self"],["t"]],["result",["senderror"]]]],[11,"try_send","","Attempts to send a value on this channel without blocking.",24,[[["self"],["t"]],["result",["trysenderror"]]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","calloop::generic","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"iterator","calloop::signals","",7,[[],["signaliterator"]]],[11,"from_c_int","","",7,[[["i32"]],["result",["signal","error"]]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"to_owned","calloop::timer","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]]],"paths":[[3,"InsertError"],[4,"SendError"],[4,"TrySendError"],[4,"Event"],[3,"Event"],[3,"EventedFd"],[3,"EventedRawFd"],[4,"Signal"],[3,"siginfo"],[3,"LoopHandle"],[3,"EventLoop"],[3,"LoopSignal"],[3,"Channel"],[3,"Generic"],[3,"Event"],[3,"Signals"],[3,"Timer"],[3,"TimerHandle"],[3,"Source"],[3,"Idle"],[8,"EventSource"],[8,"EventDispatcher"],[3,"Timeout"],[3,"Sender"],[3,"SyncSender"]]};
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","items":[[14,"cfg_if","cfg_if","",N,N]],"paths":[]};
searchIndex["dlib"]={"doc":"","items":[[3,"Library","dlib","A loaded dynamic library.",N,N],[3,"Symbol","","Symbol from a library.",N,N],[4,"DlError","","",N,N],[13,"NotFound","","",0,N],[13,"MissingSymbol","","",0,N],[14,"ffi_dispatch","","",N,N],[14,"ffi_dispatch_static","","",N,N],[14,"link_external_library","","",N,N],[14,"dlopen_external_library","","",N,N],[14,"external_library","","",N,N],[11,"new","","Find and load a dynamic library.",1,[[["p"]],["result",["library","error"]]]],[11,"get","","Get a pointer to function or static variable by symbol name.",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"from","","",1,[[["library"]],["library"]]],[11,"clone","","",2,[[["self"]],["symbol"]]],[11,"into_raw","","Extract the wrapped `os::platform::Symbol`.",2,[[["self"]],["symbol"]]],[11,"from_raw","","Wrap the `os::platform::Symbol` into this safe wrapper.",2,[[["symbol"],["l"]],["symbol"]]],[11,"lift_option","","Lift Option out of the symbol.",2,[[["self"]],["option",["symbol"]]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]]],"paths":[[4,"DlError"],[3,"Library"],[3,"Symbol"]]};
searchIndex["downcast_rs"]={"doc":"Rust enums are great for types where all variations are known beforehand. But in the case where you want to implement a container of user-defined types, an open-ended type like a trait object is needed. In some cases, it is useful to cast the trait object back into its original concrete type to access additional functionality and performant inlined implementations.","items":[[8,"Downcast","downcast_rs","Supports conversion to `Any`. Traits to be extended by `impl_downcast!` must extend `Downcast`.",N,N],[10,"into_any","","Convert `Box<Trait>` (where `Trait: Downcast`) to `Box<Any>`. `Box<Any>` can then be further `downcast` into `Box<ConcreteType>` where `ConcreteType` implements `Trait`.",0,[[["box"]],["box",["any"]]]],[10,"as_any","","Convert `&Trait` (where `Trait: Downcast`) to `&Any`. This is needed since Rust cannot generate `&Any`'s vtable from `&Trait`'s.",0,[[["self"]],["any"]]],[10,"as_any_mut","","Convert `&mut Trait` (where `Trait: Downcast`) to `&Any`. This is needed since Rust cannot generate `&mut Any`'s vtable from `&mut Trait`'s.",0,[[["self"]],["any"]]],[14,"impl_downcast","","Adds downcasting support to traits that extend `downcast::Downcast` by defining forwarding methods to the corresponding implementations on `std::any::Any` in the standard library.",N,N]],"paths":[[8,"Downcast"]]};
searchIndex["iovec"]={"doc":"A specialized byte slice type for performing vectored I/O operations.","items":[[3,"IoVec","iovec","A specialized byte slice type for performing vectored I/O operations.",N,N],[0,"unix","","IoVec extensions for Unix platforms.",N,N],[5,"as_os_slice","iovec::unix","Convert a slice of `IoVec` refs to a slice of `libc::iovec`.",N,N],[5,"as_os_slice_mut","","Convert a mutable slice of `IoVec` refs to a mutable slice of `libc::iovec`.",N,N],[17,"MAX_LENGTH","iovec","Max length of an `IoVec` slice.",N,N],[11,"from_bytes","","",0,N],[11,"from_bytes_mut","","",0,N],[11,"deref","","",0,N],[11,"deref_mut","","",0,N],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]]],"paths":[[3,"IoVec"]]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","items":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes it if it has not been already.",N,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy static values.",N,N],[14,"lazy_static","","",N,N]],"paths":[]};
searchIndex["lazycell"]={"doc":"This crate provides a `LazyCell` struct which acts as a lazily filled `Cell`.","items":[[3,"LazyCell","lazycell","A lazily filled `Cell`, with mutable contents.",N,N],[3,"AtomicLazyCell","","A lazily filled and thread-safe `Cell`, with frozen contents.",N,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"default","","",0,[[],["lazycell"]]],[11,"new","","Creates a new, empty, `LazyCell`.",0,[[],["lazycell"]]],[11,"fill","","Put a value into this cell.",0,[[["self"],["t"]],["result"]]],[11,"replace","","Put a value into this cell.",0,[[["self"],["t"]],["option"]]],[11,"filled","","Test whether this cell has been previously filled.",0,[[["self"]],["bool"]]],[11,"borrow","","Borrows the contents of this lazy cell for the duration of the cell itself.",0,[[["self"]],["option"]]],[11,"borrow_mut","","Borrows the contents of this lazy cell mutably for the duration of the cell itself.",0,[[["self"]],["option"]]],[11,"borrow_with","","Borrows the contents of this lazy cell for the duration of the cell itself.",0,[[["self"],["f"]],["t"]]],[11,"borrow_mut_with","","Borrows the contents of this `LazyCell` mutably for the duration of the cell itself.",0,[[["self"],["f"]],["t"]]],[11,"try_borrow_with","","Same as `borrow_with`, but allows the initializing function to fail.",0,[[["self"],["f"]],["result"]]],[11,"try_borrow_mut_with","","Same as `borrow_mut_with`, but allows the initializing function to fail.",0,[[["self"],["f"]],["result"]]],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",0,[[["self"]],["option"]]],[11,"get","","Returns a copy of the contents of the lazy cell.",0,[[["self"]],["option"]]],[11,"clone","","Create a clone of this `LazyCell`",0,[[["self"]],["lazycell"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"default","","",1,[[],["atomiclazycell"]]],[18,"NONE","","An empty `AtomicLazyCell`.",1,N],[11,"new","","Creates a new, empty, `AtomicLazyCell`.",1,[[],["atomiclazycell"]]],[11,"fill","","Put a value into this cell.",1,[[["self"],["t"]],["result"]]],[11,"replace","","Put a value into this cell.",1,[[["self"],["t"]],["option"]]],[11,"filled","","Test whether this cell has been previously filled.",1,[[["self"]],["bool"]]],[11,"borrow","","Borrows the contents of this lazy cell for the duration of the cell itself.",1,[[["self"]],["option"]]],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",1,[[["self"]],["option"]]],[11,"get","","Returns a copy of the contents of the lazy cell.",1,[[["self"]],["option"]]],[11,"clone","","Create a clone of this `AtomicLazyCell`",1,[[["self"]],["atomiclazycell"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]]],"paths":[[3,"LazyCell"],[3,"AtomicLazyCell"]]};
searchIndex["libc"]={"doc":"Crate docs","items":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",N,N],[3,"group","","",N,N],[12,"gr_name","","",0,N],[12,"gr_passwd","","",0,N],[12,"gr_gid","","",0,N],[12,"gr_mem","","",0,N],[3,"utimbuf","","",N,N],[12,"actime","","",1,N],[12,"modtime","","",1,N],[3,"timeval","","",N,N],[12,"tv_sec","","",2,N],[12,"tv_usec","","",2,N],[3,"timespec","","",N,N],[12,"tv_sec","","",3,N],[12,"tv_nsec","","",3,N],[3,"rlimit","","",N,N],[12,"rlim_cur","","",4,N],[12,"rlim_max","","",4,N],[3,"rusage","","",N,N],[12,"ru_utime","","",5,N],[12,"ru_stime","","",5,N],[12,"ru_maxrss","","",5,N],[12,"ru_ixrss","","",5,N],[12,"ru_idrss","","",5,N],[12,"ru_isrss","","",5,N],[12,"ru_minflt","","",5,N],[12,"ru_majflt","","",5,N],[12,"ru_nswap","","",5,N],[12,"ru_inblock","","",5,N],[12,"ru_oublock","","",5,N],[12,"ru_msgsnd","","",5,N],[12,"ru_msgrcv","","",5,N],[12,"ru_nsignals","","",5,N],[12,"ru_nvcsw","","",5,N],[12,"ru_nivcsw","","",5,N],[3,"in_addr","","",N,N],[12,"s_addr","","",6,N],[3,"in6_addr","","",N,N],[12,"s6_addr","","",7,N],[3,"ip_mreq","","",N,N],[12,"imr_multiaddr","","",8,N],[12,"imr_interface","","",8,N],[3,"ipv6_mreq","","",N,N],[12,"ipv6mr_multiaddr","","",9,N],[12,"ipv6mr_interface","","",9,N],[3,"hostent","","",N,N],[12,"h_name","","",10,N],[12,"h_aliases","","",10,N],[12,"h_addrtype","","",10,N],[12,"h_length","","",10,N],[12,"h_addr_list","","",10,N],[3,"iovec","","",N,N],[12,"iov_base","","",11,N],[12,"iov_len","","",11,N],[3,"pollfd","","",N,N],[12,"fd","","",12,N],[12,"events","","",12,N],[12,"revents","","",12,N],[3,"winsize","","",N,N],[12,"ws_row","","",13,N],[12,"ws_col","","",13,N],[12,"ws_xpixel","","",13,N],[12,"ws_ypixel","","",13,N],[3,"linger","","",N,N],[12,"l_onoff","","",14,N],[12,"l_linger","","",14,N],[3,"sigval","","",N,N],[12,"sival_ptr","","",15,N],[3,"itimerval","","",N,N],[12,"it_interval","","",16,N],[12,"it_value","","",16,N],[3,"tms","","",N,N],[12,"tms_utime","","",17,N],[12,"tms_stime","","",17,N],[12,"tms_cutime","","",17,N],[12,"tms_cstime","","",17,N],[3,"servent","","",N,N],[12,"s_name","","",18,N],[12,"s_aliases","","",18,N],[12,"s_port","","",18,N],[12,"s_proto","","",18,N],[3,"protoent","","",N,N],[12,"p_name","","",19,N],[12,"p_aliases","","",19,N],[12,"p_proto","","",19,N],[3,"sockaddr","","",N,N],[12,"sa_family","","",20,N],[12,"sa_data","","",20,N],[3,"sockaddr_in","","",N,N],[12,"sin_family","","",21,N],[12,"sin_port","","",21,N],[12,"sin_addr","","",21,N],[12,"sin_zero","","",21,N],[3,"sockaddr_in6","","",N,N],[12,"sin6_family","","",22,N],[12,"sin6_port","","",22,N],[12,"sin6_flowinfo","","",22,N],[12,"sin6_addr","","",22,N],[12,"sin6_scope_id","","",22,N],[3,"sockaddr_un","","",N,N],[12,"sun_family","","",23,N],[12,"sun_path","","",23,N],[3,"sockaddr_storage","","",N,N],[12,"ss_family","","",24,N],[3,"addrinfo","","",N,N],[12,"ai_flags","","",25,N],[12,"ai_family","","",25,N],[12,"ai_socktype","","",25,N],[12,"ai_protocol","","",25,N],[12,"ai_addrlen","","",25,N],[12,"ai_addr","","",25,N],[12,"ai_canonname","","",25,N],[12,"ai_next","","",25,N],[3,"sockaddr_nl","","",N,N],[12,"nl_family","","",26,N],[12,"nl_pid","","",26,N],[12,"nl_groups","","",26,N],[3,"sockaddr_ll","","",N,N],[12,"sll_family","","",27,N],[12,"sll_protocol","","",27,N],[12,"sll_ifindex","","",27,N],[12,"sll_hatype","","",27,N],[12,"sll_pkttype","","",27,N],[12,"sll_halen","","",27,N],[12,"sll_addr","","",27,N],[3,"fd_set","","",N,N],[3,"tm","","",N,N],[12,"tm_sec","","",28,N],[12,"tm_min","","",28,N],[12,"tm_hour","","",28,N],[12,"tm_mday","","",28,N],[12,"tm_mon","","",28,N],[12,"tm_year","","",28,N],[12,"tm_wday","","",28,N],[12,"tm_yday","","",28,N],[12,"tm_isdst","","",28,N],[12,"tm_gmtoff","","",28,N],[12,"tm_zone","","",28,N],[3,"sched_param","","",N,N],[12,"sched_priority","","",29,N],[3,"Dl_info","","",N,N],[12,"dli_fname","","",30,N],[12,"dli_fbase","","",30,N],[12,"dli_sname","","",30,N],[12,"dli_saddr","","",30,N],[3,"epoll_event","","",N,N],[12,"events","","",31,N],[12,"u64","","",31,N],[3,"utsname","","",N,N],[12,"sysname","","",32,N],[12,"nodename","","",32,N],[12,"release","","",32,N],[12,"version","","",32,N],[12,"machine","","",32,N],[12,"domainname","","",32,N],[3,"lconv","","",N,N],[12,"decimal_point","","",33,N],[12,"thousands_sep","","",33,N],[12,"grouping","","",33,N],[12,"int_curr_symbol","","",33,N],[12,"currency_symbol","","",33,N],[12,"mon_decimal_point","","",33,N],[12,"mon_thousands_sep","","",33,N],[12,"mon_grouping","","",33,N],[12,"positive_sign","","",33,N],[12,"negative_sign","","",33,N],[12,"int_frac_digits","","",33,N],[12,"frac_digits","","",33,N],[12,"p_cs_precedes","","",33,N],[12,"p_sep_by_space","","",33,N],[12,"n_cs_precedes","","",33,N],[12,"n_sep_by_space","","",33,N],[12,"p_sign_posn","","",33,N],[12,"n_sign_posn","","",33,N],[12,"int_p_cs_precedes","","",33,N],[12,"int_p_sep_by_space","","",33,N],[12,"int_n_cs_precedes","","",33,N],[12,"int_n_sep_by_space","","",33,N],[12,"int_p_sign_posn","","",33,N],[12,"int_n_sign_posn","","",33,N],[3,"sigevent","","",N,N],[12,"sigev_value","","",34,N],[12,"sigev_signo","","",34,N],[12,"sigev_notify","","",34,N],[12,"sigev_notify_thread_id","","",34,N],[3,"in_pktinfo","","",N,N],[12,"ipi_ifindex","","",35,N],[12,"ipi_spec_dst","","",35,N],[12,"ipi_addr","","",35,N],[3,"ifaddrs","","",N,N],[12,"ifa_next","","",36,N],[12,"ifa_name","","",36,N],[12,"ifa_flags","","",36,N],[12,"ifa_addr","","",36,N],[12,"ifa_netmask","","",36,N],[12,"ifa_ifu","","",36,N],[12,"ifa_data","","",36,N],[3,"in6_rtmsg","","",N,N],[3,"arpreq","","",N,N],[12,"arp_pa","","",37,N],[12,"arp_ha","","",37,N],[12,"arp_flags","","",37,N],[12,"arp_netmask","","",37,N],[12,"arp_dev","","",37,N],[3,"arpreq_old","","",N,N],[12,"arp_pa","","",38,N],[12,"arp_ha","","",38,N],[12,"arp_flags","","",38,N],[12,"arp_netmask","","",38,N],[3,"arphdr","","",N,N],[12,"ar_hrd","","",39,N],[12,"ar_pro","","",39,N],[12,"ar_hln","","",39,N],[12,"ar_pln","","",39,N],[12,"ar_op","","",39,N],[3,"dirent","","",N,N],[12,"d_ino","","",40,N],[12,"d_off","","",40,N],[12,"d_reclen","","",40,N],[12,"d_type","","",40,N],[12,"d_name","","",40,N],[3,"dirent64","","",N,N],[12,"d_ino","","",41,N],[12,"d_off","","",41,N],[12,"d_reclen","","",41,N],[12,"d_type","","",41,N],[12,"d_name","","",41,N],[3,"rlimit64","","",N,N],[12,"rlim_cur","","",42,N],[12,"rlim_max","","",42,N],[3,"glob_t","","",N,N],[12,"gl_pathc","","",43,N],[12,"gl_pathv","","",43,N],[12,"gl_offs","","",43,N],[12,"gl_flags","","",43,N],[3,"pthread_mutex_t","","",N,N],[3,"pthread_rwlock_t","","",N,N],[3,"pthread_mutexattr_t","","",N,N],[3,"pthread_rwlockattr_t","","",N,N],[3,"pthread_cond_t","","",N,N],[3,"pthread_condattr_t","","",N,N],[3,"passwd","","",N,N],[12,"pw_name","","",44,N],[12,"pw_passwd","","",44,N],[12,"pw_uid","","",44,N],[12,"pw_gid","","",44,N],[12,"pw_gecos","","",44,N],[12,"pw_dir","","",44,N],[12,"pw_shell","","",44,N],[3,"spwd","","",N,N],[12,"sp_namp","","",45,N],[12,"sp_pwdp","","",45,N],[12,"sp_lstchg","","",45,N],[12,"sp_min","","",45,N],[12,"sp_max","","",45,N],[12,"sp_warn","","",45,N],[12,"sp_inact","","",45,N],[12,"sp_expire","","",45,N],[12,"sp_flag","","",45,N],[3,"dqblk","","",N,N],[12,"dqb_bhardlimit","","",46,N],[12,"dqb_bsoftlimit","","",46,N],[12,"dqb_curspace","","",46,N],[12,"dqb_ihardlimit","","",46,N],[12,"dqb_isoftlimit","","",46,N],[12,"dqb_curinodes","","",46,N],[12,"dqb_btime","","",46,N],[12,"dqb_itime","","",46,N],[12,"dqb_valid","","",46,N],[3,"signalfd_siginfo","","",N,N],[12,"ssi_signo","","",47,N],[12,"ssi_errno","","",47,N],[12,"ssi_code","","",47,N],[12,"ssi_pid","","",47,N],[12,"ssi_uid","","",47,N],[12,"ssi_fd","","",47,N],[12,"ssi_tid","","",47,N],[12,"ssi_band","","",47,N],[12,"ssi_overrun","","",47,N],[12,"ssi_trapno","","",47,N],[12,"ssi_status","","",47,N],[12,"ssi_int","","",47,N],[12,"ssi_ptr","","",47,N],[12,"ssi_utime","","",47,N],[12,"ssi_stime","","",47,N],[12,"ssi_addr","","",47,N],[12,"ssi_addr_lsb","","",47,N],[12,"ssi_syscall","","",47,N],[12,"ssi_call_addr","","",47,N],[12,"ssi_arch","","",47,N],[3,"itimerspec","","",N,N],[12,"it_interval","","",48,N],[12,"it_value","","",48,N],[3,"fsid_t","","",N,N],[3,"mq_attr","","",N,N],[12,"mq_flags","","",49,N],[12,"mq_maxmsg","","",49,N],[12,"mq_msgsize","","",49,N],[12,"mq_curmsgs","","",49,N],[3,"packet_mreq","","",N,N],[12,"mr_ifindex","","",50,N],[12,"mr_type","","",50,N],[12,"mr_alen","","",50,N],[12,"mr_address","","",50,N],[3,"cpu_set_t","","",N,N],[3,"if_nameindex","","",N,N],[12,"if_index","","",51,N],[12,"if_name","","",51,N],[3,"msginfo","","",N,N],[12,"msgpool","","",52,N],[12,"msgmap","","",52,N],[12,"msgmax","","",52,N],[12,"msgmnb","","",52,N],[12,"msgmni","","",52,N],[12,"msgssz","","",52,N],[12,"msgtql","","",52,N],[12,"msgseg","","",52,N],[3,"mmsghdr","","",N,N],[12,"msg_hdr","","",53,N],[12,"msg_len","","",53,N],[3,"sembuf","","",N,N],[12,"sem_num","","",54,N],[12,"sem_op","","",54,N],[12,"sem_flg","","",54,N],[3,"input_event","","",N,N],[12,"time","","",55,N],[12,"type_","","",55,N],[12,"code","","",55,N],[12,"value","","",55,N],[3,"input_id","","",N,N],[12,"bustype","","",56,N],[12,"vendor","","",56,N],[12,"product","","",56,N],[12,"version","","",56,N],[3,"input_absinfo","","",N,N],[12,"value","","",57,N],[12,"minimum","","",57,N],[12,"maximum","","",57,N],[12,"fuzz","","",57,N],[12,"flat","","",57,N],[12,"resolution","","",57,N],[3,"input_keymap_entry","","",N,N],[12,"flags","","",58,N],[12,"len","","",58,N],[12,"index","","",58,N],[12,"keycode","","",58,N],[12,"scancode","","",58,N],[3,"input_mask","","",N,N],[12,"type_","","",59,N],[12,"codes_size","","",59,N],[12,"codes_ptr","","",59,N],[3,"ff_replay","","",N,N],[12,"length","","",60,N],[12,"delay","","",60,N],[3,"ff_trigger","","",N,N],[12,"button","","",61,N],[12,"interval","","",61,N],[3,"ff_envelope","","",N,N],[12,"attack_length","","",62,N],[12,"attack_level","","",62,N],[12,"fade_length","","",62,N],[12,"fade_level","","",62,N],[3,"ff_constant_effect","","",N,N],[12,"level","","",63,N],[12,"envelope","","",63,N],[3,"ff_ramp_effect","","",N,N],[12,"start_level","","",64,N],[12,"end_level","","",64,N],[12,"envelope","","",64,N],[3,"ff_condition_effect","","",N,N],[12,"right_saturation","","",65,N],[12,"left_saturation","","",65,N],[12,"right_coeff","","",65,N],[12,"left_coeff","","",65,N],[12,"deadband","","",65,N],[12,"center","","",65,N],[3,"ff_periodic_effect","","",N,N],[12,"waveform","","",66,N],[12,"period","","",66,N],[12,"magnitude","","",66,N],[12,"offset","","",66,N],[12,"phase","","",66,N],[12,"envelope","","",66,N],[12,"custom_len","","",66,N],[12,"custom_data","","",66,N],[3,"ff_rumble_effect","","",N,N],[12,"strong_magnitude","","",67,N],[12,"weak_magnitude","","",67,N],[3,"ff_effect","","",N,N],[12,"type_","","",68,N],[12,"id","","",68,N],[12,"direction","","",68,N],[12,"trigger","","",68,N],[12,"replay","","",68,N],[12,"u","","",68,N],[3,"dl_phdr_info","","",N,N],[12,"dlpi_addr","","",69,N],[12,"dlpi_name","","",69,N],[12,"dlpi_phdr","","",69,N],[12,"dlpi_phnum","","",69,N],[12,"dlpi_adds","","",69,N],[12,"dlpi_subs","","",69,N],[12,"dlpi_tls_modid","","",69,N],[12,"dlpi_tls_data","","",69,N],[3,"Elf32_Ehdr","","",N,N],[12,"e_ident","","",70,N],[12,"e_type","","",70,N],[12,"e_machine","","",70,N],[12,"e_version","","",70,N],[12,"e_entry","","",70,N],[12,"e_phoff","","",70,N],[12,"e_shoff","","",70,N],[12,"e_flags","","",70,N],[12,"e_ehsize","","",70,N],[12,"e_phentsize","","",70,N],[12,"e_phnum","","",70,N],[12,"e_shentsize","","",70,N],[12,"e_shnum","","",70,N],[12,"e_shstrndx","","",70,N],[3,"Elf64_Ehdr","","",N,N],[12,"e_ident","","",71,N],[12,"e_type","","",71,N],[12,"e_machine","","",71,N],[12,"e_version","","",71,N],[12,"e_entry","","",71,N],[12,"e_phoff","","",71,N],[12,"e_shoff","","",71,N],[12,"e_flags","","",71,N],[12,"e_ehsize","","",71,N],[12,"e_phentsize","","",71,N],[12,"e_phnum","","",71,N],[12,"e_shentsize","","",71,N],[12,"e_shnum","","",71,N],[12,"e_shstrndx","","",71,N],[3,"Elf32_Sym","","",N,N],[12,"st_name","","",72,N],[12,"st_value","","",72,N],[12,"st_size","","",72,N],[12,"st_info","","",72,N],[12,"st_other","","",72,N],[12,"st_shndx","","",72,N],[3,"Elf64_Sym","","",N,N],[12,"st_name","","",73,N],[12,"st_info","","",73,N],[12,"st_other","","",73,N],[12,"st_shndx","","",73,N],[12,"st_value","","",73,N],[12,"st_size","","",73,N],[3,"Elf32_Phdr","","",N,N],[12,"p_type","","",74,N],[12,"p_offset","","",74,N],[12,"p_vaddr","","",74,N],[12,"p_paddr","","",74,N],[12,"p_filesz","","",74,N],[12,"p_memsz","","",74,N],[12,"p_flags","","",74,N],[12,"p_align","","",74,N],[3,"Elf64_Phdr","","",N,N],[12,"p_type","","",75,N],[12,"p_flags","","",75,N],[12,"p_offset","","",75,N],[12,"p_vaddr","","",75,N],[12,"p_paddr","","",75,N],[12,"p_filesz","","",75,N],[12,"p_memsz","","",75,N],[12,"p_align","","",75,N],[3,"Elf32_Shdr","","",N,N],[12,"sh_name","","",76,N],[12,"sh_type","","",76,N],[12,"sh_flags","","",76,N],[12,"sh_addr","","",76,N],[12,"sh_offset","","",76,N],[12,"sh_size","","",76,N],[12,"sh_link","","",76,N],[12,"sh_info","","",76,N],[12,"sh_addralign","","",76,N],[12,"sh_entsize","","",76,N],[3,"Elf64_Shdr","","",N,N],[12,"sh_name","","",77,N],[12,"sh_type","","",77,N],[12,"sh_flags","","",77,N],[12,"sh_addr","","",77,N],[12,"sh_offset","","",77,N],[12,"sh_size","","",77,N],[12,"sh_link","","",77,N],[12,"sh_info","","",77,N],[12,"sh_addralign","","",77,N],[12,"sh_entsize","","",77,N],[3,"Elf32_Chdr","","",N,N],[12,"ch_type","","",78,N],[12,"ch_size","","",78,N],[12,"ch_addralign","","",78,N],[3,"Elf64_Chdr","","",N,N],[12,"ch_type","","",79,N],[12,"ch_reserved","","",79,N],[12,"ch_size","","",79,N],[12,"ch_addralign","","",79,N],[3,"ucred","","",N,N],[12,"pid","","",80,N],[12,"uid","","",80,N],[12,"gid","","",80,N],[3,"mntent","","",N,N],[12,"mnt_fsname","","",81,N],[12,"mnt_dir","","",81,N],[12,"mnt_type","","",81,N],[12,"mnt_opts","","",81,N],[12,"mnt_freq","","",81,N],[12,"mnt_passno","","",81,N],[3,"posix_spawn_file_actions_t","","",N,N],[3,"posix_spawnattr_t","","",N,N],[3,"genlmsghdr","","",N,N],[12,"cmd","","",82,N],[12,"version","","",82,N],[12,"reserved","","",82,N],[3,"in6_pktinfo","","",N,N],[12,"ipi6_addr","","",83,N],[12,"ipi6_ifindex","","",83,N],[3,"arpd_request","","",N,N],[12,"req","","",84,N],[12,"ip","","",84,N],[12,"dev","","",84,N],[12,"stamp","","",84,N],[12,"updated","","",84,N],[12,"ha","","",84,N],[3,"aiocb","","",N,N],[12,"aio_fildes","","",85,N],[12,"aio_lio_opcode","","",85,N],[12,"aio_reqprio","","",85,N],[12,"aio_buf","","",85,N],[12,"aio_nbytes","","",85,N],[12,"aio_sigevent","","",85,N],[12,"aio_offset","","",85,N],[3,"__exit_status","","",N,N],[12,"e_termination","","",86,N],[12,"e_exit","","",86,N],[3,"__timeval","","",N,N],[12,"tv_sec","","",87,N],[12,"tv_usec","","",87,N],[3,"utmpx","","",N,N],[12,"ut_type","","",88,N],[12,"ut_pid","","",88,N],[12,"ut_line","","",88,N],[12,"ut_id","","",88,N],[12,"ut_user","","",88,N],[12,"ut_host","","",88,N],[12,"ut_exit","","",88,N],[12,"ut_session","","",88,N],[12,"ut_tv","","",88,N],[12,"ut_addr_v6","","",88,N],[3,"sigaction","","",N,N],[12,"sa_sigaction","","",89,N],[12,"sa_mask","","",89,N],[12,"sa_flags","","",89,N],[12,"sa_restorer","","",89,N],[3,"stack_t","","",N,N],[12,"ss_sp","","",90,N],[12,"ss_flags","","",90,N],[12,"ss_size","","",90,N],[3,"siginfo_t","","",N,N],[12,"si_signo","","",91,N],[12,"si_errno","","",91,N],[12,"si_code","","",91,N],[12,"_pad","","",91,N],[3,"glob64_t","","",N,N],[12,"gl_pathc","","",92,N],[12,"gl_pathv","","",92,N],[12,"gl_offs","","",92,N],[12,"gl_flags","","",92,N],[3,"statfs","","",N,N],[12,"f_type","","",93,N],[12,"f_bsize","","",93,N],[12,"f_blocks","","",93,N],[12,"f_bfree","","",93,N],[12,"f_bavail","","",93,N],[12,"f_files","","",93,N],[12,"f_ffree","","",93,N],[12,"f_fsid","","",93,N],[12,"f_namelen","","",93,N],[12,"f_frsize","","",93,N],[3,"msghdr","","",N,N],[12,"msg_name","","",94,N],[12,"msg_namelen","","",94,N],[12,"msg_iov","","",94,N],[12,"msg_iovlen","","",94,N],[12,"msg_control","","",94,N],[12,"msg_controllen","","",94,N],[12,"msg_flags","","",94,N],[3,"cmsghdr","","",N,N],[12,"cmsg_len","","",95,N],[12,"cmsg_level","","",95,N],[12,"cmsg_type","","",95,N],[3,"termios","","",N,N],[12,"c_iflag","","",96,N],[12,"c_oflag","","",96,N],[12,"c_cflag","","",96,N],[12,"c_lflag","","",96,N],[12,"c_line","","",96,N],[12,"c_cc","","",96,N],[12,"c_ispeed","","",96,N],[12,"c_ospeed","","",96,N],[3,"flock","","",N,N],[12,"l_type","","",97,N],[12,"l_whence","","",97,N],[12,"l_start","","",97,N],[12,"l_len","","",97,N],[12,"l_pid","","",97,N],[3,"sem_t","","",N,N],[3,"mallinfo","","",N,N],[12,"arena","","",98,N],[12,"ordblks","","",98,N],[12,"smblks","","",98,N],[12,"hblks","","",98,N],[12,"hblkhd","","",98,N],[12,"usmblks","","",98,N],[12,"fsmblks","","",98,N],[12,"uordblks","","",98,N],[12,"fordblks","","",98,N],[12,"keepcost","","",98,N],[3,"nlmsghdr","","",N,N],[12,"nlmsg_len","","",99,N],[12,"nlmsg_type","","",99,N],[12,"nlmsg_flags","","",99,N],[12,"nlmsg_seq","","",99,N],[12,"nlmsg_pid","","",99,N],[3,"nlmsgerr","","",N,N],[12,"error","","",100,N],[12,"msg","","",100,N],[3,"nl_pktinfo","","",N,N],[12,"group","","",101,N],[3,"nl_mmap_req","","",N,N],[12,"nm_block_size","","",102,N],[12,"nm_block_nr","","",102,N],[12,"nm_frame_size","","",102,N],[12,"nm_frame_nr","","",102,N],[3,"nl_mmap_hdr","","",N,N],[12,"nm_status","","",103,N],[12,"nm_len","","",103,N],[12,"nm_group","","",103,N],[12,"nm_pid","","",103,N],[12,"nm_uid","","",103,N],[12,"nm_gid","","",103,N],[3,"nlattr","","",N,N],[12,"nla_len","","",104,N],[12,"nla_type","","",104,N],[3,"rtentry","","",N,N],[12,"rt_pad1","","",105,N],[12,"rt_dst","","",105,N],[12,"rt_gateway","","",105,N],[12,"rt_genmask","","",105,N],[12,"rt_flags","","",105,N],[12,"rt_pad2","","",105,N],[12,"rt_pad3","","",105,N],[12,"rt_tos","","",105,N],[12,"rt_class","","",105,N],[12,"rt_pad4","","",105,N],[12,"rt_metric","","",105,N],[12,"rt_dev","","",105,N],[12,"rt_mtu","","",105,N],[12,"rt_window","","",105,N],[12,"rt_irtt","","",105,N],[3,"sigset_t","","",N,N],[3,"sysinfo","","",N,N],[12,"uptime","","",106,N],[12,"loads","","",106,N],[12,"totalram","","",106,N],[12,"freeram","","",106,N],[12,"sharedram","","",106,N],[12,"bufferram","","",106,N],[12,"totalswap","","",106,N],[12,"freeswap","","",106,N],[12,"procs","","",106,N],[12,"pad","","",106,N],[12,"totalhigh","","",106,N],[12,"freehigh","","",106,N],[12,"mem_unit","","",106,N],[12,"_f","","",106,N],[3,"msqid_ds","","",N,N],[12,"msg_perm","","",107,N],[12,"msg_stime","","",107,N],[12,"msg_rtime","","",107,N],[12,"msg_ctime","","",107,N],[12,"msg_qnum","","",107,N],[12,"msg_qbytes","","",107,N],[12,"msg_lspid","","",107,N],[12,"msg_lrpid","","",107,N],[3,"stat","","",N,N],[12,"st_dev","","",108,N],[12,"st_ino","","",108,N],[12,"st_nlink","","",108,N],[12,"st_mode","","",108,N],[12,"st_uid","","",108,N],[12,"st_gid","","",108,N],[12,"st_rdev","","",108,N],[12,"st_size","","",108,N],[12,"st_blksize","","",108,N],[12,"st_blocks","","",108,N],[12,"st_atime","","",108,N],[12,"st_atime_nsec","","",108,N],[12,"st_mtime","","",108,N],[12,"st_mtime_nsec","","",108,N],[12,"st_ctime","","",108,N],[12,"st_ctime_nsec","","",108,N],[3,"stat64","","",N,N],[12,"st_dev","","",109,N],[12,"st_ino","","",109,N],[12,"st_nlink","","",109,N],[12,"st_mode","","",109,N],[12,"st_uid","","",109,N],[12,"st_gid","","",109,N],[12,"st_rdev","","",109,N],[12,"st_size","","",109,N],[12,"st_blksize","","",109,N],[12,"st_blocks","","",109,N],[12,"st_atime","","",109,N],[12,"st_atime_nsec","","",109,N],[12,"st_mtime","","",109,N],[12,"st_mtime_nsec","","",109,N],[12,"st_ctime","","",109,N],[12,"st_ctime_nsec","","",109,N],[3,"statfs64","","",N,N],[12,"f_type","","",110,N],[12,"f_bsize","","",110,N],[12,"f_blocks","","",110,N],[12,"f_bfree","","",110,N],[12,"f_bavail","","",110,N],[12,"f_files","","",110,N],[12,"f_ffree","","",110,N],[12,"f_fsid","","",110,N],[12,"f_namelen","","",110,N],[12,"f_frsize","","",110,N],[12,"f_flags","","",110,N],[12,"f_spare","","",110,N],[3,"statvfs64","","",N,N],[12,"f_bsize","","",111,N],[12,"f_frsize","","",111,N],[12,"f_blocks","","",111,N],[12,"f_bfree","","",111,N],[12,"f_bavail","","",111,N],[12,"f_files","","",111,N],[12,"f_ffree","","",111,N],[12,"f_favail","","",111,N],[12,"f_fsid","","",111,N],[12,"f_flag","","",111,N],[12,"f_namemax","","",111,N],[3,"pthread_attr_t","","",N,N],[3,"_libc_fpxreg","","",N,N],[12,"significand","","",112,N],[12,"exponent","","",112,N],[3,"_libc_xmmreg","","",N,N],[12,"element","","",113,N],[3,"_libc_fpstate","","",N,N],[12,"cwd","","",114,N],[12,"swd","","",114,N],[12,"ftw","","",114,N],[12,"fop","","",114,N],[12,"rip","","",114,N],[12,"rdp","","",114,N],[12,"mxcsr","","",114,N],[12,"mxcr_mask","","",114,N],[12,"_st","","",114,N],[12,"_xmm","","",114,N],[3,"user_fpregs_struct","","",N,N],[12,"cwd","","",115,N],[12,"swd","","",115,N],[12,"ftw","","",115,N],[12,"fop","","",115,N],[12,"rip","","",115,N],[12,"rdp","","",115,N],[12,"mxcsr","","",115,N],[12,"mxcr_mask","","",115,N],[12,"st_space","","",115,N],[12,"xmm_space","","",115,N],[3,"user_regs_struct","","",N,N],[12,"r15","","",116,N],[12,"r14","","",116,N],[12,"r13","","",116,N],[12,"r12","","",116,N],[12,"rbp","","",116,N],[12,"rbx","","",116,N],[12,"r11","","",116,N],[12,"r10","","",116,N],[12,"r9","","",116,N],[12,"r8","","",116,N],[12,"rax","","",116,N],[12,"rcx","","",116,N],[12,"rdx","","",116,N],[12,"rsi","","",116,N],[12,"rdi","","",116,N],[12,"orig_rax","","",116,N],[12,"rip","","",116,N],[12,"cs","","",116,N],[12,"eflags","","",116,N],[12,"rsp","","",116,N],[12,"ss","","",116,N],[12,"fs_base","","",116,N],[12,"gs_base","","",116,N],[12,"ds","","",116,N],[12,"es","","",116,N],[12,"fs","","",116,N],[12,"gs","","",116,N],[3,"user","","",N,N],[12,"regs","","",117,N],[12,"u_fpvalid","","",117,N],[12,"i387","","",117,N],[12,"u_tsize","","",117,N],[12,"u_dsize","","",117,N],[12,"u_ssize","","",117,N],[12,"start_code","","",117,N],[12,"start_stack","","",117,N],[12,"signal","","",117,N],[12,"u_ar0","","",117,N],[12,"u_fpstate","","",117,N],[12,"magic","","",117,N],[12,"u_comm","","",117,N],[12,"u_debugreg","","",117,N],[3,"mcontext_t","","",N,N],[12,"gregs","","",118,N],[12,"fpregs","","",118,N],[3,"ucontext_t","","",N,N],[12,"uc_flags","","",119,N],[12,"uc_link","","",119,N],[12,"uc_stack","","",119,N],[12,"uc_mcontext","","",119,N],[12,"uc_sigmask","","",119,N],[3,"ipc_perm","","",N,N],[12,"__key","","",120,N],[12,"uid","","",120,N],[12,"gid","","",120,N],[12,"cuid","","",120,N],[12,"cgid","","",120,N],[12,"mode","","",120,N],[12,"__seq","","",120,N],[3,"shmid_ds","","",N,N],[12,"shm_perm","","",121,N],[12,"shm_segsz","","",121,N],[12,"shm_atime","","",121,N],[12,"shm_dtime","","",121,N],[12,"shm_ctime","","",121,N],[12,"shm_cpid","","",121,N],[12,"shm_lpid","","",121,N],[12,"shm_nattch","","",121,N],[3,"termios2","","",N,N],[12,"c_iflag","","",122,N],[12,"c_oflag","","",122,N],[12,"c_cflag","","",122,N],[12,"c_lflag","","",122,N],[12,"c_line","","",122,N],[12,"c_cc","","",122,N],[12,"c_ispeed","","",122,N],[12,"c_ospeed","","",122,N],[3,"statvfs","","",N,N],[12,"f_bsize","","",123,N],[12,"f_frsize","","",123,N],[12,"f_blocks","","",123,N],[12,"f_bfree","","",123,N],[12,"f_bavail","","",123,N],[12,"f_files","","",123,N],[12,"f_ffree","","",123,N],[12,"f_favail","","",123,N],[12,"f_fsid","","",123,N],[12,"f_flag","","",123,N],[12,"f_namemax","","",123,N],[4,"DIR","","",N,N],[4,"locale_t","","",N,N],[4,"FILE","","",N,N],[4,"fpos_t","","",N,N],[4,"timezone","","",N,N],[4,"fpos64_t","","",N,N],[5,"CMSG_FIRSTHDR","","",N,N],[5,"CMSG_NXTHDR","","",N,N],[5,"CMSG_DATA","","",N,N],[5,"CMSG_SPACE","","",N,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN","","",N,[[["c_uint"]],["c_uint"]]],[5,"FD_CLR","","",N,N],[5,"FD_ISSET","","",N,N],[5,"FD_SET","","",N,N],[5,"FD_ZERO","","",N,N],[5,"WIFSTOPPED","","",N,[[["c_int"]],["bool"]]],[5,"WSTOPSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",N,[[["c_int"]],["bool"]]],[5,"WTERMSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",N,[[["c_int"]],["bool"]]],[5,"QCMD","","",N,[[["c_int"],["c_int"]],["c_int"]]],[5,"IPOPT_COPIED","","",N,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS","","",N,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER","","",N,[[["u8"]],["u8"]]],[5,"CPU_ZERO","","",N,N],[5,"CPU_SET","","",N,N],[5,"CPU_CLR","","",N,N],[5,"CPU_ISSET","","",N,[[["usize"],["cpu_set_t"]],["bool"]]],[5,"CPU_EQUAL","","",N,[[["cpu_set_t"],["cpu_set_t"]],["bool"]]],[5,"major","","",N,[[["dev_t"]],["c_uint"]]],[5,"minor","","",N,[[["dev_t"]],["c_uint"]]],[5,"makedev","","",N,[[["c_uint"],["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS","","",N,[[["u8"]],["u8"]]],[5,"IPTOS_PREC","","",N,[[["u8"]],["u8"]]],[5,"RT_TOS","","",N,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS","","",N,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR","","",N,[[["u32"]],["bool"]]],[5,"NLA_ALIGN","","",N,[[["c_int"]],["c_int"]]],[5,"isalnum","","",N,N],[5,"isalpha","","",N,N],[5,"iscntrl","","",N,N],[5,"isdigit","","",N,N],[5,"isgraph","","",N,N],[5,"islower","","",N,N],[5,"isprint","","",N,N],[5,"ispunct","","",N,N],[5,"isspace","","",N,N],[5,"isupper","","",N,N],[5,"isxdigit","","",N,N],[5,"tolower","","",N,N],[5,"toupper","","",N,N],[5,"fopen","","",N,N],[5,"freopen","","",N,N],[5,"fflush","","",N,N],[5,"fclose","","",N,N],[5,"remove","","",N,N],[5,"rename","","",N,N],[5,"tmpfile","","",N,N],[5,"setvbuf","","",N,N],[5,"setbuf","","",N,N],[5,"getchar","","",N,N],[5,"putchar","","",N,N],[5,"fgetc","","",N,N],[5,"fgets","","",N,N],[5,"fputc","","",N,N],[5,"fputs","","",N,N],[5,"puts","","",N,N],[5,"ungetc","","",N,N],[5,"fread","","",N,N],[5,"fwrite","","",N,N],[5,"fseek","","",N,N],[5,"ftell","","",N,N],[5,"rewind","","",N,N],[5,"fgetpos","","",N,N],[5,"fsetpos","","",N,N],[5,"feof","","",N,N],[5,"ferror","","",N,N],[5,"perror","","",N,N],[5,"atoi","","",N,N],[5,"strtod","","",N,N],[5,"strtol","","",N,N],[5,"strtoul","","",N,N],[5,"calloc","","",N,N],[5,"malloc","","",N,N],[5,"realloc","","",N,N],[5,"free","","",N,N],[5,"abort","","",N,N],[5,"exit","","",N,N],[5,"_exit","","",N,N],[5,"atexit","","",N,N],[5,"system","","",N,N],[5,"getenv","","",N,N],[5,"strcpy","","",N,N],[5,"strncpy","","",N,N],[5,"strcat","","",N,N],[5,"strncat","","",N,N],[5,"strcmp","","",N,N],[5,"strncmp","","",N,N],[5,"strcoll","","",N,N],[5,"strchr","","",N,N],[5,"strrchr","","",N,N],[5,"strspn","","",N,N],[5,"strcspn","","",N,N],[5,"strdup","","",N,N],[5,"strpbrk","","",N,N],[5,"strstr","","",N,N],[5,"strcasecmp","","",N,N],[5,"strncasecmp","","",N,N],[5,"strlen","","",N,N],[5,"strnlen","","",N,N],[5,"strerror","","",N,N],[5,"strtok","","",N,N],[5,"strxfrm","","",N,N],[5,"wcslen","","",N,N],[5,"wcstombs","","",N,N],[5,"memchr","","",N,N],[5,"memcmp","","",N,N],[5,"memcpy","","",N,N],[5,"memmove","","",N,N],[5,"memset","","",N,N],[5,"getpwnam","","",N,N],[5,"getpwuid","","",N,N],[5,"fprintf","","",N,N],[5,"printf","","",N,N],[5,"snprintf","","",N,N],[5,"sprintf","","",N,N],[5,"fscanf","","",N,N],[5,"scanf","","",N,N],[5,"sscanf","","",N,N],[5,"getchar_unlocked","","",N,N],[5,"putchar_unlocked","","",N,N],[5,"socket","","",N,N],[5,"connect","","",N,N],[5,"listen","","",N,N],[5,"accept","","",N,N],[5,"getpeername","","",N,N],[5,"getsockname","","",N,N],[5,"setsockopt","","",N,N],[5,"socketpair","","",N,N],[5,"sendto","","",N,N],[5,"shutdown","","",N,N],[5,"chmod","","",N,N],[5,"fchmod","","",N,N],[5,"fstat","","",N,N],[5,"mkdir","","",N,N],[5,"stat","","",N,N],[5,"pclose","","",N,N],[5,"fdopen","","",N,N],[5,"fileno","","",N,N],[5,"open","","",N,N],[5,"creat","","",N,N],[5,"fcntl","","",N,N],[5,"opendir","","",N,N],[5,"fdopendir","","",N,N],[5,"readdir","","",N,N],[5,"readdir_r","","",N,N],[5,"closedir","","",N,N],[5,"rewinddir","","",N,N],[5,"openat","","",N,N],[5,"fchmodat","","",N,N],[5,"fchown","","",N,N],[5,"fchownat","","",N,N],[5,"fstatat","","",N,N],[5,"linkat","","",N,N],[5,"mkdirat","","",N,N],[5,"readlinkat","","",N,N],[5,"renameat","","",N,N],[5,"symlinkat","","",N,N],[5,"unlinkat","","",N,N],[5,"access","","",N,N],[5,"alarm","","",N,N],[5,"chdir","","",N,N],[5,"fchdir","","",N,N],[5,"chown","","",N,N],[5,"lchown","","",N,N],[5,"close","","",N,N],[5,"dup","","",N,N],[5,"dup2","","",N,N],[5,"execl","","",N,N],[5,"execle","","",N,N],[5,"execlp","","",N,N],[5,"execv","","",N,N],[5,"execve","","",N,N],[5,"execvp","","",N,N],[5,"fork","","",N,N],[5,"fpathconf","","",N,N],[5,"getcwd","","",N,N],[5,"getegid","","",N,N],[5,"geteuid","","",N,N],[5,"getgid","","",N,N],[5,"getgroups","","",N,N],[5,"getlogin","","",N,N],[5,"getopt","","",N,N],[5,"getpgid","","",N,N],[5,"getpgrp","","",N,N],[5,"getpid","","",N,N],[5,"getppid","","",N,N],[5,"getuid","","",N,N],[5,"isatty","","",N,N],[5,"link","","",N,N],[5,"lseek","","",N,N],[5,"pathconf","","",N,N],[5,"pause","","",N,N],[5,"pipe","","",N,N],[5,"posix_memalign","","",N,N],[5,"read","","",N,N],[5,"rmdir","","",N,N],[5,"seteuid","","",N,N],[5,"setegid","","",N,N],[5,"setgid","","",N,N],[5,"setpgid","","",N,N],[5,"setsid","","",N,N],[5,"setuid","","",N,N],[5,"sleep","","",N,N],[5,"nanosleep","","",N,N],[5,"tcgetpgrp","","",N,N],[5,"tcsetpgrp","","",N,N],[5,"ttyname","","",N,N],[5,"unlink","","",N,N],[5,"wait","","",N,N],[5,"waitpid","","",N,N],[5,"write","","",N,N],[5,"pread","","",N,N],[5,"pwrite","","",N,N],[5,"umask","","",N,N],[5,"utime","","",N,N],[5,"kill","","",N,N],[5,"killpg","","",N,N],[5,"mlock","","",N,N],[5,"munlock","","",N,N],[5,"mlockall","","",N,N],[5,"munlockall","","",N,N],[5,"mmap","","",N,N],[5,"munmap","","",N,N],[5,"if_nametoindex","","",N,N],[5,"if_indextoname","","",N,N],[5,"lstat","","",N,N],[5,"fsync","","",N,N],[5,"setenv","","",N,N],[5,"unsetenv","","",N,N],[5,"symlink","","",N,N],[5,"truncate","","",N,N],[5,"ftruncate","","",N,N],[5,"signal","","",N,N],[5,"getrlimit","","",N,N],[5,"setrlimit","","",N,N],[5,"getrusage","","",N,N],[5,"realpath","","",N,N],[5,"flock","","",N,N],[5,"gettimeofday","","",N,N],[5,"times","","",N,N],[5,"pthread_self","","",N,N],[5,"pthread_join","","",N,N],[5,"pthread_exit","","",N,N],[5,"pthread_attr_init","","",N,N],[5,"pthread_attr_destroy","","",N,N],[5,"pthread_attr_setstacksize","","",N,N],[5,"pthread_attr_setdetachstate","","",N,N],[5,"pthread_detach","","",N,N],[5,"sched_yield","","",N,N],[5,"pthread_key_create","","",N,N],[5,"pthread_key_delete","","",N,N],[5,"pthread_getspecific","","",N,N],[5,"pthread_setspecific","","",N,N],[5,"pthread_mutex_init","","",N,N],[5,"pthread_mutex_destroy","","",N,N],[5,"pthread_mutex_lock","","",N,N],[5,"pthread_mutex_trylock","","",N,N],[5,"pthread_mutex_unlock","","",N,N],[5,"pthread_mutexattr_init","","",N,N],[5,"pthread_mutexattr_destroy","","",N,N],[5,"pthread_mutexattr_settype","","",N,N],[5,"pthread_cond_init","","",N,N],[5,"pthread_cond_wait","","",N,N],[5,"pthread_cond_timedwait","","",N,N],[5,"pthread_cond_signal","","",N,N],[5,"pthread_cond_broadcast","","",N,N],[5,"pthread_cond_destroy","","",N,N],[5,"pthread_condattr_init","","",N,N],[5,"pthread_condattr_destroy","","",N,N],[5,"pthread_rwlock_init","","",N,N],[5,"pthread_rwlock_destroy","","",N,N],[5,"pthread_rwlock_rdlock","","",N,N],[5,"pthread_rwlock_tryrdlock","","",N,N],[5,"pthread_rwlock_wrlock","","",N,N],[5,"pthread_rwlock_trywrlock","","",N,N],[5,"pthread_rwlock_unlock","","",N,N],[5,"pthread_rwlockattr_init","","",N,N],[5,"pthread_rwlockattr_destroy","","",N,N],[5,"strerror_r","","",N,N],[5,"getsockopt","","",N,N],[5,"raise","","",N,N],[5,"sigaction","","",N,N],[5,"utimes","","",N,N],[5,"dlopen","","",N,N],[5,"dlerror","","",N,N],[5,"dlsym","","",N,N],[5,"dlclose","","",N,N],[5,"dladdr","","",N,N],[5,"getaddrinfo","","",N,N],[5,"freeaddrinfo","","",N,N],[5,"gai_strerror","","",N,N],[5,"res_init","","",N,N],[5,"gmtime_r","","",N,N],[5,"localtime_r","","",N,N],[5,"mktime","","",N,N],[5,"time","","",N,N],[5,"gmtime","","",N,N],[5,"localtime","","",N,N],[5,"difftime","","",N,N],[5,"mknod","","",N,N],[5,"uname","","",N,N],[5,"gethostname","","",N,N],[5,"getservbyname","","",N,N],[5,"getprotobyname","","",N,N],[5,"getprotobynumber","","",N,N],[5,"chroot","","",N,N],[5,"usleep","","",N,N],[5,"send","","",N,N],[5,"recv","","",N,N],[5,"putenv","","",N,N],[5,"poll","","",N,N],[5,"select","","",N,N],[5,"setlocale","","",N,N],[5,"localeconv","","",N,N],[5,"sem_destroy","","",N,N],[5,"sem_wait","","",N,N],[5,"sem_trywait","","",N,N],[5,"sem_post","","",N,N],[5,"sem_init","","",N,N],[5,"statvfs","","",N,N],[5,"fstatvfs","","",N,N],[5,"readlink","","",N,N],[5,"sigemptyset","","",N,N],[5,"sigaddset","","",N,N],[5,"sigfillset","","",N,N],[5,"sigdelset","","",N,N],[5,"sigismember","","",N,N],[5,"sigprocmask","","",N,N],[5,"sigpending","","",N,N],[5,"timegm","","",N,N],[5,"getsid","","",N,N],[5,"sysconf","","",N,N],[5,"mkfifo","","",N,N],[5,"pselect","","",N,N],[5,"fseeko","","",N,N],[5,"ftello","","",N,N],[5,"tcdrain","","",N,N],[5,"cfgetispeed","","",N,N],[5,"cfgetospeed","","",N,N],[5,"cfmakeraw","","",N,N],[5,"cfsetispeed","","",N,N],[5,"cfsetospeed","","",N,N],[5,"cfsetspeed","","",N,N],[5,"tcgetattr","","",N,N],[5,"tcsetattr","","",N,N],[5,"tcflow","","",N,N],[5,"tcflush","","",N,N],[5,"tcgetsid","","",N,N],[5,"tcsendbreak","","",N,N],[5,"mkstemp","","",N,N],[5,"mkdtemp","","",N,N],[5,"tmpnam","","",N,N],[5,"openlog","","",N,N],[5,"closelog","","",N,N],[5,"setlogmask","","",N,N],[5,"syslog","","",N,N],[5,"nice","","",N,N],[5,"grantpt","","",N,N],[5,"posix_openpt","","",N,N],[5,"ptsname","","",N,N],[5,"unlockpt","","",N,N],[5,"strcasestr","","",N,N],[5,"getline","","",N,N],[5,"fdatasync","","",N,N],[5,"mincore","","",N,N],[5,"clock_getres","","",N,N],[5,"clock_gettime","","",N,N],[5,"clock_settime","","",N,N],[5,"dirfd","","",N,N],[5,"pthread_getattr_np","","",N,N],[5,"pthread_attr_getstack","","",N,N],[5,"memalign","","",N,N],[5,"setgroups","","",N,N],[5,"pipe2","","",N,N],[5,"statfs","","",N,N],[5,"statfs64","","",N,N],[5,"fstatfs","","",N,N],[5,"fstatfs64","","",N,N],[5,"statvfs64","","",N,N],[5,"fstatvfs64","","",N,N],[5,"memrchr","","",N,N],[5,"posix_fadvise","","",N,N],[5,"futimens","","",N,N],[5,"utimensat","","",N,N],[5,"duplocale","","",N,N],[5,"freelocale","","",N,N],[5,"newlocale","","",N,N],[5,"uselocale","","",N,N],[5,"creat64","","",N,N],[5,"fstat64","","",N,N],[5,"fstatat64","","",N,N],[5,"ftruncate64","","",N,N],[5,"getrlimit64","","",N,N],[5,"lseek64","","",N,N],[5,"lstat64","","",N,N],[5,"mmap64","","",N,N],[5,"open64","","",N,N],[5,"openat64","","",N,N],[5,"pread64","","",N,N],[5,"preadv64","","",N,N],[5,"pwrite64","","",N,N],[5,"pwritev64","","",N,N],[5,"readdir64","","",N,N],[5,"readdir64_r","","",N,N],[5,"setrlimit64","","",N,N],[5,"stat64","","",N,N],[5,"truncate64","","",N,N],[5,"mknodat","","",N,N],[5,"pthread_condattr_getclock","","",N,N],[5,"pthread_condattr_setclock","","",N,N],[5,"pthread_condattr_setpshared","","",N,N],[5,"accept4","","",N,N],[5,"pthread_mutexattr_setpshared","","",N,N],[5,"pthread_rwlockattr_getpshared","","",N,N],[5,"pthread_rwlockattr_setpshared","","",N,N],[5,"ptsname_r","","",N,N],[5,"clearenv","","",N,N],[5,"waitid","","",N,N],[5,"setreuid","","",N,N],[5,"setregid","","",N,N],[5,"getresuid","","",N,N],[5,"getresgid","","",N,N],[5,"acct","","",N,N],[5,"brk","","",N,N],[5,"sbrk","","",N,N],[5,"vfork","","",N,N],[5,"setresgid","","",N,N],[5,"setresuid","","",N,N],[5,"wait4","","",N,N],[5,"openpty","","",N,N],[5,"execvpe","","",N,N],[5,"fexecve","","",N,N],[5,"getifaddrs","","",N,N],[5,"freeifaddrs","","",N,N],[5,"bind","","",N,N],[5,"writev","","",N,N],[5,"readv","","",N,N],[5,"sendmsg","","",N,N],[5,"recvmsg","","",N,N],[5,"abs","","",N,N],[5,"atof","","",N,N],[5,"labs","","",N,N],[5,"rand","","",N,N],[5,"srand","","",N,N],[5,"aio_read","","",N,N],[5,"aio_write","","",N,N],[5,"aio_fsync","","",N,N],[5,"aio_error","","",N,N],[5,"aio_return","","",N,N],[5,"aio_suspend","","",N,N],[5,"aio_cancel","","",N,N],[5,"lio_listio","","",N,N],[5,"lutimes","","",N,N],[5,"setpwent","","",N,N],[5,"endpwent","","",N,N],[5,"getpwent","","",N,N],[5,"setgrent","","",N,N],[5,"endgrent","","",N,N],[5,"getgrent","","",N,N],[5,"setspent","","",N,N],[5,"endspent","","",N,N],[5,"getspent","","",N,N],[5,"getspnam","","",N,N],[5,"shm_open","","",N,N],[5,"shmget","","",N,N],[5,"shmat","","",N,N],[5,"shmdt","","",N,N],[5,"shmctl","","",N,N],[5,"ftok","","",N,N],[5,"semget","","",N,N],[5,"semop","","",N,N],[5,"semctl","","",N,N],[5,"msgctl","","",N,N],[5,"msgget","","",N,N],[5,"msgrcv","","",N,N],[5,"msgsnd","","",N,N],[5,"mprotect","","",N,N],[5,"__errno_location","","",N,N],[5,"fopen64","","",N,N],[5,"freopen64","","",N,N],[5,"tmpfile64","","",N,N],[5,"fgetpos64","","",N,N],[5,"fsetpos64","","",N,N],[5,"fseeko64","","",N,N],[5,"ftello64","","",N,N],[5,"fallocate","","",N,N],[5,"fallocate64","","",N,N],[5,"posix_fallocate","","",N,N],[5,"posix_fallocate64","","",N,N],[5,"readahead","","",N,N],[5,"getxattr","","",N,N],[5,"lgetxattr","","",N,N],[5,"fgetxattr","","",N,N],[5,"setxattr","","",N,N],[5,"lsetxattr","","",N,N],[5,"fsetxattr","","",N,N],[5,"listxattr","","",N,N],[5,"llistxattr","","",N,N],[5,"flistxattr","","",N,N],[5,"removexattr","","",N,N],[5,"lremovexattr","","",N,N],[5,"fremovexattr","","",N,N],[5,"signalfd","","",N,N],[5,"timerfd_create","","",N,N],[5,"timerfd_gettime","","",N,N],[5,"timerfd_settime","","",N,N],[5,"pwritev","","",N,N],[5,"preadv","","",N,N],[5,"quotactl","","",N,N],[5,"mq_open","","",N,N],[5,"mq_close","","",N,N],[5,"mq_unlink","","",N,N],[5,"mq_receive","","",N,N],[5,"mq_send","","",N,N],[5,"mq_getattr","","",N,N],[5,"mq_setattr","","",N,N],[5,"epoll_pwait","","",N,N],[5,"dup3","","",N,N],[5,"mkostemp","","",N,N],[5,"mkostemps","","",N,N],[5,"sigtimedwait","","",N,N],[5,"sigwaitinfo","","",N,N],[5,"nl_langinfo_l","","",N,N],[5,"getnameinfo","","",N,N],[5,"pthread_setschedprio","","",N,N],[5,"prlimit","","",N,N],[5,"prlimit64","","",N,N],[5,"getloadavg","","",N,N],[5,"process_vm_readv","","",N,N],[5,"process_vm_writev","","",N,N],[5,"reboot","","",N,N],[5,"setfsgid","","",N,N],[5,"setfsuid","","",N,N],[5,"mkfifoat","","",N,N],[5,"if_nameindex","","",N,N],[5,"if_freenameindex","","",N,N],[5,"sync_file_range","","",N,N],[5,"mremap","","",N,N],[5,"glob","","",N,N],[5,"globfree","","",N,N],[5,"posix_madvise","","",N,N],[5,"shm_unlink","","",N,N],[5,"seekdir","","",N,N],[5,"telldir","","",N,N],[5,"madvise","","",N,N],[5,"msync","","",N,N],[5,"remap_file_pages","","",N,N],[5,"recvfrom","","",N,N],[5,"mkstemps","","",N,N],[5,"futimes","","",N,N],[5,"nl_langinfo","","",N,N],[5,"getdomainname","","",N,N],[5,"setdomainname","","",N,N],[5,"vhangup","","",N,N],[5,"sendmmsg","","",N,N],[5,"recvmmsg","","",N,N],[5,"sync","","",N,N],[5,"syscall","","",N,N],[5,"sched_getaffinity","","",N,N],[5,"sched_setaffinity","","",N,N],[5,"epoll_create","","",N,N],[5,"epoll_create1","","",N,N],[5,"epoll_wait","","",N,N],[5,"epoll_ctl","","",N,N],[5,"pthread_getschedparam","","",N,N],[5,"unshare","","",N,N],[5,"umount","","",N,N],[5,"sched_get_priority_max","","",N,N],[5,"tee","","",N,N],[5,"settimeofday","","",N,N],[5,"splice","","",N,N],[5,"eventfd","","",N,N],[5,"sched_rr_get_interval","","",N,N],[5,"sem_timedwait","","",N,N],[5,"sem_getvalue","","",N,N],[5,"sched_setparam","","",N,N],[5,"setns","","",N,N],[5,"swapoff","","",N,N],[5,"vmsplice","","",N,N],[5,"mount","","",N,N],[5,"personality","","",N,N],[5,"prctl","","",N,N],[5,"sched_getparam","","",N,N],[5,"ppoll","","",N,N],[5,"pthread_mutex_timedlock","","",N,N],[5,"clone","","",N,N],[5,"sched_getscheduler","","",N,N],[5,"clock_nanosleep","","",N,N],[5,"pthread_attr_getguardsize","","",N,N],[5,"sethostname","","",N,N],[5,"sched_get_priority_min","","",N,N],[5,"pthread_condattr_getpshared","","",N,N],[5,"sysinfo","","",N,N],[5,"umount2","","",N,N],[5,"pthread_setschedparam","","",N,N],[5,"swapon","","",N,N],[5,"sched_setscheduler","","",N,N],[5,"sendfile","","",N,N],[5,"sigsuspend","","",N,N],[5,"getgrgid_r","","",N,N],[5,"sigaltstack","","",N,N],[5,"sem_close","","",N,N],[5,"getdtablesize","","",N,N],[5,"getgrnam_r","","",N,N],[5,"initgroups","","",N,N],[5,"pthread_sigmask","","",N,N],[5,"sem_open","","",N,N],[5,"getgrnam","","",N,N],[5,"pthread_cancel","","",N,N],[5,"pthread_kill","","",N,N],[5,"sem_unlink","","",N,N],[5,"daemon","","",N,N],[5,"getpwnam_r","","",N,N],[5,"getpwuid_r","","",N,N],[5,"sigwait","","",N,N],[5,"pthread_atfork","","",N,N],[5,"getgrgid","","",N,N],[5,"getgrouplist","","",N,N],[5,"pthread_mutexattr_getpshared","","",N,N],[5,"popen","","",N,N],[5,"faccessat","","",N,N],[5,"pthread_create","","",N,N],[5,"dl_iterate_phdr","","",N,N],[5,"setmntent","","",N,N],[5,"getmntent","","",N,N],[5,"addmntent","","",N,N],[5,"endmntent","","",N,N],[5,"hasmntopt","","",N,N],[5,"posix_spawn","","",N,N],[5,"posix_spawnp","","",N,N],[5,"posix_spawnattr_init","","",N,N],[5,"posix_spawnattr_destroy","","",N,N],[5,"posix_spawnattr_getsigdefault","","",N,N],[5,"posix_spawnattr_setsigdefault","","",N,N],[5,"posix_spawnattr_getsigmask","","",N,N],[5,"posix_spawnattr_setsigmask","","",N,N],[5,"posix_spawnattr_getflags","","",N,N],[5,"posix_spawnattr_setflags","","",N,N],[5,"posix_spawnattr_getpgroup","","",N,N],[5,"posix_spawnattr_setpgroup","","",N,N],[5,"posix_spawnattr_getschedpolicy","","",N,N],[5,"posix_spawnattr_setschedpolicy","","",N,N],[5,"posix_spawnattr_getschedparam","","",N,N],[5,"posix_spawnattr_setschedparam","","",N,N],[5,"posix_spawn_file_actions_init","","",N,N],[5,"posix_spawn_file_actions_destroy","","",N,N],[5,"posix_spawn_file_actions_addopen","","",N,N],[5,"posix_spawn_file_actions_addclose","","",N,N],[5,"posix_spawn_file_actions_adddup2","","",N,N],[5,"fread_unlocked","","",N,N],[5,"utmpxname","","",N,N],[5,"getutxent","","",N,N],[5,"getutxid","","",N,N],[5,"getutxline","","",N,N],[5,"pututxline","","",N,N],[5,"setutxent","","",N,N],[5,"endutxent","","",N,N],[5,"getpt","","",N,N],[5,"mallopt","","",N,N],[5,"ioctl","","",N,N],[5,"backtrace","","",N,N],[5,"glob64","","",N,N],[5,"globfree64","","",N,N],[5,"ptrace","","",N,N],[5,"pthread_attr_getaffinity_np","","",N,N],[5,"pthread_attr_setaffinity_np","","",N,N],[5,"getpriority","","",N,N],[5,"setpriority","","",N,N],[5,"pthread_getaffinity_np","","",N,N],[5,"pthread_setaffinity_np","","",N,N],[5,"pthread_rwlockattr_getkind_np","","",N,N],[5,"pthread_rwlockattr_setkind_np","","",N,N],[5,"sched_getcpu","","",N,N],[5,"mallinfo","","",N,N],[5,"malloc_usable_size","","",N,N],[5,"getauxval","","",N,N],[5,"getpwent_r","","",N,N],[5,"getgrent_r","","",N,N],[5,"getcontext","","",N,N],[5,"setcontext","","",N,N],[5,"makecontext","","",N,N],[5,"swapcontext","","",N,N],[5,"iopl","","",N,N],[5,"ioperm","","",N,N],[5,"sysctl","","",N,N],[11,"clone","","",108,[[["self"]],["stat"]]],[11,"clone","","",109,[[["self"]],["stat64"]]],[11,"clone","","",110,[[["self"]],["statfs64"]]],[11,"clone","","",111,[[["self"]],["statvfs64"]]],[11,"clone","","",124,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",112,[[["self"]],["_libc_fpxreg"]]],[11,"clone","","",113,[[["self"]],["_libc_xmmreg"]]],[11,"clone","","",114,[[["self"]],["_libc_fpstate"]]],[11,"clone","","",115,[[["self"]],["user_fpregs_struct"]]],[11,"clone","","",116,[[["self"]],["user_regs_struct"]]],[11,"clone","","",117,[[["self"]],["user"]]],[11,"clone","","",118,[[["self"]],["mcontext_t"]]],[11,"clone","","",119,[[["self"]],["ucontext_t"]]],[11,"clone","","",120,[[["self"]],["ipc_perm"]]],[11,"clone","","",121,[[["self"]],["shmid_ds"]]],[11,"clone","","",122,[[["self"]],["termios2"]]],[11,"clone","","",123,[[["self"]],["statvfs"]]],[11,"clone","","",125,[[["self"]],["sigset_t"]]],[11,"clone","","",106,[[["self"]],["sysinfo"]]],[11,"clone","","",107,[[["self"]],["msqid_ds"]]],[11,"clone","","",85,[[["self"]],["aiocb"]]],[11,"clone","","",86,[[["self"]],["__exit_status"]]],[11,"clone","","",87,[[["self"]],["__timeval"]]],[11,"clone","","",88,[[["self"]],["utmpx"]]],[11,"clone","","",89,[[["self"]],["sigaction"]]],[11,"clone","","",90,[[["self"]],["stack_t"]]],[11,"clone","","",91,[[["self"]],["siginfo_t"]]],[11,"clone","","",92,[[["self"]],["glob64_t"]]],[11,"clone","","",93,[[["self"]],["statfs"]]],[11,"clone","","",94,[[["self"]],["msghdr"]]],[11,"clone","","",95,[[["self"]],["cmsghdr"]]],[11,"clone","","",96,[[["self"]],["termios"]]],[11,"clone","","",97,[[["self"]],["flock"]]],[11,"clone","","",126,[[["self"]],["sem_t"]]],[11,"clone","","",98,[[["self"]],["mallinfo"]]],[11,"clone","","",99,[[["self"]],["nlmsghdr"]]],[11,"clone","","",100,[[["self"]],["nlmsgerr"]]],[11,"clone","","",101,[[["self"]],["nl_pktinfo"]]],[11,"clone","","",102,[[["self"]],["nl_mmap_req"]]],[11,"clone","","",103,[[["self"]],["nl_mmap_hdr"]]],[11,"clone","","",104,[[["self"]],["nlattr"]]],[11,"clone","","",105,[[["self"]],["rtentry"]]],[11,"clone","","",40,[[["self"]],["dirent"]]],[11,"clone","","",41,[[["self"]],["dirent64"]]],[11,"clone","","",42,[[["self"]],["rlimit64"]]],[11,"clone","","",43,[[["self"]],["glob_t"]]],[11,"clone","","",127,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",128,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",129,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",130,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",131,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",132,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",44,[[["self"]],["passwd"]]],[11,"clone","","",45,[[["self"]],["spwd"]]],[11,"clone","","",46,[[["self"]],["dqblk"]]],[11,"clone","","",47,[[["self"]],["signalfd_siginfo"]]],[11,"clone","","",48,[[["self"]],["itimerspec"]]],[11,"clone","","",133,[[["self"]],["fsid_t"]]],[11,"clone","","",49,[[["self"]],["mq_attr"]]],[11,"clone","","",50,[[["self"]],["packet_mreq"]]],[11,"clone","","",134,[[["self"]],["cpu_set_t"]]],[11,"clone","","",51,[[["self"]],["if_nameindex"]]],[11,"clone","","",52,[[["self"]],["msginfo"]]],[11,"clone","","",53,[[["self"]],["mmsghdr"]]],[11,"clone","","",54,[[["self"]],["sembuf"]]],[11,"clone","","",55,[[["self"]],["input_event"]]],[11,"clone","","",56,[[["self"]],["input_id"]]],[11,"clone","","",57,[[["self"]],["input_absinfo"]]],[11,"clone","","",58,[[["self"]],["input_keymap_entry"]]],[11,"clone","","",59,[[["self"]],["input_mask"]]],[11,"clone","","",60,[[["self"]],["ff_replay"]]],[11,"clone","","",61,[[["self"]],["ff_trigger"]]],[11,"clone","","",62,[[["self"]],["ff_envelope"]]],[11,"clone","","",63,[[["self"]],["ff_constant_effect"]]],[11,"clone","","",64,[[["self"]],["ff_ramp_effect"]]],[11,"clone","","",65,[[["self"]],["ff_condition_effect"]]],[11,"clone","","",66,[[["self"]],["ff_periodic_effect"]]],[11,"clone","","",67,[[["self"]],["ff_rumble_effect"]]],[11,"clone","","",68,[[["self"]],["ff_effect"]]],[11,"clone","","",69,[[["self"]],["dl_phdr_info"]]],[11,"clone","","",70,[[["self"]],["elf32_ehdr"]]],[11,"clone","","",71,[[["self"]],["elf64_ehdr"]]],[11,"clone","","",72,[[["self"]],["elf32_sym"]]],[11,"clone","","",73,[[["self"]],["elf64_sym"]]],[11,"clone","","",74,[[["self"]],["elf32_phdr"]]],[11,"clone","","",75,[[["self"]],["elf64_phdr"]]],[11,"clone","","",76,[[["self"]],["elf32_shdr"]]],[11,"clone","","",77,[[["self"]],["elf64_shdr"]]],[11,"clone","","",78,[[["self"]],["elf32_chdr"]]],[11,"clone","","",79,[[["self"]],["elf64_chdr"]]],[11,"clone","","",80,[[["self"]],["ucred"]]],[11,"clone","","",81,[[["self"]],["mntent"]]],[11,"clone","","",135,[[["self"]],["posix_spawn_file_actions_t"]]],[11,"clone","","",136,[[["self"]],["posix_spawnattr_t"]]],[11,"clone","","",82,[[["self"]],["genlmsghdr"]]],[11,"clone","","",83,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",84,[[["self"]],["arpd_request"]]],[11,"clone","","",20,[[["self"]],["sockaddr"]]],[11,"clone","","",21,[[["self"]],["sockaddr_in"]]],[11,"clone","","",22,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",23,[[["self"]],["sockaddr_un"]]],[11,"clone","","",24,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",25,[[["self"]],["addrinfo"]]],[11,"clone","","",26,[[["self"]],["sockaddr_nl"]]],[11,"clone","","",27,[[["self"]],["sockaddr_ll"]]],[11,"clone","","",137,[[["self"]],["fd_set"]]],[11,"clone","","",28,[[["self"]],["tm"]]],[11,"clone","","",29,[[["self"]],["sched_param"]]],[11,"clone","","",30,[[["self"]],["dl_info"]]],[11,"clone","","",31,[[["self"]],["epoll_event"]]],[11,"clone","","",32,[[["self"]],["utsname"]]],[11,"clone","","",33,[[["self"]],["lconv"]]],[11,"clone","","",34,[[["self"]],["sigevent"]]],[11,"clone","","",35,[[["self"]],["in_pktinfo"]]],[11,"clone","","",36,[[["self"]],["ifaddrs"]]],[11,"clone","","",138,[[["self"]],["in6_rtmsg"]]],[11,"clone","","",37,[[["self"]],["arpreq"]]],[11,"clone","","",38,[[["self"]],["arpreq_old"]]],[11,"clone","","",39,[[["self"]],["arphdr"]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["in_addr"]]],[11,"clone","","",7,[[["self"]],["in6_addr"]]],[11,"clone","","",8,[[["self"]],["ip_mreq"]]],[11,"clone","","",9,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",10,[[["self"]],["hostent"]]],[11,"clone","","",11,[[["self"]],["iovec"]]],[11,"clone","","",12,[[["self"]],["pollfd"]]],[11,"clone","","",13,[[["self"]],["winsize"]]],[11,"clone","","",14,[[["self"]],["linger"]]],[11,"clone","","",15,[[["self"]],["sigval"]]],[11,"clone","","",16,[[["self"]],["itimerval"]]],[11,"clone","","",17,[[["self"]],["tms"]]],[11,"clone","","",18,[[["self"]],["servent"]]],[11,"clone","","",19,[[["self"]],["protoent"]]],[6,"int8_t","","",N,N],[6,"int16_t","","",N,N],[6,"int32_t","","",N,N],[6,"int64_t","","",N,N],[6,"uint8_t","","",N,N],[6,"uint16_t","","",N,N],[6,"uint32_t","","",N,N],[6,"uint64_t","","",N,N],[6,"c_schar","","",N,N],[6,"c_uchar","","",N,N],[6,"c_short","","",N,N],[6,"c_ushort","","",N,N],[6,"c_int","","",N,N],[6,"c_uint","","",N,N],[6,"c_float","","",N,N],[6,"c_double","","",N,N],[6,"c_longlong","","",N,N],[6,"c_ulonglong","","",N,N],[6,"intmax_t","","",N,N],[6,"uintmax_t","","",N,N],[6,"size_t","","",N,N],[6,"ptrdiff_t","","",N,N],[6,"intptr_t","","",N,N],[6,"uintptr_t","","",N,N],[6,"ssize_t","","",N,N],[6,"pid_t","","",N,N],[6,"uid_t","","",N,N],[6,"gid_t","","",N,N],[6,"in_addr_t","","",N,N],[6,"in_port_t","","",N,N],[6,"sighandler_t","","",N,N],[6,"cc_t","","",N,N],[6,"sa_family_t","","",N,N],[6,"pthread_key_t","","",N,N],[6,"speed_t","","",N,N],[6,"tcflag_t","","",N,N],[6,"clockid_t","","",N,N],[6,"key_t","","",N,N],[6,"id_t","","",N,N],[6,"useconds_t","","",N,N],[6,"dev_t","","",N,N],[6,"socklen_t","","",N,N],[6,"pthread_t","","",N,N],[6,"mode_t","","",N,N],[6,"ino64_t","","",N,N],[6,"off64_t","","",N,N],[6,"blkcnt64_t","","",N,N],[6,"rlim64_t","","",N,N],[6,"mqd_t","","",N,N],[6,"nfds_t","","",N,N],[6,"nl_item","","",N,N],[6,"idtype_t","","",N,N],[6,"loff_t","","",N,N],[6,"__u8","","",N,N],[6,"__u16","","",N,N],[6,"__s16","","",N,N],[6,"__u32","","",N,N],[6,"__s32","","",N,N],[6,"Elf32_Half","","",N,N],[6,"Elf32_Word","","",N,N],[6,"Elf32_Off","","",N,N],[6,"Elf32_Addr","","",N,N],[6,"Elf64_Half","","",N,N],[6,"Elf64_Word","","",N,N],[6,"Elf64_Off","","",N,N],[6,"Elf64_Addr","","",N,N],[6,"Elf64_Xword","","",N,N],[6,"Elf64_Sxword","","",N,N],[6,"Elf32_Section","","",N,N],[6,"Elf64_Section","","",N,N],[6,"__priority_which_t","","",N,N],[6,"clock_t","","",N,N],[6,"time_t","","",N,N],[6,"ino_t","","",N,N],[6,"off_t","","",N,N],[6,"blkcnt_t","","",N,N],[6,"__fsword_t","","",N,N],[6,"shmatt_t","","",N,N],[6,"msgqnum_t","","",N,N],[6,"msglen_t","","",N,N],[6,"fsblkcnt_t","","",N,N],[6,"fsfilcnt_t","","",N,N],[6,"rlim_t","","",N,N],[6,"c_char","","",N,N],[6,"wchar_t","","",N,N],[6,"nlink_t","","",N,N],[6,"blksize_t","","",N,N],[6,"greg_t","","",N,N],[6,"suseconds_t","","",N,N],[6,"__u64","","",N,N],[6,"c_long","","",N,N],[6,"c_ulong","","",N,N],[17,"INT_MIN","","",N,N],[17,"INT_MAX","","",N,N],[17,"SIG_DFL","","",N,N],[17,"SIG_IGN","","",N,N],[17,"SIG_ERR","","",N,N],[17,"DT_UNKNOWN","","",N,N],[17,"DT_FIFO","","",N,N],[17,"DT_CHR","","",N,N],[17,"DT_DIR","","",N,N],[17,"DT_BLK","","",N,N],[17,"DT_REG","","",N,N],[17,"DT_LNK","","",N,N],[17,"DT_SOCK","","",N,N],[17,"FD_CLOEXEC","","",N,N],[17,"USRQUOTA","","",N,N],[17,"GRPQUOTA","","",N,N],[17,"SIGIOT","","",N,N],[17,"S_ISUID","","",N,N],[17,"S_ISGID","","",N,N],[17,"S_ISVTX","","",N,N],[17,"IF_NAMESIZE","","",N,N],[17,"IFNAMSIZ","","",N,N],[17,"LOG_EMERG","","",N,N],[17,"LOG_ALERT","","",N,N],[17,"LOG_CRIT","","",N,N],[17,"LOG_ERR","","",N,N],[17,"LOG_WARNING","","",N,N],[17,"LOG_NOTICE","","",N,N],[17,"LOG_INFO","","",N,N],[17,"LOG_DEBUG","","",N,N],[17,"LOG_KERN","","",N,N],[17,"LOG_USER","","",N,N],[17,"LOG_MAIL","","",N,N],[17,"LOG_DAEMON","","",N,N],[17,"LOG_AUTH","","",N,N],[17,"LOG_SYSLOG","","",N,N],[17,"LOG_LPR","","",N,N],[17,"LOG_NEWS","","",N,N],[17,"LOG_UUCP","","",N,N],[17,"LOG_LOCAL0","","",N,N],[17,"LOG_LOCAL1","","",N,N],[17,"LOG_LOCAL2","","",N,N],[17,"LOG_LOCAL3","","",N,N],[17,"LOG_LOCAL4","","",N,N],[17,"LOG_LOCAL5","","",N,N],[17,"LOG_LOCAL6","","",N,N],[17,"LOG_LOCAL7","","",N,N],[17,"LOG_PID","","",N,N],[17,"LOG_CONS","","",N,N],[17,"LOG_ODELAY","","",N,N],[17,"LOG_NDELAY","","",N,N],[17,"LOG_NOWAIT","","",N,N],[17,"LOG_PRIMASK","","",N,N],[17,"LOG_FACMASK","","",N,N],[17,"PRIO_PROCESS","","",N,N],[17,"PRIO_PGRP","","",N,N],[17,"PRIO_USER","","",N,N],[17,"PRIO_MIN","","",N,N],[17,"PRIO_MAX","","",N,N],[17,"IPPROTO_ICMP","","",N,N],[17,"IPPROTO_ICMPV6","","",N,N],[17,"IPPROTO_TCP","","",N,N],[17,"IPPROTO_UDP","","",N,N],[17,"IPPROTO_IP","","",N,N],[17,"IPPROTO_IPV6","","",N,N],[17,"INADDR_LOOPBACK","","",N,N],[17,"INADDR_ANY","","",N,N],[17,"INADDR_BROADCAST","","",N,N],[17,"INADDR_NONE","","",N,N],[17,"ARPOP_REQUEST","","",N,N],[17,"ARPOP_REPLY","","",N,N],[17,"ATF_COM","","",N,N],[17,"ATF_PERM","","",N,N],[17,"ATF_PUBL","","",N,N],[17,"ATF_USETRAILERS","","",N,N],[17,"EXIT_FAILURE","","",N,N],[17,"EXIT_SUCCESS","","",N,N],[17,"RAND_MAX","","",N,N],[17,"EOF","","",N,N],[17,"SEEK_SET","","",N,N],[17,"SEEK_CUR","","",N,N],[17,"SEEK_END","","",N,N],[17,"_IOFBF","","",N,N],[17,"_IONBF","","",N,N],[17,"_IOLBF","","",N,N],[17,"F_DUPFD","","",N,N],[17,"F_GETFD","","",N,N],[17,"F_SETFD","","",N,N],[17,"F_GETFL","","",N,N],[17,"F_SETFL","","",N,N],[17,"F_SETLEASE","","",N,N],[17,"F_GETLEASE","","",N,N],[17,"F_NOTIFY","","",N,N],[17,"F_CANCELLK","","",N,N],[17,"F_DUPFD_CLOEXEC","","",N,N],[17,"F_SETPIPE_SZ","","",N,N],[17,"F_GETPIPE_SZ","","",N,N],[17,"F_ADD_SEALS","","",N,N],[17,"F_GET_SEALS","","",N,N],[17,"F_SEAL_SEAL","","",N,N],[17,"F_SEAL_SHRINK","","",N,N],[17,"F_SEAL_GROW","","",N,N],[17,"F_SEAL_WRITE","","",N,N],[17,"SIGTRAP","","",N,N],[17,"PTHREAD_CREATE_JOINABLE","","",N,N],[17,"PTHREAD_CREATE_DETACHED","","",N,N],[17,"CLOCK_REALTIME","","",N,N],[17,"CLOCK_MONOTONIC","","",N,N],[17,"CLOCK_PROCESS_CPUTIME_ID","","",N,N],[17,"CLOCK_THREAD_CPUTIME_ID","","",N,N],[17,"CLOCK_MONOTONIC_RAW","","",N,N],[17,"CLOCK_REALTIME_COARSE","","",N,N],[17,"CLOCK_MONOTONIC_COARSE","","",N,N],[17,"CLOCK_BOOTTIME","","",N,N],[17,"CLOCK_REALTIME_ALARM","","",N,N],[17,"CLOCK_BOOTTIME_ALARM","","",N,N],[17,"TIMER_ABSTIME","","",N,N],[17,"RLIMIT_CPU","","",N,N],[17,"RLIMIT_FSIZE","","",N,N],[17,"RLIMIT_DATA","","",N,N],[17,"RLIMIT_STACK","","",N,N],[17,"RLIMIT_CORE","","",N,N],[17,"RLIMIT_LOCKS","","",N,N],[17,"RLIMIT_SIGPENDING","","",N,N],[17,"RLIMIT_MSGQUEUE","","",N,N],[17,"RLIMIT_NICE","","",N,N],[17,"RLIMIT_RTPRIO","","",N,N],[17,"RUSAGE_SELF","","",N,N],[17,"O_RDONLY","","",N,N],[17,"O_WRONLY","","",N,N],[17,"O_RDWR","","",N,N],[17,"SOCK_CLOEXEC","","",N,N],[17,"S_IFIFO","","",N,N],[17,"S_IFCHR","","",N,N],[17,"S_IFBLK","","",N,N],[17,"S_IFDIR","","",N,N],[17,"S_IFREG","","",N,N],[17,"S_IFLNK","","",N,N],[17,"S_IFSOCK","","",N,N],[17,"S_IFMT","","",N,N],[17,"S_IRWXU","","",N,N],[17,"S_IXUSR","","",N,N],[17,"S_IWUSR","","",N,N],[17,"S_IRUSR","","",N,N],[17,"S_IRWXG","","",N,N],[17,"S_IXGRP","","",N,N],[17,"S_IWGRP","","",N,N],[17,"S_IRGRP","","",N,N],[17,"S_IRWXO","","",N,N],[17,"S_IXOTH","","",N,N],[17,"S_IWOTH","","",N,N],[17,"S_IROTH","","",N,N],[17,"F_OK","","",N,N],[17,"R_OK","","",N,N],[17,"W_OK","","",N,N],[17,"X_OK","","",N,N],[17,"STDIN_FILENO","","",N,N],[17,"STDOUT_FILENO","","",N,N],[17,"STDERR_FILENO","","",N,N],[17,"SIGHUP","","",N,N],[17,"SIGINT","","",N,N],[17,"SIGQUIT","","",N,N],[17,"SIGILL","","",N,N],[17,"SIGABRT","","",N,N],[17,"SIGFPE","","",N,N],[17,"SIGKILL","","",N,N],[17,"SIGSEGV","","",N,N],[17,"SIGPIPE","","",N,N],[17,"SIGALRM","","",N,N],[17,"SIGTERM","","",N,N],[17,"PROT_NONE","","",N,N],[17,"PROT_READ","","",N,N],[17,"PROT_WRITE","","",N,N],[17,"PROT_EXEC","","",N,N],[17,"LC_CTYPE","","",N,N],[17,"LC_NUMERIC","","",N,N],[17,"LC_TIME","","",N,N],[17,"LC_COLLATE","","",N,N],[17,"LC_MONETARY","","",N,N],[17,"LC_MESSAGES","","",N,N],[17,"LC_ALL","","",N,N],[17,"LC_CTYPE_MASK","","",N,N],[17,"LC_NUMERIC_MASK","","",N,N],[17,"LC_TIME_MASK","","",N,N],[17,"LC_COLLATE_MASK","","",N,N],[17,"LC_MONETARY_MASK","","",N,N],[17,"LC_MESSAGES_MASK","","",N,N],[17,"MAP_FILE","","",N,N],[17,"MAP_SHARED","","",N,N],[17,"MAP_PRIVATE","","",N,N],[17,"MAP_FIXED","","",N,N],[17,"MAP_FAILED","","",N,N],[17,"MS_ASYNC","","",N,N],[17,"MS_INVALIDATE","","",N,N],[17,"MS_SYNC","","",N,N],[17,"MS_RDONLY","","",N,N],[17,"MS_NOSUID","","",N,N],[17,"MS_NODEV","","",N,N],[17,"MS_NOEXEC","","",N,N],[17,"MS_SYNCHRONOUS","","",N,N],[17,"MS_REMOUNT","","",N,N],[17,"MS_MANDLOCK","","",N,N],[17,"MS_DIRSYNC","","",N,N],[17,"MS_NOATIME","","",N,N],[17,"MS_NODIRATIME","","",N,N],[17,"MS_BIND","","",N,N],[17,"MS_MOVE","","",N,N],[17,"MS_REC","","",N,N],[17,"MS_SILENT","","",N,N],[17,"MS_POSIXACL","","",N,N],[17,"MS_UNBINDABLE","","",N,N],[17,"MS_PRIVATE","","",N,N],[17,"MS_SLAVE","","",N,N],[17,"MS_SHARED","","",N,N],[17,"MS_RELATIME","","",N,N],[17,"MS_KERNMOUNT","","",N,N],[17,"MS_I_VERSION","","",N,N],[17,"MS_STRICTATIME","","",N,N],[17,"MS_ACTIVE","","",N,N],[17,"MS_NOUSER","","",N,N],[17,"MS_MGC_VAL","","",N,N],[17,"MS_MGC_MSK","","",N,N],[17,"MS_RMT_MASK","","",N,N],[17,"EPERM","","",N,N],[17,"ENOENT","","",N,N],[17,"ESRCH","","",N,N],[17,"EINTR","","",N,N],[17,"EIO","","",N,N],[17,"ENXIO","","",N,N],[17,"E2BIG","","",N,N],[17,"ENOEXEC","","",N,N],[17,"EBADF","","",N,N],[17,"ECHILD","","",N,N],[17,"EAGAIN","","",N,N],[17,"ENOMEM","","",N,N],[17,"EACCES","","",N,N],[17,"EFAULT","","",N,N],[17,"ENOTBLK","","",N,N],[17,"EBUSY","","",N,N],[17,"EEXIST","","",N,N],[17,"EXDEV","","",N,N],[17,"ENODEV","","",N,N],[17,"ENOTDIR","","",N,N],[17,"EISDIR","","",N,N],[17,"EINVAL","","",N,N],[17,"ENFILE","","",N,N],[17,"EMFILE","","",N,N],[17,"ENOTTY","","",N,N],[17,"ETXTBSY","","",N,N],[17,"EFBIG","","",N,N],[17,"ENOSPC","","",N,N],[17,"ESPIPE","","",N,N],[17,"EROFS","","",N,N],[17,"EMLINK","","",N,N],[17,"EPIPE","","",N,N],[17,"EDOM","","",N,N],[17,"ERANGE","","",N,N],[17,"EWOULDBLOCK","","",N,N],[17,"SCM_RIGHTS","","",N,N],[17,"SCM_CREDENTIALS","","",N,N],[17,"PROT_GROWSDOWN","","",N,N],[17,"PROT_GROWSUP","","",N,N],[17,"MAP_TYPE","","",N,N],[17,"MADV_NORMAL","","",N,N],[17,"MADV_RANDOM","","",N,N],[17,"MADV_SEQUENTIAL","","",N,N],[17,"MADV_WILLNEED","","",N,N],[17,"MADV_DONTNEED","","",N,N],[17,"MADV_FREE","","",N,N],[17,"MADV_REMOVE","","",N,N],[17,"MADV_DONTFORK","","",N,N],[17,"MADV_DOFORK","","",N,N],[17,"MADV_MERGEABLE","","",N,N],[17,"MADV_UNMERGEABLE","","",N,N],[17,"MADV_HUGEPAGE","","",N,N],[17,"MADV_NOHUGEPAGE","","",N,N],[17,"MADV_DONTDUMP","","",N,N],[17,"MADV_DODUMP","","",N,N],[17,"MADV_HWPOISON","","",N,N],[17,"MADV_SOFT_OFFLINE","","",N,N],[17,"IFF_UP","","",N,N],[17,"IFF_BROADCAST","","",N,N],[17,"IFF_DEBUG","","",N,N],[17,"IFF_LOOPBACK","","",N,N],[17,"IFF_POINTOPOINT","","",N,N],[17,"IFF_NOTRAILERS","","",N,N],[17,"IFF_RUNNING","","",N,N],[17,"IFF_NOARP","","",N,N],[17,"IFF_PROMISC","","",N,N],[17,"IFF_ALLMULTI","","",N,N],[17,"IFF_MASTER","","",N,N],[17,"IFF_SLAVE","","",N,N],[17,"IFF_MULTICAST","","",N,N],[17,"IFF_PORTSEL","","",N,N],[17,"IFF_AUTOMEDIA","","",N,N],[17,"IFF_DYNAMIC","","",N,N],[17,"SOL_IP","","",N,N],[17,"SOL_TCP","","",N,N],[17,"SOL_UDP","","",N,N],[17,"SOL_IPV6","","",N,N],[17,"SOL_ICMPV6","","",N,N],[17,"SOL_RAW","","",N,N],[17,"SOL_DECNET","","",N,N],[17,"SOL_X25","","",N,N],[17,"SOL_PACKET","","",N,N],[17,"SOL_ATM","","",N,N],[17,"SOL_AAL","","",N,N],[17,"SOL_IRDA","","",N,N],[17,"SOL_NETBEUI","","",N,N],[17,"SOL_LLC","","",N,N],[17,"SOL_DCCP","","",N,N],[17,"SOL_NETLINK","","",N,N],[17,"SOL_TIPC","","",N,N],[17,"SOL_BLUETOOTH","","",N,N],[17,"AF_UNSPEC","","",N,N],[17,"AF_UNIX","","",N,N],[17,"AF_LOCAL","","",N,N],[17,"AF_INET","","",N,N],[17,"AF_AX25","","",N,N],[17,"AF_IPX","","",N,N],[17,"AF_APPLETALK","","",N,N],[17,"AF_NETROM","","",N,N],[17,"AF_BRIDGE","","",N,N],[17,"AF_ATMPVC","","",N,N],[17,"AF_X25","","",N,N],[17,"AF_INET6","","",N,N],[17,"AF_ROSE","","",N,N],[17,"AF_DECnet","","",N,N],[17,"AF_NETBEUI","","",N,N],[17,"AF_SECURITY","","",N,N],[17,"AF_KEY","","",N,N],[17,"AF_NETLINK","","",N,N],[17,"AF_ROUTE","","",N,N],[17,"AF_PACKET","","",N,N],[17,"AF_ASH","","",N,N],[17,"AF_ECONET","","",N,N],[17,"AF_ATMSVC","","",N,N],[17,"AF_RDS","","",N,N],[17,"AF_SNA","","",N,N],[17,"AF_IRDA","","",N,N],[17,"AF_PPPOX","","",N,N],[17,"AF_WANPIPE","","",N,N],[17,"AF_LLC","","",N,N],[17,"AF_CAN","","",N,N],[17,"AF_TIPC","","",N,N],[17,"AF_BLUETOOTH","","",N,N],[17,"AF_IUCV","","",N,N],[17,"AF_RXRPC","","",N,N],[17,"AF_ISDN","","",N,N],[17,"AF_PHONET","","",N,N],[17,"AF_IEEE802154","","",N,N],[17,"AF_CAIF","","",N,N],[17,"AF_ALG","","",N,N],[17,"PF_UNSPEC","","",N,N],[17,"PF_UNIX","","",N,N],[17,"PF_LOCAL","","",N,N],[17,"PF_INET","","",N,N],[17,"PF_AX25","","",N,N],[17,"PF_IPX","","",N,N],[17,"PF_APPLETALK","","",N,N],[17,"PF_NETROM","","",N,N],[17,"PF_BRIDGE","","",N,N],[17,"PF_ATMPVC","","",N,N],[17,"PF_X25","","",N,N],[17,"PF_INET6","","",N,N],[17,"PF_ROSE","","",N,N],[17,"PF_DECnet","","",N,N],[17,"PF_NETBEUI","","",N,N],[17,"PF_SECURITY","","",N,N],[17,"PF_KEY","","",N,N],[17,"PF_NETLINK","","",N,N],[17,"PF_ROUTE","","",N,N],[17,"PF_PACKET","","",N,N],[17,"PF_ASH","","",N,N],[17,"PF_ECONET","","",N,N],[17,"PF_ATMSVC","","",N,N],[17,"PF_RDS","","",N,N],[17,"PF_SNA","","",N,N],[17,"PF_IRDA","","",N,N],[17,"PF_PPPOX","","",N,N],[17,"PF_WANPIPE","","",N,N],[17,"PF_LLC","","",N,N],[17,"PF_CAN","","",N,N],[17,"PF_TIPC","","",N,N],[17,"PF_BLUETOOTH","","",N,N],[17,"PF_IUCV","","",N,N],[17,"PF_RXRPC","","",N,N],[17,"PF_ISDN","","",N,N],[17,"PF_PHONET","","",N,N],[17,"PF_IEEE802154","","",N,N],[17,"PF_CAIF","","",N,N],[17,"PF_ALG","","",N,N],[17,"SOMAXCONN","","",N,N],[17,"MSG_OOB","","",N,N],[17,"MSG_PEEK","","",N,N],[17,"MSG_DONTROUTE","","",N,N],[17,"MSG_CTRUNC","","",N,N],[17,"MSG_TRUNC","","",N,N],[17,"MSG_DONTWAIT","","",N,N],[17,"MSG_EOR","","",N,N],[17,"MSG_WAITALL","","",N,N],[17,"MSG_FIN","","",N,N],[17,"MSG_SYN","","",N,N],[17,"MSG_CONFIRM","","",N,N],[17,"MSG_RST","","",N,N],[17,"MSG_ERRQUEUE","","",N,N],[17,"MSG_NOSIGNAL","","",N,N],[17,"MSG_MORE","","",N,N],[17,"MSG_WAITFORONE","","",N,N],[17,"MSG_FASTOPEN","","",N,N],[17,"MSG_CMSG_CLOEXEC","","",N,N],[17,"SCM_TIMESTAMP","","",N,N],[17,"SOCK_RAW","","",N,N],[17,"SOCK_RDM","","",N,N],[17,"IP_MULTICAST_IF","","",N,N],[17,"IP_MULTICAST_TTL","","",N,N],[17,"IP_MULTICAST_LOOP","","",N,N],[17,"IP_TTL","","",N,N],[17,"IP_HDRINCL","","",N,N],[17,"IP_PKTINFO","","",N,N],[17,"IP_ADD_MEMBERSHIP","","",N,N],[17,"IP_DROP_MEMBERSHIP","","",N,N],[17,"IP_TRANSPARENT","","",N,N],[17,"IPV6_UNICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_IF","","",N,N],[17,"IPV6_MULTICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_LOOP","","",N,N],[17,"IPV6_ADD_MEMBERSHIP","","",N,N],[17,"IPV6_DROP_MEMBERSHIP","","",N,N],[17,"IPV6_V6ONLY","","",N,N],[17,"IPV6_RECVPKTINFO","","",N,N],[17,"IPV6_PKTINFO","","",N,N],[17,"TCP_NODELAY","","",N,N],[17,"TCP_MAXSEG","","",N,N],[17,"TCP_CORK","","",N,N],[17,"TCP_KEEPIDLE","","",N,N],[17,"TCP_KEEPINTVL","","",N,N],[17,"TCP_KEEPCNT","","",N,N],[17,"TCP_SYNCNT","","",N,N],[17,"TCP_LINGER2","","",N,N],[17,"TCP_DEFER_ACCEPT","","",N,N],[17,"TCP_WINDOW_CLAMP","","",N,N],[17,"TCP_INFO","","",N,N],[17,"TCP_QUICKACK","","",N,N],[17,"TCP_CONGESTION","","",N,N],[17,"SO_DEBUG","","",N,N],[17,"SHUT_RD","","",N,N],[17,"SHUT_WR","","",N,N],[17,"SHUT_RDWR","","",N,N],[17,"LOCK_SH","","",N,N],[17,"LOCK_EX","","",N,N],[17,"LOCK_NB","","",N,N],[17,"LOCK_UN","","",N,N],[17,"SS_ONSTACK","","",N,N],[17,"SS_DISABLE","","",N,N],[17,"PATH_MAX","","",N,N],[17,"FD_SETSIZE","","",N,N],[17,"EPOLLIN","","",N,N],[17,"EPOLLPRI","","",N,N],[17,"EPOLLOUT","","",N,N],[17,"EPOLLRDNORM","","",N,N],[17,"EPOLLRDBAND","","",N,N],[17,"EPOLLWRNORM","","",N,N],[17,"EPOLLWRBAND","","",N,N],[17,"EPOLLMSG","","",N,N],[17,"EPOLLERR","","",N,N],[17,"EPOLLHUP","","",N,N],[17,"EPOLLET","","",N,N],[17,"EPOLL_CTL_ADD","","",N,N],[17,"EPOLL_CTL_MOD","","",N,N],[17,"EPOLL_CTL_DEL","","",N,N],[17,"MNT_DETACH","","",N,N],[17,"MNT_EXPIRE","","",N,N],[17,"Q_GETFMT","","",N,N],[17,"Q_GETINFO","","",N,N],[17,"Q_SETINFO","","",N,N],[17,"QIF_BLIMITS","","",N,N],[17,"QIF_SPACE","","",N,N],[17,"QIF_ILIMITS","","",N,N],[17,"QIF_INODES","","",N,N],[17,"QIF_BTIME","","",N,N],[17,"QIF_ITIME","","",N,N],[17,"QIF_LIMITS","","",N,N],[17,"QIF_USAGE","","",N,N],[17,"QIF_TIMES","","",N,N],[17,"QIF_ALL","","",N,N],[17,"MNT_FORCE","","",N,N],[17,"Q_SYNC","","",N,N],[17,"Q_QUOTAON","","",N,N],[17,"Q_QUOTAOFF","","",N,N],[17,"Q_GETQUOTA","","",N,N],[17,"Q_SETQUOTA","","",N,N],[17,"TCIOFF","","",N,N],[17,"TCION","","",N,N],[17,"TCOOFF","","",N,N],[17,"TCOON","","",N,N],[17,"TCIFLUSH","","",N,N],[17,"TCOFLUSH","","",N,N],[17,"TCIOFLUSH","","",N,N],[17,"NL0","","",N,N],[17,"NL1","","",N,N],[17,"TAB0","","",N,N],[17,"CR0","","",N,N],[17,"FF0","","",N,N],[17,"BS0","","",N,N],[17,"VT0","","",N,N],[17,"VERASE","","",N,N],[17,"VKILL","","",N,N],[17,"VINTR","","",N,N],[17,"VQUIT","","",N,N],[17,"VLNEXT","","",N,N],[17,"IGNBRK","","",N,N],[17,"BRKINT","","",N,N],[17,"IGNPAR","","",N,N],[17,"PARMRK","","",N,N],[17,"INPCK","","",N,N],[17,"ISTRIP","","",N,N],[17,"INLCR","","",N,N],[17,"IGNCR","","",N,N],[17,"ICRNL","","",N,N],[17,"IXANY","","",N,N],[17,"IMAXBEL","","",N,N],[17,"OPOST","","",N,N],[17,"CS5","","",N,N],[17,"CRTSCTS","","",N,N],[17,"ECHO","","",N,N],[17,"OCRNL","","",N,N],[17,"ONOCR","","",N,N],[17,"ONLRET","","",N,N],[17,"OFILL","","",N,N],[17,"OFDEL","","",N,N],[17,"CLONE_VM","","",N,N],[17,"CLONE_FS","","",N,N],[17,"CLONE_FILES","","",N,N],[17,"CLONE_SIGHAND","","",N,N],[17,"CLONE_PTRACE","","",N,N],[17,"CLONE_VFORK","","",N,N],[17,"CLONE_PARENT","","",N,N],[17,"CLONE_THREAD","","",N,N],[17,"CLONE_NEWNS","","",N,N],[17,"CLONE_SYSVSEM","","",N,N],[17,"CLONE_SETTLS","","",N,N],[17,"CLONE_PARENT_SETTID","","",N,N],[17,"CLONE_CHILD_CLEARTID","","",N,N],[17,"CLONE_DETACHED","","",N,N],[17,"CLONE_UNTRACED","","",N,N],[17,"CLONE_CHILD_SETTID","","",N,N],[17,"CLONE_NEWUTS","","",N,N],[17,"CLONE_NEWIPC","","",N,N],[17,"CLONE_NEWUSER","","",N,N],[17,"CLONE_NEWPID","","",N,N],[17,"CLONE_NEWNET","","",N,N],[17,"CLONE_IO","","",N,N],[17,"CLONE_NEWCGROUP","","",N,N],[17,"WNOHANG","","",N,N],[17,"WUNTRACED","","",N,N],[17,"WSTOPPED","","",N,N],[17,"WEXITED","","",N,N],[17,"WCONTINUED","","",N,N],[17,"WNOWAIT","","",N,N],[17,"PTRACE_O_TRACESYSGOOD","","",N,N],[17,"PTRACE_O_TRACEFORK","","",N,N],[17,"PTRACE_O_TRACEVFORK","","",N,N],[17,"PTRACE_O_TRACECLONE","","",N,N],[17,"PTRACE_O_TRACEEXEC","","",N,N],[17,"PTRACE_O_TRACEVFORKDONE","","",N,N],[17,"PTRACE_O_TRACEEXIT","","",N,N],[17,"PTRACE_O_TRACESECCOMP","","",N,N],[17,"PTRACE_O_EXITKILL","","",N,N],[17,"PTRACE_O_SUSPEND_SECCOMP","","",N,N],[17,"PTRACE_O_MASK","","",N,N],[17,"PTRACE_EVENT_FORK","","",N,N],[17,"PTRACE_EVENT_VFORK","","",N,N],[17,"PTRACE_EVENT_CLONE","","",N,N],[17,"PTRACE_EVENT_EXEC","","",N,N],[17,"PTRACE_EVENT_VFORK_DONE","","",N,N],[17,"PTRACE_EVENT_EXIT","","",N,N],[17,"PTRACE_EVENT_SECCOMP","","",N,N],[17,"__WNOTHREAD","","",N,N],[17,"__WALL","","",N,N],[17,"__WCLONE","","",N,N],[17,"SPLICE_F_MOVE","","",N,N],[17,"SPLICE_F_NONBLOCK","","",N,N],[17,"SPLICE_F_MORE","","",N,N],[17,"SPLICE_F_GIFT","","",N,N],[17,"RTLD_LOCAL","","",N,N],[17,"RTLD_LAZY","","",N,N],[17,"POSIX_FADV_NORMAL","","",N,N],[17,"POSIX_FADV_RANDOM","","",N,N],[17,"POSIX_FADV_SEQUENTIAL","","",N,N],[17,"POSIX_FADV_WILLNEED","","",N,N],[17,"AT_FDCWD","","",N,N],[17,"AT_SYMLINK_NOFOLLOW","","",N,N],[17,"AT_REMOVEDIR","","",N,N],[17,"AT_SYMLINK_FOLLOW","","",N,N],[17,"AT_NO_AUTOMOUNT","","",N,N],[17,"AT_EMPTY_PATH","","",N,N],[17,"LOG_CRON","","",N,N],[17,"LOG_AUTHPRIV","","",N,N],[17,"LOG_FTP","","",N,N],[17,"LOG_PERROR","","",N,N],[17,"PIPE_BUF","","",N,N],[17,"SI_LOAD_SHIFT","","",N,N],[17,"SIGEV_SIGNAL","","",N,N],[17,"SIGEV_NONE","","",N,N],[17,"SIGEV_THREAD","","",N,N],[17,"P_ALL","","",N,N],[17,"P_PID","","",N,N],[17,"P_PGID","","",N,N],[17,"UTIME_OMIT","","",N,N],[17,"UTIME_NOW","","",N,N],[17,"POLLIN","","",N,N],[17,"POLLPRI","","",N,N],[17,"POLLOUT","","",N,N],[17,"POLLERR","","",N,N],[17,"POLLHUP","","",N,N],[17,"POLLNVAL","","",N,N],[17,"POLLRDNORM","","",N,N],[17,"POLLRDBAND","","",N,N],[17,"IPTOS_LOWDELAY","","",N,N],[17,"IPTOS_THROUGHPUT","","",N,N],[17,"IPTOS_RELIABILITY","","",N,N],[17,"IPTOS_MINCOST","","",N,N],[17,"IPTOS_PREC_NETCONTROL","","",N,N],[17,"IPTOS_PREC_INTERNETCONTROL","","",N,N],[17,"IPTOS_PREC_CRITIC_ECP","","",N,N],[17,"IPTOS_PREC_FLASHOVERRIDE","","",N,N],[17,"IPTOS_PREC_FLASH","","",N,N],[17,"IPTOS_PREC_IMMEDIATE","","",N,N],[17,"IPTOS_PREC_PRIORITY","","",N,N],[17,"IPTOS_PREC_ROUTINE","","",N,N],[17,"IPOPT_COPY","","",N,N],[17,"IPOPT_CLASS_MASK","","",N,N],[17,"IPOPT_NUMBER_MASK","","",N,N],[17,"IPOPT_CONTROL","","",N,N],[17,"IPOPT_RESERVED1","","",N,N],[17,"IPOPT_MEASUREMENT","","",N,N],[17,"IPOPT_RESERVED2","","",N,N],[17,"IPOPT_END","","",N,N],[17,"IPOPT_NOOP","","",N,N],[17,"IPOPT_SEC","","",N,N],[17,"IPOPT_LSRR","","",N,N],[17,"IPOPT_TIMESTAMP","","",N,N],[17,"IPOPT_RR","","",N,N],[17,"IPOPT_SID","","",N,N],[17,"IPOPT_SSRR","","",N,N],[17,"IPOPT_RA","","",N,N],[17,"IPVERSION","","",N,N],[17,"MAXTTL","","",N,N],[17,"IPDEFTTL","","",N,N],[17,"IPOPT_OPTVAL","","",N,N],[17,"IPOPT_OLEN","","",N,N],[17,"IPOPT_OFFSET","","",N,N],[17,"IPOPT_MINOFF","","",N,N],[17,"MAX_IPOPTLEN","","",N,N],[17,"IPOPT_NOP","","",N,N],[17,"IPOPT_EOL","","",N,N],[17,"IPOPT_TS","","",N,N],[17,"IPOPT_TS_TSONLY","","",N,N],[17,"IPOPT_TS_TSANDADDR","","",N,N],[17,"IPOPT_TS_PRESPEC","","",N,N],[17,"ARPOP_RREQUEST","","",N,N],[17,"ARPOP_RREPLY","","",N,N],[17,"ARPOP_InREQUEST","","",N,N],[17,"ARPOP_InREPLY","","",N,N],[17,"ARPOP_NAK","","",N,N],[17,"ATF_NETMASK","","",N,N],[17,"ATF_DONTPUB","","",N,N],[17,"ARPHRD_NETROM","","",N,N],[17,"ARPHRD_ETHER","","",N,N],[17,"ARPHRD_EETHER","","",N,N],[17,"ARPHRD_AX25","","",N,N],[17,"ARPHRD_PRONET","","",N,N],[17,"ARPHRD_CHAOS","","",N,N],[17,"ARPHRD_IEEE802","","",N,N],[17,"ARPHRD_ARCNET","","",N,N],[17,"ARPHRD_APPLETLK","","",N,N],[17,"ARPHRD_DLCI","","",N,N],[17,"ARPHRD_ATM","","",N,N],[17,"ARPHRD_METRICOM","","",N,N],[17,"ARPHRD_IEEE1394","","",N,N],[17,"ARPHRD_EUI64","","",N,N],[17,"ARPHRD_INFINIBAND","","",N,N],[17,"ARPHRD_SLIP","","",N,N],[17,"ARPHRD_CSLIP","","",N,N],[17,"ARPHRD_SLIP6","","",N,N],[17,"ARPHRD_CSLIP6","","",N,N],[17,"ARPHRD_RSRVD","","",N,N],[17,"ARPHRD_ADAPT","","",N,N],[17,"ARPHRD_ROSE","","",N,N],[17,"ARPHRD_X25","","",N,N],[17,"ARPHRD_HWX25","","",N,N],[17,"ARPHRD_PPP","","",N,N],[17,"ARPHRD_CISCO","","",N,N],[17,"ARPHRD_HDLC","","",N,N],[17,"ARPHRD_LAPB","","",N,N],[17,"ARPHRD_DDCMP","","",N,N],[17,"ARPHRD_RAWHDLC","","",N,N],[17,"ARPHRD_TUNNEL","","",N,N],[17,"ARPHRD_TUNNEL6","","",N,N],[17,"ARPHRD_FRAD","","",N,N],[17,"ARPHRD_SKIP","","",N,N],[17,"ARPHRD_LOOPBACK","","",N,N],[17,"ARPHRD_LOCALTLK","","",N,N],[17,"ARPHRD_FDDI","","",N,N],[17,"ARPHRD_BIF","","",N,N],[17,"ARPHRD_SIT","","",N,N],[17,"ARPHRD_IPDDP","","",N,N],[17,"ARPHRD_IPGRE","","",N,N],[17,"ARPHRD_PIMREG","","",N,N],[17,"ARPHRD_HIPPI","","",N,N],[17,"ARPHRD_ASH","","",N,N],[17,"ARPHRD_ECONET","","",N,N],[17,"ARPHRD_IRDA","","",N,N],[17,"ARPHRD_FCPP","","",N,N],[17,"ARPHRD_FCAL","","",N,N],[17,"ARPHRD_FCPL","","",N,N],[17,"ARPHRD_FCFABRIC","","",N,N],[17,"ARPHRD_IEEE802_TR","","",N,N],[17,"ARPHRD_IEEE80211","","",N,N],[17,"ARPHRD_IEEE80211_PRISM","","",N,N],[17,"ARPHRD_IEEE80211_RADIOTAP","","",N,N],[17,"ARPHRD_IEEE802154","","",N,N],[17,"ARPHRD_VOID","","",N,N],[17,"ARPHRD_NONE","","",N,N],[17,"ABDAY_1","","",N,N],[17,"ABDAY_2","","",N,N],[17,"ABDAY_3","","",N,N],[17,"ABDAY_4","","",N,N],[17,"ABDAY_5","","",N,N],[17,"ABDAY_6","","",N,N],[17,"ABDAY_7","","",N,N],[17,"DAY_1","","",N,N],[17,"DAY_2","","",N,N],[17,"DAY_3","","",N,N],[17,"DAY_4","","",N,N],[17,"DAY_5","","",N,N],[17,"DAY_6","","",N,N],[17,"DAY_7","","",N,N],[17,"ABMON_1","","",N,N],[17,"ABMON_2","","",N,N],[17,"ABMON_3","","",N,N],[17,"ABMON_4","","",N,N],[17,"ABMON_5","","",N,N],[17,"ABMON_6","","",N,N],[17,"ABMON_7","","",N,N],[17,"ABMON_8","","",N,N],[17,"ABMON_9","","",N,N],[17,"ABMON_10","","",N,N],[17,"ABMON_11","","",N,N],[17,"ABMON_12","","",N,N],[17,"MON_1","","",N,N],[17,"MON_2","","",N,N],[17,"MON_3","","",N,N],[17,"MON_4","","",N,N],[17,"MON_5","","",N,N],[17,"MON_6","","",N,N],[17,"MON_7","","",N,N],[17,"MON_8","","",N,N],[17,"MON_9","","",N,N],[17,"MON_10","","",N,N],[17,"MON_11","","",N,N],[17,"MON_12","","",N,N],[17,"AM_STR","","",N,N],[17,"PM_STR","","",N,N],[17,"D_T_FMT","","",N,N],[17,"D_FMT","","",N,N],[17,"T_FMT","","",N,N],[17,"T_FMT_AMPM","","",N,N],[17,"ERA","","",N,N],[17,"ERA_D_FMT","","",N,N],[17,"ALT_DIGITS","","",N,N],[17,"ERA_D_T_FMT","","",N,N],[17,"ERA_T_FMT","","",N,N],[17,"CODESET","","",N,N],[17,"CRNCYSTR","","",N,N],[17,"RUSAGE_THREAD","","",N,N],[17,"RUSAGE_CHILDREN","","",N,N],[17,"RADIXCHAR","","",N,N],[17,"THOUSEP","","",N,N],[17,"YESEXPR","","",N,N],[17,"NOEXPR","","",N,N],[17,"YESSTR","","",N,N],[17,"NOSTR","","",N,N],[17,"FILENAME_MAX","","",N,N],[17,"L_tmpnam","","",N,N],[17,"_PC_LINK_MAX","","",N,N],[17,"_PC_MAX_CANON","","",N,N],[17,"_PC_MAX_INPUT","","",N,N],[17,"_PC_NAME_MAX","","",N,N],[17,"_PC_PATH_MAX","","",N,N],[17,"_PC_PIPE_BUF","","",N,N],[17,"_PC_CHOWN_RESTRICTED","","",N,N],[17,"_PC_NO_TRUNC","","",N,N],[17,"_PC_VDISABLE","","",N,N],[17,"_PC_SYNC_IO","","",N,N],[17,"_PC_ASYNC_IO","","",N,N],[17,"_PC_PRIO_IO","","",N,N],[17,"_PC_SOCK_MAXBUF","","",N,N],[17,"_PC_FILESIZEBITS","","",N,N],[17,"_PC_REC_INCR_XFER_SIZE","","",N,N],[17,"_PC_REC_MAX_XFER_SIZE","","",N,N],[17,"_PC_REC_MIN_XFER_SIZE","","",N,N],[17,"_PC_REC_XFER_ALIGN","","",N,N],[17,"_PC_ALLOC_SIZE_MIN","","",N,N],[17,"_PC_SYMLINK_MAX","","",N,N],[17,"_PC_2_SYMLINKS","","",N,N],[17,"_SC_ARG_MAX","","",N,N],[17,"_SC_CHILD_MAX","","",N,N],[17,"_SC_CLK_TCK","","",N,N],[17,"_SC_NGROUPS_MAX","","",N,N],[17,"_SC_OPEN_MAX","","",N,N],[17,"_SC_STREAM_MAX","","",N,N],[17,"_SC_TZNAME_MAX","","",N,N],[17,"_SC_JOB_CONTROL","","",N,N],[17,"_SC_SAVED_IDS","","",N,N],[17,"_SC_REALTIME_SIGNALS","","",N,N],[17,"_SC_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_TIMERS","","",N,N],[17,"_SC_ASYNCHRONOUS_IO","","",N,N],[17,"_SC_PRIORITIZED_IO","","",N,N],[17,"_SC_SYNCHRONIZED_IO","","",N,N],[17,"_SC_FSYNC","","",N,N],[17,"_SC_MAPPED_FILES","","",N,N],[17,"_SC_MEMLOCK","","",N,N],[17,"_SC_MEMLOCK_RANGE","","",N,N],[17,"_SC_MEMORY_PROTECTION","","",N,N],[17,"_SC_MESSAGE_PASSING","","",N,N],[17,"_SC_SEMAPHORES","","",N,N],[17,"_SC_SHARED_MEMORY_OBJECTS","","",N,N],[17,"_SC_AIO_LISTIO_MAX","","",N,N],[17,"_SC_AIO_MAX","","",N,N],[17,"_SC_AIO_PRIO_DELTA_MAX","","",N,N],[17,"_SC_DELAYTIMER_MAX","","",N,N],[17,"_SC_MQ_OPEN_MAX","","",N,N],[17,"_SC_MQ_PRIO_MAX","","",N,N],[17,"_SC_VERSION","","",N,N],[17,"_SC_PAGESIZE","","",N,N],[17,"_SC_PAGE_SIZE","","",N,N],[17,"_SC_RTSIG_MAX","","",N,N],[17,"_SC_SEM_NSEMS_MAX","","",N,N],[17,"_SC_SEM_VALUE_MAX","","",N,N],[17,"_SC_SIGQUEUE_MAX","","",N,N],[17,"_SC_TIMER_MAX","","",N,N],[17,"_SC_BC_BASE_MAX","","",N,N],[17,"_SC_BC_DIM_MAX","","",N,N],[17,"_SC_BC_SCALE_MAX","","",N,N],[17,"_SC_BC_STRING_MAX","","",N,N],[17,"_SC_COLL_WEIGHTS_MAX","","",N,N],[17,"_SC_EXPR_NEST_MAX","","",N,N],[17,"_SC_LINE_MAX","","",N,N],[17,"_SC_RE_DUP_MAX","","",N,N],[17,"_SC_2_VERSION","","",N,N],[17,"_SC_2_C_BIND","","",N,N],[17,"_SC_2_C_DEV","","",N,N],[17,"_SC_2_FORT_DEV","","",N,N],[17,"_SC_2_FORT_RUN","","",N,N],[17,"_SC_2_SW_DEV","","",N,N],[17,"_SC_2_LOCALEDEF","","",N,N],[17,"_SC_UIO_MAXIOV","","",N,N],[17,"_SC_IOV_MAX","","",N,N],[17,"_SC_THREADS","","",N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",N,N],[17,"_SC_GETGR_R_SIZE_MAX","","",N,N],[17,"_SC_GETPW_R_SIZE_MAX","","",N,N],[17,"_SC_LOGIN_NAME_MAX","","",N,N],[17,"_SC_TTY_NAME_MAX","","",N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",N,N],[17,"_SC_THREAD_KEYS_MAX","","",N,N],[17,"_SC_THREAD_STACK_MIN","","",N,N],[17,"_SC_THREAD_THREADS_MAX","","",N,N],[17,"_SC_THREAD_ATTR_STACKADDR","","",N,N],[17,"_SC_THREAD_ATTR_STACKSIZE","","",N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_THREAD_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_PRIO_PROTECT","","",N,N],[17,"_SC_THREAD_PROCESS_SHARED","","",N,N],[17,"_SC_NPROCESSORS_CONF","","",N,N],[17,"_SC_NPROCESSORS_ONLN","","",N,N],[17,"_SC_PHYS_PAGES","","",N,N],[17,"_SC_AVPHYS_PAGES","","",N,N],[17,"_SC_ATEXIT_MAX","","",N,N],[17,"_SC_PASS_MAX","","",N,N],[17,"_SC_XOPEN_VERSION","","",N,N],[17,"_SC_XOPEN_XCU_VERSION","","",N,N],[17,"_SC_XOPEN_UNIX","","",N,N],[17,"_SC_XOPEN_CRYPT","","",N,N],[17,"_SC_XOPEN_ENH_I18N","","",N,N],[17,"_SC_XOPEN_SHM","","",N,N],[17,"_SC_2_CHAR_TERM","","",N,N],[17,"_SC_2_UPE","","",N,N],[17,"_SC_XOPEN_XPG2","","",N,N],[17,"_SC_XOPEN_XPG3","","",N,N],[17,"_SC_XOPEN_XPG4","","",N,N],[17,"_SC_NZERO","","",N,N],[17,"_SC_XBS5_ILP32_OFF32","","",N,N],[17,"_SC_XBS5_ILP32_OFFBIG","","",N,N],[17,"_SC_XBS5_LP64_OFF64","","",N,N],[17,"_SC_XBS5_LPBIG_OFFBIG","","",N,N],[17,"_SC_XOPEN_LEGACY","","",N,N],[17,"_SC_XOPEN_REALTIME","","",N,N],[17,"_SC_XOPEN_REALTIME_THREADS","","",N,N],[17,"_SC_ADVISORY_INFO","","",N,N],[17,"_SC_BARRIERS","","",N,N],[17,"_SC_CLOCK_SELECTION","","",N,N],[17,"_SC_CPUTIME","","",N,N],[17,"_SC_THREAD_CPUTIME","","",N,N],[17,"_SC_MONOTONIC_CLOCK","","",N,N],[17,"_SC_READER_WRITER_LOCKS","","",N,N],[17,"_SC_SPIN_LOCKS","","",N,N],[17,"_SC_REGEXP","","",N,N],[17,"_SC_SHELL","","",N,N],[17,"_SC_SPAWN","","",N,N],[17,"_SC_SPORADIC_SERVER","","",N,N],[17,"_SC_THREAD_SPORADIC_SERVER","","",N,N],[17,"_SC_TIMEOUTS","","",N,N],[17,"_SC_TYPED_MEMORY_OBJECTS","","",N,N],[17,"_SC_2_PBS","","",N,N],[17,"_SC_2_PBS_ACCOUNTING","","",N,N],[17,"_SC_2_PBS_LOCATE","","",N,N],[17,"_SC_2_PBS_MESSAGE","","",N,N],[17,"_SC_2_PBS_TRACK","","",N,N],[17,"_SC_SYMLOOP_MAX","","",N,N],[17,"_SC_STREAMS","","",N,N],[17,"_SC_2_PBS_CHECKPOINT","","",N,N],[17,"_SC_V6_ILP32_OFF32","","",N,N],[17,"_SC_V6_ILP32_OFFBIG","","",N,N],[17,"_SC_V6_LP64_OFF64","","",N,N],[17,"_SC_V6_LPBIG_OFFBIG","","",N,N],[17,"_SC_HOST_NAME_MAX","","",N,N],[17,"_SC_TRACE","","",N,N],[17,"_SC_TRACE_EVENT_FILTER","","",N,N],[17,"_SC_TRACE_INHERIT","","",N,N],[17,"_SC_TRACE_LOG","","",N,N],[17,"_SC_IPV6","","",N,N],[17,"_SC_RAW_SOCKETS","","",N,N],[17,"_SC_V7_ILP32_OFF32","","",N,N],[17,"_SC_V7_ILP32_OFFBIG","","",N,N],[17,"_SC_V7_LP64_OFF64","","",N,N],[17,"_SC_V7_LPBIG_OFFBIG","","",N,N],[17,"_SC_SS_REPL_MAX","","",N,N],[17,"_SC_TRACE_EVENT_NAME_MAX","","",N,N],[17,"_SC_TRACE_NAME_MAX","","",N,N],[17,"_SC_TRACE_SYS_MAX","","",N,N],[17,"_SC_TRACE_USER_EVENT_MAX","","",N,N],[17,"_SC_XOPEN_STREAMS","","",N,N],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",N,N],[17,"RLIM_SAVED_MAX","","",N,N],[17,"RLIM_SAVED_CUR","","",N,N],[17,"GLOB_ERR","","",N,N],[17,"GLOB_MARK","","",N,N],[17,"GLOB_NOSORT","","",N,N],[17,"GLOB_DOOFFS","","",N,N],[17,"GLOB_NOCHECK","","",N,N],[17,"GLOB_APPEND","","",N,N],[17,"GLOB_NOESCAPE","","",N,N],[17,"GLOB_NOSPACE","","",N,N],[17,"GLOB_ABORTED","","",N,N],[17,"GLOB_NOMATCH","","",N,N],[17,"POSIX_MADV_NORMAL","","",N,N],[17,"POSIX_MADV_RANDOM","","",N,N],[17,"POSIX_MADV_SEQUENTIAL","","",N,N],[17,"POSIX_MADV_WILLNEED","","",N,N],[17,"S_IEXEC","","",N,N],[17,"S_IWRITE","","",N,N],[17,"S_IREAD","","",N,N],[17,"F_LOCK","","",N,N],[17,"F_TEST","","",N,N],[17,"F_TLOCK","","",N,N],[17,"F_ULOCK","","",N,N],[17,"IFF_LOWER_UP","","",N,N],[17,"IFF_DORMANT","","",N,N],[17,"IFF_ECHO","","",N,N],[17,"IFF_TUN","","",N,N],[17,"IFF_TAP","","",N,N],[17,"IFF_NO_PI","","",N,N],[17,"TUN_READQ_SIZE","","",N,N],[17,"TUN_TUN_DEV","","",N,N],[17,"TUN_TAP_DEV","","",N,N],[17,"TUN_TYPE_MASK","","",N,N],[17,"IFF_ONE_QUEUE","","",N,N],[17,"IFF_VNET_HDR","","",N,N],[17,"IFF_TUN_EXCL","","",N,N],[17,"IFF_MULTI_QUEUE","","",N,N],[17,"IFF_ATTACH_QUEUE","","",N,N],[17,"IFF_DETACH_QUEUE","","",N,N],[17,"IFF_PERSIST","","",N,N],[17,"IFF_NOFILTER","","",N,N],[17,"ST_RDONLY","","",N,N],[17,"ST_NOSUID","","",N,N],[17,"ST_NODEV","","",N,N],[17,"ST_NOEXEC","","",N,N],[17,"ST_SYNCHRONOUS","","",N,N],[17,"ST_MANDLOCK","","",N,N],[17,"ST_WRITE","","",N,N],[17,"ST_APPEND","","",N,N],[17,"ST_IMMUTABLE","","",N,N],[17,"ST_NOATIME","","",N,N],[17,"ST_NODIRATIME","","",N,N],[17,"RTLD_NEXT","","",N,N],[17,"RTLD_DEFAULT","","",N,N],[17,"RTLD_NODELETE","","",N,N],[17,"RTLD_NOW","","",N,N],[17,"TCP_MD5SIG","","",N,N],[17,"PTHREAD_MUTEX_INITIALIZER","","",N,N],[17,"PTHREAD_COND_INITIALIZER","","",N,N],[17,"PTHREAD_RWLOCK_INITIALIZER","","",N,N],[17,"PTHREAD_MUTEX_NORMAL","","",N,N],[17,"PTHREAD_MUTEX_RECURSIVE","","",N,N],[17,"PTHREAD_MUTEX_ERRORCHECK","","",N,N],[17,"PTHREAD_MUTEX_DEFAULT","","",N,N],[17,"PTHREAD_PROCESS_PRIVATE","","",N,N],[17,"PTHREAD_PROCESS_SHARED","","",N,N],[17,"__SIZEOF_PTHREAD_COND_T","","",N,N],[17,"RENAME_NOREPLACE","","",N,N],[17,"RENAME_EXCHANGE","","",N,N],[17,"RENAME_WHITEOUT","","",N,N],[17,"SCHED_OTHER","","",N,N],[17,"SCHED_FIFO","","",N,N],[17,"SCHED_RR","","",N,N],[17,"SCHED_BATCH","","",N,N],[17,"SCHED_IDLE","","",N,N],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",N,N],[17,"IPPROTO_IGMP","","group mgmt protocol",N,N],[17,"IPPROTO_IPIP","","for compatibility",N,N],[17,"IPPROTO_EGP","","exterior gateway protocol",N,N],[17,"IPPROTO_PUP","","pup",N,N],[17,"IPPROTO_IDP","","xns idp",N,N],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",N,N],[17,"IPPROTO_DCCP","","DCCP",N,N],[17,"IPPROTO_ROUTING","","IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",N,N],[17,"IPPROTO_RSVP","","resource reservation",N,N],[17,"IPPROTO_GRE","","General Routing Encap.",N,N],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH","","IP6 Auth Header",N,N],[17,"IPPROTO_NONE","","IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS","","IP6 destination option",N,N],[17,"IPPROTO_MTP","","",N,N],[17,"IPPROTO_BEETPH","","",N,N],[17,"IPPROTO_ENCAP","","encapsulation header",N,N],[17,"IPPROTO_PIM","","Protocol indep. multicast",N,N],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",N,N],[17,"IPPROTO_SCTP","","SCTP",N,N],[17,"IPPROTO_MH","","",N,N],[17,"IPPROTO_UDPLITE","","",N,N],[17,"IPPROTO_MPLS","","",N,N],[17,"IPPROTO_RAW","","raw IP packet",N,N],[17,"IPPROTO_MAX","","",N,N],[17,"AF_IB","","",N,N],[17,"AF_MPLS","","",N,N],[17,"AF_NFC","","",N,N],[17,"AF_VSOCK","","",N,N],[17,"AF_XDP","","",N,N],[17,"PF_IB","","",N,N],[17,"PF_MPLS","","",N,N],[17,"PF_NFC","","",N,N],[17,"PF_VSOCK","","",N,N],[17,"PF_XDP","","",N,N],[17,"IPC_PRIVATE","","",N,N],[17,"IPC_CREAT","","",N,N],[17,"IPC_EXCL","","",N,N],[17,"IPC_NOWAIT","","",N,N],[17,"IPC_RMID","","",N,N],[17,"IPC_SET","","",N,N],[17,"IPC_STAT","","",N,N],[17,"IPC_INFO","","",N,N],[17,"MSG_STAT","","",N,N],[17,"MSG_INFO","","",N,N],[17,"MSG_NOERROR","","",N,N],[17,"MSG_EXCEPT","","",N,N],[17,"MSG_COPY","","",N,N],[17,"SHM_R","","",N,N],[17,"SHM_W","","",N,N],[17,"SHM_RDONLY","","",N,N],[17,"SHM_RND","","",N,N],[17,"SHM_REMAP","","",N,N],[17,"SHM_EXEC","","",N,N],[17,"SHM_LOCK","","",N,N],[17,"SHM_UNLOCK","","",N,N],[17,"SHM_HUGETLB","","",N,N],[17,"SHM_NORESERVE","","",N,N],[17,"EPOLLRDHUP","","",N,N],[17,"EPOLLEXCLUSIVE","","",N,N],[17,"EPOLLONESHOT","","",N,N],[17,"QFMT_VFS_OLD","","",N,N],[17,"QFMT_VFS_V0","","",N,N],[17,"QFMT_VFS_V1","","",N,N],[17,"EFD_SEMAPHORE","","",N,N],[17,"LOG_NFACILITIES","","",N,N],[17,"SEM_FAILED","","",N,N],[17,"RB_AUTOBOOT","","",N,N],[17,"RB_HALT_SYSTEM","","",N,N],[17,"RB_ENABLE_CAD","","",N,N],[17,"RB_DISABLE_CAD","","",N,N],[17,"RB_POWER_OFF","","",N,N],[17,"RB_SW_SUSPEND","","",N,N],[17,"RB_KEXEC","","",N,N],[17,"AI_PASSIVE","","",N,N],[17,"AI_CANONNAME","","",N,N],[17,"AI_NUMERICHOST","","",N,N],[17,"AI_V4MAPPED","","",N,N],[17,"AI_ALL","","",N,N],[17,"AI_ADDRCONFIG","","",N,N],[17,"AI_NUMERICSERV","","",N,N],[17,"EAI_BADFLAGS","","",N,N],[17,"EAI_NONAME","","",N,N],[17,"EAI_AGAIN","","",N,N],[17,"EAI_FAIL","","",N,N],[17,"EAI_NODATA","","",N,N],[17,"EAI_FAMILY","","",N,N],[17,"EAI_SOCKTYPE","","",N,N],[17,"EAI_SERVICE","","",N,N],[17,"EAI_MEMORY","","",N,N],[17,"EAI_SYSTEM","","",N,N],[17,"EAI_OVERFLOW","","",N,N],[17,"NI_NUMERICHOST","","",N,N],[17,"NI_NUMERICSERV","","",N,N],[17,"NI_NOFQDN","","",N,N],[17,"NI_NAMEREQD","","",N,N],[17,"NI_DGRAM","","",N,N],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",N,N],[17,"SYNC_FILE_RANGE_WRITE","","",N,N],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",N,N],[17,"AIO_CANCELED","","",N,N],[17,"AIO_NOTCANCELED","","",N,N],[17,"AIO_ALLDONE","","",N,N],[17,"LIO_READ","","",N,N],[17,"LIO_WRITE","","",N,N],[17,"LIO_NOP","","",N,N],[17,"LIO_WAIT","","",N,N],[17,"LIO_NOWAIT","","",N,N],[17,"MREMAP_MAYMOVE","","",N,N],[17,"MREMAP_FIXED","","",N,N],[17,"PR_SET_PDEATHSIG","","",N,N],[17,"PR_GET_PDEATHSIG","","",N,N],[17,"PR_GET_DUMPABLE","","",N,N],[17,"PR_SET_DUMPABLE","","",N,N],[17,"PR_GET_UNALIGN","","",N,N],[17,"PR_SET_UNALIGN","","",N,N],[17,"PR_UNALIGN_NOPRINT","","",N,N],[17,"PR_UNALIGN_SIGBUS","","",N,N],[17,"PR_GET_KEEPCAPS","","",N,N],[17,"PR_SET_KEEPCAPS","","",N,N],[17,"PR_GET_FPEMU","","",N,N],[17,"PR_SET_FPEMU","","",N,N],[17,"PR_FPEMU_NOPRINT","","",N,N],[17,"PR_FPEMU_SIGFPE","","",N,N],[17,"PR_GET_FPEXC","","",N,N],[17,"PR_SET_FPEXC","","",N,N],[17,"PR_FP_EXC_SW_ENABLE","","",N,N],[17,"PR_FP_EXC_DIV","","",N,N],[17,"PR_FP_EXC_OVF","","",N,N],[17,"PR_FP_EXC_UND","","",N,N],[17,"PR_FP_EXC_RES","","",N,N],[17,"PR_FP_EXC_INV","","",N,N],[17,"PR_FP_EXC_DISABLED","","",N,N],[17,"PR_FP_EXC_NONRECOV","","",N,N],[17,"PR_FP_EXC_ASYNC","","",N,N],[17,"PR_FP_EXC_PRECISE","","",N,N],[17,"PR_GET_TIMING","","",N,N],[17,"PR_SET_TIMING","","",N,N],[17,"PR_TIMING_STATISTICAL","","",N,N],[17,"PR_TIMING_TIMESTAMP","","",N,N],[17,"PR_SET_NAME","","",N,N],[17,"PR_GET_NAME","","",N,N],[17,"PR_GET_ENDIAN","","",N,N],[17,"PR_SET_ENDIAN","","",N,N],[17,"PR_ENDIAN_BIG","","",N,N],[17,"PR_ENDIAN_LITTLE","","",N,N],[17,"PR_ENDIAN_PPC_LITTLE","","",N,N],[17,"PR_GET_SECCOMP","","",N,N],[17,"PR_SET_SECCOMP","","",N,N],[17,"PR_CAPBSET_READ","","",N,N],[17,"PR_CAPBSET_DROP","","",N,N],[17,"PR_GET_TSC","","",N,N],[17,"PR_SET_TSC","","",N,N],[17,"PR_TSC_ENABLE","","",N,N],[17,"PR_TSC_SIGSEGV","","",N,N],[17,"PR_GET_SECUREBITS","","",N,N],[17,"PR_SET_SECUREBITS","","",N,N],[17,"PR_SET_TIMERSLACK","","",N,N],[17,"PR_GET_TIMERSLACK","","",N,N],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",N,N],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",N,N],[17,"PR_MCE_KILL","","",N,N],[17,"PR_MCE_KILL_CLEAR","","",N,N],[17,"PR_MCE_KILL_SET","","",N,N],[17,"PR_MCE_KILL_LATE","","",N,N],[17,"PR_MCE_KILL_EARLY","","",N,N],[17,"PR_MCE_KILL_DEFAULT","","",N,N],[17,"PR_MCE_KILL_GET","","",N,N],[17,"PR_SET_MM","","",N,N],[17,"PR_SET_MM_START_CODE","","",N,N],[17,"PR_SET_MM_END_CODE","","",N,N],[17,"PR_SET_MM_START_DATA","","",N,N],[17,"PR_SET_MM_END_DATA","","",N,N],[17,"PR_SET_MM_START_STACK","","",N,N],[17,"PR_SET_MM_START_BRK","","",N,N],[17,"PR_SET_MM_BRK","","",N,N],[17,"PR_SET_MM_ARG_START","","",N,N],[17,"PR_SET_MM_ARG_END","","",N,N],[17,"PR_SET_MM_ENV_START","","",N,N],[17,"PR_SET_MM_ENV_END","","",N,N],[17,"PR_SET_MM_AUXV","","",N,N],[17,"PR_SET_MM_EXE_FILE","","",N,N],[17,"PR_SET_MM_MAP","","",N,N],[17,"PR_SET_MM_MAP_SIZE","","",N,N],[17,"PR_SET_PTRACER","","",N,N],[17,"PR_SET_CHILD_SUBREAPER","","",N,N],[17,"PR_GET_CHILD_SUBREAPER","","",N,N],[17,"PR_SET_NO_NEW_PRIVS","","",N,N],[17,"PR_GET_NO_NEW_PRIVS","","",N,N],[17,"PR_GET_TID_ADDRESS","","",N,N],[17,"PR_SET_THP_DISABLE","","",N,N],[17,"PR_GET_THP_DISABLE","","",N,N],[17,"PR_MPX_ENABLE_MANAGEMENT","","",N,N],[17,"PR_MPX_DISABLE_MANAGEMENT","","",N,N],[17,"PR_SET_FP_MODE","","",N,N],[17,"PR_GET_FP_MODE","","",N,N],[17,"PR_FP_MODE_FR","","",N,N],[17,"PR_FP_MODE_FRE","","",N,N],[17,"PR_CAP_AMBIENT","","",N,N],[17,"PR_CAP_AMBIENT_IS_SET","","",N,N],[17,"PR_CAP_AMBIENT_RAISE","","",N,N],[17,"PR_CAP_AMBIENT_LOWER","","",N,N],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",N,N],[17,"GRND_NONBLOCK","","",N,N],[17,"GRND_RANDOM","","",N,N],[17,"SECCOMP_MODE_DISABLED","","",N,N],[17,"SECCOMP_MODE_STRICT","","",N,N],[17,"SECCOMP_MODE_FILTER","","",N,N],[17,"ITIMER_REAL","","",N,N],[17,"ITIMER_VIRTUAL","","",N,N],[17,"ITIMER_PROF","","",N,N],[17,"TFD_CLOEXEC","","",N,N],[17,"TFD_NONBLOCK","","",N,N],[17,"TFD_TIMER_ABSTIME","","",N,N],[17,"XATTR_CREATE","","",N,N],[17,"XATTR_REPLACE","","",N,N],[17,"_POSIX_VDISABLE","","",N,N],[17,"FALLOC_FL_KEEP_SIZE","","",N,N],[17,"FALLOC_FL_PUNCH_HOLE","","",N,N],[17,"FALLOC_FL_COLLAPSE_RANGE","","",N,N],[17,"FALLOC_FL_ZERO_RANGE","","",N,N],[17,"FALLOC_FL_INSERT_RANGE","","",N,N],[17,"FALLOC_FL_UNSHARE_RANGE","","",N,N],[17,"ENOATTR","","",N,N],[17,"SO_ORIGINAL_DST","","",N,N],[17,"IUTF8","","",N,N],[17,"CMSPAR","","",N,N],[17,"MFD_CLOEXEC","","",N,N],[17,"MFD_ALLOW_SEALING","","",N,N],[17,"PT_NULL","","",N,N],[17,"PT_LOAD","","",N,N],[17,"PT_DYNAMIC","","",N,N],[17,"PT_INTERP","","",N,N],[17,"PT_NOTE","","",N,N],[17,"PT_SHLIB","","",N,N],[17,"PT_PHDR","","",N,N],[17,"PT_TLS","","",N,N],[17,"PT_NUM","","",N,N],[17,"PT_LOOS","","",N,N],[17,"PT_GNU_EH_FRAME","","",N,N],[17,"PT_GNU_STACK","","",N,N],[17,"PT_GNU_RELRO","","",N,N],[17,"ETH_ALEN","","",N,N],[17,"ETH_HLEN","","",N,N],[17,"ETH_ZLEN","","",N,N],[17,"ETH_DATA_LEN","","",N,N],[17,"ETH_FRAME_LEN","","",N,N],[17,"ETH_FCS_LEN","","",N,N],[17,"ETH_P_LOOP","","",N,N],[17,"ETH_P_PUP","","",N,N],[17,"ETH_P_PUPAT","","",N,N],[17,"ETH_P_IP","","",N,N],[17,"ETH_P_X25","","",N,N],[17,"ETH_P_ARP","","",N,N],[17,"ETH_P_BPQ","","",N,N],[17,"ETH_P_IEEEPUP","","",N,N],[17,"ETH_P_IEEEPUPAT","","",N,N],[17,"ETH_P_BATMAN","","",N,N],[17,"ETH_P_DEC","","",N,N],[17,"ETH_P_DNA_DL","","",N,N],[17,"ETH_P_DNA_RC","","",N,N],[17,"ETH_P_DNA_RT","","",N,N],[17,"ETH_P_LAT","","",N,N],[17,"ETH_P_DIAG","","",N,N],[17,"ETH_P_CUST","","",N,N],[17,"ETH_P_SCA","","",N,N],[17,"ETH_P_TEB","","",N,N],[17,"ETH_P_RARP","","",N,N],[17,"ETH_P_ATALK","","",N,N],[17,"ETH_P_AARP","","",N,N],[17,"ETH_P_8021Q","","",N,N],[17,"ETH_P_IPX","","",N,N],[17,"ETH_P_IPV6","","",N,N],[17,"ETH_P_PAUSE","","",N,N],[17,"ETH_P_SLOW","","",N,N],[17,"ETH_P_WCCP","","",N,N],[17,"ETH_P_MPLS_UC","","",N,N],[17,"ETH_P_MPLS_MC","","",N,N],[17,"ETH_P_ATMMPOA","","",N,N],[17,"ETH_P_PPP_DISC","","",N,N],[17,"ETH_P_PPP_SES","","",N,N],[17,"ETH_P_LINK_CTL","","",N,N],[17,"ETH_P_ATMFATE","","",N,N],[17,"ETH_P_PAE","","",N,N],[17,"ETH_P_AOE","","",N,N],[17,"ETH_P_8021AD","","",N,N],[17,"ETH_P_802_EX1","","",N,N],[17,"ETH_P_TIPC","","",N,N],[17,"ETH_P_MACSEC","","",N,N],[17,"ETH_P_8021AH","","",N,N],[17,"ETH_P_MVRP","","",N,N],[17,"ETH_P_1588","","",N,N],[17,"ETH_P_PRP","","",N,N],[17,"ETH_P_FCOE","","",N,N],[17,"ETH_P_TDLS","","",N,N],[17,"ETH_P_FIP","","",N,N],[17,"ETH_P_80221","","",N,N],[17,"ETH_P_LOOPBACK","","",N,N],[17,"ETH_P_QINQ1","","",N,N],[17,"ETH_P_QINQ2","","",N,N],[17,"ETH_P_QINQ3","","",N,N],[17,"ETH_P_EDSA","","",N,N],[17,"ETH_P_AF_IUCV","","",N,N],[17,"ETH_P_802_3_MIN","","",N,N],[17,"ETH_P_802_3","","",N,N],[17,"ETH_P_AX25","","",N,N],[17,"ETH_P_ALL","","",N,N],[17,"ETH_P_802_2","","",N,N],[17,"ETH_P_SNAP","","",N,N],[17,"ETH_P_DDCMP","","",N,N],[17,"ETH_P_WAN_PPP","","",N,N],[17,"ETH_P_PPP_MP","","",N,N],[17,"ETH_P_LOCALTALK","","",N,N],[17,"ETH_P_CANFD","","",N,N],[17,"ETH_P_PPPTALK","","",N,N],[17,"ETH_P_TR_802_2","","",N,N],[17,"ETH_P_MOBITEX","","",N,N],[17,"ETH_P_CONTROL","","",N,N],[17,"ETH_P_IRDA","","",N,N],[17,"ETH_P_ECONET","","",N,N],[17,"ETH_P_HDLC","","",N,N],[17,"ETH_P_ARCNET","","",N,N],[17,"ETH_P_DSA","","",N,N],[17,"ETH_P_TRAILER","","",N,N],[17,"ETH_P_PHONET","","",N,N],[17,"ETH_P_IEEE802154","","",N,N],[17,"ETH_P_CAIF","","",N,N],[17,"POSIX_SPAWN_RESETIDS","","",N,N],[17,"POSIX_SPAWN_SETPGROUP","","",N,N],[17,"POSIX_SPAWN_SETSIGDEF","","",N,N],[17,"POSIX_SPAWN_SETSIGMASK","","",N,N],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",N,N],[17,"POSIX_SPAWN_SETSCHEDULER","","",N,N],[17,"NLMSG_NOOP","","",N,N],[17,"NLMSG_ERROR","","",N,N],[17,"NLMSG_DONE","","",N,N],[17,"NLMSG_OVERRUN","","",N,N],[17,"NLMSG_MIN_TYPE","","",N,N],[17,"GENL_NAMSIZ","","",N,N],[17,"GENL_MIN_ID","","",N,N],[17,"GENL_MAX_ID","","",N,N],[17,"GENL_ADMIN_PERM","","",N,N],[17,"GENL_CMD_CAP_DO","","",N,N],[17,"GENL_CMD_CAP_DUMP","","",N,N],[17,"GENL_CMD_CAP_HASPOL","","",N,N],[17,"GENL_ID_CTRL","","",N,N],[17,"CTRL_CMD_UNSPEC","","",N,N],[17,"CTRL_CMD_NEWFAMILY","","",N,N],[17,"CTRL_CMD_DELFAMILY","","",N,N],[17,"CTRL_CMD_GETFAMILY","","",N,N],[17,"CTRL_CMD_NEWOPS","","",N,N],[17,"CTRL_CMD_DELOPS","","",N,N],[17,"CTRL_CMD_GETOPS","","",N,N],[17,"CTRL_CMD_NEWMCAST_GRP","","",N,N],[17,"CTRL_CMD_DELMCAST_GRP","","",N,N],[17,"CTRL_CMD_GETMCAST_GRP","","",N,N],[17,"CTRL_ATTR_UNSPEC","","",N,N],[17,"CTRL_ATTR_FAMILY_ID","","",N,N],[17,"CTRL_ATTR_FAMILY_NAME","","",N,N],[17,"CTRL_ATTR_VERSION","","",N,N],[17,"CTRL_ATTR_HDRSIZE","","",N,N],[17,"CTRL_ATTR_MAXATTR","","",N,N],[17,"CTRL_ATTR_OPS","","",N,N],[17,"CTRL_ATTR_MCAST_GROUPS","","",N,N],[17,"CTRL_ATTR_OP_UNSPEC","","",N,N],[17,"CTRL_ATTR_OP_ID","","",N,N],[17,"CTRL_ATTR_OP_FLAGS","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_ID","","",N,N],[17,"PACKET_ADD_MEMBERSHIP","","",N,N],[17,"PACKET_DROP_MEMBERSHIP","","",N,N],[17,"PACKET_MR_MULTICAST","","",N,N],[17,"PACKET_MR_PROMISC","","",N,N],[17,"PACKET_MR_ALLMULTI","","",N,N],[17,"PACKET_MR_UNICAST","","",N,N],[17,"NF_DROP","","",N,N],[17,"NF_ACCEPT","","",N,N],[17,"NF_STOLEN","","",N,N],[17,"NF_QUEUE","","",N,N],[17,"NF_REPEAT","","",N,N],[17,"NF_STOP","","",N,N],[17,"NF_MAX_VERDICT","","",N,N],[17,"NF_VERDICT_MASK","","",N,N],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",N,N],[17,"NF_VERDICT_QMASK","","",N,N],[17,"NF_VERDICT_QBITS","","",N,N],[17,"NF_VERDICT_BITS","","",N,N],[17,"NF_INET_PRE_ROUTING","","",N,N],[17,"NF_INET_LOCAL_IN","","",N,N],[17,"NF_INET_FORWARD","","",N,N],[17,"NF_INET_LOCAL_OUT","","",N,N],[17,"NF_INET_POST_ROUTING","","",N,N],[17,"NF_INET_NUMHOOKS","","",N,N],[17,"NFPROTO_UNSPEC","","",N,N],[17,"NFPROTO_IPV4","","",N,N],[17,"NFPROTO_ARP","","",N,N],[17,"NFPROTO_BRIDGE","","",N,N],[17,"NFPROTO_IPV6","","",N,N],[17,"NFPROTO_DECNET","","",N,N],[17,"NFPROTO_NUMPROTO","","",N,N],[17,"NF_IP_PRE_ROUTING","","",N,N],[17,"NF_IP_LOCAL_IN","","",N,N],[17,"NF_IP_FORWARD","","",N,N],[17,"NF_IP_LOCAL_OUT","","",N,N],[17,"NF_IP_POST_ROUTING","","",N,N],[17,"NF_IP_NUMHOOKS","","",N,N],[17,"NF_IP_PRI_FIRST","","",N,N],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",N,N],[17,"NF_IP_PRI_RAW","","",N,N],[17,"NF_IP_PRI_SELINUX_FIRST","","",N,N],[17,"NF_IP_PRI_CONNTRACK","","",N,N],[17,"NF_IP_PRI_MANGLE","","",N,N],[17,"NF_IP_PRI_NAT_DST","","",N,N],[17,"NF_IP_PRI_FILTER","","",N,N],[17,"NF_IP_PRI_SECURITY","","",N,N],[17,"NF_IP_PRI_NAT_SRC","","",N,N],[17,"NF_IP_PRI_SELINUX_LAST","","",N,N],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",N,N],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",N,N],[17,"NF_IP_PRI_LAST","","",N,N],[17,"NF_IP6_PRE_ROUTING","","",N,N],[17,"NF_IP6_LOCAL_IN","","",N,N],[17,"NF_IP6_FORWARD","","",N,N],[17,"NF_IP6_LOCAL_OUT","","",N,N],[17,"NF_IP6_POST_ROUTING","","",N,N],[17,"NF_IP6_NUMHOOKS","","",N,N],[17,"NF_IP6_PRI_FIRST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",N,N],[17,"NF_IP6_PRI_RAW","","",N,N],[17,"NF_IP6_PRI_SELINUX_FIRST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK","","",N,N],[17,"NF_IP6_PRI_MANGLE","","",N,N],[17,"NF_IP6_PRI_NAT_DST","","",N,N],[17,"NF_IP6_PRI_FILTER","","",N,N],[17,"NF_IP6_PRI_SECURITY","","",N,N],[17,"NF_IP6_PRI_NAT_SRC","","",N,N],[17,"NF_IP6_PRI_SELINUX_LAST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",N,N],[17,"NF_IP6_PRI_LAST","","",N,N],[17,"SIOCADDRT","","",N,N],[17,"SIOCDELRT","","",N,N],[17,"SIOCGIFNAME","","",N,N],[17,"SIOCSIFLINK","","",N,N],[17,"SIOCGIFCONF","","",N,N],[17,"SIOCGIFFLAGS","","",N,N],[17,"SIOCSIFFLAGS","","",N,N],[17,"SIOCGIFADDR","","",N,N],[17,"SIOCSIFADDR","","",N,N],[17,"SIOCGIFDSTADDR","","",N,N],[17,"SIOCSIFDSTADDR","","",N,N],[17,"SIOCGIFBRDADDR","","",N,N],[17,"SIOCSIFBRDADDR","","",N,N],[17,"SIOCGIFNETMASK","","",N,N],[17,"SIOCSIFNETMASK","","",N,N],[17,"SIOCGIFMETRIC","","",N,N],[17,"SIOCSIFMETRIC","","",N,N],[17,"SIOCGIFMEM","","",N,N],[17,"SIOCSIFMEM","","",N,N],[17,"SIOCGIFMTU","","",N,N],[17,"SIOCSIFMTU","","",N,N],[17,"SIOCSIFHWADDR","","",N,N],[17,"SIOCGIFENCAP","","",N,N],[17,"SIOCSIFENCAP","","",N,N],[17,"SIOCGIFHWADDR","","",N,N],[17,"SIOCGIFSLAVE","","",N,N],[17,"SIOCSIFSLAVE","","",N,N],[17,"SIOCADDMULTI","","",N,N],[17,"SIOCDELMULTI","","",N,N],[17,"SIOCDARP","","",N,N],[17,"SIOCGARP","","",N,N],[17,"SIOCSARP","","",N,N],[17,"SIOCDRARP","","",N,N],[17,"SIOCGRARP","","",N,N],[17,"SIOCSRARP","","",N,N],[17,"SIOCGIFMAP","","",N,N],[17,"SIOCSIFMAP","","",N,N],[17,"IPTOS_TOS_MASK","","",N,N],[17,"IPTOS_PREC_MASK","","",N,N],[17,"RTF_UP","","",N,N],[17,"RTF_GATEWAY","","",N,N],[17,"RTF_HOST","","",N,N],[17,"RTF_REINSTATE","","",N,N],[17,"RTF_DYNAMIC","","",N,N],[17,"RTF_MODIFIED","","",N,N],[17,"RTF_MTU","","",N,N],[17,"RTF_MSS","","",N,N],[17,"RTF_WINDOW","","",N,N],[17,"RTF_IRTT","","",N,N],[17,"RTF_REJECT","","",N,N],[17,"RTF_STATIC","","",N,N],[17,"RTF_XRESOLVE","","",N,N],[17,"RTF_NOFORWARD","","",N,N],[17,"RTF_THROW","","",N,N],[17,"RTF_NOPMTUDISC","","",N,N],[17,"RTF_DEFAULT","","",N,N],[17,"RTF_ALLONLINK","","",N,N],[17,"RTF_ADDRCONF","","",N,N],[17,"RTF_LINKRT","","",N,N],[17,"RTF_NONEXTHOP","","",N,N],[17,"RTF_CACHE","","",N,N],[17,"RTF_FLOW","","",N,N],[17,"RTF_POLICY","","",N,N],[17,"RTCF_VALVE","","",N,N],[17,"RTCF_MASQ","","",N,N],[17,"RTCF_NAT","","",N,N],[17,"RTCF_DOREDIRECT","","",N,N],[17,"RTCF_LOG","","",N,N],[17,"RTCF_DIRECTSRC","","",N,N],[17,"RTF_LOCAL","","",N,N],[17,"RTF_INTERFACE","","",N,N],[17,"RTF_MULTICAST","","",N,N],[17,"RTF_BROADCAST","","",N,N],[17,"RTF_NAT","","",N,N],[17,"RTF_ADDRCLASSMASK","","",N,N],[17,"RT_CLASS_UNSPEC","","",N,N],[17,"RT_CLASS_DEFAULT","","",N,N],[17,"RT_CLASS_MAIN","","",N,N],[17,"RT_CLASS_LOCAL","","",N,N],[17,"RT_CLASS_MAX","","",N,N],[17,"RTMSG_OVERRUN","","",N,N],[17,"RTMSG_NEWDEVICE","","",N,N],[17,"RTMSG_DELDEVICE","","",N,N],[17,"RTMSG_NEWROUTE","","",N,N],[17,"RTMSG_DELROUTE","","",N,N],[17,"RTMSG_NEWRULE","","",N,N],[17,"RTMSG_DELRULE","","",N,N],[17,"RTMSG_CONTROL","","",N,N],[17,"RTMSG_AR_FAILED","","",N,N],[17,"MAX_ADDR_LEN","","",N,N],[17,"ARPD_UPDATE","","",N,N],[17,"ARPD_LOOKUP","","",N,N],[17,"ARPD_FLUSH","","",N,N],[17,"ATF_MAGIC","","",N,N],[17,"SO_TIMESTAMPING","","",N,N],[17,"SCM_TIMESTAMPING","","",N,N],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",N,N],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",N,N],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",N,N],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",N,N],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",N,N],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",N,N],[17,"SOF_TIMESTAMPING_SOFTWARE","","",N,N],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",N,N],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",N,N],[17,"__UT_LINESIZE","","",N,N],[17,"__UT_NAMESIZE","","",N,N],[17,"__UT_HOSTSIZE","","",N,N],[17,"EMPTY","","",N,N],[17,"RUN_LVL","","",N,N],[17,"BOOT_TIME","","",N,N],[17,"NEW_TIME","","",N,N],[17,"OLD_TIME","","",N,N],[17,"INIT_PROCESS","","",N,N],[17,"LOGIN_PROCESS","","",N,N],[17,"USER_PROCESS","","",N,N],[17,"DEAD_PROCESS","","",N,N],[17,"ACCOUNTING","","",N,N],[17,"RLIMIT_RSS","","",N,N],[17,"RLIMIT_AS","","",N,N],[17,"RLIMIT_MEMLOCK","","",N,N],[17,"RLIM_INFINITY","","",N,N],[17,"RLIMIT_RTTIME","","",N,N],[17,"RLIMIT_NLIMITS","","",N,N],[17,"SOCK_NONBLOCK","","",N,N],[17,"SOL_RXRPC","","",N,N],[17,"SOL_PPPOL2TP","","",N,N],[17,"SOL_PNPIPE","","",N,N],[17,"SOL_RDS","","",N,N],[17,"SOL_IUCV","","",N,N],[17,"SOL_CAIF","","",N,N],[17,"SOL_ALG","","",N,N],[17,"SOL_NFC","","",N,N],[17,"SOL_XDP","","",N,N],[17,"MSG_TRYHARD","","",N,N],[17,"LC_PAPER","","",N,N],[17,"LC_NAME","","",N,N],[17,"LC_ADDRESS","","",N,N],[17,"LC_TELEPHONE","","",N,N],[17,"LC_MEASUREMENT","","",N,N],[17,"LC_IDENTIFICATION","","",N,N],[17,"LC_PAPER_MASK","","",N,N],[17,"LC_NAME_MASK","","",N,N],[17,"LC_ADDRESS_MASK","","",N,N],[17,"LC_TELEPHONE_MASK","","",N,N],[17,"LC_MEASUREMENT_MASK","","",N,N],[17,"LC_IDENTIFICATION_MASK","","",N,N],[17,"LC_ALL_MASK","","",N,N],[17,"MAP_ANON","","",N,N],[17,"MAP_ANONYMOUS","","",N,N],[17,"MAP_DENYWRITE","","",N,N],[17,"MAP_EXECUTABLE","","",N,N],[17,"MAP_POPULATE","","",N,N],[17,"MAP_NONBLOCK","","",N,N],[17,"MAP_STACK","","",N,N],[17,"ENOTSUP","","",N,N],[17,"EUCLEAN","","",N,N],[17,"ENOTNAM","","",N,N],[17,"ENAVAIL","","",N,N],[17,"EISNAM","","",N,N],[17,"EREMOTEIO","","",N,N],[17,"SOCK_STREAM","","",N,N],[17,"SOCK_DGRAM","","",N,N],[17,"SOCK_SEQPACKET","","",N,N],[17,"SOCK_DCCP","","",N,N],[17,"SOCK_PACKET","","",N,N],[17,"TCP_COOKIE_TRANSACTIONS","","",N,N],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",N,N],[17,"TCP_THIN_DUPACK","","",N,N],[17,"TCP_USER_TIMEOUT","","",N,N],[17,"TCP_REPAIR","","",N,N],[17,"TCP_REPAIR_QUEUE","","",N,N],[17,"TCP_QUEUE_SEQ","","",N,N],[17,"TCP_REPAIR_OPTIONS","","",N,N],[17,"TCP_FASTOPEN","","",N,N],[17,"TCP_TIMESTAMP","","",N,N],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",N,N],[17,"DCCP_SOCKOPT_SERVICE","","",N,N],[17,"DCCP_SOCKOPT_CHANGE_L","","",N,N],[17,"DCCP_SOCKOPT_CHANGE_R","","",N,N],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",N,N],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",N,N],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",N,N],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",N,N],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",N,N],[17,"DCCP_SOCKOPT_CCID","","",N,N],[17,"DCCP_SOCKOPT_TX_CCID","","",N,N],[17,"DCCP_SOCKOPT_RX_CCID","","",N,N],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",N,N],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",N,N],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",N,N],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",N,N],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening port",N,N],[17,"SIGTTIN","","",N,N],[17,"SIGTTOU","","",N,N],[17,"SIGXCPU","","",N,N],[17,"SIGXFSZ","","",N,N],[17,"SIGVTALRM","","",N,N],[17,"SIGPROF","","",N,N],[17,"SIGWINCH","","",N,N],[17,"SIGEV_THREAD_ID","","",N,N],[17,"BUFSIZ","","",N,N],[17,"TMP_MAX","","",N,N],[17,"FOPEN_MAX","","",N,N],[17,"POSIX_FADV_DONTNEED","","",N,N],[17,"POSIX_FADV_NOREUSE","","",N,N],[17,"POSIX_MADV_DONTNEED","","",N,N],[17,"_SC_EQUIV_CLASS_MAX","","",N,N],[17,"_SC_CHARCLASS_NAME_MAX","","",N,N],[17,"_SC_PII","","",N,N],[17,"_SC_PII_XTI","","",N,N],[17,"_SC_PII_SOCKET","","",N,N],[17,"_SC_PII_INTERNET","","",N,N],[17,"_SC_PII_OSI","","",N,N],[17,"_SC_POLL","","",N,N],[17,"_SC_SELECT","","",N,N],[17,"_SC_PII_INTERNET_STREAM","","",N,N],[17,"_SC_PII_INTERNET_DGRAM","","",N,N],[17,"_SC_PII_OSI_COTS","","",N,N],[17,"_SC_PII_OSI_CLTS","","",N,N],[17,"_SC_PII_OSI_M","","",N,N],[17,"_SC_T_IOV_MAX","","",N,N],[17,"_SC_2_C_VERSION","","",N,N],[17,"_SC_CHAR_BIT","","",N,N],[17,"_SC_CHAR_MAX","","",N,N],[17,"_SC_CHAR_MIN","","",N,N],[17,"_SC_INT_MAX","","",N,N],[17,"_SC_INT_MIN","","",N,N],[17,"_SC_LONG_BIT","","",N,N],[17,"_SC_WORD_BIT","","",N,N],[17,"_SC_MB_LEN_MAX","","",N,N],[17,"_SC_SSIZE_MAX","","",N,N],[17,"_SC_SCHAR_MAX","","",N,N],[17,"_SC_SCHAR_MIN","","",N,N],[17,"_SC_SHRT_MAX","","",N,N],[17,"_SC_SHRT_MIN","","",N,N],[17,"_SC_UCHAR_MAX","","",N,N],[17,"_SC_UINT_MAX","","",N,N],[17,"_SC_ULONG_MAX","","",N,N],[17,"_SC_USHRT_MAX","","",N,N],[17,"_SC_NL_ARGMAX","","",N,N],[17,"_SC_NL_LANGMAX","","",N,N],[17,"_SC_NL_MSGMAX","","",N,N],[17,"_SC_NL_NMAX","","",N,N],[17,"_SC_NL_SETMAX","","",N,N],[17,"_SC_NL_TEXTMAX","","",N,N],[17,"_SC_BASE","","",N,N],[17,"_SC_C_LANG_SUPPORT","","",N,N],[17,"_SC_C_LANG_SUPPORT_R","","",N,N],[17,"_SC_DEVICE_IO","","",N,N],[17,"_SC_DEVICE_SPECIFIC","","",N,N],[17,"_SC_DEVICE_SPECIFIC_R","","",N,N],[17,"_SC_FD_MGMT","","",N,N],[17,"_SC_FIFO","","",N,N],[17,"_SC_PIPE","","",N,N],[17,"_SC_FILE_ATTRIBUTES","","",N,N],[17,"_SC_FILE_LOCKING","","",N,N],[17,"_SC_FILE_SYSTEM","","",N,N],[17,"_SC_MULTI_PROCESS","","",N,N],[17,"_SC_SINGLE_PROCESS","","",N,N],[17,"_SC_NETWORKING","","",N,N],[17,"_SC_REGEX_VERSION","","",N,N],[17,"_SC_SIGNALS","","",N,N],[17,"_SC_SYSTEM_DATABASE","","",N,N],[17,"_SC_SYSTEM_DATABASE_R","","",N,N],[17,"_SC_USER_GROUPS","","",N,N],[17,"_SC_USER_GROUPS_R","","",N,N],[17,"_SC_LEVEL1_ICACHE_SIZE","","",N,N],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",N,N],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL1_DCACHE_SIZE","","",N,N],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",N,N],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL2_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL2_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL3_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL3_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL4_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL4_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",N,N],[17,"O_ACCMODE","","",N,N],[17,"ST_RELATIME","","",N,N],[17,"NI_MAXHOST","","",N,N],[17,"ADFS_SUPER_MAGIC","","",N,N],[17,"AFFS_SUPER_MAGIC","","",N,N],[17,"CODA_SUPER_MAGIC","","",N,N],[17,"CRAMFS_MAGIC","","",N,N],[17,"EFS_SUPER_MAGIC","","",N,N],[17,"EXT2_SUPER_MAGIC","","",N,N],[17,"EXT3_SUPER_MAGIC","","",N,N],[17,"EXT4_SUPER_MAGIC","","",N,N],[17,"HPFS_SUPER_MAGIC","","",N,N],[17,"HUGETLBFS_MAGIC","","",N,N],[17,"ISOFS_SUPER_MAGIC","","",N,N],[17,"JFFS2_SUPER_MAGIC","","",N,N],[17,"MINIX_SUPER_MAGIC","","",N,N],[17,"MINIX_SUPER_MAGIC2","","",N,N],[17,"MINIX2_SUPER_MAGIC","","",N,N],[17,"MINIX2_SUPER_MAGIC2","","",N,N],[17,"MSDOS_SUPER_MAGIC","","",N,N],[17,"NCP_SUPER_MAGIC","","",N,N],[17,"NFS_SUPER_MAGIC","","",N,N],[17,"OPENPROM_SUPER_MAGIC","","",N,N],[17,"PROC_SUPER_MAGIC","","",N,N],[17,"QNX4_SUPER_MAGIC","","",N,N],[17,"REISERFS_SUPER_MAGIC","","",N,N],[17,"SMB_SUPER_MAGIC","","",N,N],[17,"TMPFS_MAGIC","","",N,N],[17,"USBDEVICE_SUPER_MAGIC","","",N,N],[17,"VEOF","","",N,N],[17,"CPU_SETSIZE","","",N,N],[17,"PTRACE_TRACEME","","",N,N],[17,"PTRACE_PEEKTEXT","","",N,N],[17,"PTRACE_PEEKDATA","","",N,N],[17,"PTRACE_PEEKUSER","","",N,N],[17,"PTRACE_POKETEXT","","",N,N],[17,"PTRACE_POKEDATA","","",N,N],[17,"PTRACE_POKEUSER","","",N,N],[17,"PTRACE_CONT","","",N,N],[17,"PTRACE_KILL","","",N,N],[17,"PTRACE_SINGLESTEP","","",N,N],[17,"PTRACE_ATTACH","","",N,N],[17,"PTRACE_SYSCALL","","",N,N],[17,"PTRACE_SETOPTIONS","","",N,N],[17,"PTRACE_GETEVENTMSG","","",N,N],[17,"PTRACE_GETSIGINFO","","",N,N],[17,"PTRACE_SETSIGINFO","","",N,N],[17,"PTRACE_GETREGSET","","",N,N],[17,"PTRACE_SETREGSET","","",N,N],[17,"PTRACE_SEIZE","","",N,N],[17,"PTRACE_INTERRUPT","","",N,N],[17,"PTRACE_LISTEN","","",N,N],[17,"PTRACE_PEEKSIGINFO","","",N,N],[17,"EPOLLWAKEUP","","",N,N],[17,"MAP_HUGETLB","","",N,N],[17,"SEEK_DATA","","",N,N],[17,"SEEK_HOLE","","",N,N],[17,"TCSANOW","","",N,N],[17,"TCSADRAIN","","",N,N],[17,"TCSAFLUSH","","",N,N],[17,"TIOCLINUX","","",N,N],[17,"TIOCGSERIAL","","",N,N],[17,"RTLD_DEEPBIND","","",N,N],[17,"RTLD_GLOBAL","","",N,N],[17,"RTLD_NOLOAD","","",N,N],[17,"LINUX_REBOOT_MAGIC1","","",N,N],[17,"LINUX_REBOOT_MAGIC2","","",N,N],[17,"LINUX_REBOOT_MAGIC2A","","",N,N],[17,"LINUX_REBOOT_MAGIC2B","","",N,N],[17,"LINUX_REBOOT_MAGIC2C","","",N,N],[17,"LINUX_REBOOT_CMD_RESTART","","",N,N],[17,"LINUX_REBOOT_CMD_HALT","","",N,N],[17,"LINUX_REBOOT_CMD_CAD_ON","","",N,N],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",N,N],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",N,N],[17,"LINUX_REBOOT_CMD_RESTART2","","",N,N],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",N,N],[17,"LINUX_REBOOT_CMD_KEXEC","","",N,N],[17,"NETLINK_ROUTE","","",N,N],[17,"NETLINK_UNUSED","","",N,N],[17,"NETLINK_USERSOCK","","",N,N],[17,"NETLINK_FIREWALL","","",N,N],[17,"NETLINK_SOCK_DIAG","","",N,N],[17,"NETLINK_NFLOG","","",N,N],[17,"NETLINK_XFRM","","",N,N],[17,"NETLINK_SELINUX","","",N,N],[17,"NETLINK_ISCSI","","",N,N],[17,"NETLINK_AUDIT","","",N,N],[17,"NETLINK_FIB_LOOKUP","","",N,N],[17,"NETLINK_CONNECTOR","","",N,N],[17,"NETLINK_NETFILTER","","",N,N],[17,"NETLINK_IP6_FW","","",N,N],[17,"NETLINK_DNRTMSG","","",N,N],[17,"NETLINK_KOBJECT_UEVENT","","",N,N],[17,"NETLINK_GENERIC","","",N,N],[17,"NETLINK_SCSITRANSPORT","","",N,N],[17,"NETLINK_ECRYPTFS","","",N,N],[17,"NETLINK_RDMA","","",N,N],[17,"NETLINK_CRYPTO","","",N,N],[17,"NETLINK_INET_DIAG","","",N,N],[17,"MAX_LINKS","","",N,N],[17,"NLM_F_REQUEST","","",N,N],[17,"NLM_F_MULTI","","",N,N],[17,"NLM_F_ACK","","",N,N],[17,"NLM_F_ECHO","","",N,N],[17,"NLM_F_DUMP_INTR","","",N,N],[17,"NLM_F_DUMP_FILTERED","","",N,N],[17,"NLM_F_ROOT","","",N,N],[17,"NLM_F_MATCH","","",N,N],[17,"NLM_F_ATOMIC","","",N,N],[17,"NLM_F_DUMP","","",N,N],[17,"NLM_F_REPLACE","","",N,N],[17,"NLM_F_EXCL","","",N,N],[17,"NLM_F_CREATE","","",N,N],[17,"NLM_F_APPEND","","",N,N],[17,"NETLINK_ADD_MEMBERSHIP","","",N,N],[17,"NETLINK_DROP_MEMBERSHIP","","",N,N],[17,"NETLINK_PKTINFO","","",N,N],[17,"NETLINK_BROADCAST_ERROR","","",N,N],[17,"NETLINK_NO_ENOBUFS","","",N,N],[17,"NETLINK_RX_RING","","",N,N],[17,"NETLINK_TX_RING","","",N,N],[17,"NETLINK_LISTEN_ALL_NSID","","",N,N],[17,"NETLINK_LIST_MEMBERSHIPS","","",N,N],[17,"NETLINK_CAP_ACK","","",N,N],[17,"NLA_F_NESTED","","",N,N],[17,"NLA_F_NET_BYTEORDER","","",N,N],[17,"NLA_TYPE_MASK","","",N,N],[17,"NLA_ALIGNTO","","",N,N],[17,"GENL_UNS_ADMIN_PERM","","",N,N],[17,"GENL_ID_VFS_DQUOT","","",N,N],[17,"GENL_ID_PMCRAID","","",N,N],[17,"TIOCM_LE","","",N,N],[17,"TIOCM_DTR","","",N,N],[17,"TIOCM_RTS","","",N,N],[17,"TIOCM_ST","","",N,N],[17,"TIOCM_SR","","",N,N],[17,"TIOCM_CTS","","",N,N],[17,"TIOCM_CAR","","",N,N],[17,"TIOCM_RNG","","",N,N],[17,"TIOCM_DSR","","",N,N],[17,"TIOCM_CD","","",N,N],[17,"TIOCM_RI","","",N,N],[17,"NF_NETDEV_INGRESS","","",N,N],[17,"NF_NETDEV_NUMHOOKS","","",N,N],[17,"NFPROTO_INET","","",N,N],[17,"NFPROTO_NETDEV","","",N,N],[17,"NFT_TABLE_MAXNAMELEN","","",N,N],[17,"NFT_CHAIN_MAXNAMELEN","","",N,N],[17,"NFT_SET_MAXNAMELEN","","",N,N],[17,"NFT_OBJ_MAXNAMELEN","","",N,N],[17,"NFT_USERDATA_MAXLEN","","",N,N],[17,"NFT_REG_VERDICT","","",N,N],[17,"NFT_REG_1","","",N,N],[17,"NFT_REG_2","","",N,N],[17,"NFT_REG_3","","",N,N],[17,"NFT_REG_4","","",N,N],[17,"__NFT_REG_MAX","","",N,N],[17,"NFT_REG32_00","","",N,N],[17,"NFT_REG32_01","","",N,N],[17,"NFT_REG32_02","","",N,N],[17,"NFT_REG32_03","","",N,N],[17,"NFT_REG32_04","","",N,N],[17,"NFT_REG32_05","","",N,N],[17,"NFT_REG32_06","","",N,N],[17,"NFT_REG32_07","","",N,N],[17,"NFT_REG32_08","","",N,N],[17,"NFT_REG32_09","","",N,N],[17,"NFT_REG32_10","","",N,N],[17,"NFT_REG32_11","","",N,N],[17,"NFT_REG32_12","","",N,N],[17,"NFT_REG32_13","","",N,N],[17,"NFT_REG32_14","","",N,N],[17,"NFT_REG32_15","","",N,N],[17,"NFT_REG_SIZE","","",N,N],[17,"NFT_REG32_SIZE","","",N,N],[17,"NFT_CONTINUE","","",N,N],[17,"NFT_BREAK","","",N,N],[17,"NFT_JUMP","","",N,N],[17,"NFT_GOTO","","",N,N],[17,"NFT_RETURN","","",N,N],[17,"NFT_MSG_NEWTABLE","","",N,N],[17,"NFT_MSG_GETTABLE","","",N,N],[17,"NFT_MSG_DELTABLE","","",N,N],[17,"NFT_MSG_NEWCHAIN","","",N,N],[17,"NFT_MSG_GETCHAIN","","",N,N],[17,"NFT_MSG_DELCHAIN","","",N,N],[17,"NFT_MSG_NEWRULE","","",N,N],[17,"NFT_MSG_GETRULE","","",N,N],[17,"NFT_MSG_DELRULE","","",N,N],[17,"NFT_MSG_NEWSET","","",N,N],[17,"NFT_MSG_GETSET","","",N,N],[17,"NFT_MSG_DELSET","","",N,N],[17,"NFT_MSG_NEWSETELEM","","",N,N],[17,"NFT_MSG_GETSETELEM","","",N,N],[17,"NFT_MSG_DELSETELEM","","",N,N],[17,"NFT_MSG_NEWGEN","","",N,N],[17,"NFT_MSG_GETGEN","","",N,N],[17,"NFT_MSG_TRACE","","",N,N],[17,"NFT_MSG_NEWOBJ","","",N,N],[17,"NFT_MSG_GETOBJ","","",N,N],[17,"NFT_MSG_DELOBJ","","",N,N],[17,"NFT_MSG_GETOBJ_RESET","","",N,N],[17,"NFT_MSG_MAX","","",N,N],[17,"NFT_SET_ANONYMOUS","","",N,N],[17,"NFT_SET_CONSTANT","","",N,N],[17,"NFT_SET_INTERVAL","","",N,N],[17,"NFT_SET_MAP","","",N,N],[17,"NFT_SET_TIMEOUT","","",N,N],[17,"NFT_SET_EVAL","","",N,N],[17,"NFT_SET_POL_PERFORMANCE","","",N,N],[17,"NFT_SET_POL_MEMORY","","",N,N],[17,"NFT_SET_ELEM_INTERVAL_END","","",N,N],[17,"NFT_DATA_VALUE","","",N,N],[17,"NFT_DATA_VERDICT","","",N,N],[17,"NFT_DATA_RESERVED_MASK","","",N,N],[17,"NFT_DATA_VALUE_MAXLEN","","",N,N],[17,"NFT_BYTEORDER_NTOH","","",N,N],[17,"NFT_BYTEORDER_HTON","","",N,N],[17,"NFT_CMP_EQ","","",N,N],[17,"NFT_CMP_NEQ","","",N,N],[17,"NFT_CMP_LT","","",N,N],[17,"NFT_CMP_LTE","","",N,N],[17,"NFT_CMP_GT","","",N,N],[17,"NFT_CMP_GTE","","",N,N],[17,"NFT_RANGE_EQ","","",N,N],[17,"NFT_RANGE_NEQ","","",N,N],[17,"NFT_LOOKUP_F_INV","","",N,N],[17,"NFT_DYNSET_OP_ADD","","",N,N],[17,"NFT_DYNSET_OP_UPDATE","","",N,N],[17,"NFT_DYNSET_F_INV","","",N,N],[17,"NFT_PAYLOAD_LL_HEADER","","",N,N],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",N,N],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",N,N],[17,"NFT_PAYLOAD_CSUM_NONE","","",N,N],[17,"NFT_PAYLOAD_CSUM_INET","","",N,N],[17,"NFT_META_LEN","","",N,N],[17,"NFT_META_PROTOCOL","","",N,N],[17,"NFT_META_PRIORITY","","",N,N],[17,"NFT_META_MARK","","",N,N],[17,"NFT_META_IIF","","",N,N],[17,"NFT_META_OIF","","",N,N],[17,"NFT_META_IIFNAME","","",N,N],[17,"NFT_META_OIFNAME","","",N,N],[17,"NFT_META_IIFTYPE","","",N,N],[17,"NFT_META_OIFTYPE","","",N,N],[17,"NFT_META_SKUID","","",N,N],[17,"NFT_META_SKGID","","",N,N],[17,"NFT_META_NFTRACE","","",N,N],[17,"NFT_META_RTCLASSID","","",N,N],[17,"NFT_META_SECMARK","","",N,N],[17,"NFT_META_NFPROTO","","",N,N],[17,"NFT_META_L4PROTO","","",N,N],[17,"NFT_META_BRI_IIFNAME","","",N,N],[17,"NFT_META_BRI_OIFNAME","","",N,N],[17,"NFT_META_PKTTYPE","","",N,N],[17,"NFT_META_CPU","","",N,N],[17,"NFT_META_IIFGROUP","","",N,N],[17,"NFT_META_OIFGROUP","","",N,N],[17,"NFT_META_CGROUP","","",N,N],[17,"NFT_META_PRANDOM","","",N,N],[17,"NFT_CT_STATE","","",N,N],[17,"NFT_CT_DIRECTION","","",N,N],[17,"NFT_CT_STATUS","","",N,N],[17,"NFT_CT_MARK","","",N,N],[17,"NFT_CT_SECMARK","","",N,N],[17,"NFT_CT_EXPIRATION","","",N,N],[17,"NFT_CT_HELPER","","",N,N],[17,"NFT_CT_L3PROTOCOL","","",N,N],[17,"NFT_CT_SRC","","",N,N],[17,"NFT_CT_DST","","",N,N],[17,"NFT_CT_PROTOCOL","","",N,N],[17,"NFT_CT_PROTO_SRC","","",N,N],[17,"NFT_CT_PROTO_DST","","",N,N],[17,"NFT_CT_LABELS","","",N,N],[17,"NFT_CT_PKTS","","",N,N],[17,"NFT_CT_BYTES","","",N,N],[17,"NFT_LIMIT_PKTS","","",N,N],[17,"NFT_LIMIT_PKT_BYTES","","",N,N],[17,"NFT_LIMIT_F_INV","","",N,N],[17,"NFT_QUEUE_FLAG_BYPASS","","",N,N],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",N,N],[17,"NFT_QUEUE_FLAG_MASK","","",N,N],[17,"NFT_QUOTA_F_INV","","",N,N],[17,"NFT_REJECT_ICMP_UNREACH","","",N,N],[17,"NFT_REJECT_TCP_RST","","",N,N],[17,"NFT_REJECT_ICMPX_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",N,N],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",N,N],[17,"NFT_NAT_SNAT","","",N,N],[17,"NFT_NAT_DNAT","","",N,N],[17,"NFT_TRACETYPE_UNSPEC","","",N,N],[17,"NFT_TRACETYPE_POLICY","","",N,N],[17,"NFT_TRACETYPE_RETURN","","",N,N],[17,"NFT_TRACETYPE_RULE","","",N,N],[17,"NFT_NG_INCREMENTAL","","",N,N],[17,"NFT_NG_RANDOM","","",N,N],[17,"M_MXFAST","","",N,N],[17,"M_NLBLKS","","",N,N],[17,"M_GRAIN","","",N,N],[17,"M_KEEP","","",N,N],[17,"M_TRIM_THRESHOLD","","",N,N],[17,"M_TOP_PAD","","",N,N],[17,"M_MMAP_THRESHOLD","","",N,N],[17,"M_MMAP_MAX","","",N,N],[17,"M_CHECK_ACTION","","",N,N],[17,"M_PERTURB","","",N,N],[17,"M_ARENA_TEST","","",N,N],[17,"M_ARENA_MAX","","",N,N],[17,"PTHREAD_STACK_MIN","","",N,N],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",N,N],[17,"O_LARGEFILE","","",N,N],[17,"TIOCGSOFTCAR","","",N,N],[17,"TIOCSSOFTCAR","","",N,N],[17,"RLIMIT_NOFILE","","",N,N],[17,"RLIMIT_NPROC","","",N,N],[17,"O_APPEND","","",N,N],[17,"O_CREAT","","",N,N],[17,"O_EXCL","","",N,N],[17,"O_NOCTTY","","",N,N],[17,"O_NONBLOCK","","",N,N],[17,"O_SYNC","","",N,N],[17,"O_RSYNC","","",N,N],[17,"O_DSYNC","","",N,N],[17,"O_FSYNC","","",N,N],[17,"O_NOATIME","","",N,N],[17,"O_PATH","","",N,N],[17,"O_TMPFILE","","",N,N],[17,"MAP_GROWSDOWN","","",N,N],[17,"EDEADLK","","",N,N],[17,"ENAMETOOLONG","","",N,N],[17,"ENOLCK","","",N,N],[17,"ENOSYS","","",N,N],[17,"ENOTEMPTY","","",N,N],[17,"ELOOP","","",N,N],[17,"ENOMSG","","",N,N],[17,"EIDRM","","",N,N],[17,"ECHRNG","","",N,N],[17,"EL2NSYNC","","",N,N],[17,"EL3HLT","","",N,N],[17,"EL3RST","","",N,N],[17,"ELNRNG","","",N,N],[17,"EUNATCH","","",N,N],[17,"ENOCSI","","",N,N],[17,"EL2HLT","","",N,N],[17,"EBADE","","",N,N],[17,"EBADR","","",N,N],[17,"EXFULL","","",N,N],[17,"ENOANO","","",N,N],[17,"EBADRQC","","",N,N],[17,"EBADSLT","","",N,N],[17,"EMULTIHOP","","",N,N],[17,"EOVERFLOW","","",N,N],[17,"ENOTUNIQ","","",N,N],[17,"EBADFD","","",N,N],[17,"EBADMSG","","",N,N],[17,"EREMCHG","","",N,N],[17,"ELIBACC","","",N,N],[17,"ELIBBAD","","",N,N],[17,"ELIBSCN","","",N,N],[17,"ELIBMAX","","",N,N],[17,"ELIBEXEC","","",N,N],[17,"EILSEQ","","",N,N],[17,"ERESTART","","",N,N],[17,"ESTRPIPE","","",N,N],[17,"EUSERS","","",N,N],[17,"ENOTSOCK","","",N,N],[17,"EDESTADDRREQ","","",N,N],[17,"EMSGSIZE","","",N,N],[17,"EPROTOTYPE","","",N,N],[17,"ENOPROTOOPT","","",N,N],[17,"EPROTONOSUPPORT","","",N,N],[17,"ESOCKTNOSUPPORT","","",N,N],[17,"EOPNOTSUPP","","",N,N],[17,"EPFNOSUPPORT","","",N,N],[17,"EAFNOSUPPORT","","",N,N],[17,"EADDRINUSE","","",N,N],[17,"EADDRNOTAVAIL","","",N,N],[17,"ENETDOWN","","",N,N],[17,"ENETUNREACH","","",N,N],[17,"ENETRESET","","",N,N],[17,"ECONNABORTED","","",N,N],[17,"ECONNRESET","","",N,N],[17,"ENOBUFS","","",N,N],[17,"EISCONN","","",N,N],[17,"ENOTCONN","","",N,N],[17,"ESHUTDOWN","","",N,N],[17,"ETOOMANYREFS","","",N,N],[17,"ETIMEDOUT","","",N,N],[17,"ECONNREFUSED","","",N,N],[17,"EHOSTDOWN","","",N,N],[17,"EHOSTUNREACH","","",N,N],[17,"EALREADY","","",N,N],[17,"EINPROGRESS","","",N,N],[17,"ESTALE","","",N,N],[17,"EDQUOT","","",N,N],[17,"ENOMEDIUM","","",N,N],[17,"EMEDIUMTYPE","","",N,N],[17,"ECANCELED","","",N,N],[17,"ENOKEY","","",N,N],[17,"EKEYEXPIRED","","",N,N],[17,"EKEYREVOKED","","",N,N],[17,"EKEYREJECTED","","",N,N],[17,"EOWNERDEAD","","",N,N],[17,"ENOTRECOVERABLE","","",N,N],[17,"EHWPOISON","","",N,N],[17,"ERFKILL","","",N,N],[17,"SOL_SOCKET","","",N,N],[17,"SO_REUSEADDR","","",N,N],[17,"SO_TYPE","","",N,N],[17,"SO_ERROR","","",N,N],[17,"SO_DONTROUTE","","",N,N],[17,"SO_BROADCAST","","",N,N],[17,"SO_SNDBUF","","",N,N],[17,"SO_RCVBUF","","",N,N],[17,"SO_SNDBUFFORCE","","",N,N],[17,"SO_RCVBUFFORCE","","",N,N],[17,"SO_KEEPALIVE","","",N,N],[17,"SO_OOBINLINE","","",N,N],[17,"SO_NO_CHECK","","",N,N],[17,"SO_PRIORITY","","",N,N],[17,"SO_LINGER","","",N,N],[17,"SO_BSDCOMPAT","","",N,N],[17,"SO_REUSEPORT","","",N,N],[17,"SO_PASSCRED","","",N,N],[17,"SO_PEERCRED","","",N,N],[17,"SO_RCVLOWAT","","",N,N],[17,"SO_SNDLOWAT","","",N,N],[17,"SO_RCVTIMEO","","",N,N],[17,"SO_SNDTIMEO","","",N,N],[17,"SO_SECURITY_AUTHENTICATION","","",N,N],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",N,N],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",N,N],[17,"SO_BINDTODEVICE","","",N,N],[17,"SO_ATTACH_FILTER","","",N,N],[17,"SO_DETACH_FILTER","","",N,N],[17,"SO_GET_FILTER","","",N,N],[17,"SO_PEERNAME","","",N,N],[17,"SO_TIMESTAMP","","",N,N],[17,"SO_ACCEPTCONN","","",N,N],[17,"SO_PEERSEC","","",N,N],[17,"SO_PASSSEC","","",N,N],[17,"SO_TIMESTAMPNS","","",N,N],[17,"SCM_TIMESTAMPNS","","",N,N],[17,"SO_MARK","","",N,N],[17,"SO_PROTOCOL","","",N,N],[17,"SO_DOMAIN","","",N,N],[17,"SO_RXQ_OVFL","","",N,N],[17,"SO_WIFI_STATUS","","",N,N],[17,"SCM_WIFI_STATUS","","",N,N],[17,"SO_PEEK_OFF","","",N,N],[17,"SO_NOFCS","","",N,N],[17,"SO_LOCK_FILTER","","",N,N],[17,"SO_SELECT_ERR_QUEUE","","",N,N],[17,"SO_BUSY_POLL","","",N,N],[17,"SO_MAX_PACING_RATE","","",N,N],[17,"SO_BPF_EXTENSIONS","","",N,N],[17,"SO_INCOMING_CPU","","",N,N],[17,"SO_ATTACH_BPF","","",N,N],[17,"SO_DETACH_BPF","","",N,N],[17,"SA_ONSTACK","","",N,N],[17,"SA_SIGINFO","","",N,N],[17,"SA_NOCLDWAIT","","",N,N],[17,"SIGCHLD","","",N,N],[17,"SIGBUS","","",N,N],[17,"SIGUSR1","","",N,N],[17,"SIGUSR2","","",N,N],[17,"SIGCONT","","",N,N],[17,"SIGSTOP","","",N,N],[17,"SIGTSTP","","",N,N],[17,"SIGURG","","",N,N],[17,"SIGIO","","",N,N],[17,"SIGSYS","","",N,N],[17,"SIGSTKFLT","","",N,N],[17,"SIGUNUSED","","",N,N],[17,"SIGPOLL","","",N,N],[17,"SIGPWR","","",N,N],[17,"SIG_SETMASK","","",N,N],[17,"SIG_BLOCK","","",N,N],[17,"SIG_UNBLOCK","","",N,N],[17,"POLLWRNORM","","",N,N],[17,"POLLWRBAND","","",N,N],[17,"O_ASYNC","","",N,N],[17,"O_NDELAY","","",N,N],[17,"PTRACE_DETACH","","",N,N],[17,"EFD_NONBLOCK","","",N,N],[17,"F_GETLK","","",N,N],[17,"F_GETOWN","","",N,N],[17,"F_SETOWN","","",N,N],[17,"F_SETLK","","",N,N],[17,"F_SETLKW","","",N,N],[17,"F_RDLCK","","",N,N],[17,"F_WRLCK","","",N,N],[17,"F_UNLCK","","",N,N],[17,"SFD_NONBLOCK","","",N,N],[17,"TIOCEXCL","","",N,N],[17,"TIOCNXCL","","",N,N],[17,"TIOCSCTTY","","",N,N],[17,"TIOCSTI","","",N,N],[17,"TIOCMGET","","",N,N],[17,"TIOCMBIS","","",N,N],[17,"TIOCMBIC","","",N,N],[17,"TIOCMSET","","",N,N],[17,"TIOCCONS","","",N,N],[17,"SFD_CLOEXEC","","",N,N],[17,"NCCS","","",N,N],[17,"O_TRUNC","","",N,N],[17,"O_CLOEXEC","","",N,N],[17,"EBFONT","","",N,N],[17,"ENOSTR","","",N,N],[17,"ENODATA","","",N,N],[17,"ETIME","","",N,N],[17,"ENOSR","","",N,N],[17,"ENONET","","",N,N],[17,"ENOPKG","","",N,N],[17,"EREMOTE","","",N,N],[17,"ENOLINK","","",N,N],[17,"EADV","","",N,N],[17,"ESRMNT","","",N,N],[17,"ECOMM","","",N,N],[17,"EPROTO","","",N,N],[17,"EDOTDOT","","",N,N],[17,"SA_NODEFER","","",N,N],[17,"SA_RESETHAND","","",N,N],[17,"SA_RESTART","","",N,N],[17,"SA_NOCLDSTOP","","",N,N],[17,"EPOLL_CLOEXEC","","",N,N],[17,"EFD_CLOEXEC","","",N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",N,N],[17,"O_DIRECT","","",N,N],[17,"O_DIRECTORY","","",N,N],[17,"O_NOFOLLOW","","",N,N],[17,"MAP_LOCKED","","",N,N],[17,"MAP_NORESERVE","","",N,N],[17,"MAP_32BIT","","",N,N],[17,"EDEADLOCK","","",N,N],[17,"FIOCLEX","","",N,N],[17,"FIONBIO","","",N,N],[17,"PTRACE_GETFPREGS","","",N,N],[17,"PTRACE_SETFPREGS","","",N,N],[17,"PTRACE_GETFPXREGS","","",N,N],[17,"PTRACE_SETFPXREGS","","",N,N],[17,"PTRACE_GETREGS","","",N,N],[17,"PTRACE_SETREGS","","",N,N],[17,"PTRACE_PEEKSIGINFO_SHARED","","",N,N],[17,"MCL_CURRENT","","",N,N],[17,"MCL_FUTURE","","",N,N],[17,"SIGSTKSZ","","",N,N],[17,"MINSIGSTKSZ","","",N,N],[17,"CBAUD","","",N,N],[17,"TAB1","","",N,N],[17,"TAB2","","",N,N],[17,"TAB3","","",N,N],[17,"CR1","","",N,N],[17,"CR2","","",N,N],[17,"CR3","","",N,N],[17,"FF1","","",N,N],[17,"BS1","","",N,N],[17,"VT1","","",N,N],[17,"VWERASE","","",N,N],[17,"VREPRINT","","",N,N],[17,"VSUSP","","",N,N],[17,"VSTART","","",N,N],[17,"VSTOP","","",N,N],[17,"VDISCARD","","",N,N],[17,"VTIME","","",N,N],[17,"IXON","","",N,N],[17,"IXOFF","","",N,N],[17,"ONLCR","","",N,N],[17,"CSIZE","","",N,N],[17,"CS6","","",N,N],[17,"CS7","","",N,N],[17,"CS8","","",N,N],[17,"CSTOPB","","",N,N],[17,"CREAD","","",N,N],[17,"PARENB","","",N,N],[17,"PARODD","","",N,N],[17,"HUPCL","","",N,N],[17,"CLOCAL","","",N,N],[17,"ECHOKE","","",N,N],[17,"ECHOE","","",N,N],[17,"ECHOK","","",N,N],[17,"ECHONL","","",N,N],[17,"ECHOPRT","","",N,N],[17,"ECHOCTL","","",N,N],[17,"ISIG","","",N,N],[17,"ICANON","","",N,N],[17,"PENDIN","","",N,N],[17,"NOFLSH","","",N,N],[17,"CIBAUD","","",N,N],[17,"CBAUDEX","","",N,N],[17,"VSWTC","","",N,N],[17,"OLCUC","","",N,N],[17,"NLDLY","","",N,N],[17,"CRDLY","","",N,N],[17,"TABDLY","","",N,N],[17,"BSDLY","","",N,N],[17,"FFDLY","","",N,N],[17,"VTDLY","","",N,N],[17,"XTABS","","",N,N],[17,"B0","","",N,N],[17,"B50","","",N,N],[17,"B75","","",N,N],[17,"B110","","",N,N],[17,"B134","","",N,N],[17,"B150","","",N,N],[17,"B200","","",N,N],[17,"B300","","",N,N],[17,"B600","","",N,N],[17,"B1200","","",N,N],[17,"B1800","","",N,N],[17,"B2400","","",N,N],[17,"B4800","","",N,N],[17,"B9600","","",N,N],[17,"B19200","","",N,N],[17,"B38400","","",N,N],[17,"EXTA","","",N,N],[17,"EXTB","","",N,N],[17,"BOTHER","","",N,N],[17,"B57600","","",N,N],[17,"B115200","","",N,N],[17,"B230400","","",N,N],[17,"B460800","","",N,N],[17,"B500000","","",N,N],[17,"B576000","","",N,N],[17,"B921600","","",N,N],[17,"B1000000","","",N,N],[17,"B1152000","","",N,N],[17,"B1500000","","",N,N],[17,"B2000000","","",N,N],[17,"B2500000","","",N,N],[17,"B3000000","","",N,N],[17,"B3500000","","",N,N],[17,"B4000000","","",N,N],[17,"VEOL","","",N,N],[17,"VEOL2","","",N,N],[17,"VMIN","","",N,N],[17,"IEXTEN","","",N,N],[17,"TOSTOP","","",N,N],[17,"FLUSHO","","",N,N],[17,"EXTPROC","","",N,N],[17,"TCGETS","","",N,N],[17,"TCSETS","","",N,N],[17,"TCSETSW","","",N,N],[17,"TCSETSF","","",N,N],[17,"TCGETA","","",N,N],[17,"TCSETA","","",N,N],[17,"TCSETAW","","",N,N],[17,"TCSETAF","","",N,N],[17,"TCSBRK","","",N,N],[17,"TCXONC","","",N,N],[17,"TCFLSH","","",N,N],[17,"TIOCINQ","","",N,N],[17,"TIOCGPGRP","","",N,N],[17,"TIOCSPGRP","","",N,N],[17,"TIOCOUTQ","","",N,N],[17,"TIOCGWINSZ","","",N,N],[17,"TIOCSWINSZ","","",N,N],[17,"FIONREAD","","",N,N],[17,"R15","","",N,N],[17,"R14","","",N,N],[17,"R13","","",N,N],[17,"R12","","",N,N],[17,"RBP","","",N,N],[17,"RBX","","",N,N],[17,"R11","","",N,N],[17,"R10","","",N,N],[17,"R9","","",N,N],[17,"R8","","",N,N],[17,"RAX","","",N,N],[17,"RCX","","",N,N],[17,"RDX","","",N,N],[17,"RSI","","",N,N],[17,"RDI","","",N,N],[17,"ORIG_RAX","","",N,N],[17,"RIP","","",N,N],[17,"CS","","",N,N],[17,"EFLAGS","","",N,N],[17,"RSP","","",N,N],[17,"SS","","",N,N],[17,"FS_BASE","","",N,N],[17,"GS_BASE","","",N,N],[17,"DS","","",N,N],[17,"ES","","",N,N],[17,"FS","","",N,N],[17,"GS","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",N,N],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",N,N],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",N,N],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",N,N],[17,"SYS_read","","",N,N],[17,"SYS_write","","",N,N],[17,"SYS_open","","",N,N],[17,"SYS_close","","",N,N],[17,"SYS_stat","","",N,N],[17,"SYS_fstat","","",N,N],[17,"SYS_lstat","","",N,N],[17,"SYS_poll","","",N,N],[17,"SYS_lseek","","",N,N],[17,"SYS_mmap","","",N,N],[17,"SYS_mprotect","","",N,N],[17,"SYS_munmap","","",N,N],[17,"SYS_brk","","",N,N],[17,"SYS_rt_sigaction","","",N,N],[17,"SYS_rt_sigprocmask","","",N,N],[17,"SYS_rt_sigreturn","","",N,N],[17,"SYS_ioctl","","",N,N],[17,"SYS_pread64","","",N,N],[17,"SYS_pwrite64","","",N,N],[17,"SYS_readv","","",N,N],[17,"SYS_writev","","",N,N],[17,"SYS_access","","",N,N],[17,"SYS_pipe","","",N,N],[17,"SYS_select","","",N,N],[17,"SYS_sched_yield","","",N,N],[17,"SYS_mremap","","",N,N],[17,"SYS_msync","","",N,N],[17,"SYS_mincore","","",N,N],[17,"SYS_madvise","","",N,N],[17,"SYS_shmget","","",N,N],[17,"SYS_shmat","","",N,N],[17,"SYS_shmctl","","",N,N],[17,"SYS_dup","","",N,N],[17,"SYS_dup2","","",N,N],[17,"SYS_pause","","",N,N],[17,"SYS_nanosleep","","",N,N],[17,"SYS_getitimer","","",N,N],[17,"SYS_alarm","","",N,N],[17,"SYS_setitimer","","",N,N],[17,"SYS_getpid","","",N,N],[17,"SYS_sendfile","","",N,N],[17,"SYS_socket","","",N,N],[17,"SYS_connect","","",N,N],[17,"SYS_accept","","",N,N],[17,"SYS_sendto","","",N,N],[17,"SYS_recvfrom","","",N,N],[17,"SYS_sendmsg","","",N,N],[17,"SYS_recvmsg","","",N,N],[17,"SYS_shutdown","","",N,N],[17,"SYS_bind","","",N,N],[17,"SYS_listen","","",N,N],[17,"SYS_getsockname","","",N,N],[17,"SYS_getpeername","","",N,N],[17,"SYS_socketpair","","",N,N],[17,"SYS_setsockopt","","",N,N],[17,"SYS_getsockopt","","",N,N],[17,"SYS_clone","","",N,N],[17,"SYS_fork","","",N,N],[17,"SYS_vfork","","",N,N],[17,"SYS_execve","","",N,N],[17,"SYS_exit","","",N,N],[17,"SYS_wait4","","",N,N],[17,"SYS_kill","","",N,N],[17,"SYS_uname","","",N,N],[17,"SYS_semget","","",N,N],[17,"SYS_semop","","",N,N],[17,"SYS_semctl","","",N,N],[17,"SYS_shmdt","","",N,N],[17,"SYS_msgget","","",N,N],[17,"SYS_msgsnd","","",N,N],[17,"SYS_msgrcv","","",N,N],[17,"SYS_msgctl","","",N,N],[17,"SYS_fcntl","","",N,N],[17,"SYS_flock","","",N,N],[17,"SYS_fsync","","",N,N],[17,"SYS_fdatasync","","",N,N],[17,"SYS_truncate","","",N,N],[17,"SYS_ftruncate","","",N,N],[17,"SYS_getdents","","",N,N],[17,"SYS_getcwd","","",N,N],[17,"SYS_chdir","","",N,N],[17,"SYS_fchdir","","",N,N],[17,"SYS_rename","","",N,N],[17,"SYS_mkdir","","",N,N],[17,"SYS_rmdir","","",N,N],[17,"SYS_creat","","",N,N],[17,"SYS_link","","",N,N],[17,"SYS_unlink","","",N,N],[17,"SYS_symlink","","",N,N],[17,"SYS_readlink","","",N,N],[17,"SYS_chmod","","",N,N],[17,"SYS_fchmod","","",N,N],[17,"SYS_chown","","",N,N],[17,"SYS_fchown","","",N,N],[17,"SYS_lchown","","",N,N],[17,"SYS_umask","","",N,N],[17,"SYS_gettimeofday","","",N,N],[17,"SYS_getrlimit","","",N,N],[17,"SYS_getrusage","","",N,N],[17,"SYS_sysinfo","","",N,N],[17,"SYS_times","","",N,N],[17,"SYS_ptrace","","",N,N],[17,"SYS_getuid","","",N,N],[17,"SYS_syslog","","",N,N],[17,"SYS_getgid","","",N,N],[17,"SYS_setuid","","",N,N],[17,"SYS_setgid","","",N,N],[17,"SYS_geteuid","","",N,N],[17,"SYS_getegid","","",N,N],[17,"SYS_setpgid","","",N,N],[17,"SYS_getppid","","",N,N],[17,"SYS_getpgrp","","",N,N],[17,"SYS_setsid","","",N,N],[17,"SYS_setreuid","","",N,N],[17,"SYS_setregid","","",N,N],[17,"SYS_getgroups","","",N,N],[17,"SYS_setgroups","","",N,N],[17,"SYS_setresuid","","",N,N],[17,"SYS_getresuid","","",N,N],[17,"SYS_setresgid","","",N,N],[17,"SYS_getresgid","","",N,N],[17,"SYS_getpgid","","",N,N],[17,"SYS_setfsuid","","",N,N],[17,"SYS_setfsgid","","",N,N],[17,"SYS_getsid","","",N,N],[17,"SYS_capget","","",N,N],[17,"SYS_capset","","",N,N],[17,"SYS_rt_sigpending","","",N,N],[17,"SYS_rt_sigtimedwait","","",N,N],[17,"SYS_rt_sigqueueinfo","","",N,N],[17,"SYS_rt_sigsuspend","","",N,N],[17,"SYS_sigaltstack","","",N,N],[17,"SYS_utime","","",N,N],[17,"SYS_mknod","","",N,N],[17,"SYS_uselib","","",N,N],[17,"SYS_personality","","",N,N],[17,"SYS_ustat","","",N,N],[17,"SYS_statfs","","",N,N],[17,"SYS_fstatfs","","",N,N],[17,"SYS_sysfs","","",N,N],[17,"SYS_getpriority","","",N,N],[17,"SYS_setpriority","","",N,N],[17,"SYS_sched_setparam","","",N,N],[17,"SYS_sched_getparam","","",N,N],[17,"SYS_sched_setscheduler","","",N,N],[17,"SYS_sched_getscheduler","","",N,N],[17,"SYS_sched_get_priority_max","","",N,N],[17,"SYS_sched_get_priority_min","","",N,N],[17,"SYS_sched_rr_get_interval","","",N,N],[17,"SYS_mlock","","",N,N],[17,"SYS_munlock","","",N,N],[17,"SYS_mlockall","","",N,N],[17,"SYS_munlockall","","",N,N],[17,"SYS_vhangup","","",N,N],[17,"SYS_modify_ldt","","",N,N],[17,"SYS_pivot_root","","",N,N],[17,"SYS__sysctl","","",N,N],[17,"SYS_prctl","","",N,N],[17,"SYS_arch_prctl","","",N,N],[17,"SYS_adjtimex","","",N,N],[17,"SYS_setrlimit","","",N,N],[17,"SYS_chroot","","",N,N],[17,"SYS_sync","","",N,N],[17,"SYS_acct","","",N,N],[17,"SYS_settimeofday","","",N,N],[17,"SYS_mount","","",N,N],[17,"SYS_umount2","","",N,N],[17,"SYS_swapon","","",N,N],[17,"SYS_swapoff","","",N,N],[17,"SYS_reboot","","",N,N],[17,"SYS_sethostname","","",N,N],[17,"SYS_setdomainname","","",N,N],[17,"SYS_iopl","","",N,N],[17,"SYS_ioperm","","",N,N],[17,"SYS_create_module","","",N,N],[17,"SYS_init_module","","",N,N],[17,"SYS_delete_module","","",N,N],[17,"SYS_get_kernel_syms","","",N,N],[17,"SYS_query_module","","",N,N],[17,"SYS_quotactl","","",N,N],[17,"SYS_nfsservctl","","",N,N],[17,"SYS_getpmsg","","",N,N],[17,"SYS_putpmsg","","",N,N],[17,"SYS_afs_syscall","","",N,N],[17,"SYS_tuxcall","","",N,N],[17,"SYS_security","","",N,N],[17,"SYS_gettid","","",N,N],[17,"SYS_readahead","","",N,N],[17,"SYS_setxattr","","",N,N],[17,"SYS_lsetxattr","","",N,N],[17,"SYS_fsetxattr","","",N,N],[17,"SYS_getxattr","","",N,N],[17,"SYS_lgetxattr","","",N,N],[17,"SYS_fgetxattr","","",N,N],[17,"SYS_listxattr","","",N,N],[17,"SYS_llistxattr","","",N,N],[17,"SYS_flistxattr","","",N,N],[17,"SYS_removexattr","","",N,N],[17,"SYS_lremovexattr","","",N,N],[17,"SYS_fremovexattr","","",N,N],[17,"SYS_tkill","","",N,N],[17,"SYS_time","","",N,N],[17,"SYS_futex","","",N,N],[17,"SYS_sched_setaffinity","","",N,N],[17,"SYS_sched_getaffinity","","",N,N],[17,"SYS_set_thread_area","","",N,N],[17,"SYS_io_setup","","",N,N],[17,"SYS_io_destroy","","",N,N],[17,"SYS_io_getevents","","",N,N],[17,"SYS_io_submit","","",N,N],[17,"SYS_io_cancel","","",N,N],[17,"SYS_get_thread_area","","",N,N],[17,"SYS_lookup_dcookie","","",N,N],[17,"SYS_epoll_create","","",N,N],[17,"SYS_epoll_ctl_old","","",N,N],[17,"SYS_epoll_wait_old","","",N,N],[17,"SYS_remap_file_pages","","",N,N],[17,"SYS_getdents64","","",N,N],[17,"SYS_set_tid_address","","",N,N],[17,"SYS_restart_syscall","","",N,N],[17,"SYS_semtimedop","","",N,N],[17,"SYS_fadvise64","","",N,N],[17,"SYS_timer_create","","",N,N],[17,"SYS_timer_settime","","",N,N],[17,"SYS_timer_gettime","","",N,N],[17,"SYS_timer_getoverrun","","",N,N],[17,"SYS_timer_delete","","",N,N],[17,"SYS_clock_settime","","",N,N],[17,"SYS_clock_gettime","","",N,N],[17,"SYS_clock_getres","","",N,N],[17,"SYS_clock_nanosleep","","",N,N],[17,"SYS_exit_group","","",N,N],[17,"SYS_epoll_wait","","",N,N],[17,"SYS_epoll_ctl","","",N,N],[17,"SYS_tgkill","","",N,N],[17,"SYS_utimes","","",N,N],[17,"SYS_vserver","","",N,N],[17,"SYS_mbind","","",N,N],[17,"SYS_set_mempolicy","","",N,N],[17,"SYS_get_mempolicy","","",N,N],[17,"SYS_mq_open","","",N,N],[17,"SYS_mq_unlink","","",N,N],[17,"SYS_mq_timedsend","","",N,N],[17,"SYS_mq_timedreceive","","",N,N],[17,"SYS_mq_notify","","",N,N],[17,"SYS_mq_getsetattr","","",N,N],[17,"SYS_kexec_load","","",N,N],[17,"SYS_waitid","","",N,N],[17,"SYS_add_key","","",N,N],[17,"SYS_request_key","","",N,N],[17,"SYS_keyctl","","",N,N],[17,"SYS_ioprio_set","","",N,N],[17,"SYS_ioprio_get","","",N,N],[17,"SYS_inotify_init","","",N,N],[17,"SYS_inotify_add_watch","","",N,N],[17,"SYS_inotify_rm_watch","","",N,N],[17,"SYS_migrate_pages","","",N,N],[17,"SYS_openat","","",N,N],[17,"SYS_mkdirat","","",N,N],[17,"SYS_mknodat","","",N,N],[17,"SYS_fchownat","","",N,N],[17,"SYS_futimesat","","",N,N],[17,"SYS_newfstatat","","",N,N],[17,"SYS_unlinkat","","",N,N],[17,"SYS_renameat","","",N,N],[17,"SYS_linkat","","",N,N],[17,"SYS_symlinkat","","",N,N],[17,"SYS_readlinkat","","",N,N],[17,"SYS_fchmodat","","",N,N],[17,"SYS_faccessat","","",N,N],[17,"SYS_pselect6","","",N,N],[17,"SYS_ppoll","","",N,N],[17,"SYS_unshare","","",N,N],[17,"SYS_set_robust_list","","",N,N],[17,"SYS_get_robust_list","","",N,N],[17,"SYS_splice","","",N,N],[17,"SYS_tee","","",N,N],[17,"SYS_sync_file_range","","",N,N],[17,"SYS_vmsplice","","",N,N],[17,"SYS_move_pages","","",N,N],[17,"SYS_utimensat","","",N,N],[17,"SYS_epoll_pwait","","",N,N],[17,"SYS_signalfd","","",N,N],[17,"SYS_timerfd_create","","",N,N],[17,"SYS_eventfd","","",N,N],[17,"SYS_fallocate","","",N,N],[17,"SYS_timerfd_settime","","",N,N],[17,"SYS_timerfd_gettime","","",N,N],[17,"SYS_accept4","","",N,N],[17,"SYS_signalfd4","","",N,N],[17,"SYS_eventfd2","","",N,N],[17,"SYS_epoll_create1","","",N,N],[17,"SYS_dup3","","",N,N],[17,"SYS_pipe2","","",N,N],[17,"SYS_inotify_init1","","",N,N],[17,"SYS_preadv","","",N,N],[17,"SYS_pwritev","","",N,N],[17,"SYS_rt_tgsigqueueinfo","","",N,N],[17,"SYS_perf_event_open","","",N,N],[17,"SYS_recvmmsg","","",N,N],[17,"SYS_fanotify_init","","",N,N],[17,"SYS_fanotify_mark","","",N,N],[17,"SYS_prlimit64","","",N,N],[17,"SYS_name_to_handle_at","","",N,N],[17,"SYS_open_by_handle_at","","",N,N],[17,"SYS_clock_adjtime","","",N,N],[17,"SYS_syncfs","","",N,N],[17,"SYS_sendmmsg","","",N,N],[17,"SYS_setns","","",N,N],[17,"SYS_getcpu","","",N,N],[17,"SYS_process_vm_readv","","",N,N],[17,"SYS_process_vm_writev","","",N,N],[17,"SYS_kcmp","","",N,N],[17,"SYS_finit_module","","",N,N],[17,"SYS_sched_setattr","","",N,N],[17,"SYS_sched_getattr","","",N,N],[17,"SYS_renameat2","","",N,N],[17,"SYS_seccomp","","",N,N],[17,"SYS_getrandom","","",N,N],[17,"SYS_memfd_create","","",N,N],[17,"SYS_kexec_file_load","","",N,N],[17,"SYS_bpf","","",N,N],[17,"SYS_execveat","","",N,N],[17,"SYS_userfaultfd","","",N,N],[17,"SYS_membarrier","","",N,N],[17,"SYS_mlock2","","",N,N],[17,"SYS_copy_file_range","","",N,N],[17,"SYS_preadv2","","",N,N],[17,"SYS_pwritev2","","",N,N],[17,"SYS_pkey_mprotect","","",N,N],[17,"SYS_pkey_alloc","","",N,N],[17,"SYS_pkey_free","","",N,N],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result",["error"]]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,N],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,N],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,N],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"sigevent"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"mq_attr"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"mmsghdr"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"Elf32_Chdr"],[3,"Elf64_Chdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_fpregs_struct"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"statvfs"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"fd_set"],[3,"in6_rtmsg"],[4,"c_void"],[4,"DIR"],[4,"locale_t"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"],[4,"fpos64_t"]]};
searchIndex["libloading"]={"doc":"A memory-safer wrapper around system dynamic library loading primitives.","items":[[3,"Library","libloading","A loaded dynamic library.",N,N],[3,"Symbol","","Symbol from a library.",N,N],[0,"os","","Unsafe, platform specific bindings to dynamic library loading facilities.",N,N],[0,"unix","libloading::os","UNIX implementation of dynamic library loading.",N,N],[3,"Library","libloading::os::unix","A platform-specific equivalent of the cross-platform `Library`.",N,N],[3,"Symbol","","Symbol from a library.",N,N],[11,"new","","Find and load a shared library (module).",0,[[["p"]],["result",["library"]]]],[11,"this","","Load the dynamic libraries linked into main program.",0,[[],["library"]]],[11,"open","","Find and load a shared library (module).",0,[[["option"],["c_int"]],["result",["library"]]]],[11,"get","","Get a pointer to function or static variable by symbol name.",0,N],[11,"drop","","",0,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"lift_option","","Lift Option out of the symbol.",1,[[["self"]],["option",["symbol"]]]],[11,"clone","","",1,[[["self"]],["symbol"]]],[11,"deref","","",1,[[["self"]],["t"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[0,"windows","libloading::os","Windows implementation of dynamic library loading.",N,N],[0,"changelog","libloading","Project changelog",N,N],[0,"r0_5_0","libloading::changelog","Release 0.5.0 (2018-01-11)",N,N],[0,"r0_4_3","","Release 0.4.3 (2017-12-07)",N,N],[0,"r0_4_2","","Release 0.4.2 (2017-09-24)",N,N],[0,"r0_4_1","","Release 0.4.1 (2017-08-29)",N,N],[0,"r0_4_0","","Release 0.4.0 (2017-05-01)",N,N],[0,"r0_3_4","","Release 0.3.4 (2017-03-25)",N,N],[0,"r0_3_3","","Release 0.3.3 (2017-03-25)",N,N],[0,"r0_3_2","","Release 0.3.2 (2017-02-10)",N,N],[0,"r0_3_1","","Release 0.3.1 (2016-10-01)",N,N],[0,"r0_3_0","","Release 0.3.0 (2016-07-27)",N,N],[6,"Result","libloading","",N,N],[11,"new","","Find and load a dynamic library.",2,[[["p"]],["result",["library"]]]],[11,"get","","Get a pointer to function or static variable by symbol name.",2,N],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"from","","",2,[[["library"]],["library"]]],[11,"from","libloading::os::unix","",0,[[["library"]],["library"]]],[11,"into_raw","libloading","Extract the wrapped `os::platform::Symbol`.",3,[[["self"]],["symbol"]]],[11,"from_raw","","Wrap the `os::platform::Symbol` into this safe wrapper.",3,[[["symbol"],["l"]],["symbol"]]],[11,"lift_option","","Lift Option out of the symbol.",3,[[["self"]],["option",["symbol"]]]],[11,"clone","","",3,[[["self"]],["symbol"]]],[11,"deref","","",3,[[["self"]],["t"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","libloading::os::unix","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]]],"paths":[[3,"Library"],[3,"Symbol"],[3,"Library"],[3,"Symbol"]]};
searchIndex["log"]={"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The \"payload\" of a log message.",N,N],[3,"LogMetadata","","Metadata about a log message.",N,N],[3,"LogLocation","","The location of a log message.",N,N],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level filter.",N,N],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",N,N],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has already been called or if `set_logger_raw` has not been called yet.",N,N],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",N,N],[13,"Error","","The \"error\" level.",0,N],[13,"Warn","","The \"warn\" level.",0,N],[13,"Info","","The \"info\" level.",0,N],[13,"Debug","","The \"debug\" level.",0,N],[13,"Trace","","The \"trace\" level.",0,N],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging framework.",N,N],[13,"Off","","A level lower than all log levels.",1,N],[13,"Error","","Corresponds to the `Error` log level.",1,N],[13,"Warn","","Corresponds to the `Warn` log level.",1,N],[13,"Info","","Corresponds to the `Info` log level.",1,N],[13,"Debug","","Corresponds to the `Debug` log level.",1,N],[13,"Trace","","Corresponds to the `Trace` log level.",1,N],[5,"max_log_level","","Returns the current maximum log level.",N,[[],["loglevelfilter"]]],[5,"set_logger","","Sets the global logger.",N,[[["m"]],["result",["setloggererror"]]]],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",N,[[["m"]],["result",["setloggererror"]]]],[5,"shutdown_logger","","Shuts down the global logger.",N,[[],["result",["box","shutdownloggererror"]]]],[5,"shutdown_logger_raw","","Shuts down the global logger.",N,[[],["result",["shutdownloggererror"]]]],[8,"Log","","A trait encapsulating the operations required of a logger",N,N],[10,"enabled","","Determines if a log message with the specified metadata would be logged.",2,[[["self"],["logmetadata"]],["bool"]]],[10,"log","","Logs the `LogRecord`.",2,[[["self"],["logrecord"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["loglevel"]]],[11,"eq","","",0,[[["self"],["loglevel"]],["bool"]]],[11,"eq","","",0,[[["self"],["loglevelfilter"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["loglevel"]],["option",["ordering"]]]],[11,"partial_cmp","","",0,[[["self"],["loglevelfilter"]],["option",["ordering"]]]],[11,"cmp","","",0,[[["self"],["loglevel"]],["ordering"]]],[11,"from_str","","",0,[[["str"]],["result",["loglevel"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"max","","Returns the most verbose logging level.",0,[[],["loglevel"]]],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,[[["self"]],["loglevelfilter"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["loglevelfilter"]]],[11,"eq","","",1,[[["self"],["loglevelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["loglevel"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["loglevelfilter"]],["option",["ordering"]]]],[11,"partial_cmp","","",1,[[["self"],["loglevel"]],["option",["ordering"]]]],[11,"cmp","","",1,[[["self"],["loglevelfilter"]],["ordering"]]],[11,"from_str","","",1,[[["str"]],["result",["loglevelfilter"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["loglevelfilter"]]],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,[[["self"]],["option",["loglevel"]]]],[11,"args","","The message body.",3,[[["self"]],["arguments"]]],[11,"metadata","","Metadata about the log directive.",3,[[["self"]],["logmetadata"]]],[11,"location","","The location of the log directive.",3,[[["self"]],["loglocation"]]],[11,"level","","The verbosity level of the message.",3,[[["self"]],["loglevel"]]],[11,"target","","The name of the target of the directive.",3,[[["self"]],["str"]]],[11,"level","","The verbosity level of the message.",4,[[["self"]],["loglevel"]]],[11,"target","","The name of the target of the directive.",4,[[["self"]],["str"]]],[11,"clone","","",5,[[["self"]],["loglocation"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"module_path","","The module path of the message.",5,[[["self"]],["str"]]],[11,"file","","The source file containing the message.",5,[[["self"]],["str"]]],[11,"line","","The line containing the message.",5,[[["self"]],["u32"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"get","","Gets the current maximum log level filter.",6,[[["self"]],["loglevelfilter"]]],[11,"set","","Sets the maximum log level.",6,[[["self"],["loglevelfilter"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"description","","",8,[[["self"]],["str"]]],[14,"log","","The standard logging macro.",N,N],[14,"error","","Logs a message at the error level.",N,N],[14,"warn","","Logs a message at the warn level.",N,N],[14,"info","","Logs a message at the info level.",N,N],[14,"debug","","Logs a message at the debug level.",N,N],[14,"trace","","Logs a message at the trace level.",N,N],[14,"log_enabled","","Determines if a message logged at the specified level in that module will be logged.",N,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["mio"]={"doc":"A fast, low-level IO library for Rust focusing on non-blocking APIs, event notification, and other useful utilities for building high performance IO apps.","items":[[3,"Poll","mio","Polls for readiness events on all registered values.",N,N],[3,"Registration","","Handle to a user space `Poll` registration.",N,N],[3,"SetReadiness","","Updates the readiness state of the associated `Registration`.",N,N],[3,"PollOpt","","Options supplied when registering an `Evented` handle with `Poll`",N,N],[3,"Ready","","A set of readiness event kinds",N,N],[3,"Token","","Associates readiness notifications with [`Evented`] handles.",N,N],[12,"0","","",0,N],[3,"Events","","A collection of readiness events.",N,N],[11,"eq","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"ne","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"clone","","",1,[[["self"]],["pollopt"]]],[11,"partial_cmp","","",1,[[["self"],["pollopt"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"le","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"gt","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"ge","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"cmp","","",1,[[["self"],["pollopt"]],["ordering"]]],[11,"empty","","Return a `PollOpt` representing no set options.",1,[[],["pollopt"]]],[11,"edge","","Return a `PollOpt` representing edge-triggered notifications.",1,[[],["pollopt"]]],[11,"level","","Return a `PollOpt` representing level-triggered notifications.",1,[[],["pollopt"]]],[11,"oneshot","","Return a `PollOpt` representing oneshot notifications.",1,[[],["pollopt"]]],[11,"is_edge","","Returns true if the options include edge-triggered notifications.",1,[[["self"]],["bool"]]],[11,"is_level","","Returns true if the options include level-triggered notifications.",1,[[["self"]],["bool"]]],[11,"is_oneshot","","Returns true if the options includes oneshot.",1,[[["self"]],["bool"]]],[11,"contains","","Returns true if `self` is a superset of `other`.",1,[[["self"],["pollopt"]],["bool"]]],[11,"insert","","Adds all options represented by `other` into `self`.",1,[[["self"],["pollopt"]]]],[11,"remove","","Removes all options represented by `other` from `self`.",1,[[["self"],["pollopt"]]]],[11,"bitor","","",1,[[["self"],["pollopt"]],["pollopt"]]],[11,"bitxor","","",1,[[["self"],["pollopt"]],["pollopt"]]],[11,"bitand","","",1,[[["self"],["pollopt"]],["pollopt"]]],[11,"sub","","",1,[[["self"],["pollopt"]],["pollopt"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",2,[[["self"],["ready"]],["bool"]]],[11,"ne","","",2,[[["self"],["ready"]],["bool"]]],[11,"clone","","",2,[[["self"]],["ready"]]],[11,"partial_cmp","","",2,[[["self"],["ready"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["ready"]],["bool"]]],[11,"le","","",2,[[["self"],["ready"]],["bool"]]],[11,"gt","","",2,[[["self"],["ready"]],["bool"]]],[11,"ge","","",2,[[["self"],["ready"]],["bool"]]],[11,"cmp","","",2,[[["self"],["ready"]],["ordering"]]],[11,"empty","","Returns the empty `Ready` set.",2,[[],["ready"]]],[11,"readable","","Returns a `Ready` representing readable readiness.",2,[[],["ready"]]],[11,"writable","","Returns a `Ready` representing writable readiness.",2,[[],["ready"]]],[11,"all","","Returns a `Ready` representing readiness for all operations.",2,[[],["ready"]]],[11,"is_empty","","Returns true if `Ready` is the empty set",2,[[["self"]],["bool"]]],[11,"is_readable","","Returns true if the value includes readable readiness",2,[[["self"]],["bool"]]],[11,"is_writable","","Returns true if the value includes writable readiness",2,[[["self"]],["bool"]]],[11,"insert","","Adds all readiness represented by `other` into `self`.",2,[[["self"],["t"]]]],[11,"remove","","Removes all options represented by `other` from `self`.",2,[[["self"],["t"]]]],[11,"contains","","Returns true if `self` is a superset of `other`.",2,[[["self"],["t"]],["bool"]]],[11,"from_usize","","Create a `Ready` instance using the given `usize` representation.",2,[[["usize"]],["ready"]]],[11,"as_usize","","Returns a `usize` representation of the `Ready` value.",2,[[["self"]],["usize"]]],[11,"bitor","","",2,[[["self"],["t"]],["ready"]]],[11,"bitor_assign","","",2,[[["self"],["t"]]]],[11,"bitxor","","",2,[[["self"],["t"]],["ready"]]],[11,"bitxor_assign","","",2,[[["self"],["t"]]]],[11,"bitand","","",2,[[["self"],["t"]],["ready"]]],[11,"bitand_assign","","",2,[[["self"],["t"]]]],[11,"sub","","",2,[[["self"],["t"]],["ready"]]],[11,"sub_assign","","",2,[[["self"],["t"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","","",3,[[["self"]],["setreadiness"]]],[11,"new","","Return a new `Poll` handle.",4,[[],["result",["poll"]]]],[11,"register","","Register an `Evented` handle with the `Poll` instance.",4,[[["self"],["e"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","Re-register an `Evented` handle with the `Poll` instance.",4,[[["self"],["e"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","Deregister an `Evented` handle with the `Poll` instance.",4,[[["self"],["e"]],["result"]]],[11,"poll","","Wait for readiness events",4,[[["self"],["events"],["option",["duration"]]],["result",["usize"]]]],[11,"poll_interruptible","","Like `poll`, but may be interrupted by a signal",4,[[["self"],["events"],["option",["duration"]]],["result",["usize"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"as_raw_fd","","",4,[[["self"]],["rawfd"]]],[11,"with_capacity","","Return a new `Events` capable of holding up to `capacity` events.",5,[[["usize"]],["events"]]],[11,"capacity","","Returns the number of `Event` values that `self` can hold.",5,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if `self` contains no `Event` values.",5,[[["self"]],["bool"]]],[11,"iter","","Returns an iterator over the `Event` values.",5,[[["self"]],["iter"]]],[11,"clear","","Clearing all `Event` values from container explicitly.",5,[[["self"]]]],[11,"into_iter","","",5,N],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"new2","","Create and return a new `Registration` and the associated `SetReadiness`.",6,N],[11,"register","","",6,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",6,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",6,[[["self"],["poll"]],["result"]]],[11,"drop","","",6,[[["self"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"readiness","","Returns the registration's current readiness.",3,[[["self"]],["ready"]]],[11,"set_readiness","","Set the registration's readiness",3,[[["self"],["ready"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"from","","",2,[[["unixready"]],["ready"]]],[11,"clone","","",0,[[["self"]],["token"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["token"]],["bool"]]],[11,"ne","","",0,[[["self"],["token"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["token"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["token"]],["bool"]]],[11,"le","","",0,[[["self"],["token"]],["bool"]]],[11,"gt","","",0,[[["self"],["token"]],["bool"]]],[11,"ge","","",0,[[["self"],["token"]],["bool"]]],[11,"cmp","","",0,[[["self"],["token"]],["ordering"]]],[11,"hash","","",0,N],[11,"from","","",0,[[["usize"]],["token"]]],[0,"net","","Networking primitives",N,N],[3,"TcpListener","mio::net","A structure representing a socket server",N,N],[3,"TcpStream","","A non-blocking TCP stream between a local socket and a remote socket.",N,N],[3,"UdpSocket","","A User Datagram Protocol socket.",N,N],[11,"connect","","Create a new TCP stream and issue a non-blocking connect to the specified address.",7,[[["socketaddr"]],["result",["tcpstream"]]]],[11,"connect_stream","","Creates a new `TcpStream` from the pending socket inside the given `std::net::TcpBuilder`, connecting it to the address specified.",7,[[["tcpstream"],["socketaddr"]],["result",["tcpstream"]]]],[11,"from_stream","","Creates a new `TcpStream` from a standard `net::TcpStream`.",7,[[["tcpstream"]],["result",["tcpstream"]]]],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",7,[[["self"]],["result",["socketaddr"]]]],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",7,[[["self"]],["result",["socketaddr"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",7,[[["self"]],["result",["tcpstream"]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",7,[[["self"],["shutdown"]],["result"]]],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",7,[[["self"],["bool"]],["result"]]],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",7,[[["self"]],["result",["bool"]]]],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",7,[[["self"],["usize"]],["result"]]],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",7,[[["self"]],["result",["usize"]]]],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",7,[[["self"],["usize"]],["result"]]],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",7,[[["self"]],["result",["usize"]]]],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on this socket.",7,[[["self"],["option",["duration"]]],["result"]]],[11,"keepalive","","Returns whether keepalive messages are enabled on this socket, and if so the duration of time between them.",7,[[["self"]],["result",["option"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",7,[[["self"],["u32"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",7,[[["self"]],["result",["u32"]]]],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",7,[[["self"],["bool"]],["result"]]],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",7,[[["self"]],["result",["bool"]]]],[11,"set_linger","","Sets the value for the `SO_LINGER` option on this socket.",7,[[["self"],["option",["duration"]]],["result"]]],[11,"linger","","Gets the value of the `SO_LINGER` option on this socket.",7,[[["self"]],["result",["option"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",7,[[["self"]],["result",["option"]]]],[11,"peek","","Receives data on the socket from the remote address to which it is connected, without removing that data from the queue. On success, returns the number of bytes peeked.",7,N],[11,"read_bufs","","Read in a list of buffers all at once.",7,N],[11,"write_bufs","","Write a list of buffers all at once.",7,N],[11,"read","","",7,N],[11,"write","","",7,N],[11,"flush","","",7,[[["self"]],["result"]]],[11,"register","","",7,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",7,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",7,[[["self"],["poll"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"bind","","Convenience method to bind a new TCP listener to the specified address to receive new connections.",8,[[["socketaddr"]],["result",["tcplistener"]]]],[11,"from_std","","Creates a new `TcpListener` from an instance of a `std::net::TcpListener` type.",8,[[["tcplistener"]],["result",["tcplistener"]]]],[11,"accept","","Accepts a new `TcpStream`.",8,[[["self"]],["result"]]],[11,"accept_std","","Accepts a new `std::net::TcpStream`.",8,[[["self"]],["result"]]],[11,"local_addr","","Returns the local socket address of this listener.",8,[[["self"]],["result",["socketaddr"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",8,[[["self"]],["result",["tcplistener"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",8,[[["self"],["u32"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",8,[[["self"]],["result",["u32"]]]],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",8,[[["self"],["bool"]],["result"]]],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",8,[[["self"]],["result",["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",8,[[["self"]],["result",["option"]]]],[11,"register","","",8,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",8,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",8,[[["self"],["poll"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"into_raw_fd","","",7,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",7,[[["self"]],["rawfd"]]],[11,"from_raw_fd","","",7,[[["rawfd"]],["tcpstream"]]],[11,"into_raw_fd","","",8,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",8,[[["self"]],["rawfd"]]],[11,"from_raw_fd","","",8,[[["rawfd"]],["tcplistener"]]],[11,"bind","","Creates a UDP socket from the given address.",9,[[["socketaddr"]],["result",["udpsocket"]]]],[11,"from_socket","","Creates a new mio-wrapped socket from an underlying and bound std socket.",9,[[["udpsocket"]],["result",["udpsocket"]]]],[11,"local_addr","","Returns the socket address that this socket was created from.",9,[[["self"]],["result",["socketaddr"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",9,[[["self"]],["result",["udpsocket"]]]],[11,"send_to","","Sends data on the socket to the given address. On success, returns the number of bytes written.",9,N],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes read and the address from whence the data came.",9,N],[11,"send","","Sends data on the socket to the address previously bound via connect(). On success, returns the number of bytes written.",9,N],[11,"recv","","Receives data from the socket previously bound with connect(). On success, returns the number of bytes read and the address from whence the data came.",9,N],[11,"connect","","Connects the UDP socket setting the default destination for `send()` and limiting packets that are read via `recv` from the address specified in `addr`.",9,[[["self"],["socketaddr"]],["result"]]],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",9,[[["self"],["bool"]],["result"]]],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",9,[[["self"]],["result",["bool"]]]],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",9,[[["self"],["bool"]],["result"]]],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",9,[[["self"]],["result",["bool"]]]],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",9,[[["self"],["u32"]],["result"]]],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",9,[[["self"]],["result",["u32"]]]],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",9,[[["self"],["bool"]],["result"]]],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",9,[[["self"]],["result",["bool"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",9,[[["self"],["u32"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",9,[[["self"]],["result",["u32"]]]],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",9,[[["self"],["ipv4addr"],["ipv4addr"]],["result"]]],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",9,[[["self"],["ipv6addr"],["u32"]],["result"]]],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",9,[[["self"],["ipv4addr"],["ipv4addr"]],["result"]]],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",9,[[["self"],["ipv6addr"],["u32"]],["result"]]],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",9,[[["self"],["bool"]],["result"]]],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",9,[[["self"]],["result",["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",9,[[["self"]],["result",["option"]]]],[11,"register","","",9,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",9,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",9,[[["self"],["poll"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"into_raw_fd","","",9,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",9,[[["self"]],["rawfd"]]],[11,"from_raw_fd","","",9,[[["rawfd"]],["udpsocket"]]],[0,"event","mio","Readiness event types and utilities.",N,N],[3,"Events","mio::event","A collection of readiness events.",N,N],[3,"Iter","","[`Events`] iterator.",N,N],[3,"Event","","An readiness event returned by [`Poll::poll`].",N,N],[8,"Evented","","A value that may be registered with `Poll`",N,N],[10,"register","","Register `self` with the given `Poll` instance.",10,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[10,"reregister","","Re-register `self` with the given `Poll` instance.",10,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[10,"deregister","","Deregister `self` from the given `Poll` instance",10,[[["self"],["poll"]],["result"]]],[0,"unix","mio","Unix only extensions",N,N],[3,"EventedFd","mio::unix","Adapter for `RawFd` providing an [`Evented`] implementation.",N,N],[12,"0","","",11,N],[3,"UnixReady","","Unix specific extensions to `Ready`",N,N],[11,"from","mio","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","mio::event","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"clone","","",12,[[["self"]],["event"]]],[11,"eq","","",12,[[["self"],["event"]],["bool"]]],[11,"ne","","",12,[[["self"],["event"]],["bool"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new `Event` containing `readiness` and `token`",12,[[["ready"],["token"]],["event"]]],[11,"readiness","","Returns the event's readiness.",12,[[["self"]],["ready"]]],[11,"token","","Returns the event's token.",12,[[["self"]],["token"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"clone","","",13,[[["self"]],["iter"]]],[11,"next","","",13,[[["self"]],["option",["event"]]]],[11,"from","mio::unix","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"register","","",11,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",11,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",11,[[["self"],["poll"]],["result"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"eq","","",14,[[["self"],["unixready"]],["bool"]]],[11,"ne","","",14,[[["self"],["unixready"]],["bool"]]],[11,"clone","","",14,[[["self"]],["unixready"]]],[11,"partial_cmp","","",14,[[["self"],["unixready"]],["option",["ordering"]]]],[11,"lt","","",14,[[["self"],["unixready"]],["bool"]]],[11,"le","","",14,[[["self"],["unixready"]],["bool"]]],[11,"gt","","",14,[[["self"],["unixready"]],["bool"]]],[11,"ge","","",14,[[["self"],["unixready"]],["bool"]]],[11,"cmp","","",14,[[["self"],["unixready"]],["ordering"]]],[11,"error","","Returns a `Ready` representing error readiness.",14,[[],["unixready"]]],[11,"hup","","Returns a `Ready` representing HUP readiness.",14,[[],["unixready"]]],[11,"priority","","Returns a `Ready` representing priority (`EPOLLPRI`) readiness",14,[[],["unixready"]]],[11,"is_error","","Returns true if the value includes error readiness",14,[[["self"]],["bool"]]],[11,"is_hup","","Returns true if the value includes HUP readiness",14,[[["self"]],["bool"]]],[11,"is_priority","","Returns true if `Ready` contains priority (`EPOLLPRI`) readiness",14,[[["self"]],["bool"]]],[11,"from","","",14,[[["ready"]],["unixready"]]],[11,"deref","","",14,[[["self"]],["ready"]]],[11,"deref_mut","","",14,[[["self"]],["ready"]]],[11,"bitor","","",14,[[["self"],["unixready"]],["unixready"]]],[11,"bitxor","","",14,[[["self"],["unixready"]],["unixready"]]],[11,"bitand","","",14,[[["self"],["unixready"]],["unixready"]]],[11,"sub","","",14,[[["self"],["unixready"]],["unixready"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"from","mio::net","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]]],"paths":[[3,"Token"],[3,"PollOpt"],[3,"Ready"],[3,"SetReadiness"],[3,"Poll"],[3,"Events"],[3,"Registration"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[8,"Evented"],[3,"EventedFd"],[3,"Event"],[3,"Iter"],[3,"UnixReady"]]};
searchIndex["mio_extras"]={"doc":"Extra components for use with Mio.","items":[[0,"channel","mio_extras","Thread safe communication channel implementing `Evented`",N,N],[3,"Sender","mio_extras::channel","The sending half of a channel.",N,N],[3,"SyncSender","","The sending half of a synchronous channel.",N,N],[3,"Receiver","","The receiving half of a channel.",N,N],[4,"SendError","","An error returned from the `Sender::send` or `SyncSender::send` function.",N,N],[13,"Io","","An IO error.",0,N],[13,"Disconnected","","The receiving half of the channel has disconnected.",0,N],[4,"TrySendError","","An error returned from the `SyncSender::try_send` function.",N,N],[13,"Io","","An IO error.",1,N],[13,"Full","","Data could not be sent because it would require the callee to block.",1,N],[13,"Disconnected","","The receiving half of the channel has disconnected.",1,N],[5,"channel","","Creates a new asynchronous channel, where the `Receiver` can be registered with `Poll`.",N,N],[5,"sync_channel","","Creates a new synchronous, bounded channel where the `Receiver` can be registered with `Poll`.",N,N],[11,"send","","Attempts to send a value on this channel, returning it back if it could not be sent.",2,[[["self"],["t"]],["result",["senderror"]]]],[11,"clone","","",2,[[["self"]],["sender"]]],[11,"send","","Sends a value on this synchronous channel.",3,[[["self"],["t"]],["result",["senderror"]]]],[11,"try_send","","Attempts to send a value on this channel without blocking.",3,[[["self"],["t"]],["result",["trysenderror"]]]],[11,"clone","","",3,[[["self"]],["syncsender"]]],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking.",4,[[["self"]],["result",["tryrecverror"]]]],[11,"register","","",4,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",4,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",4,[[["self"],["poll"]],["result"]]],[11,"from","","",0,[[["senderror"]],["senderror"]]],[11,"from","","",0,[[["error"]],["senderror"]]],[11,"from","","",1,[[["trysenderror"]],["trysenderror"]]],[11,"from","","",1,[[["senderror"]],["trysenderror"]]],[11,"from","","",1,[[["error"]],["trysenderror"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[0,"timer","mio_extras","Timer optimized for I/O related operations",N,N],[3,"Timer","mio_extras::timer","A timer.",N,N],[3,"Builder","","Used to create a `Timer`.",N,N],[3,"Timeout","","A timeout, as returned by `Timer::set_timeout`.",N,N],[11,"clone","","",5,[[["self"]],["timeout"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"tick_duration","","Set the tick duration.  Default is 100ms.",6,[[["self"],["duration"]],["builder"]]],[11,"num_slots","","Set the number of slots.  Default is 256.",6,[[["self"],["usize"]],["builder"]]],[11,"capacity","","Set the capacity.  Default is 65536.",6,[[["self"],["usize"]],["builder"]]],[11,"build","","Build a `Timer` with the parameters set on this `Builder`.",6,[[["self"]],["timer"]]],[11,"default","","",6,[[],["builder"]]],[11,"set_timeout","","Set a timeout.",7,[[["self"],["duration"],["t"]],["timeout"]]],[11,"cancel_timeout","","Cancel a timeout.",7,[[["self"],["timeout"]],["option"]]],[11,"poll","","Poll for an expired timer.",7,[[["self"]],["option"]]],[11,"default","","",7,[[],["timer"]]],[11,"register","","",7,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",7,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",7,[[["self"],["poll"]],["result"]]],[11,"to_owned","mio_extras::channel","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","mio_extras::timer","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]]],"paths":[[4,"SendError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Timeout"],[3,"Builder"],[3,"Timer"]]};
searchIndex["net2"]={"doc":"Extensions to `std::net` networking types.","items":[[3,"TcpBuilder","net2","An \"in progress\" TCP socket which has not yet been connected or listened.",N,N],[3,"UdpBuilder","","An \"in progress\" UDP socket which has not yet been connected.",N,N],[11,"new_v4","","Constructs a new TcpBuilder with the `AF_INET` domain, the `SOCK_STREAM` type, and with a protocol argument of 0.",0,[[],["result",["tcpbuilder"]]]],[11,"new_v6","","Constructs a new TcpBuilder with the `AF_INET6` domain, the `SOCK_STREAM` type, and with a protocol argument of 0.",0,[[],["result",["tcpbuilder"]]]],[11,"bind","","Binds this socket to the specified address.",0,[[["self"],["t"]],["result",["tcpbuilder"]]]],[11,"listen","","Mark a socket as ready to accept incoming connection requests using accept()",0,[[["self"],["i32"]],["result",["tcplistener"]]]],[11,"connect","","Initiate a connection on this socket to the specified address.",0,[[["self"],["t"]],["result",["tcpstream"]]]],[11,"to_tcp_stream","","Converts this builder into a `TcpStream`",0,[[["self"]],["result",["tcpstream"]]]],[11,"to_tcp_listener","","Converts this builder into a `TcpListener`",0,[[["self"]],["result",["tcplistener"]]]],[11,"local_addr","","Returns the address of the local half of this TCP socket.",0,[[["self"]],["result",["socketaddr"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"new_v4","","Constructs a new UdpBuilder with the `AF_INET` domain, the `SOCK_DGRAM` type, and with a protocol argument of 0.",1,[[],["result",["udpbuilder"]]]],[11,"new_v6","","Constructs a new UdpBuilder with the `AF_INET6` domain, the `SOCK_DGRAM` type, and with a protocol argument of 0.",1,[[],["result",["udpbuilder"]]]],[11,"bind","","Binds this socket to the specified address.",1,[[["self"],["t"]],["result",["udpsocket"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",0,[[["self"],["u32"]],["result"]]],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",0,[[["self"],["bool"]],["result"]]],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",0,[[["self"],["bool"]],["result"]]],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",0,[[["self"]],["result",["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",0,[[["self"]],["result",["option"]]]],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",1,[[["self"],["u32"]],["result"]]],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",1,[[["self"],["bool"]],["result"]]],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",1,[[["self"],["bool"]],["result"]]],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",1,[[["self"]],["result",["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",1,[[["self"]],["result",["option"]]]],[11,"from_raw_fd","","",0,[[["c_int"]],["tcpbuilder"]]],[11,"as_raw_fd","","",0,[[["self"]],["c_int"]]],[11,"from_raw_fd","","",1,[[["c_int"]],["udpbuilder"]]],[11,"as_raw_fd","","",1,[[["self"]],["c_int"]]],[0,"unix","","Unix-specific extensions to the `std::net` types.",N,N],[8,"UnixTcpBuilderExt","net2::unix","Unix-specific extensions for the `TcpBuilder` type in this library.",N,N],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",2,[[["self"],["bool"]],["result"]]],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",2,[[["self"]],["result",["bool"]]]],[8,"UnixUdpBuilderExt","","Unix-specific extensions for the `UdpBuilder` type in this library.",N,N],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",3,[[["self"],["bool"]],["result"]]],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",3,[[["self"]],["result",["bool"]]]],[11,"reuse_port","net2","",0,[[["self"],["bool"]],["result"]]],[11,"get_reuse_port","","",0,[[["self"]],["result",["bool"]]]],[11,"reuse_port","","",1,[[["self"],["bool"]],["result"]]],[11,"get_reuse_port","","",1,[[["self"]],["result",["bool"]]]],[8,"TcpStreamExt","","Extension methods for the standard [`TcpStream` type][link] in `std::net`.",N,N],[10,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",4,[[["self"],["bool"]],["result"]]],[10,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",4,[[["self"]],["result",["bool"]]]],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",4,[[["self"],["usize"]],["result"]]],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",4,[[["self"]],["result",["usize"]]]],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",4,[[["self"],["usize"]],["result"]]],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",4,[[["self"]],["result",["usize"]]]],[10,"set_keepalive_ms","","Sets whether keepalive messages are enabled to be sent on this socket.",4,[[["self"],["option",["u32"]]],["result"]]],[10,"keepalive_ms","","Returns whether keepalive messages are enabled on this socket, and if so the amount of milliseconds between them.",4,[[["self"]],["result",["option"]]]],[10,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on this socket.",4,[[["self"],["option",["duration"]]],["result"]]],[10,"keepalive","","Returns whether keepalive messages are enabled on this socket, and if so the duration of time between them.",4,[[["self"]],["result",["option"]]]],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",4,[[["self"],["option",["u32"]]],["result"]]],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",4,[[["self"],["option",["duration"]]],["result"]]],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,[[["self"]],["result",["option"]]]],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,[[["self"]],["result",["option"]]]],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",4,[[["self"],["option",["u32"]]],["result"]]],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",4,[[["self"],["option",["duration"]]],["result"]]],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,[[["self"]],["result",["option"]]]],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,[[["self"]],["result",["option"]]]],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",4,[[["self"],["u32"]],["result"]]],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",4,[[["self"]],["result",["u32"]]]],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",4,[[["self"],["bool"]],["result"]]],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",4,[[["self"]],["result",["bool"]]]],[10,"connect","","Executes a `connect` operation on this socket, establishing a connection to the host specified by `addr`.",4,[[["self"],["t"]],["result"]]],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",4,[[["self"]],["result",["option"]]]],[10,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",4,[[["self"],["bool"]],["result"]]],[10,"set_linger","","Sets the linger duration of this socket by setting the SO_LINGER option",4,[[["self"],["option",["duration"]]],["result"]]],[10,"linger","","reads the linger duration for this socket by getting the SO_LINGER option",4,[[["self"]],["result",["option"]]]],[8,"TcpListenerExt","","Extension methods for the standard [`TcpListener` type][link] in `std::net`.",N,N],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",5,[[["self"],["u32"]],["result"]]],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",5,[[["self"]],["result",["u32"]]]],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",5,[[["self"],["bool"]],["result"]]],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",5,[[["self"]],["result",["bool"]]]],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",5,[[["self"]],["result",["option"]]]],[10,"set_nonblocking","","Moves this TCP listener into or out of nonblocking mode.",5,[[["self"],["bool"]],["result"]]],[10,"set_linger","","Sets the linger duration of this socket by setting the SO_LINGER option",5,[[["self"],["option",["duration"]]],["result"]]],[10,"linger","","reads the linger duration for this socket by getting the SO_LINGER option",5,[[["self"]],["result",["option"]]]],[8,"UdpSocketExt","","Extension methods for the standard [`UdpSocket` type][link] in `std::net`.",N,N],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",6,[[["self"],["usize"]],["result"]]],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",6,[[["self"]],["result",["usize"]]]],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",6,[[["self"],["usize"]],["result"]]],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",6,[[["self"]],["result",["usize"]]]],[10,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",6,[[["self"],["bool"]],["result"]]],[10,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",6,[[["self"]],["result",["bool"]]]],[10,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",6,[[["self"],["bool"]],["result"]]],[10,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",6,[[["self"]],["result",["bool"]]]],[10,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",6,[[["self"],["u32"]],["result"]]],[10,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",6,[[["self"]],["result",["u32"]]]],[10,"set_multicast_hops_v6","","Sets the value of the `IPV6_MULTICAST_HOPS` option for this socket",6,[[["self"],["u32"]],["result"]]],[10,"multicast_hops_v6","","Gets the value of the `IPV6_MULTICAST_HOPS` option for this socket",6,[[["self"]],["result",["u32"]]]],[10,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",6,[[["self"],["bool"]],["result"]]],[10,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",6,[[["self"]],["result",["bool"]]]],[10,"set_multicast_if_v4","","Sets the value of the `IP_MULTICAST_IF` option for this socket.",6,[[["self"],["ipv4addr"]],["result"]]],[10,"multicast_if_v4","","Gets the value of the `IP_MULTICAST_IF` option for this socket.",6,[[["self"]],["result",["ipv4addr"]]]],[10,"set_multicast_if_v6","","Sets the value of the `IPV6_MULTICAST_IF` option for this socket.",6,[[["self"],["u32"]],["result"]]],[10,"multicast_if_v6","","Gets the value of the `IPV6_MULTICAST_IF` option for this socket.",6,[[["self"]],["result",["u32"]]]],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",6,[[["self"],["u32"]],["result"]]],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",6,[[["self"]],["result",["u32"]]]],[10,"set_unicast_hops_v6","","Sets the value for the `IPV6_UNICAST_HOPS` option on this socket.",6,[[["self"],["u32"]],["result"]]],[10,"unicast_hops_v6","","Gets the value of the `IPV6_UNICAST_HOPS` option for this socket.",6,[[["self"]],["result",["u32"]]]],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",6,[[["self"],["bool"]],["result"]]],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",6,[[["self"]],["result",["bool"]]]],[10,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",6,[[["self"],["ipv4addr"],["ipv4addr"]],["result"]]],[10,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",6,[[["self"],["ipv6addr"],["u32"]],["result"]]],[10,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",6,[[["self"],["ipv4addr"],["ipv4addr"]],["result"]]],[10,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",6,[[["self"],["ipv6addr"],["u32"]],["result"]]],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",6,[[["self"],["option",["u32"]]],["result"]]],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",6,[[["self"],["option",["duration"]]],["result"]]],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,[[["self"]],["result",["option"]]]],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,[[["self"]],["result",["option"]]]],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",6,[[["self"],["option",["u32"]]],["result"]]],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",6,[[["self"],["option",["duration"]]],["result"]]],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,[[["self"]],["result",["option"]]]],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,[[["self"]],["result",["option"]]]],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",6,[[["self"]],["result",["option"]]]],[10,"connect","","Connects this UDP socket to a remote address, allowing the `send` and `recv` syscalls to be used to send data and also applies filters to only receive data from the specified address.",6,[[["self"],["a"]],["result"]]],[10,"send","","Sends data on the socket to the remote address to which it is connected.",6,N],[10,"recv","","Receives data on the socket from the remote address to which it is connected.",6,N],[10,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",6,[[["self"],["bool"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]]],"paths":[[3,"TcpBuilder"],[3,"UdpBuilder"],[8,"UnixTcpBuilderExt"],[8,"UnixUdpBuilderExt"],[8,"TcpStreamExt"],[8,"TcpListenerExt"],[8,"UdpSocketExt"]]};
searchIndex["nix"]={"doc":"Rust friendly bindings to the various *nix system functions.","items":[[4,"Error","nix","Nix Error Type",N,N],[13,"Sys","","",0,N],[13,"InvalidPath","","",0,N],[13,"InvalidUtf8","","The operation involved a conversion to Rust's native String type, which failed because the string did not contain all valid UTF-8.",0,N],[13,"UnsupportedOperation","","The operation is not supported by Nix, in this instance either use the libc bindings or consult the module documentation to see if there is a more appropriate interface available.",0,N],[0,"errno","","",N,N],[4,"Errno","nix::errno","",N,N],[13,"UnknownErrno","","",1,N],[13,"EPERM","","",1,N],[13,"ENOENT","","",1,N],[13,"ESRCH","","",1,N],[13,"EINTR","","",1,N],[13,"EIO","","",1,N],[13,"ENXIO","","",1,N],[13,"E2BIG","","",1,N],[13,"ENOEXEC","","",1,N],[13,"EBADF","","",1,N],[13,"ECHILD","","",1,N],[13,"EAGAIN","","",1,N],[13,"ENOMEM","","",1,N],[13,"EACCES","","",1,N],[13,"EFAULT","","",1,N],[13,"ENOTBLK","","",1,N],[13,"EBUSY","","",1,N],[13,"EEXIST","","",1,N],[13,"EXDEV","","",1,N],[13,"ENODEV","","",1,N],[13,"ENOTDIR","","",1,N],[13,"EISDIR","","",1,N],[13,"EINVAL","","",1,N],[13,"ENFILE","","",1,N],[13,"EMFILE","","",1,N],[13,"ENOTTY","","",1,N],[13,"ETXTBSY","","",1,N],[13,"EFBIG","","",1,N],[13,"ENOSPC","","",1,N],[13,"ESPIPE","","",1,N],[13,"EROFS","","",1,N],[13,"EMLINK","","",1,N],[13,"EPIPE","","",1,N],[13,"EDOM","","",1,N],[13,"ERANGE","","",1,N],[13,"EDEADLK","","",1,N],[13,"ENAMETOOLONG","","",1,N],[13,"ENOLCK","","",1,N],[13,"ENOSYS","","",1,N],[13,"ENOTEMPTY","","",1,N],[13,"ELOOP","","",1,N],[13,"ENOMSG","","",1,N],[13,"EIDRM","","",1,N],[13,"ECHRNG","","",1,N],[13,"EL2NSYNC","","",1,N],[13,"EL3HLT","","",1,N],[13,"EL3RST","","",1,N],[13,"ELNRNG","","",1,N],[13,"EUNATCH","","",1,N],[13,"ENOCSI","","",1,N],[13,"EL2HLT","","",1,N],[13,"EBADE","","",1,N],[13,"EBADR","","",1,N],[13,"EXFULL","","",1,N],[13,"ENOANO","","",1,N],[13,"EBADRQC","","",1,N],[13,"EBADSLT","","",1,N],[13,"EBFONT","","",1,N],[13,"ENOSTR","","",1,N],[13,"ENODATA","","",1,N],[13,"ETIME","","",1,N],[13,"ENOSR","","",1,N],[13,"ENONET","","",1,N],[13,"ENOPKG","","",1,N],[13,"EREMOTE","","",1,N],[13,"ENOLINK","","",1,N],[13,"EADV","","",1,N],[13,"ESRMNT","","",1,N],[13,"ECOMM","","",1,N],[13,"EPROTO","","",1,N],[13,"EMULTIHOP","","",1,N],[13,"EDOTDOT","","",1,N],[13,"EBADMSG","","",1,N],[13,"EOVERFLOW","","",1,N],[13,"ENOTUNIQ","","",1,N],[13,"EBADFD","","",1,N],[13,"EREMCHG","","",1,N],[13,"ELIBACC","","",1,N],[13,"ELIBBAD","","",1,N],[13,"ELIBSCN","","",1,N],[13,"ELIBMAX","","",1,N],[13,"ELIBEXEC","","",1,N],[13,"EILSEQ","","",1,N],[13,"ERESTART","","",1,N],[13,"ESTRPIPE","","",1,N],[13,"EUSERS","","",1,N],[13,"ENOTSOCK","","",1,N],[13,"EDESTADDRREQ","","",1,N],[13,"EMSGSIZE","","",1,N],[13,"EPROTOTYPE","","",1,N],[13,"ENOPROTOOPT","","",1,N],[13,"EPROTONOSUPPORT","","",1,N],[13,"ESOCKTNOSUPPORT","","",1,N],[13,"EOPNOTSUPP","","",1,N],[13,"EPFNOSUPPORT","","",1,N],[13,"EAFNOSUPPORT","","",1,N],[13,"EADDRINUSE","","",1,N],[13,"EADDRNOTAVAIL","","",1,N],[13,"ENETDOWN","","",1,N],[13,"ENETUNREACH","","",1,N],[13,"ENETRESET","","",1,N],[13,"ECONNABORTED","","",1,N],[13,"ECONNRESET","","",1,N],[13,"ENOBUFS","","",1,N],[13,"EISCONN","","",1,N],[13,"ENOTCONN","","",1,N],[13,"ESHUTDOWN","","",1,N],[13,"ETOOMANYREFS","","",1,N],[13,"ETIMEDOUT","","",1,N],[13,"ECONNREFUSED","","",1,N],[13,"EHOSTDOWN","","",1,N],[13,"EHOSTUNREACH","","",1,N],[13,"EALREADY","","",1,N],[13,"EINPROGRESS","","",1,N],[13,"ESTALE","","",1,N],[13,"EUCLEAN","","",1,N],[13,"ENOTNAM","","",1,N],[13,"ENAVAIL","","",1,N],[13,"EISNAM","","",1,N],[13,"EREMOTEIO","","",1,N],[13,"EDQUOT","","",1,N],[13,"ENOMEDIUM","","",1,N],[13,"EMEDIUMTYPE","","",1,N],[13,"ECANCELED","","",1,N],[13,"ENOKEY","","",1,N],[13,"EKEYEXPIRED","","",1,N],[13,"EKEYREVOKED","","",1,N],[13,"EKEYREJECTED","","",1,N],[13,"EOWNERDEAD","","",1,N],[13,"ENOTRECOVERABLE","","",1,N],[13,"ERFKILL","","",1,N],[13,"EHWPOISON","","",1,N],[5,"from_i32","","",N,[[["i32"]],["errno"]]],[5,"errno","","Returns the platform-specific value of errno",N,[[],["i32"]]],[11,"clone","","",1,[[["self"]],["errno"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["self"],["errno"]],["bool"]]],[17,"EWOULDBLOCK","","",N,N],[17,"EDEADLOCK","","",N,N],[8,"ErrnoSentinel","","The sentinel value indicates that a function failed and more detailed information about the error can be found in `errno`",N,N],[10,"sentinel","","",2,[[],["self"]]],[11,"last","","",1,[[],["self"]]],[11,"desc","","",1,[[["self"]],["str"]]],[11,"from_i32","","",1,[[["i32"]],["errno"]]],[11,"clear","","",1,N],[11,"result","","Returns `Ok(value)` if it does not contain the sentinel value. This should not be used when `-1` is not the errno sentinel value.",1,[[["s"]],["result"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[0,"features","nix","Feature tests for OS functionality",N,N],[5,"socket_atomic_cloexec","nix::features","Check if the OS supports atomic close-on-exec for sockets",N,[[],["bool"]]],[0,"fcntl","nix","",N,N],[3,"AtFlags","nix::fcntl","",N,N],[3,"OFlag","","Configuration options for opened files.",N,N],[3,"SealFlag","","Additional flags for file sealing, which allows for limiting operations on a file.",N,N],[3,"FdFlag","","Additional configuration flags for `fcntl`'s `F_SETFD`.",N,N],[3,"SpliceFFlags","","Additional flags to `splice` and friends.",N,N],[3,"FallocateFlags","","Mode argument flags for fallocate determining operation performed on a given range.",N,N],[4,"FcntlArg","","",N,N],[13,"F_DUPFD","","",3,N],[13,"F_DUPFD_CLOEXEC","","",3,N],[13,"F_GETFD","","",3,N],[13,"F_SETFD","","",3,N],[13,"F_GETFL","","",3,N],[13,"F_SETFL","","",3,N],[13,"F_SETLK","","",3,N],[13,"F_SETLKW","","",3,N],[13,"F_GETLK","","",3,N],[13,"F_OFD_SETLK","","",3,N],[13,"F_OFD_SETLKW","","",3,N],[13,"F_OFD_GETLK","","",3,N],[13,"F_ADD_SEALS","","",3,N],[13,"F_GET_SEALS","","",3,N],[13,"F_GETPIPE_SZ","","",3,N],[13,"F_SETPIPE_SZ","","",3,N],[4,"FlockArg","","",N,N],[13,"LockShared","","",4,N],[13,"LockExclusive","","",4,N],[13,"Unlock","","",4,N],[13,"LockSharedNonblock","","",4,N],[13,"LockExclusiveNonblock","","",4,N],[13,"UnlockNonblock","","",4,N],[5,"open","","",N,[[["p"],["oflag"],["mode"]],["result",["rawfd"]]]],[5,"openat","","",N,[[["rawfd"],["p"],["oflag"],["mode"]],["result",["rawfd"]]]],[5,"readlink","","",N,N],[5,"readlinkat","","",N,N],[5,"fcntl","","",N,[[["rawfd"],["fcntlarg"]],["result",["c_int"]]]],[5,"flock","","",N,[[["rawfd"],["flockarg"]],["result"]]],[5,"splice","","",N,[[["rawfd"],["option",["loff_t"]],["rawfd"],["option",["loff_t"]],["usize"],["splicefflags"]],["result",["usize"]]]],[5,"tee","","",N,[[["rawfd"],["rawfd"],["usize"],["splicefflags"]],["result",["usize"]]]],[5,"vmsplice","","",N,N],[5,"fallocate","","Manipulates file space.",N,[[["rawfd"],["fallocateflags"],["off_t"],["off_t"]],["result",["c_int"]]]],[11,"eq","","",5,[[["self"],["atflags"]],["bool"]]],[11,"ne","","",5,[[["self"],["atflags"]],["bool"]]],[11,"clone","","",5,[[["self"]],["atflags"]]],[11,"partial_cmp","","",5,[[["self"],["atflags"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["atflags"]],["bool"]]],[11,"le","","",5,[[["self"],["atflags"]],["bool"]]],[11,"gt","","",5,[[["self"],["atflags"]],["bool"]]],[11,"ge","","",5,[[["self"],["atflags"]],["bool"]]],[11,"cmp","","",5,[[["self"],["atflags"]],["ordering"]]],[11,"hash","","",5,N],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[18,"AT_SYMLINK_NOFOLLOW","","",5,N],[18,"AT_NO_AUTOMOUNT","","",5,N],[18,"AT_EMPTY_PATH","","",5,N],[11,"empty","","Returns an empty set of flags.",5,[[],["atflags"]]],[11,"all","","Returns the set containing all flags.",5,[[],["atflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",5,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",5,[[["c_int"]],["option",["atflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",5,[[["c_int"]],["atflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",5,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",5,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",5,[[["self"],["atflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",5,[[["self"],["atflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",5,[[["self"],["atflags"]]]],[11,"remove","","Removes the specified flags in-place.",5,[[["self"],["atflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",5,[[["self"],["atflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",5,[[["self"],["atflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",5,[[["self"],["atflags"]],["atflags"]]],[11,"bitor_assign","","Adds the set of flags.",5,[[["self"],["atflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",5,[[["self"],["atflags"]],["atflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",5,[[["self"],["atflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",5,[[["self"],["atflags"]],["atflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",5,[[["self"],["atflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",5,[[["self"],["atflags"]],["atflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",5,[[["self"],["atflags"]]]],[11,"not","","Returns the complement of this set of flags.",5,[[["self"]],["atflags"]]],[11,"extend","","",5,[[["self"],["t"]]]],[11,"from_iter","","",5,[[["t"]],["atflags"]]],[11,"eq","","",6,[[["self"],["oflag"]],["bool"]]],[11,"ne","","",6,[[["self"],["oflag"]],["bool"]]],[11,"clone","","",6,[[["self"]],["oflag"]]],[11,"partial_cmp","","",6,[[["self"],["oflag"]],["option",["ordering"]]]],[11,"lt","","",6,[[["self"],["oflag"]],["bool"]]],[11,"le","","",6,[[["self"],["oflag"]],["bool"]]],[11,"gt","","",6,[[["self"],["oflag"]],["bool"]]],[11,"ge","","",6,[[["self"],["oflag"]],["bool"]]],[11,"cmp","","",6,[[["self"],["oflag"]],["ordering"]]],[11,"hash","","",6,N],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[18,"O_ACCMODE","","Mask for the access mode of the file.",6,N],[18,"O_APPEND","","Open the file in append-only mode.",6,N],[18,"O_ASYNC","","Generate a signal when input or output becomes possible.",6,N],[18,"O_CLOEXEC","","Closes the file descriptor once an `execve` call is made.",6,N],[18,"O_CREAT","","Create the file if it does not exist.",6,N],[18,"O_DIRECT","","Try to minimize cache effects of the I/O for this file.",6,N],[18,"O_DIRECTORY","","If the specified path isn't a directory, fail.",6,N],[18,"O_DSYNC","","Implicitly follow each `write()` with an `fdatasync()`.",6,N],[18,"O_EXCL","","Error out if a file was not created.",6,N],[18,"O_FSYNC","","Same as `O_SYNC`.",6,N],[18,"O_LARGEFILE","","Allow files whose sizes can't be represented in an `off_t` to be opened.",6,N],[18,"O_NOATIME","","Do not update the file last access time during `read(2)`s.",6,N],[18,"O_NOCTTY","","Don't attach the device as the process' controlling terminal.",6,N],[18,"O_NDELAY","","Same as `O_NONBLOCK`.",6,N],[18,"O_NOFOLLOW","","`open()` will fail if the given path is a symbolic link.",6,N],[18,"O_NONBLOCK","","When possible, open the file in nonblocking mode.",6,N],[18,"O_PATH","","Obtain a file descriptor for low-level access.",6,N],[18,"O_RDONLY","","Only allow reading.",6,N],[18,"O_RDWR","","Allow both reading and writing.",6,N],[18,"O_RSYNC","","Similar to `O_DSYNC` but applies to `read`s instead.",6,N],[18,"O_SYNC","","Implicitly follow each `write()` with an `fsync()`.",6,N],[18,"O_TMPFILE","","Create an unnamed temporary file.",6,N],[18,"O_TRUNC","","Truncate an existing regular file to 0 length if it allows writing.",6,N],[18,"O_WRONLY","","Only allow writing.",6,N],[11,"empty","","Returns an empty set of flags.",6,[[],["oflag"]]],[11,"all","","Returns the set containing all flags.",6,[[],["oflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",6,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",6,[[["c_int"]],["option",["oflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",6,[[["c_int"]],["oflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",6,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",6,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",6,[[["self"],["oflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",6,[[["self"],["oflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",6,[[["self"],["oflag"]]]],[11,"remove","","Removes the specified flags in-place.",6,[[["self"],["oflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",6,[[["self"],["oflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",6,[[["self"],["oflag"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",6,[[["self"],["oflag"]],["oflag"]]],[11,"bitor_assign","","Adds the set of flags.",6,[[["self"],["oflag"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",6,[[["self"],["oflag"]],["oflag"]]],[11,"bitxor_assign","","Toggles the set of flags.",6,[[["self"],["oflag"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",6,[[["self"],["oflag"]],["oflag"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",6,[[["self"],["oflag"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",6,[[["self"],["oflag"]],["oflag"]]],[11,"sub_assign","","Disables all flags enabled in the set.",6,[[["self"],["oflag"]]]],[11,"not","","Returns the complement of this set of flags.",6,[[["self"]],["oflag"]]],[11,"extend","","",6,[[["self"],["t"]]]],[11,"from_iter","","",6,[[["t"]],["oflag"]]],[11,"eq","","",7,[[["self"],["sealflag"]],["bool"]]],[11,"ne","","",7,[[["self"],["sealflag"]],["bool"]]],[11,"clone","","",7,[[["self"]],["sealflag"]]],[11,"partial_cmp","","",7,[[["self"],["sealflag"]],["option",["ordering"]]]],[11,"lt","","",7,[[["self"],["sealflag"]],["bool"]]],[11,"le","","",7,[[["self"],["sealflag"]],["bool"]]],[11,"gt","","",7,[[["self"],["sealflag"]],["bool"]]],[11,"ge","","",7,[[["self"],["sealflag"]],["bool"]]],[11,"cmp","","",7,[[["self"],["sealflag"]],["ordering"]]],[11,"hash","","",7,N],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[18,"F_SEAL_SEAL","","Prevents further calls to `fcntl()` with `F_ADD_SEALS`.",7,N],[18,"F_SEAL_SHRINK","","The file cannot be reduced in size.",7,N],[18,"F_SEAL_GROW","","The size of the file cannot be increased.",7,N],[18,"F_SEAL_WRITE","","The file contents cannot be modified.",7,N],[11,"empty","","Returns an empty set of flags.",7,[[],["sealflag"]]],[11,"all","","Returns the set containing all flags.",7,[[],["sealflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",7,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",7,[[["c_int"]],["option",["sealflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",7,[[["c_int"]],["sealflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",7,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",7,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",7,[[["self"],["sealflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",7,[[["self"],["sealflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",7,[[["self"],["sealflag"]]]],[11,"remove","","Removes the specified flags in-place.",7,[[["self"],["sealflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",7,[[["self"],["sealflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",7,[[["self"],["sealflag"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",7,[[["self"],["sealflag"]],["sealflag"]]],[11,"bitor_assign","","Adds the set of flags.",7,[[["self"],["sealflag"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",7,[[["self"],["sealflag"]],["sealflag"]]],[11,"bitxor_assign","","Toggles the set of flags.",7,[[["self"],["sealflag"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",7,[[["self"],["sealflag"]],["sealflag"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",7,[[["self"],["sealflag"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",7,[[["self"],["sealflag"]],["sealflag"]]],[11,"sub_assign","","Disables all flags enabled in the set.",7,[[["self"],["sealflag"]]]],[11,"not","","Returns the complement of this set of flags.",7,[[["self"]],["sealflag"]]],[11,"extend","","",7,[[["self"],["t"]]]],[11,"from_iter","","",7,[[["t"]],["sealflag"]]],[11,"eq","","",8,[[["self"],["fdflag"]],["bool"]]],[11,"ne","","",8,[[["self"],["fdflag"]],["bool"]]],[11,"clone","","",8,[[["self"]],["fdflag"]]],[11,"partial_cmp","","",8,[[["self"],["fdflag"]],["option",["ordering"]]]],[11,"lt","","",8,[[["self"],["fdflag"]],["bool"]]],[11,"le","","",8,[[["self"],["fdflag"]],["bool"]]],[11,"gt","","",8,[[["self"],["fdflag"]],["bool"]]],[11,"ge","","",8,[[["self"],["fdflag"]],["bool"]]],[11,"cmp","","",8,[[["self"],["fdflag"]],["ordering"]]],[11,"hash","","",8,N],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[18,"FD_CLOEXEC","","The file descriptor will automatically be closed during a successful `execve(2)`.",8,N],[11,"empty","","Returns an empty set of flags.",8,[[],["fdflag"]]],[11,"all","","Returns the set containing all flags.",8,[[],["fdflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",8,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",8,[[["c_int"]],["option",["fdflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",8,[[["c_int"]],["fdflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",8,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",8,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",8,[[["self"],["fdflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",8,[[["self"],["fdflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",8,[[["self"],["fdflag"]]]],[11,"remove","","Removes the specified flags in-place.",8,[[["self"],["fdflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",8,[[["self"],["fdflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",8,[[["self"],["fdflag"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",8,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitor_assign","","Adds the set of flags.",8,[[["self"],["fdflag"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",8,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitxor_assign","","Toggles the set of flags.",8,[[["self"],["fdflag"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",8,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",8,[[["self"],["fdflag"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",8,[[["self"],["fdflag"]],["fdflag"]]],[11,"sub_assign","","Disables all flags enabled in the set.",8,[[["self"],["fdflag"]]]],[11,"not","","Returns the complement of this set of flags.",8,[[["self"]],["fdflag"]]],[11,"extend","","",8,[[["self"],["t"]]]],[11,"from_iter","","",8,[[["t"]],["fdflag"]]],[11,"clone","","",4,[[["self"]],["flockarg"]]],[11,"eq","","",9,[[["self"],["splicefflags"]],["bool"]]],[11,"ne","","",9,[[["self"],["splicefflags"]],["bool"]]],[11,"clone","","",9,[[["self"]],["splicefflags"]]],[11,"partial_cmp","","",9,[[["self"],["splicefflags"]],["option",["ordering"]]]],[11,"lt","","",9,[[["self"],["splicefflags"]],["bool"]]],[11,"le","","",9,[[["self"],["splicefflags"]],["bool"]]],[11,"gt","","",9,[[["self"],["splicefflags"]],["bool"]]],[11,"ge","","",9,[[["self"],["splicefflags"]],["bool"]]],[11,"cmp","","",9,[[["self"],["splicefflags"]],["ordering"]]],[11,"hash","","",9,N],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[18,"SPLICE_F_MOVE","","Request that pages be moved instead of copied.",9,N],[18,"SPLICE_F_NONBLOCK","","Do not block on I/O.",9,N],[18,"SPLICE_F_MORE","","Hint that more data will be coming in a subsequent splice.",9,N],[18,"SPLICE_F_GIFT","","Gift the user pages to the kernel.",9,N],[11,"empty","","Returns an empty set of flags.",9,[[],["splicefflags"]]],[11,"all","","Returns the set containing all flags.",9,[[],["splicefflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",9,[[["self"]],["c_uint"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",9,[[["c_uint"]],["option",["splicefflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",9,[[["c_uint"]],["splicefflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",9,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",9,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",9,[[["self"],["splicefflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",9,[[["self"],["splicefflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",9,[[["self"],["splicefflags"]]]],[11,"remove","","Removes the specified flags in-place.",9,[[["self"],["splicefflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",9,[[["self"],["splicefflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",9,[[["self"],["splicefflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",9,[[["self"],["splicefflags"]],["splicefflags"]]],[11,"bitor_assign","","Adds the set of flags.",9,[[["self"],["splicefflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",9,[[["self"],["splicefflags"]],["splicefflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",9,[[["self"],["splicefflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",9,[[["self"],["splicefflags"]],["splicefflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",9,[[["self"],["splicefflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",9,[[["self"],["splicefflags"]],["splicefflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",9,[[["self"],["splicefflags"]]]],[11,"not","","Returns the complement of this set of flags.",9,[[["self"]],["splicefflags"]]],[11,"extend","","",9,[[["self"],["t"]]]],[11,"from_iter","","",9,[[["t"]],["splicefflags"]]],[11,"eq","","",10,[[["self"],["fallocateflags"]],["bool"]]],[11,"ne","","",10,[[["self"],["fallocateflags"]],["bool"]]],[11,"clone","","",10,[[["self"]],["fallocateflags"]]],[11,"partial_cmp","","",10,[[["self"],["fallocateflags"]],["option",["ordering"]]]],[11,"lt","","",10,[[["self"],["fallocateflags"]],["bool"]]],[11,"le","","",10,[[["self"],["fallocateflags"]],["bool"]]],[11,"gt","","",10,[[["self"],["fallocateflags"]],["bool"]]],[11,"ge","","",10,[[["self"],["fallocateflags"]],["bool"]]],[11,"cmp","","",10,[[["self"],["fallocateflags"]],["ordering"]]],[11,"hash","","",10,N],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[18,"FALLOC_FL_KEEP_SIZE","","File size is not changed.",10,N],[18,"FALLOC_FL_PUNCH_HOLE","","Deallocates space by creating a hole.",10,N],[18,"FALLOC_FL_COLLAPSE_RANGE","","Removes byte range from a file without leaving a hole.",10,N],[18,"FALLOC_FL_ZERO_RANGE","","Zeroes space in specified byte range.",10,N],[18,"FALLOC_FL_INSERT_RANGE","","Increases file space by inserting a hole within the file size.",10,N],[18,"FALLOC_FL_UNSHARE_RANGE","","Shared file data extants are made private to the file.",10,N],[11,"empty","","Returns an empty set of flags.",10,[[],["fallocateflags"]]],[11,"all","","Returns the set containing all flags.",10,[[],["fallocateflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",10,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",10,[[["c_int"]],["option",["fallocateflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",10,[[["c_int"]],["fallocateflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",10,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",10,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",10,[[["self"],["fallocateflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",10,[[["self"],["fallocateflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",10,[[["self"],["fallocateflags"]]]],[11,"remove","","Removes the specified flags in-place.",10,[[["self"],["fallocateflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",10,[[["self"],["fallocateflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",10,[[["self"],["fallocateflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",10,[[["self"],["fallocateflags"]],["fallocateflags"]]],[11,"bitor_assign","","Adds the set of flags.",10,[[["self"],["fallocateflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",10,[[["self"],["fallocateflags"]],["fallocateflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",10,[[["self"],["fallocateflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",10,[[["self"],["fallocateflags"]],["fallocateflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",10,[[["self"],["fallocateflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",10,[[["self"],["fallocateflags"]],["fallocateflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",10,[[["self"],["fallocateflags"]]]],[11,"not","","Returns the complement of this set of flags.",10,[[["self"]],["fallocateflags"]]],[11,"extend","","",10,[[["self"],["t"]]]],[11,"from_iter","","",10,[[["t"]],["fallocateflags"]]],[0,"ifaddrs","nix","Query network interface addresses",N,N],[3,"InterfaceAddress","nix::ifaddrs","Describes a single address for an interface as returned by `getifaddrs`.",N,N],[12,"interface_name","","Name of the network interface",11,N],[12,"flags","","Flags as from `SIOCGIFFLAGS` ioctl",11,N],[12,"address","","Network address of this interface",11,N],[12,"netmask","","Netmask of this interface",11,N],[12,"broadcast","","Broadcast address of this interface, if applicable",11,N],[12,"destination","","Point-to-point destination address",11,N],[3,"InterfaceAddressIterator","","Holds the results of `getifaddrs`.",N,N],[5,"getifaddrs","","Get interface addresses using libc's `getifaddrs`",N,[[],["result",["interfaceaddressiterator"]]]],[11,"clone","","",11,[[["self"]],["interfaceaddress"]]],[11,"hash","","",11,N],[11,"eq","","",11,[[["self"],["interfaceaddress"]],["bool"]]],[11,"ne","","",11,[[["self"],["interfaceaddress"]],["bool"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"hash","","",12,N],[11,"eq","","",12,[[["self"],["interfaceaddressiterator"]],["bool"]]],[11,"ne","","",12,[[["self"],["interfaceaddressiterator"]],["bool"]]],[11,"drop","","",12,[[["self"]]]],[11,"next","","",12,[[["self"]],["option"]]],[0,"mount","nix","",N,N],[3,"MsFlags","nix::mount","",N,N],[3,"MntFlags","","",N,N],[5,"mount","","",N,[[["option"],["p2"],["option"],["msflags"],["option"]],["result"]]],[5,"umount","","",N,[[["p"]],["result"]]],[5,"umount2","","",N,[[["p"],["mntflags"]],["result"]]],[11,"eq","","",13,[[["self"],["msflags"]],["bool"]]],[11,"ne","","",13,[[["self"],["msflags"]],["bool"]]],[11,"clone","","",13,[[["self"]],["msflags"]]],[11,"partial_cmp","","",13,[[["self"],["msflags"]],["option",["ordering"]]]],[11,"lt","","",13,[[["self"],["msflags"]],["bool"]]],[11,"le","","",13,[[["self"],["msflags"]],["bool"]]],[11,"gt","","",13,[[["self"],["msflags"]],["bool"]]],[11,"ge","","",13,[[["self"],["msflags"]],["bool"]]],[11,"cmp","","",13,[[["self"],["msflags"]],["ordering"]]],[11,"hash","","",13,N],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[18,"MS_RDONLY","","Mount read-only",13,N],[18,"MS_NOSUID","","Ignore suid and sgid bits",13,N],[18,"MS_NODEV","","Disallow access to device special files",13,N],[18,"MS_NOEXEC","","Disallow program execution",13,N],[18,"MS_SYNCHRONOUS","","Writes are synced at once",13,N],[18,"MS_REMOUNT","","Alter flags of a mounted FS",13,N],[18,"MS_MANDLOCK","","Allow mandatory locks on a FS",13,N],[18,"MS_DIRSYNC","","Directory modifications are synchronous",13,N],[18,"MS_NOATIME","","Do not update access times",13,N],[18,"MS_NODIRATIME","","Do not update directory access times",13,N],[18,"MS_BIND","","Linux 2.4.0 - Bind directory at different place",13,N],[18,"MS_MOVE","","",13,N],[18,"MS_REC","","",13,N],[18,"MS_SILENT","","",13,N],[18,"MS_POSIXACL","","",13,N],[18,"MS_UNBINDABLE","","",13,N],[18,"MS_PRIVATE","","",13,N],[18,"MS_SLAVE","","",13,N],[18,"MS_SHARED","","",13,N],[18,"MS_RELATIME","","",13,N],[18,"MS_KERNMOUNT","","",13,N],[18,"MS_I_VERSION","","",13,N],[18,"MS_STRICTATIME","","",13,N],[18,"MS_ACTIVE","","",13,N],[18,"MS_NOUSER","","",13,N],[18,"MS_RMT_MASK","","",13,N],[18,"MS_MGC_VAL","","",13,N],[18,"MS_MGC_MSK","","",13,N],[11,"empty","","Returns an empty set of flags.",13,[[],["msflags"]]],[11,"all","","Returns the set containing all flags.",13,[[],["msflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",13,[[["self"]],["c_ulong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",13,[[["c_ulong"]],["option",["msflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",13,[[["c_ulong"]],["msflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",13,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",13,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",13,[[["self"],["msflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",13,[[["self"],["msflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",13,[[["self"],["msflags"]]]],[11,"remove","","Removes the specified flags in-place.",13,[[["self"],["msflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",13,[[["self"],["msflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",13,[[["self"],["msflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",13,[[["self"],["msflags"]],["msflags"]]],[11,"bitor_assign","","Adds the set of flags.",13,[[["self"],["msflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",13,[[["self"],["msflags"]],["msflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",13,[[["self"],["msflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",13,[[["self"],["msflags"]],["msflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",13,[[["self"],["msflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",13,[[["self"],["msflags"]],["msflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",13,[[["self"],["msflags"]]]],[11,"not","","Returns the complement of this set of flags.",13,[[["self"]],["msflags"]]],[11,"extend","","",13,[[["self"],["t"]]]],[11,"from_iter","","",13,[[["t"]],["msflags"]]],[11,"eq","","",14,[[["self"],["mntflags"]],["bool"]]],[11,"ne","","",14,[[["self"],["mntflags"]],["bool"]]],[11,"clone","","",14,[[["self"]],["mntflags"]]],[11,"partial_cmp","","",14,[[["self"],["mntflags"]],["option",["ordering"]]]],[11,"lt","","",14,[[["self"],["mntflags"]],["bool"]]],[11,"le","","",14,[[["self"],["mntflags"]],["bool"]]],[11,"gt","","",14,[[["self"],["mntflags"]],["bool"]]],[11,"ge","","",14,[[["self"],["mntflags"]],["bool"]]],[11,"cmp","","",14,[[["self"],["mntflags"]],["ordering"]]],[11,"hash","","",14,N],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[18,"MNT_FORCE","","",14,N],[18,"MNT_DETACH","","",14,N],[18,"MNT_EXPIRE","","",14,N],[11,"empty","","Returns an empty set of flags.",14,[[],["mntflags"]]],[11,"all","","Returns the set containing all flags.",14,[[],["mntflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",14,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",14,[[["c_int"]],["option",["mntflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",14,[[["c_int"]],["mntflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",14,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",14,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",14,[[["self"],["mntflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",14,[[["self"],["mntflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",14,[[["self"],["mntflags"]]]],[11,"remove","","Removes the specified flags in-place.",14,[[["self"],["mntflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",14,[[["self"],["mntflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",14,[[["self"],["mntflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",14,[[["self"],["mntflags"]],["mntflags"]]],[11,"bitor_assign","","Adds the set of flags.",14,[[["self"],["mntflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",14,[[["self"],["mntflags"]],["mntflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",14,[[["self"],["mntflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",14,[[["self"],["mntflags"]],["mntflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",14,[[["self"],["mntflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",14,[[["self"],["mntflags"]],["mntflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",14,[[["self"],["mntflags"]]]],[11,"not","","Returns the complement of this set of flags.",14,[[["self"]],["mntflags"]]],[11,"extend","","",14,[[["self"],["t"]]]],[11,"from_iter","","",14,[[["t"]],["mntflags"]]],[0,"mqueue","nix","Posix Message Queue functions",N,N],[3,"MQ_OFlag","nix::mqueue","",N,N],[3,"FdFlag","","",N,N],[3,"MqAttr","","",N,N],[5,"mq_open","","Open a message queue",N,[[["cstring"],["mq_oflag"],["mode"],["option",["mqattr"]]],["result",["mqd_t"]]]],[5,"mq_unlink","","Remove a message queue",N,[[["cstring"]],["result"]]],[5,"mq_close","","Close a message queue",N,[[["mqd_t"]],["result"]]],[5,"mq_receive","","Receive a message from a message queue",N,N],[5,"mq_send","","Send a message to a message queue",N,N],[5,"mq_getattr","","Get message queue attributes",N,[[["mqd_t"]],["result",["mqattr"]]]],[5,"mq_setattr","","Set the attributes of the message queue. Only `O_NONBLOCK` can be set, everything else will be ignored Returns the old attributes It is recommend to use the `mq_set_nonblock()` and `mq_remove_nonblock()` convenience functions as they are easier to use",N,[[["mqd_t"],["mqattr"]],["result",["mqattr"]]]],[5,"mq_set_nonblock","","Convenience function. Sets the `O_NONBLOCK` attribute for a given message queue descriptor Returns the old attributes",N,[[["mqd_t"]],["result",["mqattr"]]]],[5,"mq_remove_nonblock","","Convenience function. Removes `O_NONBLOCK` attribute for a given message queue descriptor Returns the old attributes",N,[[["mqd_t"]],["result",["mqattr"]]]],[11,"eq","","",15,[[["self"],["mq_oflag"]],["bool"]]],[11,"ne","","",15,[[["self"],["mq_oflag"]],["bool"]]],[11,"clone","","",15,[[["self"]],["mq_oflag"]]],[11,"partial_cmp","","",15,[[["self"],["mq_oflag"]],["option",["ordering"]]]],[11,"lt","","",15,[[["self"],["mq_oflag"]],["bool"]]],[11,"le","","",15,[[["self"],["mq_oflag"]],["bool"]]],[11,"gt","","",15,[[["self"],["mq_oflag"]],["bool"]]],[11,"ge","","",15,[[["self"],["mq_oflag"]],["bool"]]],[11,"cmp","","",15,[[["self"],["mq_oflag"]],["ordering"]]],[11,"hash","","",15,N],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[18,"O_RDONLY","","",15,N],[18,"O_WRONLY","","",15,N],[18,"O_RDWR","","",15,N],[18,"O_CREAT","","",15,N],[18,"O_EXCL","","",15,N],[18,"O_NONBLOCK","","",15,N],[18,"O_CLOEXEC","","",15,N],[11,"empty","","Returns an empty set of flags.",15,[[],["mq_oflag"]]],[11,"all","","Returns the set containing all flags.",15,[[],["mq_oflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",15,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",15,[[["c_int"]],["option",["mq_oflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",15,[[["c_int"]],["mq_oflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",15,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",15,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",15,[[["self"],["mq_oflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",15,[[["self"],["mq_oflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",15,[[["self"],["mq_oflag"]]]],[11,"remove","","Removes the specified flags in-place.",15,[[["self"],["mq_oflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",15,[[["self"],["mq_oflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",15,[[["self"],["mq_oflag"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",15,[[["self"],["mq_oflag"]],["mq_oflag"]]],[11,"bitor_assign","","Adds the set of flags.",15,[[["self"],["mq_oflag"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",15,[[["self"],["mq_oflag"]],["mq_oflag"]]],[11,"bitxor_assign","","Toggles the set of flags.",15,[[["self"],["mq_oflag"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",15,[[["self"],["mq_oflag"]],["mq_oflag"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",15,[[["self"],["mq_oflag"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",15,[[["self"],["mq_oflag"]],["mq_oflag"]]],[11,"sub_assign","","Disables all flags enabled in the set.",15,[[["self"],["mq_oflag"]]]],[11,"not","","Returns the complement of this set of flags.",15,[[["self"]],["mq_oflag"]]],[11,"extend","","",15,[[["self"],["t"]]]],[11,"from_iter","","",15,[[["t"]],["mq_oflag"]]],[11,"eq","","",16,[[["self"],["fdflag"]],["bool"]]],[11,"ne","","",16,[[["self"],["fdflag"]],["bool"]]],[11,"clone","","",16,[[["self"]],["fdflag"]]],[11,"partial_cmp","","",16,[[["self"],["fdflag"]],["option",["ordering"]]]],[11,"lt","","",16,[[["self"],["fdflag"]],["bool"]]],[11,"le","","",16,[[["self"],["fdflag"]],["bool"]]],[11,"gt","","",16,[[["self"],["fdflag"]],["bool"]]],[11,"ge","","",16,[[["self"],["fdflag"]],["bool"]]],[11,"cmp","","",16,[[["self"],["fdflag"]],["ordering"]]],[11,"hash","","",16,N],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[18,"FD_CLOEXEC","","",16,N],[11,"empty","","Returns an empty set of flags.",16,[[],["fdflag"]]],[11,"all","","Returns the set containing all flags.",16,[[],["fdflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",16,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",16,[[["c_int"]],["option",["fdflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",16,[[["c_int"]],["fdflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",16,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",16,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",16,[[["self"],["fdflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",16,[[["self"],["fdflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",16,[[["self"],["fdflag"]]]],[11,"remove","","Removes the specified flags in-place.",16,[[["self"],["fdflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",16,[[["self"],["fdflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",16,[[["self"],["fdflag"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",16,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitor_assign","","Adds the set of flags.",16,[[["self"],["fdflag"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",16,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitxor_assign","","Toggles the set of flags.",16,[[["self"],["fdflag"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",16,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",16,[[["self"],["fdflag"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",16,[[["self"],["fdflag"]],["fdflag"]]],[11,"sub_assign","","Disables all flags enabled in the set.",16,[[["self"],["fdflag"]]]],[11,"not","","Returns the complement of this set of flags.",16,[[["self"]],["fdflag"]]],[11,"extend","","",16,[[["self"],["t"]]]],[11,"from_iter","","",16,[[["t"]],["fdflag"]]],[11,"clone","","",17,[[["self"]],["mqattr"]]],[11,"eq","","",17,[[["self"],["mqattr"]],["bool"]]],[11,"new","","",17,[[["c_long"],["c_long"],["c_long"],["c_long"]],["mqattr"]]],[11,"flags","","",17,[[["self"]],["c_long"]]],[0,"net","nix","Functionality involving network interfaces",N,N],[0,"if_","nix::net","Network interface name resolution.",N,N],[3,"InterfaceFlags","nix::net::if_","Standard interface flags, used by `getifaddrs`",N,N],[5,"if_nametoindex","","Resolve an interface into a interface number.",N,[[["p"]],["result",["c_uint"]]]],[11,"eq","","",18,[[["self"],["interfaceflags"]],["bool"]]],[11,"ne","","",18,[[["self"],["interfaceflags"]],["bool"]]],[11,"clone","","",18,[[["self"]],["interfaceflags"]]],[11,"partial_cmp","","",18,[[["self"],["interfaceflags"]],["option",["ordering"]]]],[11,"lt","","",18,[[["self"],["interfaceflags"]],["bool"]]],[11,"le","","",18,[[["self"],["interfaceflags"]],["bool"]]],[11,"gt","","",18,[[["self"],["interfaceflags"]],["bool"]]],[11,"ge","","",18,[[["self"],["interfaceflags"]],["bool"]]],[11,"cmp","","",18,[[["self"],["interfaceflags"]],["ordering"]]],[11,"hash","","",18,N],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[18,"IFF_UP","","Interface is running. (see `netdevice(7)`)",18,N],[18,"IFF_BROADCAST","","Valid broadcast address set. (see `netdevice(7)`)",18,N],[18,"IFF_DEBUG","","Internal debugging flag. (see `netdevice(7)`)",18,N],[18,"IFF_LOOPBACK","","Interface is a loopback interface. (see `netdevice(7)`)",18,N],[18,"IFF_POINTOPOINT","","Interface is a point-to-point link. (see `netdevice(7)`)",18,N],[18,"IFF_NOTRAILERS","","Avoid use of trailers. (see `netdevice(7)`)",18,N],[18,"IFF_RUNNING","","Resources allocated. (see `netdevice(7)`)",18,N],[18,"IFF_NOARP","","No arp protocol, L2 destination address not set. (see `netdevice(7)`)",18,N],[18,"IFF_PROMISC","","Interface is in promiscuous mode. (see `netdevice(7)`)",18,N],[18,"IFF_ALLMULTI","","Receive all multicast packets. (see `netdevice(7)`)",18,N],[18,"IFF_MASTER","","Master of a load balancing bundle. (see `netdevice(7)`)",18,N],[18,"IFF_SLAVE","","Slave of a load balancing bundle. (see `netdevice(7)`)",18,N],[18,"IFF_MULTICAST","","Supports multicast. (see `netdevice(7)`)",18,N],[18,"IFF_PORTSEL","","Is able to select media type via ifmap. (see `netdevice(7)`)",18,N],[18,"IFF_AUTOMEDIA","","Auto media selection active. (see `netdevice(7)`)",18,N],[18,"IFF_DYNAMIC","","The addresses are lost when the interface goes down. (see `netdevice(7)`)",18,N],[18,"IFF_LOWER_UP","","Driver signals L1 up. Volatile.",18,N],[18,"IFF_DORMANT","","Driver signals dormant. Volatile.",18,N],[18,"IFF_ECHO","","Echo sent packets. Volatile.",18,N],[18,"IFF_NO_PI","","Do not provide packet information",18,N],[18,"IFF_TUN","","TUN device (no Ethernet headers) ",18,N],[18,"IFF_TAP","","TAP device",18,N],[11,"empty","","Returns an empty set of flags.",18,[[],["interfaceflags"]]],[11,"all","","Returns the set containing all flags.",18,[[],["interfaceflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",18,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",18,[[["c_int"]],["option",["interfaceflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",18,[[["c_int"]],["interfaceflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",18,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",18,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",18,[[["self"],["interfaceflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",18,[[["self"],["interfaceflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",18,[[["self"],["interfaceflags"]]]],[11,"remove","","Removes the specified flags in-place.",18,[[["self"],["interfaceflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",18,[[["self"],["interfaceflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",18,[[["self"],["interfaceflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",18,[[["self"],["interfaceflags"]],["interfaceflags"]]],[11,"bitor_assign","","Adds the set of flags.",18,[[["self"],["interfaceflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",18,[[["self"],["interfaceflags"]],["interfaceflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",18,[[["self"],["interfaceflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",18,[[["self"],["interfaceflags"]],["interfaceflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",18,[[["self"],["interfaceflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",18,[[["self"],["interfaceflags"]],["interfaceflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",18,[[["self"],["interfaceflags"]]]],[11,"not","","Returns the complement of this set of flags.",18,[[["self"]],["interfaceflags"]]],[11,"extend","","",18,[[["self"],["t"]]]],[11,"from_iter","","",18,[[["t"]],["interfaceflags"]]],[0,"poll","nix","Wait for events to trigger on specific file descriptors",N,N],[3,"PollFd","nix::poll","This is a wrapper around `libc::pollfd`.",N,N],[3,"EventFlags","","These flags define the different events that can be monitored by `poll` and `ppoll`",N,N],[5,"poll","","`poll` waits for one of a set of file descriptors to become ready to perform I/O. (`poll(2)`)",N,N],[5,"ppoll","","`ppoll()` allows an application to safely wait until either a file descriptor becomes ready or until a signal is caught. (`poll(2)`)",N,N],[11,"clone","","",19,[[["self"]],["pollfd"]]],[11,"new","","Creates a new `PollFd` specifying the events of interest for a given file descriptor.",19,[[["rawfd"],["eventflags"]],["pollfd"]]],[11,"revents","","Returns the events that occured in the last call to `poll` or `ppoll`.",19,[[["self"]],["option",["eventflags"]]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"eq","","",20,[[["self"],["eventflags"]],["bool"]]],[11,"ne","","",20,[[["self"],["eventflags"]],["bool"]]],[11,"clone","","",20,[[["self"]],["eventflags"]]],[11,"partial_cmp","","",20,[[["self"],["eventflags"]],["option",["ordering"]]]],[11,"lt","","",20,[[["self"],["eventflags"]],["bool"]]],[11,"le","","",20,[[["self"],["eventflags"]],["bool"]]],[11,"gt","","",20,[[["self"],["eventflags"]],["bool"]]],[11,"ge","","",20,[[["self"],["eventflags"]],["bool"]]],[11,"cmp","","",20,[[["self"],["eventflags"]],["ordering"]]],[11,"hash","","",20,N],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[18,"POLLIN","","There is data to read.",20,N],[18,"POLLPRI","","There is some exceptional condition on the file descriptor.",20,N],[18,"POLLOUT","","Writing is now possible, though a write larger that the available space in a socket or pipe will still block (unless `O_NONBLOCK` is set).",20,N],[18,"POLLRDNORM","","Equivalent to `POLLIN`",20,N],[18,"POLLWRNORM","","Equivalent to `POLLOUT`",20,N],[18,"POLLRDBAND","","Priority band data can be read (generally unused on Linux).",20,N],[18,"POLLWRBAND","","Priority data may be written.",20,N],[18,"POLLERR","","Error condition (only returned in `PollFd::revents`; ignored in `PollFd::new`). This bit is also set for a file descriptor referring to the write end of a pipe when the read end has been closed.",20,N],[18,"POLLHUP","","Hang up (only returned in `PollFd::revents`; ignored in `PollFd::new`). Note that when reading from a channel such as a pipe or a stream socket, this event merely indicates that the peer closed its end of the channel.  Subsequent reads from the channel will return 0 (end of file) only after all outstanding data in the channel has been consumed.",20,N],[18,"POLLNVAL","","Invalid request: `fd` not open (only returned in `PollFd::revents`; ignored in `PollFd::new`).",20,N],[11,"empty","","Returns an empty set of flags.",20,[[],["eventflags"]]],[11,"all","","Returns the set containing all flags.",20,[[],["eventflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",20,[[["self"]],["c_short"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",20,[[["c_short"]],["option",["eventflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",20,[[["c_short"]],["eventflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",20,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",20,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",20,[[["self"],["eventflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",20,[[["self"],["eventflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",20,[[["self"],["eventflags"]]]],[11,"remove","","Removes the specified flags in-place.",20,[[["self"],["eventflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",20,[[["self"],["eventflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",20,[[["self"],["eventflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",20,[[["self"],["eventflags"]],["eventflags"]]],[11,"bitor_assign","","Adds the set of flags.",20,[[["self"],["eventflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",20,[[["self"],["eventflags"]],["eventflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",20,[[["self"],["eventflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",20,[[["self"],["eventflags"]],["eventflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",20,[[["self"],["eventflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",20,[[["self"],["eventflags"]],["eventflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",20,[[["self"],["eventflags"]]]],[11,"not","","Returns the complement of this set of flags.",20,[[["self"]],["eventflags"]]],[11,"extend","","",20,[[["self"],["t"]]]],[11,"from_iter","","",20,[[["t"]],["eventflags"]]],[0,"pty","nix","Create master and slave virtual pseudo-terminals (PTYs)",N,N],[6,"SessionId","nix::pty","",N,N],[3,"Winsize","","",N,N],[12,"ws_row","","",21,N],[12,"ws_col","","",21,N],[12,"ws_xpixel","","",21,N],[12,"ws_ypixel","","",21,N],[3,"OpenptyResult","","Representation of a master/slave pty pair",N,N],[12,"master","","The master port in a virtual pty pair",22,N],[12,"slave","","The slave port in a virtual pty pair",22,N],[3,"PtyMaster","","Representation of the Master device in a master/slave pty pair",N,N],[5,"grantpt","","Grant access to a slave pseudoterminal (see `grantpt(3)`)",N,[[["ptymaster"]],["result"]]],[5,"posix_openpt","","Open a pseudoterminal device (see `posix_openpt(3)`)",N,[[["oflag"]],["result",["ptymaster"]]]],[5,"ptsname","","Get the name of the slave pseudoterminal (see `ptsname(3)`)",N,[[["ptymaster"]],["result",["string"]]]],[5,"ptsname_r","","Get the name of the slave pseudoterminal (see `ptsname(3)`)",N,[[["ptymaster"]],["result",["string"]]]],[5,"unlockpt","","Unlock a pseudoterminal master/slave pseudoterminal pair (see `unlockpt(3)`)",N,[[["ptymaster"]],["result"]]],[5,"openpty","","Create a new pseudoterminal, returning the slave and master file descriptors in `OpenptyResult` (see `openpty`).",N,[[["t"],["u"]],["result",["openptyresult"]]]],[11,"clone","","",22,[[["self"]],["openptyresult"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"as_raw_fd","","",23,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",23,[[["self"]],["rawfd"]]],[11,"drop","","",23,[[["self"]]]],[0,"sched","nix","",N,N],[3,"CloneFlags","nix::sched","",N,N],[3,"CpuSet","","",N,N],[5,"sched_setaffinity","","",N,[[["pid"],["cpuset"]],["result"]]],[5,"clone","","",N,N],[5,"unshare","","",N,[[["cloneflags"]],["result"]]],[5,"setns","","",N,[[["rawfd"],["cloneflags"]],["result"]]],[6,"CloneCb","","",N,N],[11,"eq","","",24,[[["self"],["cloneflags"]],["bool"]]],[11,"ne","","",24,[[["self"],["cloneflags"]],["bool"]]],[11,"clone","","",24,[[["self"]],["cloneflags"]]],[11,"partial_cmp","","",24,[[["self"],["cloneflags"]],["option",["ordering"]]]],[11,"lt","","",24,[[["self"],["cloneflags"]],["bool"]]],[11,"le","","",24,[[["self"],["cloneflags"]],["bool"]]],[11,"gt","","",24,[[["self"],["cloneflags"]],["bool"]]],[11,"ge","","",24,[[["self"],["cloneflags"]],["bool"]]],[11,"cmp","","",24,[[["self"],["cloneflags"]],["ordering"]]],[11,"hash","","",24,N],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[18,"CLONE_VM","","",24,N],[18,"CLONE_FS","","",24,N],[18,"CLONE_FILES","","",24,N],[18,"CLONE_SIGHAND","","",24,N],[18,"CLONE_PTRACE","","",24,N],[18,"CLONE_VFORK","","",24,N],[18,"CLONE_PARENT","","",24,N],[18,"CLONE_THREAD","","",24,N],[18,"CLONE_NEWNS","","",24,N],[18,"CLONE_SYSVSEM","","",24,N],[18,"CLONE_SETTLS","","",24,N],[18,"CLONE_PARENT_SETTID","","",24,N],[18,"CLONE_CHILD_CLEARTID","","",24,N],[18,"CLONE_DETACHED","","",24,N],[18,"CLONE_UNTRACED","","",24,N],[18,"CLONE_CHILD_SETTID","","",24,N],[18,"CLONE_NEWCGROUP","","",24,N],[18,"CLONE_NEWUTS","","",24,N],[18,"CLONE_NEWIPC","","",24,N],[18,"CLONE_NEWUSER","","",24,N],[18,"CLONE_NEWPID","","",24,N],[18,"CLONE_NEWNET","","",24,N],[18,"CLONE_IO","","",24,N],[11,"empty","","Returns an empty set of flags.",24,[[],["cloneflags"]]],[11,"all","","Returns the set containing all flags.",24,[[],["cloneflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",24,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",24,[[["c_int"]],["option",["cloneflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",24,[[["c_int"]],["cloneflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",24,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",24,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",24,[[["self"],["cloneflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",24,[[["self"],["cloneflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",24,[[["self"],["cloneflags"]]]],[11,"remove","","Removes the specified flags in-place.",24,[[["self"],["cloneflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",24,[[["self"],["cloneflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",24,[[["self"],["cloneflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",24,[[["self"],["cloneflags"]],["cloneflags"]]],[11,"bitor_assign","","Adds the set of flags.",24,[[["self"],["cloneflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",24,[[["self"],["cloneflags"]],["cloneflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",24,[[["self"],["cloneflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",24,[[["self"],["cloneflags"]],["cloneflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",24,[[["self"],["cloneflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",24,[[["self"],["cloneflags"]],["cloneflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",24,[[["self"],["cloneflags"]]]],[11,"not","","Returns the complement of this set of flags.",24,[[["self"]],["cloneflags"]]],[11,"extend","","",24,[[["self"],["t"]]]],[11,"from_iter","","",24,[[["t"]],["cloneflags"]]],[11,"clone","","",25,[[["self"]],["cpuset"]]],[11,"new","","",25,[[],["cpuset"]]],[11,"is_set","","",25,[[["self"],["usize"]],["result",["bool"]]]],[11,"set","","",25,[[["self"],["usize"]],["result"]]],[11,"unset","","",25,[[["self"],["usize"]],["result"]]],[0,"sys","nix","",N,N],[0,"aio","nix::sys","POSIX Asynchronous I/O",N,N],[3,"AioCb","nix::sys::aio","AIO Control Block.",N,N],[3,"LioCb","","LIO Control Block.",N,N],[12,"aiocbs","","A collection of [`AioCb`]s.  All of these will be issued simultaneously by the [`listio`] method.",26,N],[4,"AioFsyncMode","","Mode for `AioCb::fsync`.  Controls whether only data or both data and metadata are synced.",N,N],[13,"O_SYNC","","do it like `fsync`",27,N],[13,"O_DSYNC","","on supported operating systems only, do it like `fdatasync`",27,N],[4,"LioOpcode","","When used with `lio_listio`, determines whether a given `aiocb` should be used for a read operation, a write operation, or ignored.  Has no effect for any other aio functions.",N,N],[13,"LIO_NOP","","",28,N],[13,"LIO_WRITE","","",28,N],[13,"LIO_READ","","",28,N],[4,"LioMode","","Mode for `lio_listio`",N,N],[13,"LIO_WAIT","","Requests that `lio_listio` block until all requested operations have been completed",29,N],[13,"LIO_NOWAIT","","Requests that `lio_listio` return immediately",29,N],[4,"AioCancelStat","","Return values for `AioCb::cancel` and `aio_cancel_all`",N,N],[13,"AioCanceled","","All outstanding requests were canceled",30,N],[13,"AioNotCanceled","","Some requests were not canceled.  Their status should be checked with `AioCb::error`",30,N],[13,"AioAllDone","","All of the requests have already finished",30,N],[4,"Buffer","","Owns (uniquely or shared) a memory buffer to keep it from `Drop`ing while the kernel has a pointer to it.",N,N],[13,"None","","No buffer to own.",31,N],[13,"Phantom","","Keeps a reference to a slice",31,N],[13,"BoxedSlice","","Generic thing that keeps a buffer from dropping",31,N],[13,"BoxedMutSlice","","Generic thing that keeps a mutable buffer from dropping",31,N],[5,"aio_cancel_all","","Cancels outstanding AIO requests for a given file descriptor.",N,[[["rawfd"]],["result",["aiocancelstat"]]]],[5,"aio_suspend","","Suspends the calling process until at least one of the specified `AioCb`s has completed, a signal is delivered, or the timeout has passed.",N,N],[11,"clone","","",27,[[["self"]],["aiofsyncmode"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"hash","","",27,N],[11,"cmp","","",27,[[["self"],["aiofsyncmode"]],["ordering"]]],[11,"eq","","",27,[[["self"],["aiofsyncmode"]],["bool"]]],[11,"partial_cmp","","",27,[[["self"],["aiofsyncmode"]],["option",["ordering"]]]],[11,"clone","","",28,[[["self"]],["lioopcode"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"hash","","",28,N],[11,"cmp","","",28,[[["self"],["lioopcode"]],["ordering"]]],[11,"eq","","",28,[[["self"],["lioopcode"]],["bool"]]],[11,"partial_cmp","","",28,[[["self"],["lioopcode"]],["option",["ordering"]]]],[11,"clone","","",29,[[["self"]],["liomode"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"hash","","",29,N],[11,"cmp","","",29,[[["self"],["liomode"]],["ordering"]]],[11,"eq","","",29,[[["self"],["liomode"]],["bool"]]],[11,"partial_cmp","","",29,[[["self"],["liomode"]],["option",["ordering"]]]],[11,"clone","","",30,[[["self"]],["aiocancelstat"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"eq","","",30,[[["self"],["aiocancelstat"]],["bool"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"buffer","","Remove the inner `Buffer` and return it",32,[[["self"]],["buffer"]]],[11,"boxed_slice","","Remove the inner boxed slice, if any, and return it.",32,[[["self"]],["option",["box"]]]],[11,"boxed_mut_slice","","Remove the inner boxed mutable slice, if any, and return it.",32,[[["self"]],["option",["box"]]]],[11,"fd","","Returns the underlying file descriptor associated with the `AioCb`",32,[[["self"]],["rawfd"]]],[11,"from_fd","","Constructs a new `AioCb` with no associated buffer.",32,[[["rawfd"],["c_int"],["sigevnotify"]],["aiocb"]]],[11,"from_mut_slice","","Constructs a new `AioCb` from a mutable slice.",32,N],[11,"from_boxed_slice","","The safest and most flexible way to create an `AioCb`.",32,[[["rawfd"],["off_t"],["box",["borrow"]],["c_int"],["sigevnotify"],["lioopcode"]],["aiocb"]]],[11,"from_boxed_mut_slice","","The safest and most flexible way to create an `AioCb` for reading.",32,[[["rawfd"],["off_t"],["box",["borrowmut"]],["c_int"],["sigevnotify"],["lioopcode"]],["aiocb"]]],[11,"from_mut_ptr","","Constructs a new `AioCb` from a mutable raw pointer",32,N],[11,"from_ptr","","Constructs a new `AioCb` from a raw pointer.",32,N],[11,"from_slice","","Like `from_mut_slice`, but works on constant slices rather than mutable slices.",32,N],[11,"set_sigev_notify","","Update the notification settings for an existing `aiocb`",32,[[["self"],["sigevnotify"]]]],[11,"cancel","","Cancels an outstanding AIO request.",32,[[["self"]],["result",["aiocancelstat"]]]],[11,"error","","Retrieve error status of an asynchronous operation.",32,[[["self"]],["result"]]],[11,"fsync","","An asynchronous version of `fsync(2)`.",32,[[["self"],["aiofsyncmode"]],["result"]]],[11,"lio_opcode","","Returns the `aiocb`'s `LioOpcode` field",32,[[["self"]],["option",["lioopcode"]]]],[11,"nbytes","","Returns the requested length of the aio operation in bytes",32,[[["self"]],["usize"]]],[11,"offset","","Returns the file offset stored in the `AioCb`",32,[[["self"]],["off_t"]]],[11,"priority","","Returns the priority of the `AioCb`",32,[[["self"]],["c_int"]]],[11,"read","","Asynchronously reads from a file descriptor into a buffer",32,[[["self"]],["result"]]],[11,"sigevent","","Returns the `SigEvent` stored in the `AioCb`",32,[[["self"]],["sigevent"]]],[11,"aio_return","","Retrieve return status of an asynchronous operation.",32,[[["self"]],["result",["isize"]]]],[11,"write","","Asynchronously writes from a buffer to a file descriptor",32,[[["self"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"drop","","If the `AioCb` has no remaining state in the kernel, just drop it. Otherwise, dropping constitutes a resource leak, which is an error",32,[[["self"]]]],[11,"with_capacity","","Initialize an empty `LioCb`",26,[[["usize"]],["liocb"]]],[11,"listio","","Submits multiple asynchronous I/O requests with a single system call.",26,[[["self"],["liomode"],["sigevnotify"]],["result"]]],[11,"listio_resubmit","","Resubmits any incomplete operations with [`lio_listio`].",26,[[["self"],["liomode"],["sigevnotify"]],["result"]]],[11,"aio_return","","Collect final status for an individual `AioCb` submitted as part of an `LioCb`.",26,[[["self"],["usize"]],["result",["isize"]]]],[11,"error","","Retrieve error status of an individual `AioCb` submitted as part of an `LioCb`.",26,[[["self"],["usize"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"from","","",26,[[["vec",["aiocb"]]],["liocb"]]],[0,"epoll","nix::sys","",N,N],[3,"EpollFlags","nix::sys::epoll","",N,N],[3,"EpollCreateFlags","","",N,N],[3,"EpollEvent","","",N,N],[4,"EpollOp","","",N,N],[13,"EpollCtlAdd","","",33,N],[13,"EpollCtlDel","","",33,N],[13,"EpollCtlMod","","",33,N],[5,"epoll_create","","",N,[[],["result",["rawfd"]]]],[5,"epoll_create1","","",N,[[["epollcreateflags"]],["result",["rawfd"]]]],[5,"epoll_ctl","","",N,[[["rawfd"],["epollop"],["rawfd"],["t"]],["result"]]],[5,"epoll_wait","","",N,N],[11,"eq","","",34,[[["self"],["epollflags"]],["bool"]]],[11,"ne","","",34,[[["self"],["epollflags"]],["bool"]]],[11,"clone","","",34,[[["self"]],["epollflags"]]],[11,"partial_cmp","","",34,[[["self"],["epollflags"]],["option",["ordering"]]]],[11,"lt","","",34,[[["self"],["epollflags"]],["bool"]]],[11,"le","","",34,[[["self"],["epollflags"]],["bool"]]],[11,"gt","","",34,[[["self"],["epollflags"]],["bool"]]],[11,"ge","","",34,[[["self"],["epollflags"]],["bool"]]],[11,"cmp","","",34,[[["self"],["epollflags"]],["ordering"]]],[11,"hash","","",34,N],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[18,"EPOLLIN","","",34,N],[18,"EPOLLPRI","","",34,N],[18,"EPOLLOUT","","",34,N],[18,"EPOLLRDNORM","","",34,N],[18,"EPOLLRDBAND","","",34,N],[18,"EPOLLWRNORM","","",34,N],[18,"EPOLLWRBAND","","",34,N],[18,"EPOLLMSG","","",34,N],[18,"EPOLLERR","","",34,N],[18,"EPOLLHUP","","",34,N],[18,"EPOLLRDHUP","","",34,N],[18,"EPOLLEXCLUSIVE","","",34,N],[18,"EPOLLWAKEUP","","",34,N],[18,"EPOLLONESHOT","","",34,N],[18,"EPOLLET","","",34,N],[11,"empty","","Returns an empty set of flags.",34,[[],["epollflags"]]],[11,"all","","Returns the set containing all flags.",34,[[],["epollflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",34,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",34,[[["c_int"]],["option",["epollflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",34,[[["c_int"]],["epollflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",34,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",34,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",34,[[["self"],["epollflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",34,[[["self"],["epollflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",34,[[["self"],["epollflags"]]]],[11,"remove","","Removes the specified flags in-place.",34,[[["self"],["epollflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",34,[[["self"],["epollflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",34,[[["self"],["epollflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",34,[[["self"],["epollflags"]],["epollflags"]]],[11,"bitor_assign","","Adds the set of flags.",34,[[["self"],["epollflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",34,[[["self"],["epollflags"]],["epollflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",34,[[["self"],["epollflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",34,[[["self"],["epollflags"]],["epollflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",34,[[["self"],["epollflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",34,[[["self"],["epollflags"]],["epollflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",34,[[["self"],["epollflags"]]]],[11,"not","","Returns the complement of this set of flags.",34,[[["self"]],["epollflags"]]],[11,"extend","","",34,[[["self"],["t"]]]],[11,"from_iter","","",34,[[["t"]],["epollflags"]]],[11,"clone","","",33,[[["self"]],["epollop"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"hash","","",33,N],[11,"eq","","",33,[[["self"],["epollop"]],["bool"]]],[11,"eq","","",35,[[["self"],["epollcreateflags"]],["bool"]]],[11,"ne","","",35,[[["self"],["epollcreateflags"]],["bool"]]],[11,"clone","","",35,[[["self"]],["epollcreateflags"]]],[11,"partial_cmp","","",35,[[["self"],["epollcreateflags"]],["option",["ordering"]]]],[11,"lt","","",35,[[["self"],["epollcreateflags"]],["bool"]]],[11,"le","","",35,[[["self"],["epollcreateflags"]],["bool"]]],[11,"gt","","",35,[[["self"],["epollcreateflags"]],["bool"]]],[11,"ge","","",35,[[["self"],["epollcreateflags"]],["bool"]]],[11,"cmp","","",35,[[["self"],["epollcreateflags"]],["ordering"]]],[11,"hash","","",35,N],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[18,"EPOLL_CLOEXEC","","",35,N],[11,"empty","","Returns an empty set of flags.",35,[[],["epollcreateflags"]]],[11,"all","","Returns the set containing all flags.",35,[[],["epollcreateflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",35,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",35,[[["c_int"]],["option",["epollcreateflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",35,[[["c_int"]],["epollcreateflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",35,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",35,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",35,[[["self"],["epollcreateflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",35,[[["self"],["epollcreateflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",35,[[["self"],["epollcreateflags"]]]],[11,"remove","","Removes the specified flags in-place.",35,[[["self"],["epollcreateflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",35,[[["self"],["epollcreateflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",35,[[["self"],["epollcreateflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",35,[[["self"],["epollcreateflags"]],["epollcreateflags"]]],[11,"bitor_assign","","Adds the set of flags.",35,[[["self"],["epollcreateflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",35,[[["self"],["epollcreateflags"]],["epollcreateflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",35,[[["self"],["epollcreateflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",35,[[["self"],["epollcreateflags"]],["epollcreateflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",35,[[["self"],["epollcreateflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",35,[[["self"],["epollcreateflags"]],["epollcreateflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",35,[[["self"],["epollcreateflags"]]]],[11,"not","","Returns the complement of this set of flags.",35,[[["self"]],["epollcreateflags"]]],[11,"extend","","",35,[[["self"],["t"]]]],[11,"from_iter","","",35,[[["t"]],["epollcreateflags"]]],[11,"clone","","",36,[[["self"]],["epollevent"]]],[11,"new","","",36,[[["epollflags"],["u64"]],["self"]]],[11,"empty","","",36,[[],["self"]]],[11,"events","","",36,[[["self"]],["epollflags"]]],[11,"data","","",36,[[["self"]],["u64"]]],[0,"eventfd","nix::sys","",N,N],[3,"EfdFlags","nix::sys::eventfd","",N,N],[5,"eventfd","","",N,[[["c_uint"],["efdflags"]],["result",["rawfd"]]]],[11,"eq","","",37,[[["self"],["efdflags"]],["bool"]]],[11,"ne","","",37,[[["self"],["efdflags"]],["bool"]]],[11,"clone","","",37,[[["self"]],["efdflags"]]],[11,"partial_cmp","","",37,[[["self"],["efdflags"]],["option",["ordering"]]]],[11,"lt","","",37,[[["self"],["efdflags"]],["bool"]]],[11,"le","","",37,[[["self"],["efdflags"]],["bool"]]],[11,"gt","","",37,[[["self"],["efdflags"]],["bool"]]],[11,"ge","","",37,[[["self"],["efdflags"]],["bool"]]],[11,"cmp","","",37,[[["self"],["efdflags"]],["ordering"]]],[11,"hash","","",37,N],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[18,"EFD_CLOEXEC","","",37,N],[18,"EFD_NONBLOCK","","",37,N],[18,"EFD_SEMAPHORE","","",37,N],[11,"empty","","Returns an empty set of flags.",37,[[],["efdflags"]]],[11,"all","","Returns the set containing all flags.",37,[[],["efdflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",37,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",37,[[["c_int"]],["option",["efdflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",37,[[["c_int"]],["efdflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",37,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",37,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",37,[[["self"],["efdflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",37,[[["self"],["efdflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",37,[[["self"],["efdflags"]]]],[11,"remove","","Removes the specified flags in-place.",37,[[["self"],["efdflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",37,[[["self"],["efdflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",37,[[["self"],["efdflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",37,[[["self"],["efdflags"]],["efdflags"]]],[11,"bitor_assign","","Adds the set of flags.",37,[[["self"],["efdflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",37,[[["self"],["efdflags"]],["efdflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",37,[[["self"],["efdflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",37,[[["self"],["efdflags"]],["efdflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",37,[[["self"],["efdflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",37,[[["self"],["efdflags"]],["efdflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",37,[[["self"],["efdflags"]]]],[11,"not","","Returns the complement of this set of flags.",37,[[["self"]],["efdflags"]]],[11,"extend","","",37,[[["self"],["t"]]]],[11,"from_iter","","",37,[[["t"]],["efdflags"]]],[0,"ioctl","nix::sys","Provide helpers for making ioctl system calls.",N,N],[0,"memfd","","",N,N],[3,"MemFdCreateFlag","nix::sys::memfd","",N,N],[5,"memfd_create","","",N,[[["cstr"],["memfdcreateflag"]],["result",["rawfd"]]]],[11,"eq","","",38,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"ne","","",38,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"clone","","",38,[[["self"]],["memfdcreateflag"]]],[11,"partial_cmp","","",38,[[["self"],["memfdcreateflag"]],["option",["ordering"]]]],[11,"lt","","",38,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"le","","",38,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"gt","","",38,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"ge","","",38,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"cmp","","",38,[[["self"],["memfdcreateflag"]],["ordering"]]],[11,"hash","","",38,N],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[18,"MFD_CLOEXEC","","",38,N],[18,"MFD_ALLOW_SEALING","","",38,N],[11,"empty","","Returns an empty set of flags.",38,[[],["memfdcreateflag"]]],[11,"all","","Returns the set containing all flags.",38,[[],["memfdcreateflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",38,[[["self"]],["c_uint"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",38,[[["c_uint"]],["option",["memfdcreateflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",38,[[["c_uint"]],["memfdcreateflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",38,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",38,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",38,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",38,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",38,[[["self"],["memfdcreateflag"]]]],[11,"remove","","Removes the specified flags in-place.",38,[[["self"],["memfdcreateflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",38,[[["self"],["memfdcreateflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",38,[[["self"],["memfdcreateflag"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",38,[[["self"],["memfdcreateflag"]],["memfdcreateflag"]]],[11,"bitor_assign","","Adds the set of flags.",38,[[["self"],["memfdcreateflag"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",38,[[["self"],["memfdcreateflag"]],["memfdcreateflag"]]],[11,"bitxor_assign","","Toggles the set of flags.",38,[[["self"],["memfdcreateflag"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",38,[[["self"],["memfdcreateflag"]],["memfdcreateflag"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",38,[[["self"],["memfdcreateflag"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",38,[[["self"],["memfdcreateflag"]],["memfdcreateflag"]]],[11,"sub_assign","","Disables all flags enabled in the set.",38,[[["self"],["memfdcreateflag"]]]],[11,"not","","Returns the complement of this set of flags.",38,[[["self"]],["memfdcreateflag"]]],[11,"extend","","",38,[[["self"],["t"]]]],[11,"from_iter","","",38,[[["t"]],["memfdcreateflag"]]],[0,"mman","nix::sys","",N,N],[3,"ProtFlags","nix::sys::mman","Desired memory protection of a memory mapping.",N,N],[3,"MapFlags","","Additional parameters for `mmap()`.",N,N],[3,"MsFlags","","Configuration flags for `msync`.",N,N],[3,"MlockAllFlags","","Flags for `mlockall`.",N,N],[4,"MmapAdvise","","Usage information for a range of memory to allow for performance optimizations by the kernel.",N,N],[13,"MADV_NORMAL","","No further special treatment. This is the default.",39,N],[13,"MADV_RANDOM","","Expect random page references.",39,N],[13,"MADV_SEQUENTIAL","","Expect sequential page references.",39,N],[13,"MADV_WILLNEED","","Expect access in the near future.",39,N],[13,"MADV_DONTNEED","","Do not expect access in the near future.",39,N],[13,"MADV_REMOVE","","Free up a given range of pages and its associated backing store.",39,N],[13,"MADV_DONTFORK","","Do not make pages in this range available to the child after a `fork(2)`.",39,N],[13,"MADV_DOFORK","","Undo the effect of `MADV_DONTFORK`.",39,N],[13,"MADV_HWPOISON","","Poison the given pages.",39,N],[13,"MADV_MERGEABLE","","Enable Kernel Samepage Merging (KSM) for the given pages.",39,N],[13,"MADV_UNMERGEABLE","","Undo the effect of `MADV_MERGEABLE`",39,N],[13,"MADV_SOFT_OFFLINE","","Preserve the memory of each page but offline the original page.",39,N],[13,"MADV_HUGEPAGE","","Enable Transparent Huge Pages (THP) for pages in the given range.",39,N],[13,"MADV_NOHUGEPAGE","","Undo the effect of `MADV_HUGEPAGE`.",39,N],[13,"MADV_DONTDUMP","","Exclude the given range from a core dump.",39,N],[13,"MADV_DODUMP","","Undo the effect of an earlier `MADV_DONTDUMP`.",39,N],[13,"MADV_FREE","","Specify that the application no longer needs the pages in the given range.",39,N],[5,"mlock","","Locks all memory pages that contain part of the address range with `length` bytes starting at `addr`. Locked pages never move to the swap area.",N,N],[5,"munlock","","Unlocks all memory pages that contain part of the address range with `length` bytes starting at `addr`.",N,N],[5,"mlockall","","Locks all memory pages mapped into this process' address space. Locked pages never move to the swap area.",N,[[["mlockallflags"]],["result"]]],[5,"munlockall","","Unlocks all memory pages mapped into this process' address space.",N,[[],["result"]]],[5,"mmap","","Calls to mmap are inherently unsafe, so they must be made in an unsafe block. Typically a higher-level abstraction will hide the unsafe interactions with the mmap'd region.",N,N],[5,"munmap","","",N,N],[5,"madvise","","",N,N],[5,"msync","","",N,N],[5,"shm_open","","",N,[[["p"],["oflag"],["mode"]],["result",["rawfd"]]]],[5,"shm_unlink","","",N,[[["p"]],["result"]]],[11,"eq","","",40,[[["self"],["protflags"]],["bool"]]],[11,"ne","","",40,[[["self"],["protflags"]],["bool"]]],[11,"clone","","",40,[[["self"]],["protflags"]]],[11,"partial_cmp","","",40,[[["self"],["protflags"]],["option",["ordering"]]]],[11,"lt","","",40,[[["self"],["protflags"]],["bool"]]],[11,"le","","",40,[[["self"],["protflags"]],["bool"]]],[11,"gt","","",40,[[["self"],["protflags"]],["bool"]]],[11,"ge","","",40,[[["self"],["protflags"]],["bool"]]],[11,"cmp","","",40,[[["self"],["protflags"]],["ordering"]]],[11,"hash","","",40,N],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[18,"PROT_NONE","","Pages cannot be accessed.",40,N],[18,"PROT_READ","","Pages can be read.",40,N],[18,"PROT_WRITE","","Pages can be written.",40,N],[18,"PROT_EXEC","","Pages can be executed",40,N],[18,"PROT_GROWSDOWN","","Apply protection up to the end of a mapping that grows upwards.",40,N],[18,"PROT_GROWSUP","","Apply protection down to the beginning of a mapping that grows downwards.",40,N],[11,"empty","","Returns an empty set of flags.",40,[[],["protflags"]]],[11,"all","","Returns the set containing all flags.",40,[[],["protflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",40,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",40,[[["c_int"]],["option",["protflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",40,[[["c_int"]],["protflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",40,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",40,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",40,[[["self"],["protflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",40,[[["self"],["protflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",40,[[["self"],["protflags"]]]],[11,"remove","","Removes the specified flags in-place.",40,[[["self"],["protflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",40,[[["self"],["protflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",40,[[["self"],["protflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",40,[[["self"],["protflags"]],["protflags"]]],[11,"bitor_assign","","Adds the set of flags.",40,[[["self"],["protflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",40,[[["self"],["protflags"]],["protflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",40,[[["self"],["protflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",40,[[["self"],["protflags"]],["protflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",40,[[["self"],["protflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",40,[[["self"],["protflags"]],["protflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",40,[[["self"],["protflags"]]]],[11,"not","","Returns the complement of this set of flags.",40,[[["self"]],["protflags"]]],[11,"extend","","",40,[[["self"],["t"]]]],[11,"from_iter","","",40,[[["t"]],["protflags"]]],[11,"eq","","",41,[[["self"],["mapflags"]],["bool"]]],[11,"ne","","",41,[[["self"],["mapflags"]],["bool"]]],[11,"clone","","",41,[[["self"]],["mapflags"]]],[11,"partial_cmp","","",41,[[["self"],["mapflags"]],["option",["ordering"]]]],[11,"lt","","",41,[[["self"],["mapflags"]],["bool"]]],[11,"le","","",41,[[["self"],["mapflags"]],["bool"]]],[11,"gt","","",41,[[["self"],["mapflags"]],["bool"]]],[11,"ge","","",41,[[["self"],["mapflags"]],["bool"]]],[11,"cmp","","",41,[[["self"],["mapflags"]],["ordering"]]],[11,"hash","","",41,N],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[18,"MAP_FILE","","Compatibility flag. Ignored.",41,N],[18,"MAP_SHARED","","Share this mapping. Mutually exclusive with `MAP_PRIVATE`.",41,N],[18,"MAP_PRIVATE","","Create a private copy-on-write mapping. Mutually exclusive with `MAP_SHARED`.",41,N],[18,"MAP_FIXED","","Place the mapping at exactly the address specified in `addr`.",41,N],[18,"MAP_ANON","","Synonym for `MAP_ANONYMOUS`.",41,N],[18,"MAP_ANONYMOUS","","The mapping is not backed by any file.",41,N],[18,"MAP_32BIT","","Put the mapping into the first 2GB of the process address space.",41,N],[18,"MAP_GROWSDOWN","","Used for stacks; indicates to the kernel that the mapping should extend downward in memory.",41,N],[18,"MAP_DENYWRITE","","Compatibility flag. Ignored.",41,N],[18,"MAP_EXECUTABLE","","Compatibility flag. Ignored.",41,N],[18,"MAP_LOCKED","","Mark the mmaped region to be locked in the same way as `mlock(2)`.",41,N],[18,"MAP_NORESERVE","","Do not reserve swap space for this mapping.",41,N],[18,"MAP_POPULATE","","Populate page tables for a mapping.",41,N],[18,"MAP_NONBLOCK","","Only meaningful when used with `MAP_POPULATE`. Don't perform read-ahead.",41,N],[18,"MAP_HUGETLB","","Allocate the mapping using \"huge pages.\"",41,N],[18,"MAP_STACK","","Region grows down, like a stack.",41,N],[11,"empty","","Returns an empty set of flags.",41,[[],["mapflags"]]],[11,"all","","Returns the set containing all flags.",41,[[],["mapflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",41,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",41,[[["c_int"]],["option",["mapflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",41,[[["c_int"]],["mapflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",41,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",41,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",41,[[["self"],["mapflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",41,[[["self"],["mapflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",41,[[["self"],["mapflags"]]]],[11,"remove","","Removes the specified flags in-place.",41,[[["self"],["mapflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",41,[[["self"],["mapflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",41,[[["self"],["mapflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",41,[[["self"],["mapflags"]],["mapflags"]]],[11,"bitor_assign","","Adds the set of flags.",41,[[["self"],["mapflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",41,[[["self"],["mapflags"]],["mapflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",41,[[["self"],["mapflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",41,[[["self"],["mapflags"]],["mapflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",41,[[["self"],["mapflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",41,[[["self"],["mapflags"]],["mapflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",41,[[["self"],["mapflags"]]]],[11,"not","","Returns the complement of this set of flags.",41,[[["self"]],["mapflags"]]],[11,"extend","","",41,[[["self"],["t"]]]],[11,"from_iter","","",41,[[["t"]],["mapflags"]]],[11,"clone","","",39,[[["self"]],["mmapadvise"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"hash","","",39,N],[11,"cmp","","",39,[[["self"],["mmapadvise"]],["ordering"]]],[11,"eq","","",39,[[["self"],["mmapadvise"]],["bool"]]],[11,"partial_cmp","","",39,[[["self"],["mmapadvise"]],["option",["ordering"]]]],[11,"eq","","",42,[[["self"],["msflags"]],["bool"]]],[11,"ne","","",42,[[["self"],["msflags"]],["bool"]]],[11,"clone","","",42,[[["self"]],["msflags"]]],[11,"partial_cmp","","",42,[[["self"],["msflags"]],["option",["ordering"]]]],[11,"lt","","",42,[[["self"],["msflags"]],["bool"]]],[11,"le","","",42,[[["self"],["msflags"]],["bool"]]],[11,"gt","","",42,[[["self"],["msflags"]],["bool"]]],[11,"ge","","",42,[[["self"],["msflags"]],["bool"]]],[11,"cmp","","",42,[[["self"],["msflags"]],["ordering"]]],[11,"hash","","",42,N],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[18,"MS_ASYNC","","Schedule an update but return immediately.",42,N],[18,"MS_INVALIDATE","","Invalidate all cached data.",42,N],[18,"MS_SYNC","","Perform an update and wait for it to complete.",42,N],[11,"empty","","Returns an empty set of flags.",42,[[],["msflags"]]],[11,"all","","Returns the set containing all flags.",42,[[],["msflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",42,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",42,[[["c_int"]],["option",["msflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",42,[[["c_int"]],["msflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",42,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",42,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",42,[[["self"],["msflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",42,[[["self"],["msflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",42,[[["self"],["msflags"]]]],[11,"remove","","Removes the specified flags in-place.",42,[[["self"],["msflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",42,[[["self"],["msflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",42,[[["self"],["msflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",42,[[["self"],["msflags"]],["msflags"]]],[11,"bitor_assign","","Adds the set of flags.",42,[[["self"],["msflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",42,[[["self"],["msflags"]],["msflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",42,[[["self"],["msflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",42,[[["self"],["msflags"]],["msflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",42,[[["self"],["msflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",42,[[["self"],["msflags"]],["msflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",42,[[["self"],["msflags"]]]],[11,"not","","Returns the complement of this set of flags.",42,[[["self"]],["msflags"]]],[11,"extend","","",42,[[["self"],["t"]]]],[11,"from_iter","","",42,[[["t"]],["msflags"]]],[11,"eq","","",43,[[["self"],["mlockallflags"]],["bool"]]],[11,"ne","","",43,[[["self"],["mlockallflags"]],["bool"]]],[11,"clone","","",43,[[["self"]],["mlockallflags"]]],[11,"partial_cmp","","",43,[[["self"],["mlockallflags"]],["option",["ordering"]]]],[11,"lt","","",43,[[["self"],["mlockallflags"]],["bool"]]],[11,"le","","",43,[[["self"],["mlockallflags"]],["bool"]]],[11,"gt","","",43,[[["self"],["mlockallflags"]],["bool"]]],[11,"ge","","",43,[[["self"],["mlockallflags"]],["bool"]]],[11,"cmp","","",43,[[["self"],["mlockallflags"]],["ordering"]]],[11,"hash","","",43,N],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[18,"MCL_CURRENT","","Lock pages that are currently mapped into the address space of the process.",43,N],[18,"MCL_FUTURE","","Lock pages which will become mapped into the address space of the process in the future.",43,N],[11,"empty","","Returns an empty set of flags.",43,[[],["mlockallflags"]]],[11,"all","","Returns the set containing all flags.",43,[[],["mlockallflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",43,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",43,[[["c_int"]],["option",["mlockallflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",43,[[["c_int"]],["mlockallflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",43,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",43,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",43,[[["self"],["mlockallflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",43,[[["self"],["mlockallflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",43,[[["self"],["mlockallflags"]]]],[11,"remove","","Removes the specified flags in-place.",43,[[["self"],["mlockallflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",43,[[["self"],["mlockallflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",43,[[["self"],["mlockallflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",43,[[["self"],["mlockallflags"]],["mlockallflags"]]],[11,"bitor_assign","","Adds the set of flags.",43,[[["self"],["mlockallflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",43,[[["self"],["mlockallflags"]],["mlockallflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",43,[[["self"],["mlockallflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",43,[[["self"],["mlockallflags"]],["mlockallflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",43,[[["self"],["mlockallflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",43,[[["self"],["mlockallflags"]],["mlockallflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",43,[[["self"],["mlockallflags"]]]],[11,"not","","Returns the complement of this set of flags.",43,[[["self"]],["mlockallflags"]]],[11,"extend","","",43,[[["self"],["t"]]]],[11,"from_iter","","",43,[[["t"]],["mlockallflags"]]],[0,"pthread","nix::sys","",N,N],[5,"pthread_self","nix::sys::pthread","Obtain ID of the calling thread (see `pthread_self(3)`",N,[[],["pthread"]]],[6,"Pthread","","",N,N],[0,"ptrace","nix::sys","For detailed description of the ptrace requests, consult `man ptrace`.",N,N],[3,"Options","nix::sys::ptrace","Ptrace options used in conjunction with the PTRACE_SETOPTIONS request. See `man ptrace` for more details.",N,N],[4,"Request","","Ptrace Request enum defining the action to be taken.",N,N],[13,"PTRACE_TRACEME","","",44,N],[13,"PTRACE_PEEKTEXT","","",44,N],[13,"PTRACE_PEEKDATA","","",44,N],[13,"PTRACE_PEEKUSER","","",44,N],[13,"PTRACE_POKETEXT","","",44,N],[13,"PTRACE_POKEDATA","","",44,N],[13,"PTRACE_POKEUSER","","",44,N],[13,"PTRACE_CONT","","",44,N],[13,"PTRACE_KILL","","",44,N],[13,"PTRACE_SINGLESTEP","","",44,N],[13,"PTRACE_GETREGS","","",44,N],[13,"PTRACE_SETREGS","","",44,N],[13,"PTRACE_GETFPREGS","","",44,N],[13,"PTRACE_SETFPREGS","","",44,N],[13,"PTRACE_ATTACH","","",44,N],[13,"PTRACE_DETACH","","",44,N],[13,"PTRACE_GETFPXREGS","","",44,N],[13,"PTRACE_SETFPXREGS","","",44,N],[13,"PTRACE_SYSCALL","","",44,N],[13,"PTRACE_SETOPTIONS","","",44,N],[13,"PTRACE_GETEVENTMSG","","",44,N],[13,"PTRACE_GETSIGINFO","","",44,N],[13,"PTRACE_SETSIGINFO","","",44,N],[13,"PTRACE_GETREGSET","","",44,N],[13,"PTRACE_SETREGSET","","",44,N],[13,"PTRACE_SEIZE","","",44,N],[13,"PTRACE_INTERRUPT","","",44,N],[13,"PTRACE_LISTEN","","",44,N],[13,"PTRACE_PEEKSIGINFO","","",44,N],[4,"Event","","Using the ptrace options the tracer can configure the tracee to stop at certain events. This enum is used to define those events as defined in `man ptrace`.",N,N],[13,"PTRACE_EVENT_FORK","","Event that stops before a return from fork or clone.",45,N],[13,"PTRACE_EVENT_VFORK","","Event that stops before a return from vfork or clone.",45,N],[13,"PTRACE_EVENT_CLONE","","Event that stops before a return from clone.",45,N],[13,"PTRACE_EVENT_EXEC","","Event that stops before a return from execve.",45,N],[13,"PTRACE_EVENT_VFORK_DONE","","Event for a return from vfork.",45,N],[13,"PTRACE_EVENT_EXIT","","Event for a stop before an exit. Unlike the waitpid Exit status program. registers can still be examined",45,N],[13,"PTRACE_EVENT_SECCOMP","","STop triggered by a seccomp rule on a tracee.",45,N],[5,"ptrace","","Performs a ptrace request. If the request in question is provided by a specialised function this function will return an unsupported operation error.",N,N],[5,"setoptions","","Set options, as with `ptrace(PTRACE_SETOPTIONS,...)`.",N,[[["pid"],["options"]],["result"]]],[5,"getevent","","Gets a ptrace event as described by `ptrace(PTRACE_GETEVENTMSG,...)`",N,[[["pid"]],["result",["c_long"]]]],[5,"getsiginfo","","Get siginfo as with `ptrace(PTRACE_GETSIGINFO,...)`",N,[[["pid"]],["result",["siginfo_t"]]]],[5,"setsiginfo","","Set siginfo as with `ptrace(PTRACE_SETSIGINFO,...)`",N,[[["pid"],["siginfo_t"]],["result"]]],[5,"traceme","","Sets the process as traceable, as with `ptrace(PTRACE_TRACEME, ...)`",N,[[],["result"]]],[5,"syscall","","Ask for next syscall, as with `ptrace(PTRACE_SYSCALL, ...)`",N,[[["pid"]],["result"]]],[5,"attach","","Attach to a running process, as with `ptrace(PTRACE_ATTACH, ...)`",N,[[["pid"]],["result"]]],[5,"detach","","Detaches the current running process, as with `ptrace(PTRACE_DETACH, ...)`",N,[[["pid"]],["result"]]],[5,"cont","","Restart the stopped tracee process, as with `ptrace(PTRACE_CONT, ...)`",N,[[["pid"],["t"]],["result"]]],[5,"step","","Move the stopped tracee process forward by a single step as with  `ptrace(PTRACE_SINGLESTEP, ...)`",N,[[["pid"],["t"]],["result"]]],[11,"clone","","",44,[[["self"]],["request"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"hash","","",44,N],[11,"cmp","","",44,[[["self"],["request"]],["ordering"]]],[11,"eq","","",44,[[["self"],["request"]],["bool"]]],[11,"partial_cmp","","",44,[[["self"],["request"]],["option",["ordering"]]]],[11,"clone","","",45,[[["self"]],["event"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"hash","","",45,N],[11,"cmp","","",45,[[["self"],["event"]],["ordering"]]],[11,"eq","","",45,[[["self"],["event"]],["bool"]]],[11,"partial_cmp","","",45,[[["self"],["event"]],["option",["ordering"]]]],[11,"eq","","",46,[[["self"],["options"]],["bool"]]],[11,"ne","","",46,[[["self"],["options"]],["bool"]]],[11,"clone","","",46,[[["self"]],["options"]]],[11,"partial_cmp","","",46,[[["self"],["options"]],["option",["ordering"]]]],[11,"lt","","",46,[[["self"],["options"]],["bool"]]],[11,"le","","",46,[[["self"],["options"]],["bool"]]],[11,"gt","","",46,[[["self"],["options"]],["bool"]]],[11,"ge","","",46,[[["self"],["options"]],["bool"]]],[11,"cmp","","",46,[[["self"],["options"]],["ordering"]]],[11,"hash","","",46,N],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[18,"PTRACE_O_TRACESYSGOOD","","When delivering system call traps set a bit to allow tracer to distinguish between normal stops or syscall stops. May not work on all systems.",46,N],[18,"PTRACE_O_TRACEFORK","","Stop tracee at next fork and start tracing the forked process.",46,N],[18,"PTRACE_O_TRACEVFORK","","Stop tracee at next vfork call and trace the vforked process.",46,N],[18,"PTRACE_O_TRACECLONE","","Stop tracee at next clone call and trace the cloned process.",46,N],[18,"PTRACE_O_TRACEEXEC","","Stop tracee at next execve call.",46,N],[18,"PTRACE_O_TRACEVFORKDONE","","Stop tracee at vfork completion.",46,N],[18,"PTRACE_O_TRACEEXIT","","Stop tracee at next exit call. Stops before exit commences allowing tracer to see location of exit and register states.",46,N],[18,"PTRACE_O_TRACESECCOMP","","Stop tracee when a SECCOMP_RET_TRACE rule is triggered. See `man seccomp` for more details.",46,N],[18,"PTRACE_O_EXITKILL","","Send a SIGKILL to the tracee if the tracer exits.  This is useful for ptrace jailers to prevent tracees from escaping their control.",46,N],[11,"empty","","Returns an empty set of flags.",46,[[],["options"]]],[11,"all","","Returns the set containing all flags.",46,[[],["options"]]],[11,"bits","","Returns the raw value of the flags currently stored.",46,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",46,[[["c_int"]],["option",["options"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",46,[[["c_int"]],["options"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",46,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",46,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",46,[[["self"],["options"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",46,[[["self"],["options"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",46,[[["self"],["options"]]]],[11,"remove","","Removes the specified flags in-place.",46,[[["self"],["options"]]]],[11,"toggle","","Toggles the specified flags in-place.",46,[[["self"],["options"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",46,[[["self"],["options"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",46,[[["self"],["options"]],["options"]]],[11,"bitor_assign","","Adds the set of flags.",46,[[["self"],["options"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",46,[[["self"],["options"]],["options"]]],[11,"bitxor_assign","","Toggles the set of flags.",46,[[["self"],["options"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",46,[[["self"],["options"]],["options"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",46,[[["self"],["options"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",46,[[["self"],["options"]],["options"]]],[11,"sub_assign","","Disables all flags enabled in the set.",46,[[["self"],["options"]]]],[11,"not","","Returns the complement of this set of flags.",46,[[["self"]],["options"]]],[11,"extend","","",46,[[["self"],["t"]]]],[11,"from_iter","","",46,[[["t"]],["options"]]],[0,"quota","nix::sys","Set and configure disk quotas for users, groups, or projects.",N,N],[3,"QuotaValidFlags","nix::sys::quota","Indicates the quota fields that are valid to read from.",N,N],[3,"Dqblk","","Wrapper type for `if_dqblk`",N,N],[4,"QuotaType","","The scope of the quota.",N,N],[13,"USRQUOTA","","Specify a user quota",47,N],[13,"GRPQUOTA","","Specify a group quota",47,N],[4,"QuotaFmt","","The type of quota format to use.",N,N],[13,"QFMT_VFS_OLD","","Use the original quota format.",48,N],[13,"QFMT_VFS_V0","","Use the standard VFS v0 quota format.",48,N],[13,"QFMT_VFS_V1","","Use the VFS v1 quota format.",48,N],[5,"quotactl_on","","Turn on disk quotas for a block device.",N,[[["quotatype"],["p"],["quotafmt"],["p"]],["result"]]],[5,"quotactl_off","","Disable disk quotas for a block device.",N,[[["quotatype"],["p"]],["result"]]],[5,"quotactl_sync","","Update the on-disk copy of quota usages for a filesystem.",N,[[["quotatype"],["option"]],["result"]]],[5,"quotactl_get","","Get disk quota limits and current usage for the given user/group id.",N,[[["quotatype"],["p"],["c_int"]],["result",["dqblk"]]]],[5,"quotactl_set","","Configure quota values for the specified fields for a given user/group id.",N,[[["quotatype"],["p"],["c_int"],["dqblk"],["quotavalidflags"]],["result"]]],[11,"clone","","",47,[[["self"]],["quotatype"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"hash","","",47,N],[11,"cmp","","",47,[[["self"],["quotatype"]],["ordering"]]],[11,"eq","","",47,[[["self"],["quotatype"]],["bool"]]],[11,"partial_cmp","","",47,[[["self"],["quotatype"]],["option",["ordering"]]]],[11,"clone","","",48,[[["self"]],["quotafmt"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"hash","","",48,N],[11,"cmp","","",48,[[["self"],["quotafmt"]],["ordering"]]],[11,"eq","","",48,[[["self"],["quotafmt"]],["bool"]]],[11,"partial_cmp","","",48,[[["self"],["quotafmt"]],["option",["ordering"]]]],[11,"eq","","",49,[[["self"],["quotavalidflags"]],["bool"]]],[11,"ne","","",49,[[["self"],["quotavalidflags"]],["bool"]]],[11,"clone","","",49,[[["self"]],["quotavalidflags"]]],[11,"partial_cmp","","",49,[[["self"],["quotavalidflags"]],["option",["ordering"]]]],[11,"lt","","",49,[[["self"],["quotavalidflags"]],["bool"]]],[11,"le","","",49,[[["self"],["quotavalidflags"]],["bool"]]],[11,"gt","","",49,[[["self"],["quotavalidflags"]],["bool"]]],[11,"ge","","",49,[[["self"],["quotavalidflags"]],["bool"]]],[11,"cmp","","",49,[[["self"],["quotavalidflags"]],["ordering"]]],[11,"hash","","",49,N],[11,"default","","",49,[[],["quotavalidflags"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[18,"QIF_BLIMITS","","The block hard & soft limit fields.",49,N],[18,"QIF_SPACE","","The current space field.",49,N],[18,"QIF_ILIMITS","","The inode hard & soft limit fields.",49,N],[18,"QIF_INODES","","The current inodes field.",49,N],[18,"QIF_BTIME","","The disk use time limit field.",49,N],[18,"QIF_ITIME","","The file quote time limit field.",49,N],[18,"QIF_LIMITS","","All block & inode limits.",49,N],[18,"QIF_USAGE","","The space & inodes usage fields.",49,N],[18,"QIF_TIMES","","The time limit fields.",49,N],[18,"QIF_ALL","","All fields.",49,N],[11,"empty","","Returns an empty set of flags.",49,[[],["quotavalidflags"]]],[11,"all","","Returns the set containing all flags.",49,[[],["quotavalidflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",49,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",49,[[["u32"]],["option",["quotavalidflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",49,[[["u32"]],["quotavalidflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",49,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",49,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",49,[[["self"],["quotavalidflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",49,[[["self"],["quotavalidflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",49,[[["self"],["quotavalidflags"]]]],[11,"remove","","Removes the specified flags in-place.",49,[[["self"],["quotavalidflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",49,[[["self"],["quotavalidflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",49,[[["self"],["quotavalidflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",49,[[["self"],["quotavalidflags"]],["quotavalidflags"]]],[11,"bitor_assign","","Adds the set of flags.",49,[[["self"],["quotavalidflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",49,[[["self"],["quotavalidflags"]],["quotavalidflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",49,[[["self"],["quotavalidflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",49,[[["self"],["quotavalidflags"]],["quotavalidflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",49,[[["self"],["quotavalidflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",49,[[["self"],["quotavalidflags"]],["quotavalidflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",49,[[["self"],["quotavalidflags"]]]],[11,"not","","Returns the complement of this set of flags.",49,[[["self"]],["quotavalidflags"]]],[11,"extend","","",49,[[["self"],["t"]]]],[11,"from_iter","","",49,[[["t"]],["quotavalidflags"]]],[11,"clone","","",50,[[["self"]],["dqblk"]]],[11,"default","","",50,[[],["dqblk"]]],[11,"blocks_hard_limit","","The absolute limit on disk quota blocks allocated.",50,[[["self"]],["option",["u64"]]]],[11,"set_blocks_hard_limit","","Set the absolute limit on disk quota blocks allocated.",50,[[["self"],["u64"]]]],[11,"blocks_soft_limit","","Preferred limit on disk quota blocks",50,[[["self"]],["option",["u64"]]]],[11,"set_blocks_soft_limit","","Set the preferred limit on disk quota blocks allocated.",50,[[["self"],["u64"]]]],[11,"occupied_space","","Current occupied space (bytes).",50,[[["self"]],["option",["u64"]]]],[11,"inodes_hard_limit","","Maximum number of allocated inodes.",50,[[["self"]],["option",["u64"]]]],[11,"set_inodes_hard_limit","","Set the maximum number of allocated inodes.",50,[[["self"],["u64"]]]],[11,"inodes_soft_limit","","Preferred inode limit",50,[[["self"]],["option",["u64"]]]],[11,"set_inodes_soft_limit","","Set the preferred limit of allocated inodes.",50,[[["self"],["u64"]]]],[11,"allocated_inodes","","Current number of allocated inodes.",50,[[["self"]],["option",["u64"]]]],[11,"block_time_limit","","Time limit for excessive disk use.",50,[[["self"]],["option",["u64"]]]],[11,"set_block_time_limit","","Set the time limit for excessive disk use.",50,[[["self"],["u64"]]]],[11,"inode_time_limit","","Time limit for excessive files.",50,[[["self"]],["option",["u64"]]]],[11,"set_inode_time_limit","","Set the time limit for excessive files.",50,[[["self"],["u64"]]]],[0,"reboot","nix::sys","Reboot/shutdown or enable/disable Ctrl-Alt-Delete.",N,N],[4,"RebootMode","nix::sys::reboot","How exactly should the system be rebooted.",N,N],[13,"RB_HALT_SYSTEM","","",51,N],[13,"RB_KEXEC","","",51,N],[13,"RB_POWER_OFF","","",51,N],[13,"RB_AUTOBOOT","","",51,N],[13,"RB_SW_SUSPEND","","",51,N],[5,"reboot","","",N,[[["rebootmode"]],["result",["void"]]]],[5,"set_cad_enabled","","Enable or disable the reboot keystroke (Ctrl-Alt-Delete).",N,[[["bool"]],["result"]]],[11,"clone","","",51,[[["self"]],["rebootmode"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"hash","","",51,N],[11,"cmp","","",51,[[["self"],["rebootmode"]],["ordering"]]],[11,"eq","","",51,[[["self"],["rebootmode"]],["bool"]]],[11,"partial_cmp","","",51,[[["self"],["rebootmode"]],["option",["ordering"]]]],[0,"select","nix::sys","",N,N],[17,"FD_SETSIZE","nix::sys::select","",N,N],[3,"FdSet","","",N,N],[5,"select","","Monitors file descriptors for readiness",N,[[["n"],["r"],["w"],["e"],["t"]],["result",["c_int"]]]],[5,"pselect","","Monitors file descriptors for readiness with an altered signal mask.",N,[[["n"],["r"],["w"],["e"],["t"],["s"]],["result",["c_int"]]]],[11,"clone","","",52,[[["self"]],["fdset"]]],[11,"new","","",52,[[],["fdset"]]],[11,"insert","","",52,[[["self"],["rawfd"]]]],[11,"remove","","",52,[[["self"],["rawfd"]]]],[11,"contains","","",52,[[["self"],["rawfd"]],["bool"]]],[11,"clear","","",52,[[["self"]]]],[11,"highest","","Finds the highest file descriptor in the set.",52,[[["self"]],["option",["rawfd"]]]],[0,"sendfile","nix::sys","",N,N],[5,"sendfile","nix::sys::sendfile","Copy up to `count` bytes to `out_fd` from `in_fd` starting at `offset`.",N,[[["rawfd"],["rawfd"],["option",["off_t"]],["usize"]],["result",["usize"]]]],[0,"signal","nix::sys","",N,N],[3,"SigEvent","nix::sys::signal","Used to request asynchronous notification of the completion of certain events, such as POSIX AIO and timers.",N,N],[3,"SignalIterator","","",N,N],[3,"SaFlags","","",N,N],[3,"SigSet","","",N,N],[3,"SigAction","","Action to take on receipt of a signal. Corresponds to `sigaction`.",N,N],[4,"Signal","","",N,N],[13,"SIGHUP","","",53,N],[13,"SIGINT","","",53,N],[13,"SIGQUIT","","",53,N],[13,"SIGILL","","",53,N],[13,"SIGTRAP","","",53,N],[13,"SIGABRT","","",53,N],[13,"SIGBUS","","",53,N],[13,"SIGFPE","","",53,N],[13,"SIGKILL","","",53,N],[13,"SIGUSR1","","",53,N],[13,"SIGSEGV","","",53,N],[13,"SIGUSR2","","",53,N],[13,"SIGPIPE","","",53,N],[13,"SIGALRM","","",53,N],[13,"SIGTERM","","",53,N],[13,"SIGSTKFLT","","",53,N],[13,"SIGCHLD","","",53,N],[13,"SIGCONT","","",53,N],[13,"SIGSTOP","","",53,N],[13,"SIGTSTP","","",53,N],[13,"SIGTTIN","","",53,N],[13,"SIGTTOU","","",53,N],[13,"SIGURG","","",53,N],[13,"SIGXCPU","","",53,N],[13,"SIGXFSZ","","",53,N],[13,"SIGVTALRM","","",53,N],[13,"SIGPROF","","",53,N],[13,"SIGWINCH","","",53,N],[13,"SIGIO","","",53,N],[13,"SIGPWR","","",53,N],[13,"SIGSYS","","",53,N],[4,"SigmaskHow","","",N,N],[13,"SIG_BLOCK","","",54,N],[13,"SIG_UNBLOCK","","",54,N],[13,"SIG_SETMASK","","",54,N],[4,"SigHandler","","A signal handler.",N,N],[13,"SigDfl","","Default signal handling.",55,N],[13,"SigIgn","","Request that the signal be ignored.",55,N],[13,"Handler","","Use the given signal-catching function, which takes in the signal.",55,N],[13,"SigAction","","Use the given signal-catching function, which takes in the signal, information about how the signal was generated, and a pointer to the threads `ucontext_t`.",55,N],[4,"SigevNotify","","Used to request asynchronous notification of certain events, for example, with POSIX AIO, POSIX message queues, and POSIX timers.",N,N],[13,"SigevNone","","No notification will be delivered",56,N],[13,"SigevSignal","","The signal given by `signal` will be delivered to the process.  The value in `si_value` will be present in the `si_value` field of the `siginfo_t` structure of the queued signal.",56,N],[12,"signal","nix::sys::signal::SigevNotify","",56,N],[12,"si_value","","",56,N],[13,"SigevThreadId","nix::sys::signal","The signal `signal` is queued to the thread whose LWP ID is given in `thread_id`.  The value stored in `si_value` will be present in the `si_value` of the `siginfo_t` structure of the queued signal.",56,N],[12,"signal","nix::sys::signal::SigevNotify","",56,N],[12,"thread_id","","",56,N],[12,"si_value","","",56,N],[5,"sigaction","nix::sys::signal","Changes the action taken by a process on receipt of a specific signal.",N,[[["signal"],["sigaction"]],["result",["sigaction"]]]],[5,"pthread_sigmask","","Manages the signal mask (set of blocked signals) for the calling thread.",N,[[["sigmaskhow"],["option",["sigset"]],["option",["sigset"]]],["result"]]],[5,"sigprocmask","","Examine and change blocked signals.",N,[[["sigmaskhow"],["option",["sigset"]],["option",["sigset"]]],["result"]]],[5,"kill","","",N,[[["pid"],["t"]],["result"]]],[5,"raise","","",N,[[["signal"]],["result"]]],[11,"clone","","",57,[[["self"]],["sigevent"]]],[11,"new","","Note: this constructor does not allow the user to set the `sigev_notify_kevent_flags` field.  That's considered ok because on FreeBSD at least those flags don't do anything useful.  That field is part of a union that shares space with the more genuinely useful fields.",57,[[["sigevnotify"]],["sigevent"]]],[11,"sigevent","","",57,[[["self"]],["sigevent"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"from","","",57,[[["sigevent"]],["self"]]],[6,"type_of_thread_id","","",N,N],[17,"NSIG","","",N,N],[17,"SIGIOT","","",N,N],[17,"SIGPOLL","","",N,N],[17,"SIGUNUSED","","",N,N],[11,"clone","","",53,[[["self"]],["signal"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"hash","","",53,N],[11,"cmp","","",53,[[["self"],["signal"]],["ordering"]]],[11,"eq","","",53,[[["self"],["signal"]],["bool"]]],[11,"partial_cmp","","",53,[[["self"],["signal"]],["option",["ordering"]]]],[11,"clone","","",58,[[["self"]],["signaliterator"]]],[11,"next","","",58,[[["self"]],["option",["signal"]]]],[11,"iterator","","",53,[[],["signaliterator"]]],[11,"from_c_int","","",53,[[["c_int"]],["result",["signal"]]]],[11,"eq","","",59,[[["self"],["saflags"]],["bool"]]],[11,"ne","","",59,[[["self"],["saflags"]],["bool"]]],[11,"clone","","",59,[[["self"]],["saflags"]]],[11,"partial_cmp","","",59,[[["self"],["saflags"]],["option",["ordering"]]]],[11,"lt","","",59,[[["self"],["saflags"]],["bool"]]],[11,"le","","",59,[[["self"],["saflags"]],["bool"]]],[11,"gt","","",59,[[["self"],["saflags"]],["bool"]]],[11,"ge","","",59,[[["self"],["saflags"]],["bool"]]],[11,"cmp","","",59,[[["self"],["saflags"]],["ordering"]]],[11,"hash","","",59,N],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[18,"SA_NOCLDSTOP","","",59,N],[18,"SA_NOCLDWAIT","","",59,N],[18,"SA_NODEFER","","",59,N],[18,"SA_ONSTACK","","",59,N],[18,"SA_RESETHAND","","",59,N],[18,"SA_RESTART","","",59,N],[18,"SA_SIGINFO","","",59,N],[11,"empty","","Returns an empty set of flags.",59,[[],["saflags"]]],[11,"all","","Returns the set containing all flags.",59,[[],["saflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",59,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",59,[[["c_int"]],["option",["saflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",59,[[["c_int"]],["saflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",59,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",59,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",59,[[["self"],["saflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",59,[[["self"],["saflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",59,[[["self"],["saflags"]]]],[11,"remove","","Removes the specified flags in-place.",59,[[["self"],["saflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",59,[[["self"],["saflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",59,[[["self"],["saflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",59,[[["self"],["saflags"]],["saflags"]]],[11,"bitor_assign","","Adds the set of flags.",59,[[["self"],["saflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",59,[[["self"],["saflags"]],["saflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",59,[[["self"],["saflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",59,[[["self"],["saflags"]],["saflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",59,[[["self"],["saflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",59,[[["self"],["saflags"]],["saflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",59,[[["self"],["saflags"]]]],[11,"not","","Returns the complement of this set of flags.",59,[[["self"]],["saflags"]]],[11,"extend","","",59,[[["self"],["t"]]]],[11,"from_iter","","",59,[[["t"]],["saflags"]]],[11,"clone","","",54,[[["self"]],["sigmaskhow"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"hash","","",54,N],[11,"cmp","","",54,[[["self"],["sigmaskhow"]],["ordering"]]],[11,"eq","","",54,[[["self"],["sigmaskhow"]],["bool"]]],[11,"partial_cmp","","",54,[[["self"],["sigmaskhow"]],["option",["ordering"]]]],[11,"clone","","",60,[[["self"]],["sigset"]]],[11,"all","","",60,[[],["sigset"]]],[11,"empty","","",60,[[],["sigset"]]],[11,"add","","",60,[[["self"],["signal"]]]],[11,"clear","","",60,[[["self"]]]],[11,"remove","","",60,[[["self"],["signal"]]]],[11,"contains","","",60,[[["self"],["signal"]],["bool"]]],[11,"extend","","",60,[[["self"],["sigset"]]]],[11,"thread_get_mask","","Gets the currently blocked (masked) set of signals for the calling thread.",60,[[],["result",["sigset"]]]],[11,"thread_set_mask","","Sets the set of signals as the signal mask for the calling thread.",60,[[["self"]],["result"]]],[11,"thread_block","","Adds the set of signals to the signal mask for the calling thread.",60,[[["self"]],["result"]]],[11,"thread_unblock","","Removes the set of signals from the signal mask for the calling thread.",60,[[["self"]],["result"]]],[11,"thread_swap_mask","","Sets the set of signals as the signal mask, and returns the old mask.",60,[[["self"],["sigmaskhow"]],["result",["sigset"]]]],[11,"wait","","Suspends execution of the calling thread until one of the signals in the signal mask becomes pending, and returns the accepted signal.",60,[[["self"]],["result",["signal"]]]],[11,"as_ref","","",60,[[["self"]],["sigset_t"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"clone","","",55,[[["self"]],["sighandler"]]],[11,"eq","","",55,[[["self"],["sighandler"]],["bool"]]],[11,"ne","","",55,[[["self"],["sighandler"]],["bool"]]],[11,"clone","","",61,[[["self"]],["sigaction"]]],[11,"new","","Creates a new action.",61,[[["sighandler"],["saflags"],["sigset"]],["sigaction"]]],[11,"flags","","Returns the flags set on the action.",61,[[["self"]],["saflags"]]],[11,"mask","","Returns the set of signals that are blocked during execution of the action's signal-catching function.",61,[[["self"]],["sigset"]]],[11,"handler","","Returns the action's handler.",61,[[["self"]],["sighandler"]]],[11,"clone","","",56,[[["self"]],["sigevnotify"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"eq","","",56,[[["self"],["sigevnotify"]],["bool"]]],[11,"ne","","",56,[[["self"],["sigevnotify"]],["bool"]]],[0,"signalfd","nix::sys","Interface for the `signalfd` syscall.",N,N],[3,"siginfo","nix::sys::signalfd","",N,N],[12,"ssi_signo","","",62,N],[12,"ssi_errno","","",62,N],[12,"ssi_code","","",62,N],[12,"ssi_pid","","",62,N],[12,"ssi_uid","","",62,N],[12,"ssi_fd","","",62,N],[12,"ssi_tid","","",62,N],[12,"ssi_band","","",62,N],[12,"ssi_overrun","","",62,N],[12,"ssi_trapno","","",62,N],[12,"ssi_status","","",62,N],[12,"ssi_int","","",62,N],[12,"ssi_ptr","","",62,N],[12,"ssi_utime","","",62,N],[12,"ssi_stime","","",62,N],[12,"ssi_addr","","",62,N],[12,"ssi_addr_lsb","","",62,N],[12,"ssi_syscall","","",62,N],[12,"ssi_call_addr","","",62,N],[12,"ssi_arch","","",62,N],[3,"SfdFlags","","",N,N],[3,"SignalFd","","A helper struct for creating, reading and closing a `signalfd` instance.",N,N],[5,"signalfd","","Creates a new file descriptor for reading signals.",N,[[["rawfd"],["sigset"],["sfdflags"]],["result",["rawfd"]]]],[17,"SIGNALFD_NEW","","",N,N],[17,"SIGNALFD_SIGINFO_SIZE","","",N,N],[11,"eq","","",63,[[["self"],["sfdflags"]],["bool"]]],[11,"ne","","",63,[[["self"],["sfdflags"]],["bool"]]],[11,"clone","","",63,[[["self"]],["sfdflags"]]],[11,"partial_cmp","","",63,[[["self"],["sfdflags"]],["option",["ordering"]]]],[11,"lt","","",63,[[["self"],["sfdflags"]],["bool"]]],[11,"le","","",63,[[["self"],["sfdflags"]],["bool"]]],[11,"gt","","",63,[[["self"],["sfdflags"]],["bool"]]],[11,"ge","","",63,[[["self"],["sfdflags"]],["bool"]]],[11,"cmp","","",63,[[["self"],["sfdflags"]],["ordering"]]],[11,"hash","","",63,N],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[18,"SFD_NONBLOCK","","",63,N],[18,"SFD_CLOEXEC","","",63,N],[11,"empty","","Returns an empty set of flags.",63,[[],["sfdflags"]]],[11,"all","","Returns the set containing all flags.",63,[[],["sfdflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",63,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",63,[[["c_int"]],["option",["sfdflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",63,[[["c_int"]],["sfdflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",63,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",63,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",63,[[["self"],["sfdflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",63,[[["self"],["sfdflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",63,[[["self"],["sfdflags"]]]],[11,"remove","","Removes the specified flags in-place.",63,[[["self"],["sfdflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",63,[[["self"],["sfdflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",63,[[["self"],["sfdflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",63,[[["self"],["sfdflags"]],["sfdflags"]]],[11,"bitor_assign","","Adds the set of flags.",63,[[["self"],["sfdflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",63,[[["self"],["sfdflags"]],["sfdflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",63,[[["self"],["sfdflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",63,[[["self"],["sfdflags"]],["sfdflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",63,[[["self"],["sfdflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",63,[[["self"],["sfdflags"]],["sfdflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",63,[[["self"],["sfdflags"]]]],[11,"not","","Returns the complement of this set of flags.",63,[[["self"]],["sfdflags"]]],[11,"extend","","",63,[[["self"],["t"]]]],[11,"from_iter","","",63,[[["t"]],["sfdflags"]]],[11,"clone","","",64,[[["self"]],["signalfd"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"hash","","",64,N],[11,"eq","","",64,[[["self"],["signalfd"]],["bool"]]],[11,"ne","","",64,[[["self"],["signalfd"]],["bool"]]],[11,"new","","",64,[[["sigset"]],["result",["signalfd"]]]],[11,"with_flags","","",64,[[["sigset"],["sfdflags"]],["result",["signalfd"]]]],[11,"set_mask","","",64,[[["self"],["sigset"]],["result"]]],[11,"read_signal","","",64,[[["self"]],["result",["option"]]]],[11,"drop","","",64,[[["self"]]]],[11,"as_raw_fd","","",64,[[["self"]],["rawfd"]]],[11,"next","","",64,[[["self"]],["option"]]],[0,"socket","nix::sys","Socket interface functions",N,N],[3,"cmsghdr","nix::sys::socket","",N,N],[12,"cmsg_len","","",65,N],[12,"cmsg_level","","",65,N],[12,"cmsg_type","","",65,N],[3,"msghdr","","",N,N],[12,"msg_name","","",66,N],[12,"msg_namelen","","",66,N],[12,"msg_iov","","",66,N],[12,"msg_iovlen","","",66,N],[12,"msg_control","","",66,N],[12,"msg_controllen","","",66,N],[12,"msg_flags","","",66,N],[6,"sa_family_t","","",N,N],[3,"sockaddr","","",N,N],[12,"sa_family","","",67,N],[12,"sa_data","","",67,N],[3,"sockaddr_in","","",N,N],[12,"sin_family","","",68,N],[12,"sin_port","","",68,N],[12,"sin_addr","","",68,N],[12,"sin_zero","","",68,N],[3,"sockaddr_in6","","",N,N],[12,"sin6_family","","",69,N],[12,"sin6_port","","",69,N],[12,"sin6_flowinfo","","",69,N],[12,"sin6_addr","","",69,N],[12,"sin6_scope_id","","",69,N],[3,"sockaddr_storage","","",N,N],[12,"ss_family","","",70,N],[3,"sockaddr_un","","",N,N],[12,"sun_family","","",71,N],[12,"sun_path","","",71,N],[3,"UnixAddr","","A wrapper around `sockaddr_un`.",N,N],[12,"0","","",72,N],[12,"1","","",72,N],[3,"Ipv4Addr","","",N,N],[12,"0","","",73,N],[3,"Ipv6Addr","","",N,N],[12,"0","","",74,N],[3,"LinkAddr","","Hardware Address",N,N],[12,"0","","",75,N],[3,"NetlinkAddr","","",N,N],[12,"0","","",76,N],[3,"SockFlag","","Additional socket options",N,N],[3,"MsgFlags","","Flags for send/recv and their relatives",N,N],[3,"UnixCredentials","","Unix credentials of the sending process.",N,N],[3,"IpMembershipRequest","","Request for multicast socket operations",N,N],[3,"Ipv6MembershipRequest","","Request for ipv6 multicast socket operations",N,N],[3,"CmsgSpace","","A structure used to make room in a cmsghdr passed to recvmsg. The size and alignment match that of a cmsghdr followed by a T, but the fields are not accessible, as the actual types will change on a call to recvmsg.",N,N],[3,"RecvMsg","","",N,N],[12,"bytes","","",77,N],[12,"address","","",77,N],[12,"flags","","",77,N],[3,"CmsgIterator","","",N,N],[4,"AddressFamily","","These constants specify the protocol family to be used in `socket` and `socketpair`",N,N],[13,"Unix","","Local communication (see `unix(7)`)",78,N],[13,"Inet","","IPv4 Internet protocols (see `ip(7)`)",78,N],[13,"Inet6","","IPv6 Internet protocols (see `ipv6(7)`)",78,N],[13,"Netlink","","Kernel user interface device (see `netlink(7)`)",78,N],[13,"Packet","","Low level packet interface (see `packet(7)`)",78,N],[13,"Ax25","","Amateur radio AX.25 protocol",78,N],[13,"Ipx","","IPX - Novell protocols",78,N],[13,"AppleTalk","","AppleTalk",78,N],[13,"NetRom","","",78,N],[13,"Bridge","","",78,N],[13,"AtmPvc","","Access to raw ATM PVCs",78,N],[13,"X25","","ITU-T X.25 / ISO-8208 protocol (see `x25(7)`)",78,N],[13,"Rose","","",78,N],[13,"Decnet","","",78,N],[13,"NetBeui","","",78,N],[13,"Security","","",78,N],[13,"Key","","",78,N],[13,"Ash","","",78,N],[13,"Econet","","",78,N],[13,"AtmSvc","","",78,N],[13,"Rds","","",78,N],[13,"Sna","","",78,N],[13,"Irda","","",78,N],[13,"Pppox","","",78,N],[13,"Wanpipe","","",78,N],[13,"Llc","","",78,N],[13,"Ib","","",78,N],[13,"Mpls","","",78,N],[13,"Can","","",78,N],[13,"Tipc","","",78,N],[13,"Bluetooth","","",78,N],[13,"Iucv","","",78,N],[13,"RxRpc","","",78,N],[13,"Isdn","","",78,N],[13,"Phonet","","",78,N],[13,"Ieee802154","","",78,N],[13,"Caif","","",78,N],[13,"Alg","","Interface to kernel crypto API",78,N],[13,"Nfc","","",78,N],[13,"Vsock","","",78,N],[4,"SockAddr","","Represents a socket address",N,N],[13,"Inet","","",79,N],[13,"Unix","","",79,N],[13,"Netlink","","",79,N],[13,"Link","","Datalink address (MAC)",79,N],[4,"InetAddr","","",N,N],[13,"V4","","",80,N],[13,"V6","","",80,N],[4,"IpAddr","","",N,N],[13,"V4","","",81,N],[13,"V6","","",81,N],[4,"SockType","","These constants are used to specify the communication semantics when creating a socket with `socket()`",N,N],[13,"Stream","","Provides sequenced, reliable, two-way, connection- based byte streams.  An out-of-band data transmission mechanism may be supported.",82,N],[13,"Datagram","","Supports datagrams (connectionless, unreliable messages of a fixed maximum length).",82,N],[13,"SeqPacket","","Provides a sequenced, reliable, two-way connection- based data transmission path for datagrams of fixed maximum length; a consumer is required to read an entire packet with each input system call.",82,N],[13,"Raw","","Provides raw network protocol access.",82,N],[13,"Rdm","","Provides a reliable datagram layer that does not guarantee ordering.",82,N],[4,"SockProtocol","","Constants used in `socket` and `socketpair` to specify the protocol to use.",N,N],[13,"Tcp","","TCP protocol (ip(7))",83,N],[13,"Udp","","UDP protocol (ip(7))",83,N],[4,"ControlMessage","","A type-safe wrapper around a single control message. More types may be added to this enum; do not exhaustively pattern-match it. Further reading",N,N],[13,"ScmRights","","A message of type `SCM_RIGHTS`, containing an array of file descriptors passed between processes.",84,N],[13,"ScmTimestamp","","A message of type `SCM_TIMESTAMP`, containing the time the packet was received by the kernel.",84,N],[4,"SockLevel","","The protocol level at which to get / set socket options. Used as an argument to `getsockopt` and `setsockopt`.",N,N],[13,"Socket","","",85,N],[13,"Tcp","","",85,N],[13,"Ip","","",85,N],[13,"Ipv6","","",85,N],[13,"Udp","","",85,N],[13,"Netlink","","",85,N],[4,"Shutdown","","",N,N],[13,"Read","","Further receptions will be disallowed.",86,N],[13,"Write","","Further  transmissions will be disallowed.",86,N],[13,"Both","","Further receptions and transmissions will be disallowed.",86,N],[5,"sendmsg","","Send data in scatter-gather vectors to a socket, possibly accompanied by ancillary data. Optionally direct the message at the given address, as with sendto.",N,N],[5,"recvmsg","","Receive message in scatter-gather vectors from a socket, and optionally receive ancillary data into the provided buffer. If no ancillary data is desired, use () as the type parameter.",N,N],[5,"socket","","Create an endpoint for communication",N,[[["addressfamily"],["socktype"],["sockflag"],["t"]],["result",["rawfd"]]]],[5,"socketpair","","Create a pair of connected sockets",N,[[["addressfamily"],["socktype"],["t"],["sockflag"]],["result"]]],[5,"listen","","Listen for connections on a socket",N,[[["rawfd"],["usize"]],["result"]]],[5,"bind","","Bind a name to a socket",N,[[["rawfd"],["sockaddr"]],["result"]]],[5,"accept","","Accept a connection on a socket",N,[[["rawfd"]],["result",["rawfd"]]]],[5,"accept4","","Accept a connection on a socket",N,[[["rawfd"],["sockflag"]],["result",["rawfd"]]]],[5,"connect","","Initiate a connection on a socket",N,[[["rawfd"],["sockaddr"]],["result"]]],[5,"recv","","Receive data from a connection-oriented socket. Returns the number of bytes read",N,N],[5,"recvfrom","","Receive data from a connectionless or connection-oriented socket. Returns the number of bytes read and the socket address of the sender.",N,N],[5,"sendto","","Send a message to a socket",N,N],[5,"send","","Send data to a connection-oriented socket. Returns the number of bytes read",N,N],[5,"getsockopt","","Get the current value for the requested socket option",N,[[["rawfd"],["o"]],["result"]]],[5,"setsockopt","","Sets the value for the requested socket option",N,N],[5,"getpeername","","Get the address of the peer connected to the socket `fd`.",N,[[["rawfd"]],["result",["sockaddr"]]]],[5,"getsockname","","Get the current address to which the socket `fd` is bound.",N,[[["rawfd"]],["result",["sockaddr"]]]],[5,"sockaddr_storage_to_addr","","Return the appropriate `SockAddr` type from a `sockaddr_storage` of a certain size.  In C this would usually be done by casting.  The `len` argument should be the number of bytes in the `sockaddr_storage` that are actually allocated and valid.  It must be at least as large as all the useful parts of the structure.  Note that in the case of a `sockaddr_un`, `len` need not include the terminating null.",N,[[["sockaddr_storage"],["usize"]],["result",["sockaddr"]]]],[5,"shutdown","","Shut down part of a full-duplex connection.",N,[[["rawfd"],["shutdown"]],["result"]]],[11,"clone","","",76,[[["self"]],["netlinkaddr"]]],[11,"eq","","",76,[[["self"],["self"]],["bool"]]],[11,"hash","","",76,[[["self"],["h"]]]],[11,"new","","",76,[[["u32"],["u32"]],["netlinkaddr"]]],[11,"pid","","",76,[[["self"]],["u32"]]],[11,"groups","","",76,[[["self"]],["u32"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"clone","","",75,[[["self"]],["linkaddr"]]],[11,"family","","Always AF_PACKET",75,[[["self"]],["addressfamily"]]],[11,"protocol","","Physical-layer protocol",75,[[["self"]],["u16"]]],[11,"ifindex","","Interface number",75,[[["self"]],["usize"]]],[11,"hatype","","ARP hardware type",75,[[["self"]],["u16"]]],[11,"pkttype","","Packet type",75,[[["self"]],["u8"]]],[11,"halen","","Length of MAC address",75,[[["self"]],["usize"]]],[11,"addr","","Physical-layer address (MAC)",75,N],[11,"eq","","",75,[[["self"],["self"]],["bool"]]],[11,"hash","","",75,[[["self"],["h"]]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"clone","","",78,[[["self"]],["addressfamily"]]],[11,"eq","","",78,[[["self"],["addressfamily"]],["bool"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"hash","","",78,N],[11,"from_i32","","Create a new `AddressFamily` from an integer value retrieved from `libc`, usually from the `sa_family` field of a `sockaddr`.",78,[[["i32"]],["option",["addressfamily"]]]],[11,"from_std","","",80,[[["socketaddr"]],["inetaddr"]]],[11,"new","","",80,[[["ipaddr"],["u16"]],["inetaddr"]]],[11,"ip","","Gets the IP address associated with this socket address.",80,[[["self"]],["ipaddr"]]],[11,"port","","Gets the port number associated with this socket address",80,[[["self"]],["u16"]]],[11,"to_std","","",80,[[["self"]],["socketaddr"]]],[11,"to_str","","",80,[[["self"]],["string"]]],[11,"eq","","",80,[[["self"],["inetaddr"]],["bool"]]],[11,"hash","","",80,[[["self"],["h"]]]],[11,"clone","","",80,[[["self"]],["inetaddr"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"clone","","",81,[[["self"]],["ipaddr"]]],[11,"new_v4","","Create a new IpAddr that contains an IPv4 address.",81,[[["u8"],["u8"],["u8"],["u8"]],["ipaddr"]]],[11,"new_v6","","Create a new IpAddr that contains an IPv6 address.",81,[[["u16"],["u16"],["u16"],["u16"],["u16"],["u16"],["u16"],["u16"]],["ipaddr"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"new","","",73,[[["u8"],["u8"],["u8"],["u8"]],["ipv4addr"]]],[11,"from_std","","",73,[[["ipv4addr"]],["ipv4addr"]]],[11,"any","","",73,[[],["ipv4addr"]]],[11,"octets","","",73,N],[11,"to_std","","",73,[[["self"]],["ipv4addr"]]],[11,"eq","","",73,[[["self"],["ipv4addr"]],["bool"]]],[11,"hash","","",73,[[["self"],["h"]]]],[11,"clone","","",73,[[["self"]],["ipv4addr"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"clone","","",74,[[["self"]],["ipv6addr"]]],[11,"new","","",74,[[["u16"],["u16"],["u16"],["u16"],["u16"],["u16"],["u16"],["u16"]],["ipv6addr"]]],[11,"from_std","","",74,[[["ipv6addr"]],["ipv6addr"]]],[11,"segments","","Return the eight 16-bit segments that make up this address",74,N],[11,"to_std","","",74,[[["self"]],["ipv6addr"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new sockaddr_un representing a filesystem path.",72,[[["p"]],["result",["unixaddr"]]]],[11,"new_abstract","","Create a new `sockaddr_un` representing an address in the \"abstract namespace\".",72,N],[11,"path","","If this address represents a filesystem path, return that path.",72,[[["self"]],["option",["path"]]]],[11,"as_abstract","","If this address represents an abstract socket, return its name.",72,[[["self"]],["option"]]],[11,"eq","","",72,[[["self"],["unixaddr"]],["bool"]]],[11,"hash","","",72,[[["self"],["h"]]]],[11,"clone","","",72,[[["self"]],["unixaddr"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"new_inet","","",79,[[["inetaddr"]],["sockaddr"]]],[11,"new_unix","","",79,[[["p"]],["result",["sockaddr"]]]],[11,"new_netlink","","",79,[[["u32"],["u32"]],["sockaddr"]]],[11,"family","","",79,[[["self"]],["addressfamily"]]],[11,"to_str","","",79,[[["self"]],["string"]]],[11,"from_libc_sockaddr","","Creates a `SockAddr` struct from libc's sockaddr.",79,N],[11,"as_ffi_pair","","Conversion from nix's SockAddr type to the underlying libc sockaddr type.",79,N],[11,"eq","","",79,[[["self"],["sockaddr"]],["bool"]]],[11,"hash","","",79,[[["self"],["h"]]]],[11,"clone","","",79,[[["self"]],["sockaddr"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[0,"sockopt","","",N,N],[3,"ReuseAddr","nix::sys::socket::sockopt","",N,N],[3,"ReusePort","","",N,N],[3,"TcpNoDelay","","",N,N],[3,"Linger","","",N,N],[3,"IpAddMembership","","",N,N],[3,"IpDropMembership","","",N,N],[3,"Ipv6AddMembership","","",N,N],[3,"Ipv6DropMembership","","",N,N],[3,"IpMulticastTtl","","",N,N],[3,"IpMulticastLoop","","",N,N],[3,"ReceiveTimeout","","",N,N],[3,"SendTimeout","","",N,N],[3,"Broadcast","","",N,N],[3,"OobInline","","",N,N],[3,"SocketError","","",N,N],[3,"KeepAlive","","",N,N],[3,"PeerCredentials","","",N,N],[3,"TcpKeepIdle","","",N,N],[3,"RcvBuf","","",N,N],[3,"SndBuf","","",N,N],[3,"RcvBufForce","","",N,N],[3,"SndBufForce","","",N,N],[3,"SockType","","",N,N],[3,"AcceptConn","","",N,N],[3,"OriginalDst","","",N,N],[3,"ReceiveTimestamp","","",N,N],[3,"IpTransparent","","",N,N],[3,"Mark","","",N,N],[11,"clone","","",87,[[["self"]],["reuseaddr"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"set","","",87,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"get","","",87,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"clone","","",88,[[["self"]],["reuseport"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"set","","",88,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"get","","",88,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"clone","","",89,[[["self"]],["tcpnodelay"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"set","","",89,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"get","","",89,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"clone","","",90,[[["self"]],["linger"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"set","","",90,[[["self"],["rawfd"],["linger"]],["result"]]],[11,"get","","",90,[[["self"],["rawfd"]],["result",["linger"]]]],[11,"clone","","",91,[[["self"]],["ipaddmembership"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"set","","",91,[[["self"],["rawfd"],["ipmembershiprequest"]],["result"]]],[11,"clone","","",92,[[["self"]],["ipdropmembership"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"set","","",92,[[["self"],["rawfd"],["ipmembershiprequest"]],["result"]]],[11,"clone","","",93,[[["self"]],["ipv6addmembership"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"set","","",93,[[["self"],["rawfd"],["ipv6membershiprequest"]],["result"]]],[11,"clone","","",94,[[["self"]],["ipv6dropmembership"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"set","","",94,[[["self"],["rawfd"],["ipv6membershiprequest"]],["result"]]],[11,"clone","","",95,[[["self"]],["ipmulticastttl"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"set","","",95,[[["self"],["rawfd"],["u8"]],["result"]]],[11,"get","","",95,[[["self"],["rawfd"]],["result",["u8"]]]],[11,"clone","","",96,[[["self"]],["ipmulticastloop"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"set","","",96,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"get","","",96,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"clone","","",97,[[["self"]],["receivetimeout"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"set","","",97,[[["self"],["rawfd"],["timeval"]],["result"]]],[11,"get","","",97,[[["self"],["rawfd"]],["result",["timeval"]]]],[11,"clone","","",98,[[["self"]],["sendtimeout"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"set","","",98,[[["self"],["rawfd"],["timeval"]],["result"]]],[11,"get","","",98,[[["self"],["rawfd"]],["result",["timeval"]]]],[11,"clone","","",99,[[["self"]],["broadcast"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"set","","",99,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"get","","",99,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"clone","","",100,[[["self"]],["oobinline"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"set","","",100,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"get","","",100,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"clone","","",101,[[["self"]],["socketerror"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"get","","",101,[[["self"],["rawfd"]],["result",["i32"]]]],[11,"clone","","",102,[[["self"]],["keepalive"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"set","","",102,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"get","","",102,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"clone","","",103,[[["self"]],["peercredentials"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"get","","",103,[[["self"],["rawfd"]],["result",["unixcredentials"]]]],[11,"clone","","",104,[[["self"]],["tcpkeepidle"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result"]]],[11,"set","","",104,[[["self"],["rawfd"],["u32"]],["result"]]],[11,"get","","",104,[[["self"],["rawfd"]],["result",["u32"]]]],[11,"clone","","",105,[[["self"]],["rcvbuf"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"set","","",105,[[["self"],["rawfd"],["usize"]],["result"]]],[11,"get","","",105,[[["self"],["rawfd"]],["result",["usize"]]]],[11,"clone","","",106,[[["self"]],["sndbuf"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"set","","",106,[[["self"],["rawfd"],["usize"]],["result"]]],[11,"get","","",106,[[["self"],["rawfd"]],["result",["usize"]]]],[11,"clone","","",107,[[["self"]],["rcvbufforce"]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"set","","",107,[[["self"],["rawfd"],["usize"]],["result"]]],[11,"clone","","",108,[[["self"]],["sndbufforce"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"set","","",108,[[["self"],["rawfd"],["usize"]],["result"]]],[11,"clone","","",109,[[["self"]],["socktype"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"get","","",109,[[["self"],["rawfd"]],["result",["socktype"]]]],[11,"clone","","",110,[[["self"]],["acceptconn"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"get","","",110,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"clone","","",111,[[["self"]],["originaldst"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"get","","",111,[[["self"],["rawfd"]],["result",["sockaddr_in"]]]],[11,"clone","","",112,[[["self"]],["receivetimestamp"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"set","","",112,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"get","","",112,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"clone","","",113,[[["self"]],["iptransparent"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"set","","",113,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"get","","",113,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"clone","","",114,[[["self"]],["mark"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"set","","",114,[[["self"],["rawfd"],["u32"]],["result"]]],[11,"get","","",114,[[["self"],["rawfd"]],["result",["u32"]]]],[8,"GetSockOpt","nix::sys::socket","Represents a socket option that can be accessed or set. Used as an argument to `getsockopt`",N,N],[16,"Val","","",115,N],[8,"SetSockOpt","","Represents a socket option that can be accessed or set. Used as an argument to `setsockopt`",N,N],[16,"Val","","",116,N],[11,"clone","","",82,[[["self"]],["socktype"]]],[11,"eq","","",82,[[["self"],["socktype"]],["bool"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"clone","","",83,[[["self"]],["sockprotocol"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"hash","","",83,N],[11,"eq","","",83,[[["self"],["sockprotocol"]],["bool"]]],[11,"eq","","",117,[[["self"],["sockflag"]],["bool"]]],[11,"ne","","",117,[[["self"],["sockflag"]],["bool"]]],[11,"clone","","",117,[[["self"]],["sockflag"]]],[11,"partial_cmp","","",117,[[["self"],["sockflag"]],["option",["ordering"]]]],[11,"lt","","",117,[[["self"],["sockflag"]],["bool"]]],[11,"le","","",117,[[["self"],["sockflag"]],["bool"]]],[11,"gt","","",117,[[["self"],["sockflag"]],["bool"]]],[11,"ge","","",117,[[["self"],["sockflag"]],["bool"]]],[11,"cmp","","",117,[[["self"],["sockflag"]],["ordering"]]],[11,"hash","","",117,N],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[18,"SOCK_NONBLOCK","","Set non-blocking mode on the new socket",117,N],[18,"SOCK_CLOEXEC","","Set close-on-exec on the new descriptor",117,N],[11,"empty","","Returns an empty set of flags.",117,[[],["sockflag"]]],[11,"all","","Returns the set containing all flags.",117,[[],["sockflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",117,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",117,[[["c_int"]],["option",["sockflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",117,[[["c_int"]],["sockflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",117,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",117,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",117,[[["self"],["sockflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",117,[[["self"],["sockflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",117,[[["self"],["sockflag"]]]],[11,"remove","","Removes the specified flags in-place.",117,[[["self"],["sockflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",117,[[["self"],["sockflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",117,[[["self"],["sockflag"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",117,[[["self"],["sockflag"]],["sockflag"]]],[11,"bitor_assign","","Adds the set of flags.",117,[[["self"],["sockflag"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",117,[[["self"],["sockflag"]],["sockflag"]]],[11,"bitxor_assign","","Toggles the set of flags.",117,[[["self"],["sockflag"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",117,[[["self"],["sockflag"]],["sockflag"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",117,[[["self"],["sockflag"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",117,[[["self"],["sockflag"]],["sockflag"]]],[11,"sub_assign","","Disables all flags enabled in the set.",117,[[["self"],["sockflag"]]]],[11,"not","","Returns the complement of this set of flags.",117,[[["self"]],["sockflag"]]],[11,"extend","","",117,[[["self"],["t"]]]],[11,"from_iter","","",117,[[["t"]],["sockflag"]]],[11,"eq","","",118,[[["self"],["msgflags"]],["bool"]]],[11,"ne","","",118,[[["self"],["msgflags"]],["bool"]]],[11,"clone","","",118,[[["self"]],["msgflags"]]],[11,"partial_cmp","","",118,[[["self"],["msgflags"]],["option",["ordering"]]]],[11,"lt","","",118,[[["self"],["msgflags"]],["bool"]]],[11,"le","","",118,[[["self"],["msgflags"]],["bool"]]],[11,"gt","","",118,[[["self"],["msgflags"]],["bool"]]],[11,"ge","","",118,[[["self"],["msgflags"]],["bool"]]],[11,"cmp","","",118,[[["self"],["msgflags"]],["ordering"]]],[11,"hash","","",118,N],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[18,"MSG_OOB","","Sends or requests out-of-band data on sockets that support this notion (e.g., of type `Stream`); the underlying protocol must also support out-of-band data.",118,N],[18,"MSG_PEEK","","Peeks at an incoming message. The data is treated as unread and the next `recv()` or similar function shall still return this data.",118,N],[18,"MSG_DONTWAIT","","Enables nonblocking operation; if the operation would block, `EAGAIN` or `EWOULDBLOCK` is returned.  This provides similar behavior to setting the `O_NONBLOCK` flag (via the `fcntl` `F_SETFL` operation), but differs in that `MSG_DONTWAIT` is a per- call option, whereas `O_NONBLOCK` is a setting on the open file description (see open(2)), which will affect all threads in the calling process and as well as other processes that hold file descriptors referring to the same open file description.",118,N],[18,"MSG_CTRUNC","","Receive flags: Control Data was discarded (buffer too small)",118,N],[18,"MSG_TRUNC","","For raw (`Packet`), Internet datagram (since Linux 2.4.27/2.6.8), netlink (since Linux 2.6.22) and UNIX datagram (since Linux 3.4) sockets: return the real length of the packet or datagram, even when it was longer than the passed buffer. Not implemented for UNIX domain (unix(7)) sockets.",118,N],[18,"MSG_EOR","","Terminates a record (when this notion is supported, as for sockets of type `SeqPacket`).",118,N],[18,"MSG_ERRQUEUE","","This flag specifies that queued errors should be received from the socket error queue. (For more details, see recvfrom(2))",118,N],[18,"MSG_CMSG_CLOEXEC","","Set the `close-on-exec` flag for the file descriptor received via a UNIX domain file descriptor using the `SCM_RIGHTS` operation (described in unix(7)). This flag is useful for the same reasons as the `O_CLOEXEC` flag of open(2).",118,N],[11,"empty","","Returns an empty set of flags.",118,[[],["msgflags"]]],[11,"all","","Returns the set containing all flags.",118,[[],["msgflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",118,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",118,[[["c_int"]],["option",["msgflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",118,[[["c_int"]],["msgflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",118,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",118,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",118,[[["self"],["msgflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",118,[[["self"],["msgflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",118,[[["self"],["msgflags"]]]],[11,"remove","","Removes the specified flags in-place.",118,[[["self"],["msgflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",118,[[["self"],["msgflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",118,[[["self"],["msgflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",118,[[["self"],["msgflags"]],["msgflags"]]],[11,"bitor_assign","","Adds the set of flags.",118,[[["self"],["msgflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",118,[[["self"],["msgflags"]],["msgflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",118,[[["self"],["msgflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",118,[[["self"],["msgflags"]],["msgflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",118,[[["self"],["msgflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",118,[[["self"],["msgflags"]],["msgflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",118,[[["self"],["msgflags"]]]],[11,"not","","Returns the complement of this set of flags.",118,[[["self"]],["msgflags"]]],[11,"extend","","",118,[[["self"],["t"]]]],[11,"from_iter","","",118,[[["t"]],["msgflags"]]],[11,"clone","","",119,[[["self"]],["unixcredentials"]]],[11,"pid","","Returns the process identifier",119,[[["self"]],["pid_t"]]],[11,"uid","","Returns the user identifier",119,[[["self"]],["uid_t"]]],[11,"gid","","Returns the group identifier",119,[[["self"]],["gid_t"]]],[11,"eq","","",119,[[["self"],["self"]],["bool"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"clone","","",120,[[["self"]],["ipmembershiprequest"]]],[11,"new","","Instantiate a new `IpMembershipRequest`",120,[[["ipv4addr"],["option",["ipv4addr"]]],["self"]]],[11,"eq","","",120,[[["self"],["self"]],["bool"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"clone","","",121,[[["self"]],["ipv6membershiprequest"]]],[11,"new","","Instantiate a new `Ipv6MembershipRequest`",121,[[["ipv6addr"]],["self"]]],[11,"eq","","",121,[[["self"],["self"]],["bool"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a CmsgSpace. The structure is used only for space, so the fields are uninitialized.",122,[[],["self"]]],[11,"cmsgs","","Iterate over the valid control messages pointed to by this msghdr.",77,[[["self"]],["cmsgiterator"]]],[11,"next","","",123,[[["self"]],["option",["controlmessage"]]]],[11,"clone","","",85,[[["self"]],["socklevel"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"hash","","",85,N],[11,"eq","","",85,[[["self"],["socklevel"]],["bool"]]],[11,"clone","","",86,[[["self"]],["shutdown"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"hash","","",86,N],[11,"eq","","",86,[[["self"],["shutdown"]],["bool"]]],[0,"stat","nix::sys","",N,N],[6,"dev_t","nix::sys::stat","",N,N],[3,"FileStat","","",N,N],[12,"st_dev","","",124,N],[12,"st_ino","","",124,N],[12,"st_nlink","","",124,N],[12,"st_mode","","",124,N],[12,"st_uid","","",124,N],[12,"st_gid","","",124,N],[12,"st_rdev","","",124,N],[12,"st_size","","",124,N],[12,"st_blksize","","",124,N],[12,"st_blocks","","",124,N],[12,"st_atime","","",124,N],[12,"st_atime_nsec","","",124,N],[12,"st_mtime","","",124,N],[12,"st_mtime_nsec","","",124,N],[12,"st_ctime","","",124,N],[12,"st_ctime_nsec","","",124,N],[5,"FileStat","","",N,N],[3,"SFlag","","",N,N],[3,"Mode","","",N,N],[4,"FchmodatFlags","","Flags for `fchmodat` function.",N,N],[13,"FollowSymlink","","",125,N],[13,"NoFollowSymlink","","",125,N],[5,"mknod","","",N,[[["p"],["sflag"],["mode"],["dev_t"]],["result"]]],[5,"major","","",N,[[["dev_t"]],["u64"]]],[5,"minor","","",N,[[["dev_t"]],["u64"]]],[5,"makedev","","",N,[[["u64"],["u64"]],["dev_t"]]],[5,"umask","","",N,[[["mode"]],["mode"]]],[5,"stat","","",N,[[["p"]],["result",["filestat"]]]],[5,"lstat","","",N,[[["p"]],["result",["filestat"]]]],[5,"fstat","","",N,[[["rawfd"]],["result",["filestat"]]]],[5,"fstatat","","",N,[[["rawfd"],["p"],["atflags"]],["result",["filestat"]]]],[5,"fchmod","","Change the file permission bits of the file specified by a file descriptor.",N,[[["rawfd"],["mode"]],["result"]]],[5,"fchmodat","","Change the file permission bits.",N,[[["option",["rawfd"]],["p"],["mode"],["fchmodatflags"]],["result"]]],[11,"eq","","",126,[[["self"],["sflag"]],["bool"]]],[11,"ne","","",126,[[["self"],["sflag"]],["bool"]]],[11,"clone","","",126,[[["self"]],["sflag"]]],[11,"partial_cmp","","",126,[[["self"],["sflag"]],["option",["ordering"]]]],[11,"lt","","",126,[[["self"],["sflag"]],["bool"]]],[11,"le","","",126,[[["self"],["sflag"]],["bool"]]],[11,"gt","","",126,[[["self"],["sflag"]],["bool"]]],[11,"ge","","",126,[[["self"],["sflag"]],["bool"]]],[11,"cmp","","",126,[[["self"],["sflag"]],["ordering"]]],[11,"hash","","",126,N],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[18,"S_IFIFO","","",126,N],[18,"S_IFCHR","","",126,N],[18,"S_IFDIR","","",126,N],[18,"S_IFBLK","","",126,N],[18,"S_IFREG","","",126,N],[18,"S_IFLNK","","",126,N],[18,"S_IFSOCK","","",126,N],[18,"S_IFMT","","",126,N],[11,"empty","","Returns an empty set of flags.",126,[[],["sflag"]]],[11,"all","","Returns the set containing all flags.",126,[[],["sflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",126,[[["self"]],["mode_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",126,[[["mode_t"]],["option",["sflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",126,[[["mode_t"]],["sflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",126,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",126,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",126,[[["self"],["sflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",126,[[["self"],["sflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",126,[[["self"],["sflag"]]]],[11,"remove","","Removes the specified flags in-place.",126,[[["self"],["sflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",126,[[["self"],["sflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",126,[[["self"],["sflag"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",126,[[["self"],["sflag"]],["sflag"]]],[11,"bitor_assign","","Adds the set of flags.",126,[[["self"],["sflag"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",126,[[["self"],["sflag"]],["sflag"]]],[11,"bitxor_assign","","Toggles the set of flags.",126,[[["self"],["sflag"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",126,[[["self"],["sflag"]],["sflag"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",126,[[["self"],["sflag"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",126,[[["self"],["sflag"]],["sflag"]]],[11,"sub_assign","","Disables all flags enabled in the set.",126,[[["self"],["sflag"]]]],[11,"not","","Returns the complement of this set of flags.",126,[[["self"]],["sflag"]]],[11,"extend","","",126,[[["self"],["t"]]]],[11,"from_iter","","",126,[[["t"]],["sflag"]]],[11,"eq","","",127,[[["self"],["mode"]],["bool"]]],[11,"ne","","",127,[[["self"],["mode"]],["bool"]]],[11,"clone","","",127,[[["self"]],["mode"]]],[11,"partial_cmp","","",127,[[["self"],["mode"]],["option",["ordering"]]]],[11,"lt","","",127,[[["self"],["mode"]],["bool"]]],[11,"le","","",127,[[["self"],["mode"]],["bool"]]],[11,"gt","","",127,[[["self"],["mode"]],["bool"]]],[11,"ge","","",127,[[["self"],["mode"]],["bool"]]],[11,"cmp","","",127,[[["self"],["mode"]],["ordering"]]],[11,"hash","","",127,N],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[18,"S_IRWXU","","",127,N],[18,"S_IRUSR","","",127,N],[18,"S_IWUSR","","",127,N],[18,"S_IXUSR","","",127,N],[18,"S_IRWXG","","",127,N],[18,"S_IRGRP","","",127,N],[18,"S_IWGRP","","",127,N],[18,"S_IXGRP","","",127,N],[18,"S_IRWXO","","",127,N],[18,"S_IROTH","","",127,N],[18,"S_IWOTH","","",127,N],[18,"S_IXOTH","","",127,N],[18,"S_ISUID","","",127,N],[18,"S_ISGID","","",127,N],[18,"S_ISVTX","","",127,N],[11,"empty","","Returns an empty set of flags.",127,[[],["mode"]]],[11,"all","","Returns the set containing all flags.",127,[[],["mode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",127,[[["self"]],["mode_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",127,[[["mode_t"]],["option",["mode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",127,[[["mode_t"]],["mode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",127,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",127,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",127,[[["self"],["mode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",127,[[["self"],["mode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",127,[[["self"],["mode"]]]],[11,"remove","","Removes the specified flags in-place.",127,[[["self"],["mode"]]]],[11,"toggle","","Toggles the specified flags in-place.",127,[[["self"],["mode"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",127,[[["self"],["mode"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",127,[[["self"],["mode"]],["mode"]]],[11,"bitor_assign","","Adds the set of flags.",127,[[["self"],["mode"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",127,[[["self"],["mode"]],["mode"]]],[11,"bitxor_assign","","Toggles the set of flags.",127,[[["self"],["mode"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",127,[[["self"],["mode"]],["mode"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",127,[[["self"],["mode"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",127,[[["self"],["mode"]],["mode"]]],[11,"sub_assign","","Disables all flags enabled in the set.",127,[[["self"],["mode"]]]],[11,"not","","Returns the complement of this set of flags.",127,[[["self"]],["mode"]]],[11,"extend","","",127,[[["self"],["t"]]]],[11,"from_iter","","",127,[[["t"]],["mode"]]],[11,"clone","","",125,[[["self"]],["fchmodatflags"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[0,"statfs","nix::sys","",N,N],[5,"statfs","nix::sys::statfs","",N,[[["p"],["statfs"]],["result"]]],[5,"fstatfs","","",N,[[["t"],["statfs"]],["result"]]],[0,"statvfs","nix::sys","Get filesystem statistics",N,N],[3,"FsFlags","nix::sys::statvfs","File system mount Flags",N,N],[3,"Statvfs","","Wrapper around the POSIX `statvfs` struct",N,N],[5,"statvfs","","Return a `Statvfs` object with information about the `path`",N,[[["p"]],["result",["statvfs"]]]],[5,"fstatvfs","","Return a `Statvfs` object with information about `fd`",N,[[["t"]],["result",["statvfs"]]]],[11,"eq","","",128,[[["self"],["fsflags"]],["bool"]]],[11,"ne","","",128,[[["self"],["fsflags"]],["bool"]]],[11,"clone","","",128,[[["self"]],["fsflags"]]],[11,"partial_cmp","","",128,[[["self"],["fsflags"]],["option",["ordering"]]]],[11,"lt","","",128,[[["self"],["fsflags"]],["bool"]]],[11,"le","","",128,[[["self"],["fsflags"]],["bool"]]],[11,"gt","","",128,[[["self"],["fsflags"]],["bool"]]],[11,"ge","","",128,[[["self"],["fsflags"]],["bool"]]],[11,"cmp","","",128,[[["self"],["fsflags"]],["ordering"]]],[11,"hash","","",128,N],[11,"default","","",128,[[],["fsflags"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[18,"ST_RDONLY","","Read Only",128,N],[18,"ST_NOSUID","","Do not allow the set-uid bits to have an effect",128,N],[18,"ST_NODEV","","Do not interpret character or block-special devices",128,N],[18,"ST_NOEXEC","","Do not allow execution of binaries on the filesystem",128,N],[18,"ST_SYNCHRONOUS","","All IO should be done synchronously",128,N],[18,"ST_MANDLOCK","","Allow mandatory locks on the filesystem",128,N],[18,"ST_WRITE","","Write on file/directory/symlink",128,N],[18,"ST_APPEND","","Append-only file",128,N],[18,"ST_IMMUTABLE","","Immutable file",128,N],[18,"ST_NOATIME","","Do not update access times on files",128,N],[18,"ST_NODIRATIME","","Do not update access times on files",128,N],[18,"ST_RELATIME","","Update access time relative to modify/change time",128,N],[11,"empty","","Returns an empty set of flags.",128,[[],["fsflags"]]],[11,"all","","Returns the set containing all flags.",128,[[],["fsflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",128,[[["self"]],["c_ulong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",128,[[["c_ulong"]],["option",["fsflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",128,[[["c_ulong"]],["fsflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",128,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",128,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",128,[[["self"],["fsflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",128,[[["self"],["fsflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",128,[[["self"],["fsflags"]]]],[11,"remove","","Removes the specified flags in-place.",128,[[["self"],["fsflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",128,[[["self"],["fsflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",128,[[["self"],["fsflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",128,[[["self"],["fsflags"]],["fsflags"]]],[11,"bitor_assign","","Adds the set of flags.",128,[[["self"],["fsflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",128,[[["self"],["fsflags"]],["fsflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",128,[[["self"],["fsflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",128,[[["self"],["fsflags"]],["fsflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",128,[[["self"],["fsflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",128,[[["self"],["fsflags"]],["fsflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",128,[[["self"],["fsflags"]]]],[11,"not","","Returns the complement of this set of flags.",128,[[["self"]],["fsflags"]]],[11,"extend","","",128,[[["self"],["t"]]]],[11,"from_iter","","",128,[[["t"]],["fsflags"]]],[11,"clone","","",129,[[["self"]],["statvfs"]]],[11,"block_size","","get the file system block size",129,[[["self"]],["c_ulong"]]],[11,"fragment_size","","Get the fundamental file system block size",129,[[["self"]],["c_ulong"]]],[11,"blocks","","Get the number of blocks.",129,[[["self"]],["fsblkcnt_t"]]],[11,"blocks_free","","Get the number of free blocks in the file system",129,[[["self"]],["fsblkcnt_t"]]],[11,"blocks_available","","Get the number of free blocks for unprivileged users",129,[[["self"]],["fsblkcnt_t"]]],[11,"files","","Get the total number of file inodes",129,[[["self"]],["fsfilcnt_t"]]],[11,"files_free","","Get the number of free file inodes",129,[[["self"]],["fsfilcnt_t"]]],[11,"files_available","","Get the number of free file inodes for unprivileged users",129,[[["self"]],["fsfilcnt_t"]]],[11,"filesystem_id","","Get the file system id",129,[[["self"]],["c_ulong"]]],[11,"flags","","Get the mount flags",129,[[["self"]],["fsflags"]]],[11,"name_max","","Get the maximum filename length",129,[[["self"]],["c_ulong"]]],[0,"termios","nix::sys","An interface for controlling asynchronous communication ports",N,N],[17,"NCCS","nix::sys::termios","",N,N],[17,"_POSIX_VDISABLE","","",N,N],[3,"Termios","","Stores settings for the termios API",N,N],[12,"input_flags","","Input mode flags (see `termios.c_iflag` documentation)",130,N],[12,"output_flags","","Output mode flags (see `termios.c_oflag` documentation)",130,N],[12,"control_flags","","Control mode flags (see `termios.c_cflag` documentation)",130,N],[12,"local_flags","","Local mode flags (see `termios.c_lflag` documentation)",130,N],[12,"control_chars","","Control characters (see `termios.c_cc` documentation)",130,N],[3,"InputFlags","","Flags for configuring the input mode of a terminal",N,N],[3,"OutputFlags","","Flags for configuring the output mode of a terminal",N,N],[3,"ControlFlags","","Flags for setting the control mode of a terminal",N,N],[3,"LocalFlags","","Flags for setting any local modes",N,N],[4,"BaudRate","","Baud rates supported by the system.",N,N],[13,"B0","","",131,N],[13,"B50","","",131,N],[13,"B75","","",131,N],[13,"B110","","",131,N],[13,"B134","","",131,N],[13,"B150","","",131,N],[13,"B200","","",131,N],[13,"B300","","",131,N],[13,"B600","","",131,N],[13,"B1200","","",131,N],[13,"B1800","","",131,N],[13,"B2400","","",131,N],[13,"B4800","","",131,N],[13,"B9600","","",131,N],[13,"B19200","","",131,N],[13,"B38400","","",131,N],[13,"B57600","","",131,N],[13,"B115200","","",131,N],[13,"B230400","","",131,N],[13,"B460800","","",131,N],[13,"B500000","","",131,N],[13,"B576000","","",131,N],[13,"B921600","","",131,N],[13,"B1000000","","",131,N],[13,"B1152000","","",131,N],[13,"B1500000","","",131,N],[13,"B2000000","","",131,N],[13,"B2500000","","",131,N],[13,"B3000000","","",131,N],[13,"B3500000","","",131,N],[13,"B4000000","","",131,N],[4,"SetArg","","Specify when a port configuration change should occur.",N,N],[13,"TCSANOW","","The change will occur immediately",132,N],[13,"TCSADRAIN","","The change occurs after all output has been written",132,N],[13,"TCSAFLUSH","","Same as `TCSADRAIN`, but will also flush the input buffer",132,N],[4,"FlushArg","","Specify a combination of the input and output buffers to flush",N,N],[13,"TCIFLUSH","","Flush data that was received but not read",133,N],[13,"TCOFLUSH","","Flush data written but not transmitted",133,N],[13,"TCIOFLUSH","","Flush both received data not read and written data not transmitted",133,N],[4,"FlowArg","","Specify how transmission flow should be altered",N,N],[13,"TCOOFF","","Suspend transmission",134,N],[13,"TCOON","","Resume transmission",134,N],[13,"TCIOFF","","Transmit a STOP character, which should disable a connected terminal device",134,N],[13,"TCION","","Transmit a START character, which should re-enable a connected terminal device",134,N],[4,"SpecialCharacterIndices","","Indices into the `termios.c_cc` array for special characters.",N,N],[13,"VDISCARD","","",135,N],[13,"VEOF","","",135,N],[13,"VEOL","","",135,N],[13,"VEOL2","","",135,N],[13,"VERASE","","",135,N],[13,"VINTR","","",135,N],[13,"VKILL","","",135,N],[13,"VLNEXT","","",135,N],[13,"VMIN","","",135,N],[13,"VQUIT","","",135,N],[13,"VREPRINT","","",135,N],[13,"VSTART","","",135,N],[13,"VSTOP","","",135,N],[13,"VSUSP","","",135,N],[13,"VSWTC","","",135,N],[13,"VTIME","","",135,N],[13,"VWERASE","","",135,N],[5,"cfgetispeed","","Get input baud rate (see cfgetispeed(3p)).",N,[[["termios"]],["baudrate"]]],[5,"cfgetospeed","","Get output baud rate (see cfgetospeed(3p)).",N,[[["termios"]],["baudrate"]]],[5,"cfsetispeed","","Set input baud rate (see cfsetispeed(3p)).",N,[[["termios"],["baudrate"]],["result"]]],[5,"cfsetospeed","","Set output baud rate (see cfsetospeed(3p)).",N,[[["termios"],["baudrate"]],["result"]]],[5,"cfsetspeed","","Set both the input and output baud rates (see termios(3)).",N,[[["termios"],["baudrate"]],["result"]]],[5,"cfmakeraw","","Configures the port to something like the \"raw\" mode of the old Version 7 terminal driver (see termios(3)).",N,[[["termios"]]]],[5,"tcgetattr","","Return the configuration of a port tcgetattr(3p)).",N,[[["rawfd"]],["result",["termios"]]]],[5,"tcsetattr","","Set the configuration for a terminal (see tcsetattr(3p)).",N,[[["rawfd"],["setarg"],["termios"]],["result"]]],[5,"tcdrain","","Block until all output data is written (see tcdrain(3p)).",N,[[["rawfd"]],["result"]]],[5,"tcflow","","Suspend or resume the transmission or reception of data (see tcflow(3p)).",N,[[["rawfd"],["flowarg"]],["result"]]],[5,"tcflush","","Discard data in the output or input queue (see tcflush(3p)).",N,[[["rawfd"],["flusharg"]],["result"]]],[5,"tcsendbreak","","Send a break for a specific duration (see tcsendbreak(3p)).",N,[[["rawfd"],["c_int"]],["result"]]],[5,"tcgetsid","","Get the session controlled by the given terminal (see tcgetsid(3)).",N,[[["rawfd"]],["result",["pid"]]]],[11,"clone","","",130,[[["self"]],["termios"]]],[11,"from","","",130,[[["termios"]],["self"]]],[11,"clone","","",131,[[["self"]],["baudrate"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"hash","","",131,N],[11,"cmp","","",131,[[["self"],["baudrate"]],["ordering"]]],[11,"eq","","",131,[[["self"],["baudrate"]],["bool"]]],[11,"partial_cmp","","",131,[[["self"],["baudrate"]],["option",["ordering"]]]],[11,"from","","",131,[[["speed_t"]],["baudrate"]]],[11,"clone","","",132,[[["self"]],["setarg"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"hash","","",132,N],[11,"cmp","","",132,[[["self"],["setarg"]],["ordering"]]],[11,"eq","","",132,[[["self"],["setarg"]],["bool"]]],[11,"partial_cmp","","",132,[[["self"],["setarg"]],["option",["ordering"]]]],[11,"clone","","",133,[[["self"]],["flusharg"]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result"]]],[11,"hash","","",133,N],[11,"cmp","","",133,[[["self"],["flusharg"]],["ordering"]]],[11,"eq","","",133,[[["self"],["flusharg"]],["bool"]]],[11,"partial_cmp","","",133,[[["self"],["flusharg"]],["option",["ordering"]]]],[11,"clone","","",134,[[["self"]],["flowarg"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"hash","","",134,N],[11,"cmp","","",134,[[["self"],["flowarg"]],["ordering"]]],[11,"eq","","",134,[[["self"],["flowarg"]],["bool"]]],[11,"partial_cmp","","",134,[[["self"],["flowarg"]],["option",["ordering"]]]],[11,"clone","","",135,[[["self"]],["specialcharacterindices"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"hash","","",135,N],[11,"cmp","","",135,[[["self"],["specialcharacterindices"]],["ordering"]]],[11,"eq","","",135,[[["self"],["specialcharacterindices"]],["bool"]]],[11,"partial_cmp","","",135,[[["self"],["specialcharacterindices"]],["option",["ordering"]]]],[11,"eq","","",136,[[["self"],["inputflags"]],["bool"]]],[11,"ne","","",136,[[["self"],["inputflags"]],["bool"]]],[11,"clone","","",136,[[["self"]],["inputflags"]]],[11,"partial_cmp","","",136,[[["self"],["inputflags"]],["option",["ordering"]]]],[11,"lt","","",136,[[["self"],["inputflags"]],["bool"]]],[11,"le","","",136,[[["self"],["inputflags"]],["bool"]]],[11,"gt","","",136,[[["self"],["inputflags"]],["bool"]]],[11,"ge","","",136,[[["self"],["inputflags"]],["bool"]]],[11,"cmp","","",136,[[["self"],["inputflags"]],["ordering"]]],[11,"hash","","",136,N],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[18,"IGNBRK","","",136,N],[18,"BRKINT","","",136,N],[18,"IGNPAR","","",136,N],[18,"PARMRK","","",136,N],[18,"INPCK","","",136,N],[18,"ISTRIP","","",136,N],[18,"INLCR","","",136,N],[18,"IGNCR","","",136,N],[18,"ICRNL","","",136,N],[18,"IXON","","",136,N],[18,"IXOFF","","",136,N],[18,"IXANY","","",136,N],[18,"IMAXBEL","","",136,N],[18,"IUTF8","","",136,N],[11,"empty","","Returns an empty set of flags.",136,[[],["inputflags"]]],[11,"all","","Returns the set containing all flags.",136,[[],["inputflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",136,[[["self"]],["tcflag_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",136,[[["tcflag_t"]],["option",["inputflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",136,[[["tcflag_t"]],["inputflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",136,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",136,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",136,[[["self"],["inputflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",136,[[["self"],["inputflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",136,[[["self"],["inputflags"]]]],[11,"remove","","Removes the specified flags in-place.",136,[[["self"],["inputflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",136,[[["self"],["inputflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",136,[[["self"],["inputflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",136,[[["self"],["inputflags"]],["inputflags"]]],[11,"bitor_assign","","Adds the set of flags.",136,[[["self"],["inputflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",136,[[["self"],["inputflags"]],["inputflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",136,[[["self"],["inputflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",136,[[["self"],["inputflags"]],["inputflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",136,[[["self"],["inputflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",136,[[["self"],["inputflags"]],["inputflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",136,[[["self"],["inputflags"]]]],[11,"not","","Returns the complement of this set of flags.",136,[[["self"]],["inputflags"]]],[11,"extend","","",136,[[["self"],["t"]]]],[11,"from_iter","","",136,[[["t"]],["inputflags"]]],[11,"eq","","",137,[[["self"],["outputflags"]],["bool"]]],[11,"ne","","",137,[[["self"],["outputflags"]],["bool"]]],[11,"clone","","",137,[[["self"]],["outputflags"]]],[11,"partial_cmp","","",137,[[["self"],["outputflags"]],["option",["ordering"]]]],[11,"lt","","",137,[[["self"],["outputflags"]],["bool"]]],[11,"le","","",137,[[["self"],["outputflags"]],["bool"]]],[11,"gt","","",137,[[["self"],["outputflags"]],["bool"]]],[11,"ge","","",137,[[["self"],["outputflags"]],["bool"]]],[11,"cmp","","",137,[[["self"],["outputflags"]],["ordering"]]],[11,"hash","","",137,N],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[18,"OPOST","","",137,N],[18,"OLCUC","","",137,N],[18,"ONLCR","","",137,N],[18,"OCRNL","","",137,N],[18,"ONOCR","","",137,N],[18,"ONLRET","","",137,N],[18,"OFILL","","",137,N],[18,"OFDEL","","",137,N],[18,"NL0","","",137,N],[18,"NL1","","",137,N],[18,"CR0","","",137,N],[18,"CR1","","",137,N],[18,"CR2","","",137,N],[18,"CR3","","",137,N],[18,"TAB0","","",137,N],[18,"TAB1","","",137,N],[18,"TAB2","","",137,N],[18,"TAB3","","",137,N],[18,"XTABS","","",137,N],[18,"BS0","","",137,N],[18,"BS1","","",137,N],[18,"VT0","","",137,N],[18,"VT1","","",137,N],[18,"FF0","","",137,N],[18,"FF1","","",137,N],[18,"NLDLY","","",137,N],[18,"CRDLY","","",137,N],[18,"TABDLY","","",137,N],[18,"BSDLY","","",137,N],[18,"VTDLY","","",137,N],[18,"FFDLY","","",137,N],[11,"empty","","Returns an empty set of flags.",137,[[],["outputflags"]]],[11,"all","","Returns the set containing all flags.",137,[[],["outputflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",137,[[["self"]],["tcflag_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",137,[[["tcflag_t"]],["option",["outputflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",137,[[["tcflag_t"]],["outputflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",137,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",137,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",137,[[["self"],["outputflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",137,[[["self"],["outputflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",137,[[["self"],["outputflags"]]]],[11,"remove","","Removes the specified flags in-place.",137,[[["self"],["outputflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",137,[[["self"],["outputflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",137,[[["self"],["outputflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",137,[[["self"],["outputflags"]],["outputflags"]]],[11,"bitor_assign","","Adds the set of flags.",137,[[["self"],["outputflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",137,[[["self"],["outputflags"]],["outputflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",137,[[["self"],["outputflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",137,[[["self"],["outputflags"]],["outputflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",137,[[["self"],["outputflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",137,[[["self"],["outputflags"]],["outputflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",137,[[["self"],["outputflags"]]]],[11,"not","","Returns the complement of this set of flags.",137,[[["self"]],["outputflags"]]],[11,"extend","","",137,[[["self"],["t"]]]],[11,"from_iter","","",137,[[["t"]],["outputflags"]]],[11,"eq","","",138,[[["self"],["controlflags"]],["bool"]]],[11,"ne","","",138,[[["self"],["controlflags"]],["bool"]]],[11,"clone","","",138,[[["self"]],["controlflags"]]],[11,"partial_cmp","","",138,[[["self"],["controlflags"]],["option",["ordering"]]]],[11,"lt","","",138,[[["self"],["controlflags"]],["bool"]]],[11,"le","","",138,[[["self"],["controlflags"]],["bool"]]],[11,"gt","","",138,[[["self"],["controlflags"]],["bool"]]],[11,"ge","","",138,[[["self"],["controlflags"]],["bool"]]],[11,"cmp","","",138,[[["self"],["controlflags"]],["ordering"]]],[11,"hash","","",138,N],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[18,"CS5","","",138,N],[18,"CS6","","",138,N],[18,"CS7","","",138,N],[18,"CS8","","",138,N],[18,"CSTOPB","","",138,N],[18,"CREAD","","",138,N],[18,"PARENB","","",138,N],[18,"PARODD","","",138,N],[18,"HUPCL","","",138,N],[18,"CLOCAL","","",138,N],[18,"CRTSCTS","","",138,N],[18,"CBAUD","","",138,N],[18,"CMSPAR","","",138,N],[18,"CIBAUD","","",138,N],[18,"CBAUDEX","","",138,N],[18,"CSIZE","","",138,N],[11,"empty","","Returns an empty set of flags.",138,[[],["controlflags"]]],[11,"all","","Returns the set containing all flags.",138,[[],["controlflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",138,[[["self"]],["tcflag_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",138,[[["tcflag_t"]],["option",["controlflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",138,[[["tcflag_t"]],["controlflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",138,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",138,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",138,[[["self"],["controlflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",138,[[["self"],["controlflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",138,[[["self"],["controlflags"]]]],[11,"remove","","Removes the specified flags in-place.",138,[[["self"],["controlflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",138,[[["self"],["controlflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",138,[[["self"],["controlflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",138,[[["self"],["controlflags"]],["controlflags"]]],[11,"bitor_assign","","Adds the set of flags.",138,[[["self"],["controlflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",138,[[["self"],["controlflags"]],["controlflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",138,[[["self"],["controlflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",138,[[["self"],["controlflags"]],["controlflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",138,[[["self"],["controlflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",138,[[["self"],["controlflags"]],["controlflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",138,[[["self"],["controlflags"]]]],[11,"not","","Returns the complement of this set of flags.",138,[[["self"]],["controlflags"]]],[11,"extend","","",138,[[["self"],["t"]]]],[11,"from_iter","","",138,[[["t"]],["controlflags"]]],[11,"eq","","",139,[[["self"],["localflags"]],["bool"]]],[11,"ne","","",139,[[["self"],["localflags"]],["bool"]]],[11,"clone","","",139,[[["self"]],["localflags"]]],[11,"partial_cmp","","",139,[[["self"],["localflags"]],["option",["ordering"]]]],[11,"lt","","",139,[[["self"],["localflags"]],["bool"]]],[11,"le","","",139,[[["self"],["localflags"]],["bool"]]],[11,"gt","","",139,[[["self"],["localflags"]],["bool"]]],[11,"ge","","",139,[[["self"],["localflags"]],["bool"]]],[11,"cmp","","",139,[[["self"],["localflags"]],["ordering"]]],[11,"hash","","",139,N],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[18,"ECHOKE","","",139,N],[18,"ECHOE","","",139,N],[18,"ECHOK","","",139,N],[18,"ECHO","","",139,N],[18,"ECHONL","","",139,N],[18,"ECHOPRT","","",139,N],[18,"ECHOCTL","","",139,N],[18,"ISIG","","",139,N],[18,"ICANON","","",139,N],[18,"IEXTEN","","",139,N],[18,"EXTPROC","","",139,N],[18,"TOSTOP","","",139,N],[18,"FLUSHO","","",139,N],[18,"PENDIN","","",139,N],[18,"NOFLSH","","",139,N],[11,"empty","","Returns an empty set of flags.",139,[[],["localflags"]]],[11,"all","","Returns the set containing all flags.",139,[[],["localflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",139,[[["self"]],["tcflag_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",139,[[["tcflag_t"]],["option",["localflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",139,[[["tcflag_t"]],["localflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",139,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",139,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",139,[[["self"],["localflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",139,[[["self"],["localflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",139,[[["self"],["localflags"]]]],[11,"remove","","Removes the specified flags in-place.",139,[[["self"],["localflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",139,[[["self"],["localflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",139,[[["self"],["localflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",139,[[["self"],["localflags"]],["localflags"]]],[11,"bitor_assign","","Adds the set of flags.",139,[[["self"],["localflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",139,[[["self"],["localflags"]],["localflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",139,[[["self"],["localflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",139,[[["self"],["localflags"]],["localflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",139,[[["self"],["localflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",139,[[["self"],["localflags"]],["localflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",139,[[["self"],["localflags"]]]],[11,"not","","Returns the complement of this set of flags.",139,[[["self"]],["localflags"]]],[11,"extend","","",139,[[["self"],["t"]]]],[11,"from_iter","","",139,[[["t"]],["localflags"]]],[0,"time","nix::sys","",N,N],[3,"TimeSpec","nix::sys::time","",N,N],[3,"TimeVal","","",N,N],[8,"TimeValLike","","",N,N],[11,"zero","","",140,[[],["self"]]],[11,"hours","","",140,[[["i64"]],["self"]]],[11,"minutes","","",140,[[["i64"]],["self"]]],[10,"seconds","","",140,[[["i64"]],["self"]]],[10,"milliseconds","","",140,[[["i64"]],["self"]]],[10,"microseconds","","",140,[[["i64"]],["self"]]],[10,"nanoseconds","","",140,[[["i64"]],["self"]]],[11,"num_hours","","",140,[[["self"]],["i64"]]],[11,"num_minutes","","",140,[[["self"]],["i64"]]],[10,"num_seconds","","",140,[[["self"]],["i64"]]],[10,"num_milliseconds","","",140,[[["self"]],["i64"]]],[10,"num_microseconds","","",140,[[["self"]],["i64"]]],[10,"num_nanoseconds","","",140,[[["self"]],["i64"]]],[11,"clone","","",141,[[["self"]],["timespec"]]],[11,"as_ref","","",141,[[["self"]],["timespec"]]],[11,"fmt","","",141,[[["self"],["formatter"]],["result"]]],[11,"eq","","",141,[[["self"],["timespec"]],["bool"]]],[11,"cmp","","",141,[[["self"],["timespec"]],["ordering"]]],[11,"partial_cmp","","",141,[[["self"],["timespec"]],["option",["ordering"]]]],[11,"seconds","","",141,[[["i64"]],["timespec"]]],[11,"milliseconds","","",141,[[["i64"]],["timespec"]]],[11,"microseconds","","Makes a new `TimeSpec` with given number of microseconds.",141,[[["i64"]],["timespec"]]],[11,"nanoseconds","","Makes a new `TimeSpec` with given number of nanoseconds.",141,[[["i64"]],["timespec"]]],[11,"num_seconds","","",141,[[["self"]],["i64"]]],[11,"num_milliseconds","","",141,[[["self"]],["i64"]]],[11,"num_microseconds","","",141,[[["self"]],["i64"]]],[11,"num_nanoseconds","","",141,[[["self"]],["i64"]]],[11,"tv_sec","","",141,[[["self"]],["time_t"]]],[11,"tv_nsec","","",141,[[["self"]],["c_long"]]],[11,"neg","","",141,[[["self"]],["timespec"]]],[11,"add","","",141,[[["self"],["timespec"]],["timespec"]]],[11,"sub","","",141,[[["self"],["timespec"]],["timespec"]]],[11,"mul","","",141,[[["self"],["i32"]],["timespec"]]],[11,"div","","",141,[[["self"],["i32"]],["timespec"]]],[11,"fmt","","",141,[[["self"],["formatter"]],["result"]]],[11,"clone","","",142,[[["self"]],["timeval"]]],[11,"as_ref","","",142,[[["self"]],["timeval"]]],[11,"fmt","","",142,[[["self"],["formatter"]],["result"]]],[11,"eq","","",142,[[["self"],["timeval"]],["bool"]]],[11,"cmp","","",142,[[["self"],["timeval"]],["ordering"]]],[11,"partial_cmp","","",142,[[["self"],["timeval"]],["option",["ordering"]]]],[11,"seconds","","",142,[[["i64"]],["timeval"]]],[11,"milliseconds","","",142,[[["i64"]],["timeval"]]],[11,"microseconds","","Makes a new `TimeVal` with given number of microseconds.",142,[[["i64"]],["timeval"]]],[11,"nanoseconds","","Makes a new `TimeVal` with given number of nanoseconds.  Some precision will be lost",142,[[["i64"]],["timeval"]]],[11,"num_seconds","","",142,[[["self"]],["i64"]]],[11,"num_milliseconds","","",142,[[["self"]],["i64"]]],[11,"num_microseconds","","",142,[[["self"]],["i64"]]],[11,"num_nanoseconds","","",142,[[["self"]],["i64"]]],[11,"tv_sec","","",142,[[["self"]],["time_t"]]],[11,"tv_usec","","",142,[[["self"]],["suseconds_t"]]],[11,"neg","","",142,[[["self"]],["timeval"]]],[11,"add","","",142,[[["self"],["timeval"]],["timeval"]]],[11,"sub","","",142,[[["self"],["timeval"]],["timeval"]]],[11,"mul","","",142,[[["self"],["i32"]],["timeval"]]],[11,"div","","",142,[[["self"],["i32"]],["timeval"]]],[11,"fmt","","",142,[[["self"],["formatter"]],["result"]]],[0,"uio","nix::sys","",N,N],[3,"RemoteIoVec","nix::sys::uio","A slice of memory in a remote process, starting at address `base` and consisting of `len` bytes.",N,N],[12,"base","","The starting address of this slice (`iov_base`).",143,N],[12,"len","","The number of bytes in this slice (`iov_len`).",143,N],[3,"IoVec","","",N,N],[5,"writev","","",N,N],[5,"readv","","",N,N],[5,"pwritev","","Write to `fd` at `offset` from buffers in `iov`.",N,N],[5,"preadv","","Read from `fd` at `offset` filling buffers in `iov`.",N,N],[5,"pwrite","","",N,N],[5,"pread","","",N,N],[5,"process_vm_writev","","Write data directly to another process's virtual memory (see [`process_vm_writev`(2)]).",N,N],[5,"process_vm_readv","","Read data directly from another process's virtual memory (see [`process_vm_readv`(2)]).",N,N],[11,"clone","","",143,[[["self"]],["remoteiovec"]]],[11,"as_slice","","",144,N],[11,"from_slice","","",144,N],[11,"from_mut_slice","","",144,N],[0,"utsname","nix::sys","",N,N],[3,"UtsName","nix::sys::utsname","",N,N],[5,"uname","","",N,[[],["utsname"]]],[11,"clone","","",145,[[["self"]],["utsname"]]],[11,"sysname","","",145,[[["self"]],["str"]]],[11,"nodename","","",145,[[["self"]],["str"]]],[11,"release","","",145,[[["self"]],["str"]]],[11,"version","","",145,[[["self"]],["str"]]],[11,"machine","","",145,[[["self"]],["str"]]],[0,"wait","nix::sys","",N,N],[3,"WaitPidFlag","nix::sys::wait","",N,N],[4,"WaitStatus","","Possible return values from `wait()` or `waitpid()`.",N,N],[13,"Exited","","The process exited normally (as with `exit()` or returning from `main`) with the given exit code. This case matches the C macro `WIFEXITED(status)`; the second field is `WEXITSTATUS(status)`.",146,N],[13,"Signaled","","The process was killed by the given signal. The third field indicates whether the signal generated a core dump. This case matches the C macro `WIFSIGNALED(status)`; the last two fields correspond to `WTERMSIG(status)` and `WCOREDUMP(status)`.",146,N],[13,"Stopped","","The process is alive, but was stopped by the given signal. This is only reported if `WaitPidFlag::WUNTRACED` was passed. This case matches the C macro `WIFSTOPPED(status)`; the second field is `WSTOPSIG(status)`.",146,N],[13,"PtraceEvent","","The traced process was stopped by a `PTRACE_EVENT_*` event. See [`nix::sys::ptrace`] and [`ptrace`(2)] for more information. All currently-defined events use `SIGTRAP` as the signal; the third field is the `PTRACE_EVENT_*` value of the event.",146,N],[13,"PtraceSyscall","","The traced process was stopped by execution of a system call, and `PTRACE_O_TRACESYSGOOD` is in effect. See [`ptrace`(2)] for more information.",146,N],[13,"Continued","","The process was previously stopped but has resumed execution after receiving a `SIGCONT` signal. This is only reported if `WaitPidFlag::WCONTINUED` was passed. This case matches the C macro `WIFCONTINUED(status)`.",146,N],[13,"StillAlive","","There are currently no state changes to report in any awaited child process. This is only returned if `WaitPidFlag::WNOHANG` was used (otherwise `wait()` or `waitpid()` would block until there was something to report).",146,N],[5,"waitpid","","",N,[[["p"],["option",["waitpidflag"]]],["result",["waitstatus"]]]],[5,"wait","","",N,[[],["result",["waitstatus"]]]],[11,"eq","","",147,[[["self"],["waitpidflag"]],["bool"]]],[11,"ne","","",147,[[["self"],["waitpidflag"]],["bool"]]],[11,"clone","","",147,[[["self"]],["waitpidflag"]]],[11,"partial_cmp","","",147,[[["self"],["waitpidflag"]],["option",["ordering"]]]],[11,"lt","","",147,[[["self"],["waitpidflag"]],["bool"]]],[11,"le","","",147,[[["self"],["waitpidflag"]],["bool"]]],[11,"gt","","",147,[[["self"],["waitpidflag"]],["bool"]]],[11,"ge","","",147,[[["self"],["waitpidflag"]],["bool"]]],[11,"cmp","","",147,[[["self"],["waitpidflag"]],["ordering"]]],[11,"hash","","",147,N],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[18,"WNOHANG","","",147,N],[18,"WUNTRACED","","",147,N],[18,"WEXITED","","",147,N],[18,"WCONTINUED","","",147,N],[18,"WSTOPPED","","",147,N],[18,"WNOWAIT","","Don't reap, just poll status.",147,N],[18,"__WNOTHREAD","","Don't wait on children of other threads in this group",147,N],[18,"__WALL","","Wait on all children, regardless of type",147,N],[18,"__WCLONE","","",147,N],[11,"empty","","Returns an empty set of flags.",147,[[],["waitpidflag"]]],[11,"all","","Returns the set containing all flags.",147,[[],["waitpidflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",147,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",147,[[["c_int"]],["option",["waitpidflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",147,[[["c_int"]],["waitpidflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",147,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",147,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",147,[[["self"],["waitpidflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",147,[[["self"],["waitpidflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",147,[[["self"],["waitpidflag"]]]],[11,"remove","","Removes the specified flags in-place.",147,[[["self"],["waitpidflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",147,[[["self"],["waitpidflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",147,[[["self"],["waitpidflag"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",147,[[["self"],["waitpidflag"]],["waitpidflag"]]],[11,"bitor_assign","","Adds the set of flags.",147,[[["self"],["waitpidflag"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",147,[[["self"],["waitpidflag"]],["waitpidflag"]]],[11,"bitxor_assign","","Toggles the set of flags.",147,[[["self"],["waitpidflag"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",147,[[["self"],["waitpidflag"]],["waitpidflag"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",147,[[["self"],["waitpidflag"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",147,[[["self"],["waitpidflag"]],["waitpidflag"]]],[11,"sub_assign","","Disables all flags enabled in the set.",147,[[["self"],["waitpidflag"]]]],[11,"not","","Returns the complement of this set of flags.",147,[[["self"]],["waitpidflag"]]],[11,"extend","","",147,[[["self"],["t"]]]],[11,"from_iter","","",147,[[["t"]],["waitpidflag"]]],[11,"eq","","",146,[[["self"],["waitstatus"]],["bool"]]],[11,"ne","","",146,[[["self"],["waitstatus"]],["bool"]]],[11,"clone","","",146,[[["self"]],["waitstatus"]]],[11,"fmt","","",146,[[["self"],["formatter"]],["result"]]],[11,"pid","","Extracts the PID from the WaitStatus unless it equals StillAlive.",146,[[["self"]],["option",["pid"]]]],[11,"from_raw","","Convert a raw `wstatus` as returned by `waitpid`/`wait` into a `WaitStatus`",146,[[["pid"],["i32"]],["result",["waitstatus"]]]],[0,"ucontext","nix","",N,N],[3,"UContext","nix::ucontext","",N,N],[11,"clone","","",148,[[["self"]],["ucontext"]]],[11,"get","","",148,[[],["result",["ucontext"]]]],[11,"set","","",148,[[["self"]],["result"]]],[11,"sigmask_mut","","",148,[[["self"]],["sigset"]]],[11,"sigmask","","",148,[[["self"]],["sigset"]]],[0,"unistd","nix","Safe wrappers around functions found in libc \"unistd.h\" header",N,N],[3,"Uid","nix::unistd","User identifier",N,N],[3,"Gid","","Group identifier",N,N],[3,"Pid","","Process identifier",N,N],[4,"ForkResult","","Represents the successful result of calling `fork`",N,N],[13,"Parent","","",149,N],[12,"child","nix::unistd::ForkResult","",149,N],[13,"Child","nix::unistd","",149,N],[4,"Whence","","Directive that tells [`lseek`] and [`lseek64`] what the offset is relative to.",N,N],[13,"SeekSet","","Specify an offset relative to the start of the file.",150,N],[13,"SeekCur","","Specify an offset relative to the current file location.",150,N],[13,"SeekEnd","","Specify an offset relative to the end of the file.",150,N],[13,"SeekData","","Specify an offset relative to the next location in the file greater than or equal to offset that contains some data. If offset points to some data, then the file offset is set to offset.",150,N],[13,"SeekHole","","Specify an offset relative to the next hole in the file greater than or equal to offset. If offset points into the middle of a hole, then the file offset should be set to offset. If there is no hole past offset, then the file offset should be adjusted to the end of the file (i.e., there is an implicit hole at the end of any file).",150,N],[4,"PathconfVar","","Variable names for `pathconf`",N,N],[13,"FILESIZEBITS","","Minimum number of bits needed to represent, as a signed integer value, the maximum size of a regular file allowed in the specified directory.",151,N],[13,"LINK_MAX","","Maximum number of links to a single file.",151,N],[13,"MAX_CANON","","Maximum number of bytes in a terminal canonical input line.",151,N],[13,"MAX_INPUT","","Minimum number of bytes for which space is available in a terminal input queue; therefore, the maximum number of bytes a conforming application may require to be typed as input before reading them.",151,N],[13,"NAME_MAX","","Maximum number of bytes in a filename (not including the terminating null of a filename string).",151,N],[13,"PATH_MAX","","Maximum number of bytes the implementation will store as a pathname in a user-supplied buffer of unspecified size, including the terminating null character. Minimum number the implementation will accept as the maximum number of bytes in a pathname.",151,N],[13,"PIPE_BUF","","Maximum number of bytes that is guaranteed to be atomic when writing to a pipe.",151,N],[13,"POSIX2_SYMLINKS","","Symbolic links can be created.",151,N],[13,"POSIX_ALLOC_SIZE_MIN","","Minimum number of bytes of storage actually allocated for any portion of a file.",151,N],[13,"POSIX_REC_INCR_XFER_SIZE","","Recommended increment for file transfer sizes between the `POSIX_REC_MIN_XFER_SIZE` and `POSIX_REC_MAX_XFER_SIZE` values.",151,N],[13,"POSIX_REC_MAX_XFER_SIZE","","Maximum recommended file transfer size.",151,N],[13,"POSIX_REC_MIN_XFER_SIZE","","Minimum recommended file transfer size.",151,N],[13,"POSIX_REC_XFER_ALIGN","","Recommended file transfer buffer alignment.",151,N],[13,"SYMLINK_MAX","","Maximum number of bytes in a symbolic link.",151,N],[13,"_POSIX_CHOWN_RESTRICTED","","The use of `chown` and `fchown` is restricted to a process with appropriate privileges, and to changing the group ID of a file only to the effective group ID of the process or to one of its supplementary group IDs.",151,N],[13,"_POSIX_NO_TRUNC","","Pathname components longer than {NAME_MAX} generate an error.",151,N],[13,"_POSIX_VDISABLE","","This symbol shall be defined to be the value of a character that shall disable terminal special character handling.",151,N],[13,"_POSIX_ASYNC_IO","","Asynchronous input or output operations may be performed for the associated file.",151,N],[13,"_POSIX_PRIO_IO","","Prioritized input or output operations may be performed for the associated file.",151,N],[13,"_POSIX_SYNC_IO","","Synchronized input or output operations may be performed for the associated file.",151,N],[4,"SysconfVar","","Variable names for `sysconf`",N,N],[13,"AIO_LISTIO_MAX","","Maximum number of I/O operations in a single list I/O call supported by the implementation.",152,N],[13,"AIO_MAX","","Maximum number of outstanding asynchronous I/O operations supported by the implementation.",152,N],[13,"AIO_PRIO_DELTA_MAX","","The maximum amount by which a process can decrease its asynchronous I/O priority level from its own scheduling priority.",152,N],[13,"ARG_MAX","","Maximum length of argument to the exec functions including environment data.",152,N],[13,"ATEXIT_MAX","","Maximum number of functions that may be registered with `atexit`.",152,N],[13,"BC_BASE_MAX","","Maximum obase values allowed by the bc utility.",152,N],[13,"BC_DIM_MAX","","Maximum number of elements permitted in an array by the bc utility.",152,N],[13,"BC_SCALE_MAX","","Maximum scale value allowed by the bc utility.",152,N],[13,"BC_STRING_MAX","","Maximum length of a string constant accepted by the bc utility.",152,N],[13,"CHILD_MAX","","Maximum number of simultaneous processes per real user ID.",152,N],[13,"COLL_WEIGHTS_MAX","","Maximum number of weights that can be assigned to an entry of the LC_COLLATE order keyword in the locale definition file",152,N],[13,"DELAYTIMER_MAX","","Maximum number of timer expiration overruns.",152,N],[13,"EXPR_NEST_MAX","","Maximum number of expressions that can be nested within parentheses by the expr utility.",152,N],[13,"HOST_NAME_MAX","","Maximum length of a host name (not including the terminating null) as returned from the `gethostname` function",152,N],[13,"IOV_MAX","","Maximum number of iovec structures that one process has available for use with `readv` or `writev`.",152,N],[13,"LINE_MAX","","Unless otherwise noted, the maximum length, in bytes, of a utility's input line (either standard input or another file), when the utility is described as processing text files. The length includes room for the trailing .",152,N],[13,"LOGIN_NAME_MAX","","Maximum length of a login name.",152,N],[13,"NGROUPS_MAX","","Maximum number of simultaneous supplementary group IDs per process.",152,N],[13,"GETGR_R_SIZE_MAX","","Initial size of `getgrgid_r` and `getgrnam_r` data buffers",152,N],[13,"GETPW_R_SIZE_MAX","","Initial size of `getpwuid_r` and `getpwnam_r` data buffers",152,N],[13,"MQ_OPEN_MAX","","The maximum number of open message queue descriptors a process may hold.",152,N],[13,"MQ_PRIO_MAX","","The maximum number of message priorities supported by the implementation.",152,N],[13,"OPEN_MAX","","A value one greater than the maximum value that the system may assign to a newly-created file descriptor.",152,N],[13,"_POSIX_ADVISORY_INFO","","The implementation supports the Advisory Information option.",152,N],[13,"_POSIX_BARRIERS","","The implementation supports barriers.",152,N],[13,"_POSIX_ASYNCHRONOUS_IO","","The implementation supports asynchronous input and output.",152,N],[13,"_POSIX_CLOCK_SELECTION","","The implementation supports clock selection.",152,N],[13,"_POSIX_CPUTIME","","The implementation supports the Process CPU-Time Clocks option.",152,N],[13,"_POSIX_FSYNC","","The implementation supports the File Synchronization option.",152,N],[13,"_POSIX_IPV6","","The implementation supports the IPv6 option.",152,N],[13,"_POSIX_JOB_CONTROL","","The implementation supports job control.",152,N],[13,"_POSIX_MAPPED_FILES","","The implementation supports memory mapped Files.",152,N],[13,"_POSIX_MEMLOCK","","The implementation supports the Process Memory Locking option.",152,N],[13,"_POSIX_MEMLOCK_RANGE","","The implementation supports the Range Memory Locking option.",152,N],[13,"_POSIX_MEMORY_PROTECTION","","The implementation supports memory protection.",152,N],[13,"_POSIX_MESSAGE_PASSING","","The implementation supports the Message Passing option.",152,N],[13,"_POSIX_MONOTONIC_CLOCK","","The implementation supports the Monotonic Clock option.",152,N],[13,"_POSIX_PRIORITIZED_IO","","The implementation supports the Prioritized Input and Output option.",152,N],[13,"_POSIX_PRIORITY_SCHEDULING","","The implementation supports the Process Scheduling option.",152,N],[13,"_POSIX_RAW_SOCKETS","","The implementation supports the Raw Sockets option.",152,N],[13,"_POSIX_READER_WRITER_LOCKS","","The implementation supports read-write locks.",152,N],[13,"_POSIX_REALTIME_SIGNALS","","The implementation supports realtime signals.",152,N],[13,"_POSIX_REGEXP","","The implementation supports the Regular Expression Handling option.",152,N],[13,"_POSIX_SAVED_IDS","","Each process has a saved set-user-ID and a saved set-group-ID.",152,N],[13,"_POSIX_SEMAPHORES","","The implementation supports semaphores.",152,N],[13,"_POSIX_SHARED_MEMORY_OBJECTS","","The implementation supports the Shared Memory Objects option.",152,N],[13,"_POSIX_SHELL","","The implementation supports the POSIX shell.",152,N],[13,"_POSIX_SPAWN","","The implementation supports the Spawn option.",152,N],[13,"_POSIX_SPIN_LOCKS","","The implementation supports spin locks.",152,N],[13,"_POSIX_SPORADIC_SERVER","","The implementation supports the Process Sporadic Server option.",152,N],[13,"_POSIX_SS_REPL_MAX","","",152,N],[13,"_POSIX_SYNCHRONIZED_IO","","The implementation supports the Synchronized Input and Output option.",152,N],[13,"_POSIX_THREAD_ATTR_STACKADDR","","The implementation supports the Thread Stack Address Attribute option.",152,N],[13,"_POSIX_THREAD_ATTR_STACKSIZE","","The implementation supports the Thread Stack Size Attribute option.",152,N],[13,"_POSIX_THREAD_CPUTIME","","The implementation supports the Thread CPU-Time Clocks option.",152,N],[13,"_POSIX_THREAD_PRIO_INHERIT","","The implementation supports the Non-Robust Mutex Priority Inheritance option.",152,N],[13,"_POSIX_THREAD_PRIO_PROTECT","","The implementation supports the Non-Robust Mutex Priority Protection option.",152,N],[13,"_POSIX_THREAD_PRIORITY_SCHEDULING","","The implementation supports the Thread Execution Scheduling option.",152,N],[13,"_POSIX_THREAD_PROCESS_SHARED","","The implementation supports the Thread Process-Shared Synchronization option.",152,N],[13,"_POSIX_THREAD_ROBUST_PRIO_INHERIT","","The implementation supports the Robust Mutex Priority Inheritance option.",152,N],[13,"_POSIX_THREAD_ROBUST_PRIO_PROTECT","","The implementation supports the Robust Mutex Priority Protection option.",152,N],[13,"_POSIX_THREAD_SAFE_FUNCTIONS","","The implementation supports thread-safe functions.",152,N],[13,"_POSIX_THREAD_SPORADIC_SERVER","","The implementation supports the Thread Sporadic Server option.",152,N],[13,"_POSIX_THREADS","","The implementation supports threads.",152,N],[13,"_POSIX_TIMEOUTS","","The implementation supports timeouts.",152,N],[13,"_POSIX_TIMERS","","The implementation supports timers.",152,N],[13,"_POSIX_TRACE","","The implementation supports the Trace option.",152,N],[13,"_POSIX_TRACE_EVENT_FILTER","","The implementation supports the Trace Event Filter option.",152,N],[13,"_POSIX_TRACE_EVENT_NAME_MAX","","",152,N],[13,"_POSIX_TRACE_INHERIT","","The implementation supports the Trace Inherit option.",152,N],[13,"_POSIX_TRACE_LOG","","The implementation supports the Trace Log option.",152,N],[13,"_POSIX_TRACE_NAME_MAX","","",152,N],[13,"_POSIX_TRACE_SYS_MAX","","",152,N],[13,"_POSIX_TRACE_USER_EVENT_MAX","","",152,N],[13,"_POSIX_TYPED_MEMORY_OBJECTS","","The implementation supports the Typed Memory Objects option.",152,N],[13,"_POSIX_VERSION","","Integer value indicating version of this standard (C-language binding) to which the implementation conforms. For implementations conforming to POSIX.1-2008, the value shall be 200809L.",152,N],[13,"_POSIX_V6_ILP32_OFF32","","The implementation provides a C-language compilation environment with 32-bit `int`, `long`, `pointer`, and `off_t` types.",152,N],[13,"_POSIX_V6_ILP32_OFFBIG","","The implementation provides a C-language compilation environment with 32-bit `int`, `long`, and pointer types and an `off_t` type using at least 64 bits.",152,N],[13,"_POSIX_V6_LP64_OFF64","","The implementation provides a C-language compilation environment with 32-bit `int` and 64-bit `long`, `pointer`, and `off_t` types.",152,N],[13,"_POSIX_V6_LPBIG_OFFBIG","","The implementation provides a C-language compilation environment with an `int` type using at least 32 bits and `long`, pointer, and `off_t` types using at least 64 bits.",152,N],[13,"_POSIX2_C_BIND","","The implementation supports the C-Language Binding option.",152,N],[13,"_POSIX2_C_DEV","","The implementation supports the C-Language Development Utilities option.",152,N],[13,"_POSIX2_CHAR_TERM","","The implementation supports the Terminal Characteristics option.",152,N],[13,"_POSIX2_FORT_DEV","","The implementation supports the FORTRAN Development Utilities option.",152,N],[13,"_POSIX2_FORT_RUN","","The implementation supports the FORTRAN Runtime Utilities option.",152,N],[13,"_POSIX2_LOCALEDEF","","The implementation supports the creation of locales by the localedef utility.",152,N],[13,"_POSIX2_PBS","","The implementation supports the Batch Environment Services and Utilities option.",152,N],[13,"_POSIX2_PBS_ACCOUNTING","","The implementation supports the Batch Accounting option.",152,N],[13,"_POSIX2_PBS_CHECKPOINT","","The implementation supports the Batch Checkpoint/Restart option.",152,N],[13,"_POSIX2_PBS_LOCATE","","The implementation supports the Locate Batch Job Request option.",152,N],[13,"_POSIX2_PBS_MESSAGE","","The implementation supports the Batch Job Message Request option.",152,N],[13,"_POSIX2_PBS_TRACK","","The implementation supports the Track Batch Job Request option.",152,N],[13,"_POSIX2_SW_DEV","","The implementation supports the Software Development Utilities option.",152,N],[13,"_POSIX2_UPE","","The implementation supports the User Portability Utilities option.",152,N],[13,"_POSIX2_VERSION","","Integer value indicating version of the Shell and Utilities volume of POSIX.1 to which the implementation conforms.",152,N],[13,"PAGE_SIZE","","The size of a system page in bytes.",152,N],[13,"PTHREAD_DESTRUCTOR_ITERATIONS","","",152,N],[13,"PTHREAD_KEYS_MAX","","",152,N],[13,"PTHREAD_STACK_MIN","","",152,N],[13,"PTHREAD_THREADS_MAX","","",152,N],[13,"RE_DUP_MAX","","",152,N],[13,"RTSIG_MAX","","",152,N],[13,"SEM_NSEMS_MAX","","",152,N],[13,"SEM_VALUE_MAX","","",152,N],[13,"SIGQUEUE_MAX","","",152,N],[13,"STREAM_MAX","","",152,N],[13,"SYMLOOP_MAX","","",152,N],[13,"TIMER_MAX","","",152,N],[13,"TTY_NAME_MAX","","",152,N],[13,"TZNAME_MAX","","",152,N],[13,"_XOPEN_CRYPT","","The implementation supports the X/Open Encryption Option Group.",152,N],[13,"_XOPEN_ENH_I18N","","The implementation supports the Issue 4, Version 2 Enhanced Internationalization Option Group.",152,N],[13,"_XOPEN_LEGACY","","",152,N],[13,"_XOPEN_REALTIME","","The implementation supports the X/Open Realtime Option Group.",152,N],[13,"_XOPEN_REALTIME_THREADS","","The implementation supports the X/Open Realtime Threads Option Group.",152,N],[13,"_XOPEN_SHM","","The implementation supports the Issue 4, Version 2 Shared Memory Option Group.",152,N],[13,"_XOPEN_STREAMS","","The implementation supports the XSI STREAMS Option Group.",152,N],[13,"_XOPEN_UNIX","","The implementation supports the XSI option",152,N],[13,"_XOPEN_VERSION","","Integer value indicating version of the X/Open Portability Guide to which the implementation conforms.",152,N],[5,"pivot_root","","",N,[[["p1"],["p2"]],["result"]]],[5,"setresuid","","Sets the real, effective, and saved uid. (see setresuid(2))",N,[[["uid"],["uid"],["uid"]],["result"]]],[5,"setresgid","","Sets the real, effective, and saved gid. (see setresuid(2))",N,[[["gid"],["gid"],["gid"]],["result"]]],[5,"fork","","Create a new child process duplicating the parent process (see fork(2)).",N,[[],["result",["forkresult"]]]],[5,"getpid","","Get the pid of this process (see getpid(2)).",N,[[],["pid"]]],[5,"getppid","","Get the pid of this processes' parent (see getpid(2)).",N,[[],["pid"]]],[5,"setpgid","","Set a process group ID (see setpgid(2)).",N,[[["pid"],["pid"]],["result"]]],[5,"getpgid","","",N,[[["option",["pid"]]],["result",["pid"]]]],[5,"setsid","","Create new session and set process group id (see setsid(2)).",N,[[],["result",["pid"]]]],[5,"getsid","","Get the process group ID of a session leader getsid(2).",N,[[["option",["pid"]]],["result",["pid"]]]],[5,"tcgetpgrp","","Get the terminal foreground process group (see tcgetpgrp(3)).",N,[[["c_int"]],["result",["pid"]]]],[5,"tcsetpgrp","","Set the terminal foreground process group (see tcgetpgrp(3)).",N,[[["c_int"],["pid"]],["result"]]],[5,"getpgrp","","Get the group id of the calling process (see getpgrp(3)).",N,[[],["pid"]]],[5,"gettid","","Get the caller's thread ID (see gettid(2).",N,[[],["pid"]]],[5,"dup","","Create a copy of the specified file descriptor (see dup(2)).",N,[[["rawfd"]],["result",["rawfd"]]]],[5,"dup2","","Create a copy of the specified file descriptor using the specified fd (see dup(2)).",N,[[["rawfd"],["rawfd"]],["result",["rawfd"]]]],[5,"dup3","","Create a new copy of the specified file descriptor using the specified fd and flags (see dup(2)).",N,[[["rawfd"],["rawfd"],["oflag"]],["result",["rawfd"]]]],[5,"chdir","","Change the current working directory of the calling process (see chdir(2)).",N,[[["p"]],["result"]]],[5,"fchdir","","Change the current working directory of the process to the one given as an open file descriptor (see fchdir(2)).",N,[[["rawfd"]],["result"]]],[5,"mkdir","","Creates new directory `path` with access rights `mode`.  (see mkdir(2))",N,[[["p"],["mode"]],["result"]]],[5,"mkfifo","","Creates new fifo special file (named pipe) with path `path` and access rights `mode`.",N,[[["p"],["mode"]],["result"]]],[5,"getcwd","","Returns the current directory as a `PathBuf`",N,[[],["result",["pathbuf"]]]],[5,"chown","","Change the ownership of the file at `path` to be owned by the specified `owner` (user) and `group` (see chown(2)).",N,[[["p"],["option",["uid"]],["option",["gid"]]],["result"]]],[5,"execv","","Replace the current process image with a new one (see exec(3)).",N,N],[5,"execve","","Replace the current process image with a new one (see execve(2)).",N,N],[5,"execvp","","Replace the current process image with a new one and replicate shell `PATH` searching behavior (see exec(3)).",N,N],[5,"fexecve","","Replace the current process image with a new one (see fexecve(2)).",N,N],[5,"execveat","","Execute program relative to a directory file descriptor (see execveat(2)).",N,N],[5,"daemon","","Daemonize this process by detaching from the controlling terminal (see daemon(3)).",N,[[["bool"],["bool"]],["result"]]],[5,"sethostname","","Set the system host name (see sethostname(2)).",N,[[["s"]],["result"]]],[5,"gethostname","","Get the host name and store it in the provided buffer, returning a pointer the `CStr` in that buffer on success (see gethostname(2)).",N,N],[5,"close","","Close a raw file descriptor",N,[[["rawfd"]],["result"]]],[5,"read","","Read from a raw file descriptor.",N,N],[5,"write","","Write to a raw file descriptor.",N,N],[5,"lseek","","Move the read/write file offset.",N,[[["rawfd"],["off_t"],["whence"]],["result",["off_t"]]]],[5,"lseek64","","",N,[[["rawfd"],["off64_t"],["whence"]],["result",["off64_t"]]]],[5,"pipe","","Create an interprocess channel.",N,[[],["result"]]],[5,"pipe2","","Like `pipe`, but allows setting certain file descriptor flags.",N,[[["oflag"]],["result"]]],[5,"ftruncate","","Truncate a file to a specified length",N,[[["rawfd"],["off_t"]],["result"]]],[5,"isatty","","",N,[[["rawfd"]],["result",["bool"]]]],[5,"unlink","","Remove a directory entry",N,[[["p"]],["result"]]],[5,"chroot","","",N,[[["p"]],["result"]]],[5,"fsync","","Synchronize changes to a file",N,[[["rawfd"]],["result"]]],[5,"fdatasync","","Synchronize the data of a file",N,[[["rawfd"]],["result"]]],[5,"getuid","","Get a real user ID",N,[[],["uid"]]],[5,"geteuid","","Get the effective user ID",N,[[],["uid"]]],[5,"getgid","","Get the real group ID",N,[[],["gid"]]],[5,"getegid","","Get the effective group ID",N,[[],["gid"]]],[5,"setuid","","Set the user ID",N,[[["uid"]],["result"]]],[5,"setgid","","Set the user ID",N,[[["gid"]],["result"]]],[5,"getgroups","","Get the list of supplementary group IDs of the calling process.",N,[[],["result",["vec"]]]],[5,"setgroups","","Set the list of supplementary group IDs for the calling process.",N,N],[5,"getgrouplist","","Calculate the supplementary group access list.",N,[[["cstr"],["gid"]],["result",["vec"]]]],[5,"initgroups","","Initialize the supplementary group access list.",N,[[["cstr"],["gid"]],["result"]]],[5,"pause","","Suspend the thread until a signal is received.",N,[[]]],[5,"sleep","","Suspend execution for an interval of time",N,[[["c_uint"]],["c_uint"]]],[5,"mkstemp","","Creates a regular file which persists even after process termination",N,[[["p"]],["result"]]],[5,"fpathconf","","Like `pathconf`, but works with file descriptors instead of paths (see fpathconf(2))",N,[[["rawfd"],["pathconfvar"]],["result",["option"]]]],[5,"pathconf","","Get path-dependent configurable system variables (see pathconf(2))",N,[[["p"],["pathconfvar"]],["result",["option"]]]],[5,"sysconf","","Get configurable system variables (see sysconf(3))",N,[[["sysconfvar"]],["result",["option"]]]],[0,"alarm","","Alarm signal scheduling.",N,N],[5,"set","nix::unistd::alarm","Schedule an alarm signal.",N,[[["c_uint"]],["option",["c_uint"]]]],[5,"cancel","","Cancel an previously set alarm signal.",N,[[],["option",["c_uint"]]]],[17,"ROOT","nix::unistd","Constant for UID = 0",N,N],[11,"fmt","","",153,[[["self"],["formatter"]],["result"]]],[11,"clone","","",153,[[["self"]],["uid"]]],[11,"eq","","",153,[[["self"],["uid"]],["bool"]]],[11,"ne","","",153,[[["self"],["uid"]],["bool"]]],[11,"hash","","",153,N],[11,"from_raw","","Creates `Uid` from raw `uid_t`.",153,[[["uid_t"]],["self"]]],[11,"current","","Returns Uid of calling process. This is practically a more Rusty alias for `getuid`.",153,[[],["self"]]],[11,"effective","","Returns effective Uid of calling process. This is practically a more Rusty alias for `geteuid`.",153,[[],["self"]]],[11,"is_root","","Returns true if the `Uid` represents privileged user - root. (If it equals zero.)",153,[[["self"]],["bool"]]],[11,"fmt","","",153,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",154,[[["self"],["formatter"]],["result"]]],[11,"clone","","",154,[[["self"]],["gid"]]],[11,"eq","","",154,[[["self"],["gid"]],["bool"]]],[11,"ne","","",154,[[["self"],["gid"]],["bool"]]],[11,"hash","","",154,N],[11,"from_raw","","Creates `Gid` from raw `gid_t`.",154,[[["gid_t"]],["self"]]],[11,"current","","Returns Gid of calling process. This is practically a more Rusty alias for `getgid`.",154,[[],["self"]]],[11,"effective","","Returns effective Gid of calling process. This is practically a more Rusty alias for `getgid`.",154,[[],["self"]]],[11,"fmt","","",154,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",155,[[["self"],["formatter"]],["result"]]],[11,"clone","","",155,[[["self"]],["pid"]]],[11,"eq","","",155,[[["self"],["pid"]],["bool"]]],[11,"ne","","",155,[[["self"],["pid"]],["bool"]]],[11,"hash","","",155,N],[11,"from_raw","","Creates `Pid` from raw `pid_t`.",155,[[["pid_t"]],["self"]]],[11,"this","","Returns PID of calling process",155,[[],["self"]]],[11,"parent","","Returns PID of parent of calling process",155,[[],["self"]]],[11,"from","","",156,[[["pid"]],["self"]]],[11,"fmt","","",155,[[["self"],["formatter"]],["result"]]],[11,"clone","","",149,[[["self"]],["forkresult"]]],[11,"fmt","","",149,[[["self"],["formatter"]],["result"]]],[11,"is_child","","Return `true` if this is the child process of the `fork()`",149,[[["self"]],["bool"]]],[11,"is_parent","","Returns `true` if this is the parent process of the `fork()`",149,[[["self"]],["bool"]]],[11,"clone","","",150,[[["self"]],["whence"]]],[11,"fmt","","",150,[[["self"],["formatter"]],["result"]]],[11,"clone","","",151,[[["self"]],["pathconfvar"]]],[11,"fmt","","",151,[[["self"],["formatter"]],["result"]]],[11,"hash","","",151,N],[11,"eq","","",151,[[["self"],["pathconfvar"]],["bool"]]],[11,"clone","","",152,[[["self"]],["sysconfvar"]]],[11,"fmt","","",152,[[["self"],["formatter"]],["result"]]],[11,"hash","","",152,N],[11,"eq","","",152,[[["self"],["sysconfvar"]],["bool"]]],[6,"Result","nix","Nix Result Type",N,N],[8,"NixPath","","",N,N],[10,"len","","",157,[[["self"]],["usize"]]],[10,"with_nix_path","","",157,[[["self"],["f"]],["result"]]],[11,"clone","","",0,[[["self"]],["error"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"from_errno","","Create a nix Error from a given errno",0,[[["errno"]],["error"]]],[11,"last","","Get the current errno and convert it to a nix Error",0,[[],["error"]]],[11,"invalid_argument","","Create a new invalid argument error (`EINVAL`)",0,[[],["error"]]],[11,"from","","",0,[[["errno"]],["error"]]],[11,"from","","",0,[[["fromutf8error"]],["error"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[14,"request_code_none","","Generate an ioctl request code for a command that passes no data.",N,N],[14,"request_code_read","","Generate an ioctl request code for a command that reads.",N,N],[14,"request_code_write","","Generate an ioctl request code for a command that writes.",N,N],[14,"request_code_readwrite","","Generate an ioctl request code for a command that reads and writes.",N,N],[14,"ioctl_none","","Generates a wrapper function for an ioctl that passes no data to the kernel.",N,N],[14,"ioctl_none_bad","","Generates a wrapper function for a \"bad\" ioctl that passes no data to the kernel.",N,N],[14,"ioctl_read","","Generates a wrapper function for an ioctl that reads data from the kernel.",N,N],[14,"ioctl_read_bad","","Generates a wrapper function for a \"bad\" ioctl that reads data from the kernel.",N,N],[14,"ioctl_write_ptr","","Generates a wrapper function for an ioctl that writes data through a pointer to the kernel.",N,N],[14,"ioctl_write_ptr_bad","","Generates a wrapper function for a \"bad\" ioctl that writes data through a pointer to the kernel.",N,N],[14,"ioctl_write_int","","Generates a wrapper function for a ioctl that writes an integer to the kernel.",N,N],[14,"ioctl_write_int_bad","","Generates a wrapper function for a \"bad\" ioctl that writes an integer to the kernel.",N,N],[14,"ioctl_readwrite","","Generates a wrapper function for an ioctl that reads and writes data to the kernel.",N,N],[14,"ioctl_readwrite_bad","","Generates a wrapper function for a \"bad\" ioctl that reads and writes data to the kernel.",N,N],[14,"ioctl_read_buf","","Generates a wrapper function for an ioctl that reads an array of elements from the kernel.",N,N],[14,"ioctl_write_buf","","Generates a wrapper function for an ioctl that writes an array of elements to the kernel.",N,N],[14,"ioctl_readwrite_buf","","Generates a wrapper function for an ioctl that reads and writes an array of elements to the kernel.",N,N],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","nix::errno","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","nix::fcntl","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","nix::ifaddrs","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into_iter","","",12,[[["self"]],["i"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"to_owned","nix::mount","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"to_owned","nix::mqueue","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"to_owned","nix::net::if_","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"to_owned","nix::poll","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"clone","nix::sys::socket","",67,[[["self"]],["sockaddr"]]],[11,"clone","","",66,[[["self"]],["msghdr"]]],[11,"clone","nix::pty","",21,[[["self"]],["winsize"]]],[11,"clone","nix::sys::signalfd","",62,[[["self"]],["signalfd_siginfo"]]],[11,"clone","nix::sys::stat","",124,[[["self"]],["stat"]]],[11,"clone","nix::sys::socket","",71,[[["self"]],["sockaddr_un"]]],[11,"clone","","",70,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",65,[[["self"]],["cmsghdr"]]],[11,"clone","","",69,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",68,[[["self"]],["sockaddr_in"]]],[11,"to_owned","nix::pty","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"to_owned","nix::sched","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","nix::sys::aio","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"to_owned","nix::sys::epoll","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"to_owned","nix::sys::eventfd","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"to_owned","nix::sys::memfd","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"to_owned","nix::sys::mman","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"to_owned","nix::sys::ptrace","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"to_owned","nix::sys::quota","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"to_owned","nix::sys::reboot","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"to_owned","nix::sys::select","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"to_owned","nix::sys::signal","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"into_iter","","",58,[[["self"]],["i"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"to_owned","nix::sys::signalfd","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"into_iter","","",64,[[["self"]],["i"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"to_owned","nix::sys::socket","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"from","","",72,[[["t"]],["t"]]],[11,"to_string","","",72,[[["self"]],["string"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"from","","",73,[[["t"]],["t"]]],[11,"to_string","","",73,[[["self"]],["string"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"from","","",74,[[["t"]],["t"]]],[11,"to_string","","",74,[[["self"]],["string"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"from","","",75,[[["t"]],["t"]]],[11,"to_string","","",75,[[["self"]],["string"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"from","","",76,[[["t"]],["t"]]],[11,"to_string","","",76,[[["self"]],["string"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into_iter","","",123,[[["self"]],["i"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"from","","",79,[[["t"]],["t"]]],[11,"to_string","","",79,[[["self"]],["string"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"from","","",80,[[["t"]],["t"]]],[11,"to_string","","",80,[[["self"]],["string"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"from","","",81,[[["t"]],["t"]]],[11,"to_string","","",81,[[["self"]],["string"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"to_owned","nix::sys::socket::sockopt","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"to_owned","nix::sys::stat","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"to_owned","nix::sys::statvfs","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"to_owned","nix::sys::termios","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,N],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,N],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,N],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,N],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"to_owned","nix::sys::time","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,N],[11,"from","","",141,[[["t"]],["t"]]],[11,"to_string","","",141,[[["self"]],["string"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,N],[11,"from","","",142,[[["t"]],["t"]]],[11,"to_string","","",142,[[["self"]],["string"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"to_owned","nix::sys::uio","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,N],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"to_owned","nix::sys::utsname","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,N],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"to_owned","nix::sys::wait","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,N],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,N],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"to_owned","nix::ucontext","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,N],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"to_owned","nix::unistd","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,N],[11,"from","","",153,[[["t"]],["t"]]],[11,"to_string","","",153,[[["self"]],["string"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,N],[11,"from","","",154,[[["t"]],["t"]]],[11,"to_string","","",154,[[["self"]],["string"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,N],[11,"from","","",155,[[["t"]],["t"]]],[11,"to_string","","",155,[[["self"]],["string"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,N],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,N],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,N],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,N],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]]],"paths":[[4,"Error"],[4,"Errno"],[8,"ErrnoSentinel"],[4,"FcntlArg"],[4,"FlockArg"],[3,"AtFlags"],[3,"OFlag"],[3,"SealFlag"],[3,"FdFlag"],[3,"SpliceFFlags"],[3,"FallocateFlags"],[3,"InterfaceAddress"],[3,"InterfaceAddressIterator"],[3,"MsFlags"],[3,"MntFlags"],[3,"MQ_OFlag"],[3,"FdFlag"],[3,"MqAttr"],[3,"InterfaceFlags"],[3,"PollFd"],[3,"EventFlags"],[3,"Winsize"],[3,"OpenptyResult"],[3,"PtyMaster"],[3,"CloneFlags"],[3,"CpuSet"],[3,"LioCb"],[4,"AioFsyncMode"],[4,"LioOpcode"],[4,"LioMode"],[4,"AioCancelStat"],[4,"Buffer"],[3,"AioCb"],[4,"EpollOp"],[3,"EpollFlags"],[3,"EpollCreateFlags"],[3,"EpollEvent"],[3,"EfdFlags"],[3,"MemFdCreateFlag"],[4,"MmapAdvise"],[3,"ProtFlags"],[3,"MapFlags"],[3,"MsFlags"],[3,"MlockAllFlags"],[4,"Request"],[4,"Event"],[3,"Options"],[4,"QuotaType"],[4,"QuotaFmt"],[3,"QuotaValidFlags"],[3,"Dqblk"],[4,"RebootMode"],[3,"FdSet"],[4,"Signal"],[4,"SigmaskHow"],[4,"SigHandler"],[4,"SigevNotify"],[3,"SigEvent"],[3,"SignalIterator"],[3,"SaFlags"],[3,"SigSet"],[3,"SigAction"],[3,"siginfo"],[3,"SfdFlags"],[3,"SignalFd"],[3,"cmsghdr"],[3,"msghdr"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_storage"],[3,"sockaddr_un"],[3,"UnixAddr"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[3,"LinkAddr"],[3,"NetlinkAddr"],[3,"RecvMsg"],[4,"AddressFamily"],[4,"SockAddr"],[4,"InetAddr"],[4,"IpAddr"],[4,"SockType"],[4,"SockProtocol"],[4,"ControlMessage"],[4,"SockLevel"],[4,"Shutdown"],[3,"ReuseAddr"],[3,"ReusePort"],[3,"TcpNoDelay"],[3,"Linger"],[3,"IpAddMembership"],[3,"IpDropMembership"],[3,"Ipv6AddMembership"],[3,"Ipv6DropMembership"],[3,"IpMulticastTtl"],[3,"IpMulticastLoop"],[3,"ReceiveTimeout"],[3,"SendTimeout"],[3,"Broadcast"],[3,"OobInline"],[3,"SocketError"],[3,"KeepAlive"],[3,"PeerCredentials"],[3,"TcpKeepIdle"],[3,"RcvBuf"],[3,"SndBuf"],[3,"RcvBufForce"],[3,"SndBufForce"],[3,"SockType"],[3,"AcceptConn"],[3,"OriginalDst"],[3,"ReceiveTimestamp"],[3,"IpTransparent"],[3,"Mark"],[8,"GetSockOpt"],[8,"SetSockOpt"],[3,"SockFlag"],[3,"MsgFlags"],[3,"UnixCredentials"],[3,"IpMembershipRequest"],[3,"Ipv6MembershipRequest"],[3,"CmsgSpace"],[3,"CmsgIterator"],[3,"FileStat"],[4,"FchmodatFlags"],[3,"SFlag"],[3,"Mode"],[3,"FsFlags"],[3,"Statvfs"],[3,"Termios"],[4,"BaudRate"],[4,"SetArg"],[4,"FlushArg"],[4,"FlowArg"],[4,"SpecialCharacterIndices"],[3,"InputFlags"],[3,"OutputFlags"],[3,"ControlFlags"],[3,"LocalFlags"],[8,"TimeValLike"],[3,"TimeSpec"],[3,"TimeVal"],[3,"RemoteIoVec"],[3,"IoVec"],[3,"UtsName"],[4,"WaitStatus"],[3,"WaitPidFlag"],[3,"UContext"],[4,"ForkResult"],[4,"Whence"],[4,"PathconfVar"],[4,"SysconfVar"],[3,"Uid"],[3,"Gid"],[3,"Pid"],[6,"SessionId"],[8,"NixPath"]]};
searchIndex["proc_macro2"]={"doc":"A \"shim crate\" intended to multiplex the [`proc_macro`] API on to stable Rust.","items":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a sequence of token trees.",N,N],[3,"LexError","","Error returned from `TokenStream::from_str`.",N,N],[3,"Span","","A region of source code, along with macro expansion information.",N,N],[3,"Group","","A delimited token stream.",N,N],[3,"Punct","","An `Punct` is an single punctuation character like `+`, `-` or `#`.",N,N],[3,"Ident","","A word of Rust code, which may be a keyword or legal variable name.",N,N],[3,"Literal","","A literal string (`\"hello\"`), byte string (`b\"hello\"`), character (`'a'`), byte character (`b'a'`), an integer or floating point number with or without a suffix (`1`, `1u8`, `2.3`, `2.3f32`).",N,N],[4,"TokenTree","","A single token or a delimited sequence of token trees (e.g. `[1, (), ..]`).",N,N],[13,"Group","","A token stream surrounded by bracket delimiters.",0,N],[13,"Ident","","An identifier.",0,N],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,N],[13,"Literal","","A literal character (`'a'`), string (`\"hello\"`), number (`2.3`), etc.",0,N],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",N,N],[13,"Parenthesis","","`( ... )`",1,N],[13,"Brace","","`{ ... }`",1,N],[13,"Bracket","","`[ ... ]`",1,N],[13,"None","","`Ø ... Ø`",1,N],[4,"Spacing","","Whether an `Punct` is followed immediately by another `Punct` or followed by another token or whitespace.",N,N],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,N],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `'#`.",2,N],[11,"from","","",3,[[["span"]],["span"]]],[0,"token_stream","","Public implementation details for the `TokenStream` type, such as iterators.",N,N],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`'s `TokenTree`s.",N,N],[11,"next","","",4,[[["self"]],["option",["tokentree"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"into_iter","proc_macro2","",5,[[["self"]],["intoiter"]]],[11,"clone","","",5,[[["self"]],["tokenstream"]]],[11,"new","","Returns an empty `TokenStream` containing no token trees.",5,[[],["tokenstream"]]],[11,"empty","","",5,[[],["tokenstream"]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",5,[[["self"]],["bool"]]],[11,"default","","",5,[[],["self"]]],[11,"from_str","","",5,[[["str"]],["result",["tokenstream","lexerror"]]]],[11,"from","","",5,[[["tokenstream"]],["tokenstream"]]],[11,"extend","","",5,[[["self"],["i"]]]],[11,"extend","","",5,[[["self"],["i"]]]],[11,"from_iter","","",5,[[["i"]],["self"]]],[11,"from_iter","","",5,[[["i"]],["self"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"clone","","",3,[[["self"]],["span"]]],[11,"call_site","","The span of the invocation of the current procedural macro.",3,[[],["span"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["tokentree"]]],[11,"span","","Returns the span of this tree, delegating to the `span` method of the contained token or a delimited stream.",0,[[["self"]],["span"]]],[11,"set_span","","Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"from","","",0,[[["group"]],["tokentree"]]],[11,"from","","",0,[[["ident"]],["tokentree"]]],[11,"from","","",0,[[["punct"]],["tokentree"]]],[11,"from","","",0,[[["literal"]],["tokentree"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",7,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["delimiter"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["self"],["delimiter"]],["bool"]]],[11,"new","","Creates a new `Group` with the given delimiter and token stream.",7,[[["delimiter"],["tokenstream"]],["group"]]],[11,"delimiter","","Returns the delimiter of this `Group`",7,[[["self"]],["delimiter"]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in this `Group`.",7,[[["self"]],["tokenstream"]]],[11,"span","","Returns the span for the delimiters of this token stream, spanning the entire `Group`.",7,[[["self"]],["span"]]],[11,"set_span","","Configures the span for this `Group`'s delimiters, but not its internal tokens.",7,[[["self"],["span"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"clone","","",8,[[["self"]],["punct"]]],[11,"clone","","",2,[[["self"]],["spacing"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"eq","","",2,[[["self"],["spacing"]],["bool"]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",8,[[["char"],["spacing"]],["punct"]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",8,[[["self"]],["char"]]],[11,"spacing","","Returns the spacing of this punctuation character, indicating whether it's immediately followed by another `Punct` in the token stream, so they can potentially be combined into a multicharacter operator (`Joint`), or it's followed by some other token or whitespace (`Alone`) so the operator has certainly ended.",8,[[["self"]],["spacing"]]],[11,"span","","Returns the span for this punctuation character.",8,[[["self"]],["span"]]],[11,"set_span","","Configure the span for this punctuation character.",8,[[["self"],["span"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"clone","","",9,[[["self"]],["ident"]]],[11,"new","","Creates a new `Ident` with the given `string` as well as the specified `span`.",9,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",9,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its hygiene context.",9,[[["self"],["span"]]]],[11,"eq","","",9,[[["self"],["ident"]],["bool"]]],[11,"eq","","",9,[[["self"],["t"]],["bool"]]],[11,"partial_cmp","","",9,[[["self"],["ident"]],["option",["ordering"]]]],[11,"cmp","","",9,[[["self"],["ident"]],["ordering"]]],[11,"hash","","",9,[[["self"],["h"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"clone","","",10,[[["self"]],["literal"]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["u8"]],["literal"]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["u16"]],["literal"]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["u32"]],["literal"]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["u64"]],["literal"]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["usize"]],["literal"]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["i8"]],["literal"]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["i16"]],["literal"]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["i32"]],["literal"]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["i64"]],["literal"]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["isize"]],["literal"]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["u128"]],["literal"]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["i128"]],["literal"]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["u8"]],["literal"]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["u16"]],["literal"]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["u32"]],["literal"]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["u64"]],["literal"]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["usize"]],["literal"]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["i8"]],["literal"]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["i16"]],["literal"]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["i32"]],["literal"]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["i64"]],["literal"]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["isize"]],["literal"]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["u128"]],["literal"]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["i128"]],["literal"]]],[11,"f64_unsuffixed","","",10,[[["f64"]],["literal"]]],[11,"f64_suffixed","","",10,[[["f64"]],["literal"]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",10,[[["f32"]],["literal"]]],[11,"f32_suffixed","","",10,[[["f32"]],["literal"]]],[11,"string","","",10,[[["str"]],["literal"]]],[11,"character","","",10,[[["char"]],["literal"]]],[11,"byte_string","","",10,N],[11,"span","","",10,[[["self"]],["span"]]],[11,"set_span","","",10,[[["self"],["span"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"not_found","","",5,[[["str"],["str"]],["e"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"not_found","","",6,[[["str"],["str"]],["e"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"not_found","","",3,[[["str"],["str"]],["e"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"not_found","","",7,[[["str"],["str"]],["e"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"not_found","","",8,[[["str"],["str"]],["e"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"not_found","","",9,[[["str"],["str"]],["e"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"not_found","","",10,[[["str"],["str"]],["e"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"not_found","","",0,[[["str"],["str"]],["e"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"not_found","","",1,[[["str"],["str"]],["e"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"not_found","","",2,[[["str"],["str"]],["e"]]],[11,"from","proc_macro2::token_stream","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"not_found","","",4,[[["str"],["str"]],["e"]]]],"paths":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"Span"],[3,"IntoIter"],[3,"TokenStream"],[3,"LexError"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"]]};
searchIndex["quote"]={"doc":"This crate provides the [`quote!`] macro for turning Rust syntax tree data structures into tokens of source code.","items":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending tokens.",N,N],[10,"append","","",0,[[["self"],["u"]]]],[10,"append_all","","",0,[[["self"],["i"]]]],[10,"append_separated","","",0,[[["self"],["i"],["u"]]]],[10,"append_terminated","","",0,[[["self"],["i"],["u"]]]],[8,"ToTokens","","Types that can be interpolated inside a [`quote!`] invocation.",N,N],[10,"to_tokens","","Write `self` to the given `TokenStream`.",1,[[["self"],["tokenstream"]]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[["self"]],["tokenstream"]]],[14,"quote","","The whole point.",N,N],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens originating within the macro invocation.",N,N],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[["self"]],["tokenstream"]]]],"paths":[[8,"TokenStreamExt"],[8,"ToTokens"]]};
searchIndex["slab"]={"doc":"Pre-allocated storage for a uniform data type.","items":[[3,"Slab","slab","Pre-allocated storage for a uniform data type",N,N],[3,"VacantEntry","","A handle to a vacant entry in a `Slab`.",N,N],[3,"Iter","","An iterator over the values stored in the `Slab`",N,N],[3,"IterMut","","A mutable iterator over the values stored in the `Slab`",N,N],[11,"clone","","",0,[[["self"]],["slab"]]],[11,"default","","",0,[[],["self"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new, empty `Slab`.",0,[[],["slab"]]],[11,"with_capacity","","Construct a new, empty `Slab` with the specified capacity.",0,[[["usize"]],["slab"]]],[11,"capacity","","Return the number of values the slab can store without reallocating.",0,[[["self"]],["usize"]]],[11,"reserve","","Reserve capacity for at least `additional` more values to be stored without allocating.",0,[[["self"],["usize"]]]],[11,"reserve_exact","","Reserve the minimum capacity required to store exactly `additional` more values.",0,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrink the capacity of the slab as much as possible.",0,[[["self"]]]],[11,"clear","","Clear the slab of all values.",0,[[["self"]]]],[11,"len","","Return the number of stored values.",0,[[["self"]],["usize"]]],[11,"is_empty","","Return `true` if there are no values stored in the slab.",0,[[["self"]],["bool"]]],[11,"iter","","Return an iterator over the slab.",0,[[["self"]],["iter"]]],[11,"iter_mut","","Return an iterator that allows modifying each value.",0,[[["self"]],["itermut"]]],[11,"get","","Return a reference to the value associated with the given key.",0,[[["self"],["usize"]],["option"]]],[11,"get_mut","","Return a mutable reference to the value associated with the given key.",0,[[["self"],["usize"]],["option"]]],[11,"get_unchecked","","Return a reference to the value associated with the given key without performing bounds checking.",0,[[["self"],["usize"]],["t"]]],[11,"get_unchecked_mut","","Return a mutable reference to the value associated with the given key without performing bounds checking.",0,[[["self"],["usize"]],["t"]]],[11,"insert","","Insert a value in the slab, returning key assigned to the value.",0,[[["self"],["t"]],["usize"]]],[11,"vacant_entry","","Return a handle to a vacant entry allowing for further manipulation.",0,[[["self"]],["vacantentry"]]],[11,"remove","","Remove and return the value associated with the given key.",0,[[["self"],["usize"]],["t"]]],[11,"contains","","Return `true` if a value is associated with the given key.",0,[[["self"],["usize"]],["bool"]]],[11,"retain","","Retain only the elements specified by the predicate.",0,[[["self"],["f"]]]],[11,"index","","",0,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",0,[[["self"],["usize"]],["t"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"insert","","Insert a value in the entry, returning a mutable reference to the value.",1,[[["self"],["t"]],["t"]]],[11,"key","","Return the key associated with this entry.",1,[[["self"]],["usize"]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]]],"paths":[[3,"Slab"],[3,"VacantEntry"],[3,"Iter"],[3,"IterMut"]]};
searchIndex["syn"]={"doc":"Syn is a parsing library for parsing a stream of Rust tokens into a syntax tree of Rust source code.","items":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal variable name.",N,N],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",N,N],[12,"pound_token","","",0,N],[12,"style","","",0,N],[12,"bracket_token","","",0,N],[12,"path","","",0,N],[12,"tts","","",0,N],[3,"MetaList","","A structured list within an attribute, like `derive(Copy, Clone)`.",N,N],[12,"ident","","",1,N],[12,"paren_token","","",1,N],[12,"nested","","",1,N],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature = \"nightly\"`.",N,N],[12,"ident","","",2,N],[12,"eq_token","","",2,N],[12,"lit","","",2,N],[3,"Field","","A field of a struct or enum variant.",N,N],[12,"attrs","","Attributes tagged on the field.",3,N],[12,"vis","","Visibility of the field.",3,N],[12,"ident","","Name of the field, if any.",3,N],[12,"colon_token","","",3,N],[12,"ty","","Type of the field.",3,N],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point { x: f64, y: f64 }`.",N,N],[12,"brace_token","","",4,N],[12,"named","","",4,N],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.",N,N],[12,"paren_token","","",5,N],[12,"unnamed","","",5,N],[3,"Variant","","An enum variant.",N,N],[12,"attrs","","Attributes tagged on the variant.",6,N],[12,"ident","","Name of the variant.",6,N],[12,"fields","","Content stored in the variant.",6,N],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,N],[3,"VisCrate","","A crate-level visibility: `crate`.",N,N],[12,"crate_token","","",7,N],[3,"VisPublic","","A public visibility level: `pub`.",N,N],[12,"pub_token","","",8,N],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or `pub(super)` or `pub(crate)` or `pub(in some::module)`.",N,N],[12,"pub_token","","",9,N],[12,"paren_token","","",9,N],[12,"in_token","","",9,N],[12,"path","","",9,N],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",N,N],[12,"attrs","","",10,N],[12,"bracket_token","","",10,N],[12,"elems","","",10,N],[3,"ExprAssign","","An assignment expression: `a = compute()`.",N,N],[12,"attrs","","",11,N],[12,"left","","",11,N],[12,"eq_token","","",11,N],[12,"right","","",11,N],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",N,N],[12,"attrs","","",12,N],[12,"left","","",12,N],[12,"op","","",12,N],[12,"right","","",12,N],[3,"ExprAsync","","An async block: `async { ... }`.",N,N],[12,"attrs","","",13,N],[12,"async_token","","",13,N],[12,"capture","","",13,N],[12,"block","","",13,N],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",N,N],[12,"attrs","","",14,N],[12,"left","","",14,N],[12,"op","","",14,N],[12,"right","","",14,N],[3,"ExprBlock","","A blocked scope: `{ ... }`.",N,N],[12,"attrs","","",15,N],[12,"label","","",15,N],[12,"block","","",15,N],[3,"ExprBox","","A box expression: `box f`.",N,N],[12,"attrs","","",16,N],[12,"box_token","","",16,N],[12,"expr","","",16,N],[3,"ExprBreak","","A `break`, with an optional label to break and an optional expression.",N,N],[12,"attrs","","",17,N],[12,"break_token","","",17,N],[12,"label","","",17,N],[12,"expr","","",17,N],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",N,N],[12,"attrs","","",18,N],[12,"func","","",18,N],[12,"paren_token","","",18,N],[12,"args","","",18,N],[3,"ExprCast","","A cast expression: `foo as f64`.",N,N],[12,"attrs","","",19,N],[12,"expr","","",19,N],[12,"as_token","","",19,N],[12,"ty","","",19,N],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",N,N],[12,"attrs","","",20,N],[12,"asyncness","","",20,N],[12,"movability","","",20,N],[12,"capture","","",20,N],[12,"or1_token","","",20,N],[12,"inputs","","",20,N],[12,"or2_token","","",20,N],[12,"output","","",20,N],[12,"body","","",20,N],[3,"ExprContinue","","A `continue`, with an optional label.",N,N],[12,"attrs","","",21,N],[12,"continue_token","","",21,N],[12,"label","","",21,N],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple struct field (`obj.0`).",N,N],[12,"attrs","","",22,N],[12,"base","","",22,N],[12,"dot_token","","",22,N],[12,"member","","",22,N],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",N,N],[12,"attrs","","",23,N],[12,"label","","",23,N],[12,"for_token","","",23,N],[12,"pat","","",23,N],[12,"in_token","","",23,N],[12,"expr","","",23,N],[12,"body","","",23,N],[3,"ExprGroup","","An expression contained within invisible delimiters.",N,N],[12,"attrs","","",24,N],[12,"group_token","","",24,N],[12,"expr","","",24,N],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr { ... } else { ... }`.",N,N],[12,"attrs","","",25,N],[12,"if_token","","",25,N],[12,"cond","","",25,N],[12,"then_branch","","",25,N],[12,"else_branch","","",25,N],[3,"ExprInPlace","","A placement expression: `place <- value`.",N,N],[12,"attrs","","",26,N],[12,"place","","",26,N],[12,"arrow_token","","",26,N],[12,"value","","",26,N],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",N,N],[12,"attrs","","",27,N],[12,"expr","","",27,N],[12,"bracket_token","","",27,N],[12,"index","","",27,N],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",N,N],[12,"attrs","","",28,N],[12,"let_token","","",28,N],[12,"pats","","",28,N],[12,"eq_token","","",28,N],[12,"expr","","",28,N],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",N,N],[12,"attrs","","",29,N],[12,"lit","","",29,N],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",N,N],[12,"attrs","","",30,N],[12,"label","","",30,N],[12,"loop_token","","",30,N],[12,"body","","",30,N],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",N,N],[12,"attrs","","",31,N],[12,"mac","","",31,N],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {} }`.",N,N],[12,"attrs","","",32,N],[12,"match_token","","",32,N],[12,"expr","","",32,N],[12,"brace_token","","",32,N],[12,"arms","","",32,N],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",N,N],[12,"attrs","","",33,N],[12,"receiver","","",33,N],[12,"dot_token","","",33,N],[12,"method","","",33,N],[12,"turbofish","","",33,N],[12,"paren_token","","",33,N],[12,"args","","",33,N],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",N,N],[12,"attrs","","",34,N],[12,"paren_token","","",34,N],[12,"expr","","",34,N],[3,"ExprPath","","A path like `std::mem::replace` possibly containing generic parameters and a qualified self-type.",N,N],[12,"attrs","","",35,N],[12,"qself","","",35,N],[12,"path","","",35,N],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",N,N],[12,"attrs","","",36,N],[12,"from","","",36,N],[12,"limits","","",36,N],[12,"to","","",36,N],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",N,N],[12,"attrs","","",37,N],[12,"and_token","","",37,N],[12,"mutability","","",37,N],[12,"expr","","",37,N],[3,"ExprRepeat","","An array literal constructed from one repeated element: `[0u8; N]`.",N,N],[12,"attrs","","",38,N],[12,"bracket_token","","",38,N],[12,"expr","","",38,N],[12,"semi_token","","",38,N],[12,"len","","",38,N],[3,"ExprReturn","","A `return`, with an optional value to be returned.",N,N],[12,"attrs","","",39,N],[12,"return_token","","",39,N],[12,"expr","","",39,N],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",N,N],[12,"attrs","","",40,N],[12,"path","","",40,N],[12,"brace_token","","",40,N],[12,"fields","","",40,N],[12,"dot2_token","","",40,N],[12,"rest","","",40,N],[3,"ExprTry","","A try-expression: `expr?`.",N,N],[12,"attrs","","",41,N],[12,"expr","","",41,N],[12,"question_token","","",41,N],[3,"ExprTryBlock","","A try block: `try { ... }`.",N,N],[12,"attrs","","",42,N],[12,"try_token","","",42,N],[12,"block","","",42,N],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",N,N],[12,"attrs","","",43,N],[12,"paren_token","","",43,N],[12,"elems","","",43,N],[3,"ExprType","","A type ascription expression: `foo: f64`.",N,N],[12,"attrs","","",44,N],[12,"expr","","",44,N],[12,"colon_token","","",44,N],[12,"ty","","",44,N],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",N,N],[12,"attrs","","",45,N],[12,"op","","",45,N],[12,"expr","","",45,N],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",N,N],[12,"attrs","","",46,N],[12,"unsafe_token","","",46,N],[12,"block","","",46,N],[3,"ExprVerbatim","","Tokens in expression position not interpreted by Syn.",N,N],[12,"tts","","",47,N],[3,"ExprWhile","","A while loop: `while expr { ... }`.",N,N],[12,"attrs","","",48,N],[12,"label","","",48,N],[12,"while_token","","",48,N],[12,"cond","","",48,N],[12,"body","","",48,N],[3,"ExprYield","","A yield expression: `yield expr`.",N,N],[12,"attrs","","",49,N],[12,"yield_token","","",49,N],[12,"expr","","",49,N],[3,"Index","","The index of an unnamed tuple struct field.",N,N],[12,"index","","",50,N],[12,"span","","",50,N],[3,"Arm","","One arm of a `match` expression: `0...10 => { return true; }`.",N,N],[12,"attrs","","",51,N],[12,"leading_vert","","",51,N],[12,"pats","","",51,N],[12,"guard","","",51,N],[12,"fat_arrow_token","","",51,N],[12,"body","","",51,N],[12,"comma","","",51,N],[3,"Block","","A braced block containing Rust statements.",N,N],[12,"brace_token","","",52,N],[12,"stmts","","Statements in a block",52,N],[3,"FieldPat","","A single field in a struct pattern.",N,N],[12,"attrs","","",53,N],[12,"member","","",53,N],[12,"colon_token","","",53,N],[12,"pat","","",53,N],[3,"FieldValue","","A field-value pair in a struct literal.",N,N],[12,"attrs","","Attributes tagged on the field.",54,N],[12,"member","","Name or index of the field.",54,N],[12,"colon_token","","The colon in `Struct { x: x }`. If written in shorthand like `Struct { x }`, there is no colon.",54,N],[12,"expr","","Value of the field.",54,N],[3,"Label","","A lifetime labeling a `for`, `while`, or `loop`.",N,N],[12,"name","","",55,N],[12,"colon_token","","",55,N],[3,"Local","","A local `let` binding: `let x: u64 = s.parse()?`.",N,N],[12,"attrs","","",56,N],[12,"let_token","","",56,N],[12,"pats","","",56,N],[12,"ty","","",56,N],[12,"init","","",56,N],[12,"semi_token","","",56,N],[3,"MethodTurbofish","","The `::<>` explicit type parameters passed to a method call: `parse::<u64>()`.",N,N],[12,"colon2_token","","",57,N],[12,"lt_token","","",57,N],[12,"args","","",57,N],[12,"gt_token","","",57,N],[3,"PatBox","","A box pattern: `box v`.",N,N],[12,"box_token","","",58,N],[12,"pat","","",58,N],[3,"PatIdent","","A pattern that binds a new variable: `ref mut binding @ SUBPATTERN`.",N,N],[12,"by_ref","","",59,N],[12,"mutability","","",59,N],[12,"ident","","",59,N],[12,"subpat","","",59,N],[3,"PatLit","","A literal pattern: `0`.",N,N],[12,"expr","","",60,N],[3,"PatMacro","","A macro in expression position.",N,N],[12,"mac","","",61,N],[3,"PatPath","","A path pattern like `Color::Red`, optionally qualified with a self-type.",N,N],[12,"qself","","",62,N],[12,"path","","",62,N],[3,"PatRange","","A range pattern: `1..=2`.",N,N],[12,"lo","","",63,N],[12,"limits","","",63,N],[12,"hi","","",63,N],[3,"PatRef","","A reference pattern: `&mut (first, second)`.",N,N],[12,"and_token","","",64,N],[12,"mutability","","",64,N],[12,"pat","","",64,N],[3,"PatSlice","","A dynamically sized slice pattern: `[a, b, i.., y, z]`.",N,N],[12,"bracket_token","","",65,N],[12,"front","","",65,N],[12,"middle","","",65,N],[12,"dot2_token","","",65,N],[12,"comma_token","","",65,N],[12,"back","","",65,N],[3,"PatStruct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",N,N],[12,"path","","",66,N],[12,"brace_token","","",66,N],[12,"fields","","",66,N],[12,"dot2_token","","",66,N],[3,"PatTuple","","A tuple pattern: `(a, b)`.",N,N],[12,"paren_token","","",67,N],[12,"front","","",67,N],[12,"dot2_token","","",67,N],[12,"comma_token","","",67,N],[12,"back","","",67,N],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y, .., z)`.",N,N],[12,"path","","",68,N],[12,"pat","","",68,N],[3,"PatVerbatim","","Tokens in pattern position not interpreted by Syn.",N,N],[12,"tts","","",69,N],[3,"PatWild","","A pattern that matches any value: `_`.",N,N],[12,"underscore_token","","",70,N],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",N,N],[12,"for_token","","",71,N],[12,"lt_token","","",71,N],[12,"lifetimes","","",71,N],[12,"gt_token","","",71,N],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",N,N],[12,"attrs","","",72,N],[12,"const_token","","",72,N],[12,"ident","","",72,N],[12,"colon_token","","",72,N],[12,"ty","","",72,N],[12,"eq_token","","",72,N],[12,"default","","",72,N],[3,"Generics","","Lifetimes and type parameters attached to a declaration of a function, enum, trait, etc.",N,N],[12,"lt_token","","",73,N],[12,"params","","",73,N],[12,"gt_token","","",73,N],[12,"where_clause","","",73,N],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",N,N],[12,"attrs","","",74,N],[12,"lifetime","","",74,N],[12,"colon_token","","",74,N],[12,"bounds","","",74,N],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",N,N],[12,"lhs_ty","","",75,N],[12,"eq_token","","",75,N],[12,"rhs_ty","","",75,N],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",N,N],[12,"lifetime","","",76,N],[12,"colon_token","","",76,N],[12,"bounds","","",76,N],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.",N,N],[12,"lifetimes","","Any lifetimes from a `for` binding",77,N],[12,"bounded_ty","","The type being bounded",77,N],[12,"colon_token","","",77,N],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",77,N],[3,"TraitBound","","A trait used as a bound on a type parameter.",N,N],[12,"paren_token","","",78,N],[12,"modifier","","",78,N],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",78,N],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",78,N],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",N,N],[12,"attrs","","",79,N],[12,"ident","","",79,N],[12,"colon_token","","",79,N],[12,"bounds","","",79,N],[12,"eq_token","","",79,N],[12,"default","","",79,N],[3,"WhereClause","","A `where` clause in a definition: `where T: Deserialize<'de>, D: 'static`.",N,N],[12,"where_token","","",80,N],[12,"predicates","","",80,N],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",N,N],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"ArgCaptured","","An explicitly typed pattern captured by a function signature.",N,N],[12,"pat","","",81,N],[12,"colon_token","","",81,N],[12,"ty","","",81,N],[3,"ArgSelf","","Self captured by value in a function signature: `self` or `mut self`.",N,N],[12,"mutability","","",82,N],[12,"self_token","","",82,N],[3,"ArgSelfRef","","Self captured by reference in a function signature: `&self` or `&mut self`.",N,N],[12,"and_token","","",83,N],[12,"lifetime","","",83,N],[12,"mutability","","",83,N],[12,"self_token","","",83,N],[3,"FnDecl","","Header of a function declaration, without including the body.",N,N],[12,"fn_token","","",84,N],[12,"generics","","",84,N],[12,"paren_token","","",84,N],[12,"inputs","","",84,N],[12,"variadic","","",84,N],[12,"output","","",84,N],[3,"ForeignItemFn","","A foreign function in an `extern` block.",N,N],[12,"attrs","","",85,N],[12,"vis","","",85,N],[12,"ident","","",85,N],[12,"decl","","",85,N],[12,"semi_token","","",85,N],[3,"ForeignItemMacro","","A macro invocation within an extern block.",N,N],[12,"attrs","","",86,N],[12,"mac","","",86,N],[12,"semi_token","","",86,N],[3,"ForeignItemStatic","","A foreign static item in an `extern` block: `static ext: u8`.",N,N],[12,"attrs","","",87,N],[12,"vis","","",87,N],[12,"static_token","","",87,N],[12,"mutability","","",87,N],[12,"ident","","",87,N],[12,"colon_token","","",87,N],[12,"ty","","",87,N],[12,"semi_token","","",87,N],[3,"ForeignItemType","","A foreign type in an `extern` block: `type void`.",N,N],[12,"attrs","","",88,N],[12,"vis","","",88,N],[12,"type_token","","",88,N],[12,"ident","","",88,N],[12,"semi_token","","",88,N],[3,"ForeignItemVerbatim","","Tokens in an `extern` block not interpreted by Syn.",N,N],[12,"tts","","",89,N],[3,"ImplItemConst","","An associated constant within an impl block.",N,N],[12,"attrs","","",90,N],[12,"vis","","",90,N],[12,"defaultness","","",90,N],[12,"const_token","","",90,N],[12,"ident","","",90,N],[12,"colon_token","","",90,N],[12,"ty","","",90,N],[12,"eq_token","","",90,N],[12,"expr","","",90,N],[12,"semi_token","","",90,N],[3,"ImplItemExistential","","An existential type within an impl block.",N,N],[12,"attrs","","",91,N],[12,"existential_token","","",91,N],[12,"type_token","","",91,N],[12,"ident","","",91,N],[12,"generics","","",91,N],[12,"colon_token","","",91,N],[12,"bounds","","",91,N],[12,"semi_token","","",91,N],[3,"ImplItemMacro","","A macro invocation within an impl block.",N,N],[12,"attrs","","",92,N],[12,"mac","","",92,N],[12,"semi_token","","",92,N],[3,"ImplItemMethod","","A method within an impl block.",N,N],[12,"attrs","","",93,N],[12,"vis","","",93,N],[12,"defaultness","","",93,N],[12,"sig","","",93,N],[12,"block","","",93,N],[3,"ImplItemType","","An associated type within an impl block.",N,N],[12,"attrs","","",94,N],[12,"vis","","",94,N],[12,"defaultness","","",94,N],[12,"type_token","","",94,N],[12,"ident","","",94,N],[12,"generics","","",94,N],[12,"eq_token","","",94,N],[12,"ty","","",94,N],[12,"semi_token","","",94,N],[3,"ImplItemVerbatim","","Tokens within an impl block not interpreted by Syn.",N,N],[12,"tts","","",95,N],[3,"ItemConst","","A constant item: `const MAX: u16 = 65535`.",N,N],[12,"attrs","","",96,N],[12,"vis","","",96,N],[12,"const_token","","",96,N],[12,"ident","","",96,N],[12,"colon_token","","",96,N],[12,"ty","","",96,N],[12,"eq_token","","",96,N],[12,"expr","","",96,N],[12,"semi_token","","",96,N],[3,"ItemEnum","","An enum definition: `enum Foo<A, B> { C<A>, D<B> }`.",N,N],[12,"attrs","","",97,N],[12,"vis","","",97,N],[12,"enum_token","","",97,N],[12,"ident","","",97,N],[12,"generics","","",97,N],[12,"brace_token","","",97,N],[12,"variants","","",97,N],[3,"ItemExistential","","An existential type: `existential type Iter: Iterator<Item = u8>`.",N,N],[12,"attrs","","",98,N],[12,"vis","","",98,N],[12,"existential_token","","",98,N],[12,"type_token","","",98,N],[12,"ident","","",98,N],[12,"generics","","",98,N],[12,"colon_token","","",98,N],[12,"bounds","","",98,N],[12,"semi_token","","",98,N],[3,"ItemExternCrate","","An `extern crate` item: `extern crate serde`.",N,N],[12,"attrs","","",99,N],[12,"vis","","",99,N],[12,"extern_token","","",99,N],[12,"crate_token","","",99,N],[12,"ident","","",99,N],[12,"rename","","",99,N],[12,"semi_token","","",99,N],[3,"ItemFn","","A free-standing function: `fn process(n: usize) -> Result<()> { ... }`.",N,N],[12,"attrs","","",100,N],[12,"vis","","",100,N],[12,"constness","","",100,N],[12,"unsafety","","",100,N],[12,"asyncness","","",100,N],[12,"abi","","",100,N],[12,"ident","","",100,N],[12,"decl","","",100,N],[12,"block","","",100,N],[3,"ItemForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",N,N],[12,"attrs","","",101,N],[12,"abi","","",101,N],[12,"brace_token","","",101,N],[12,"items","","",101,N],[3,"ItemImpl","","An impl block providing trait or associated items: `impl<A> Trait for Data<A> { ... }`.",N,N],[12,"attrs","","",102,N],[12,"defaultness","","",102,N],[12,"unsafety","","",102,N],[12,"impl_token","","",102,N],[12,"generics","","",102,N],[12,"trait_","","Trait this impl implements.",102,N],[12,"self_ty","","The Self type of the impl.",102,N],[12,"brace_token","","",102,N],[12,"items","","",102,N],[3,"ItemMacro","","A macro invocation, which includes `macro_rules!` definitions.",N,N],[12,"attrs","","",103,N],[12,"ident","","The `example` in `macro_rules! example { ... }`.",103,N],[12,"mac","","",103,N],[12,"semi_token","","",103,N],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the `macro` keyword.",N,N],[12,"attrs","","",104,N],[12,"vis","","",104,N],[12,"macro_token","","",104,N],[12,"ident","","",104,N],[12,"paren_token","","",104,N],[12,"args","","",104,N],[12,"brace_token","","",104,N],[12,"body","","",104,N],[3,"ItemMod","","A module or module declaration: `mod m` or `mod m { ... }`.",N,N],[12,"attrs","","",105,N],[12,"vis","","",105,N],[12,"mod_token","","",105,N],[12,"ident","","",105,N],[12,"content","","",105,N],[12,"semi","","",105,N],[3,"ItemStatic","","A static item: `static BIKE: Shed = Shed(42)`.",N,N],[12,"attrs","","",106,N],[12,"vis","","",106,N],[12,"static_token","","",106,N],[12,"mutability","","",106,N],[12,"ident","","",106,N],[12,"colon_token","","",106,N],[12,"ty","","",106,N],[12,"eq_token","","",106,N],[12,"expr","","",106,N],[12,"semi_token","","",106,N],[3,"ItemStruct","","A struct definition: `struct Foo<A> { x: A }`.",N,N],[12,"attrs","","",107,N],[12,"vis","","",107,N],[12,"struct_token","","",107,N],[12,"ident","","",107,N],[12,"generics","","",107,N],[12,"fields","","",107,N],[12,"semi_token","","",107,N],[3,"ItemTrait","","A trait definition: `pub trait Iterator { ... }`.",N,N],[12,"attrs","","",108,N],[12,"vis","","",108,N],[12,"unsafety","","",108,N],[12,"auto_token","","",108,N],[12,"trait_token","","",108,N],[12,"ident","","",108,N],[12,"generics","","",108,N],[12,"colon_token","","",108,N],[12,"supertraits","","",108,N],[12,"brace_token","","",108,N],[12,"items","","",108,N],[3,"ItemTraitAlias","","A trait alias: `pub trait SharableIterator = Iterator + Sync`.",N,N],[12,"attrs","","",109,N],[12,"vis","","",109,N],[12,"trait_token","","",109,N],[12,"ident","","",109,N],[12,"generics","","",109,N],[12,"eq_token","","",109,N],[12,"bounds","","",109,N],[12,"semi_token","","",109,N],[3,"ItemType","","A type alias: `type Result<T> = std::result::Result<T, MyError>`.",N,N],[12,"attrs","","",110,N],[12,"vis","","",110,N],[12,"type_token","","",110,N],[12,"ident","","",110,N],[12,"generics","","",110,N],[12,"eq_token","","",110,N],[12,"ty","","",110,N],[12,"semi_token","","",110,N],[3,"ItemUnion","","A union definition: `union Foo<A, B> { x: A, y: B }`.",N,N],[12,"attrs","","",111,N],[12,"vis","","",111,N],[12,"union_token","","",111,N],[12,"ident","","",111,N],[12,"generics","","",111,N],[12,"fields","","",111,N],[3,"ItemUse","","A use declaration: `use std::collections::HashMap`.",N,N],[12,"attrs","","",112,N],[12,"vis","","",112,N],[12,"use_token","","",112,N],[12,"leading_colon","","",112,N],[12,"tree","","",112,N],[12,"semi_token","","",112,N],[3,"ItemVerbatim","","Tokens forming an item not interpreted by Syn.",N,N],[12,"tts","","",113,N],[3,"MethodSig","","A method's signature in a trait or implementation: `unsafe fn initialize(&self)`.",N,N],[12,"constness","","",114,N],[12,"unsafety","","",114,N],[12,"asyncness","","",114,N],[12,"abi","","",114,N],[12,"ident","","",114,N],[12,"decl","","",114,N],[3,"TraitItemConst","","An associated constant within the definition of a trait.",N,N],[12,"attrs","","",115,N],[12,"const_token","","",115,N],[12,"ident","","",115,N],[12,"colon_token","","",115,N],[12,"ty","","",115,N],[12,"default","","",115,N],[12,"semi_token","","",115,N],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",N,N],[12,"attrs","","",116,N],[12,"mac","","",116,N],[12,"semi_token","","",116,N],[3,"TraitItemMethod","","A trait method within the definition of a trait.",N,N],[12,"attrs","","",117,N],[12,"sig","","",117,N],[12,"default","","",117,N],[12,"semi_token","","",117,N],[3,"TraitItemType","","An associated type within the definition of a trait.",N,N],[12,"attrs","","",118,N],[12,"type_token","","",118,N],[12,"ident","","",118,N],[12,"generics","","",118,N],[12,"colon_token","","",118,N],[12,"bounds","","",118,N],[12,"default","","",118,N],[12,"semi_token","","",118,N],[3,"TraitItemVerbatim","","Tokens within the definition of a trait not interpreted by Syn.",N,N],[12,"tts","","",119,N],[3,"UseGlob","","A glob import in a `use` item: `*`.",N,N],[12,"star_token","","",120,N],[3,"UseGroup","","A braced group of imports in a `use` item: `{A, B, C}`.",N,N],[12,"brace_token","","",121,N],[12,"items","","",121,N],[3,"UseName","","An identifier imported by a `use` item: `HashMap`.",N,N],[12,"ident","","",122,N],[3,"UsePath","","A path prefix of imports in a `use` item: `std::...`.",N,N],[12,"ident","","",123,N],[12,"colon2_token","","",123,N],[12,"tree","","",123,N],[3,"UseRename","","An renamed identifier imported by a `use` item: `HashMap as Map`.",N,N],[12,"ident","","",124,N],[12,"as_token","","",124,N],[12,"rename","","",124,N],[3,"File","","A complete file of Rust source code.",N,N],[12,"shebang","","",125,N],[12,"attrs","","",125,N],[12,"items","","",125,N],[3,"Lifetime","","A Rust lifetime: `'a`.",N,N],[12,"apostrophe","","",126,N],[12,"ident","","",126,N],[3,"LitBool","","A boolean literal: `true` or `false`.",N,N],[12,"value","","",127,N],[12,"span","","",127,N],[3,"LitByte","","A byte literal: `b'f'`.",N,N],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",N,N],[3,"LitChar","","A character literal: `'a'`.",N,N],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",N,N],[3,"LitInt","","An integer literal: `1` or `1u16`.",N,N],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",N,N],[3,"LitVerbatim","","A raw token literal not interpreted by Syn, possibly because it represents an integer larger than 64 bits.",N,N],[12,"token","","",128,N],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",N,N],[12,"path","","",129,N],[12,"bang_token","","",129,N],[12,"delimiter","","",129,N],[12,"tts","","",129,N],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",N,N],[12,"enum_token","","",130,N],[12,"brace_token","","",130,N],[12,"variants","","",130,N],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",N,N],[12,"struct_token","","",131,N],[12,"fields","","",131,N],[12,"semi_token","","",131,N],[3,"DataUnion","","A tagged union input to a `proc_macro_derive` macro.",N,N],[12,"union_token","","",132,N],[12,"fields","","",132,N],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",N,N],[12,"attrs","","Attributes tagged on the whole struct or enum.",133,N],[12,"vis","","Visibility of the struct or enum.",133,N],[12,"ident","","Name of the struct or enum.",133,N],[12,"generics","","Generics required to complete the definition.",133,N],[12,"data","","Data within the struct or enum.",133,N],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",N,N],[12,"extern_token","","",134,N],[12,"name","","",134,N],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize) -> bool`.",N,N],[12,"name","","",135,N],[12,"ty","","",135,N],[3,"TypeArray","","A fixed size array type: `[T; n]`.",N,N],[12,"bracket_token","","",136,N],[12,"elem","","",136,N],[12,"semi_token","","",136,N],[12,"len","","",136,N],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",N,N],[12,"lifetimes","","",137,N],[12,"unsafety","","",137,N],[12,"abi","","",137,N],[12,"fn_token","","",137,N],[12,"paren_token","","",137,N],[12,"inputs","","",137,N],[12,"variadic","","",137,N],[12,"output","","",137,N],[3,"TypeGroup","","A type contained within invisible delimiters.",N,N],[12,"group_token","","",138,N],[12,"elem","","",138,N],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",N,N],[12,"impl_token","","",139,N],[12,"bounds","","",139,N],[3,"TypeInfer","","Indication that a type should be inferred by the compiler: `_`.",N,N],[12,"underscore_token","","",140,N],[3,"TypeMacro","","A macro in the type position.",N,N],[12,"mac","","",141,N],[3,"TypeNever","","The never type: `!`.",N,N],[12,"bang_token","","",142,N],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",N,N],[12,"paren_token","","",143,N],[12,"elem","","",143,N],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with a self-type as in `<Vec<T> as SomeTrait>::Associated`.",N,N],[12,"qself","","",144,N],[12,"path","","",144,N],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",N,N],[12,"star_token","","",145,N],[12,"const_token","","",145,N],[12,"mutability","","",145,N],[12,"elem","","",145,N],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",N,N],[12,"and_token","","",146,N],[12,"lifetime","","",146,N],[12,"mutability","","",146,N],[12,"elem","","",146,N],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",N,N],[12,"bracket_token","","",147,N],[12,"elem","","",147,N],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",N,N],[12,"dyn_token","","",148,N],[12,"bounds","","",148,N],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",N,N],[12,"paren_token","","",149,N],[12,"elems","","",149,N],[3,"TypeVerbatim","","Tokens in type position not interpreted by Syn.",N,N],[12,"tts","","",150,N],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>` in `HashMap<K, V>`.",N,N],[12,"colon2_token","","",151,N],[12,"lt_token","","",151,N],[12,"args","","",151,N],[12,"gt_token","","",151,N],[3,"Binding","","A binding (equality constraint) on an associated type: `Item = u8`.",N,N],[12,"ident","","",152,N],[12,"eq_token","","",152,N],[12,"ty","","",152,N],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",N,N],[12,"ident","","",153,N],[12,"colon_token","","",153,N],[12,"bounds","","",153,N],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in `Fn(A,B) -> C`.",N,N],[12,"paren_token","","",154,N],[12,"inputs","","`(A, B)`",154,N],[12,"output","","`C`",154,N],[3,"Path","","A path at which a named item is exported: `std::collections::HashMap`.",N,N],[12,"leading_colon","","",155,N],[12,"segments","","",155,N],[3,"PathSegment","","A segment of a path together with any path arguments on that segment.",N,N],[12,"ident","","",156,N],[12,"arguments","","",156,N],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T as Display>::fmt`.",N,N],[12,"lt_token","","",157,N],[12,"ty","","",157,N],[12,"position","","",157,N],[12,"as_token","","",157,N],[12,"gt_token","","",157,N],[3,"Error","","Error returned when a Syn parser cannot parse the input tokens.",N,N],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and attributes that are contained within an item.",N,N],[13,"Outer","","",158,N],[13,"Inner","","",158,N],[4,"Meta","","Content of a compile-time structured attribute.",N,N],[13,"Word","","",159,N],[13,"List","","A structured list within an attribute, like `derive(Copy, Clone)`.",159,N],[13,"NameValue","","A name-value pair within an attribute, like `feature = \"nightly\"`.",159,N],[4,"NestedMeta","","Element of a compile-time attribute list.",N,N],[13,"Meta","","A structured meta item, like the `Copy` in `#[derive(Copy)]` which would be a nested `Meta::Word`.",160,N],[13,"Literal","","A Rust literal, like the `\"new_name\"` in `#[rename(\"new_name\")]`.",160,N],[4,"Fields","","Data stored within an enum variant or struct.",N,N],[13,"Named","","Named fields of a struct or struct variant such as `Point { x: f64, y: f64 }`.",161,N],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.",161,N],[13,"Unit","","Unit struct or unit variant such as `None`.",161,N],[4,"Visibility","","The visibility level of an item: inherited or `pub` or `pub(restricted)`.",N,N],[13,"Public","","A public visibility level: `pub`.",162,N],[13,"Crate","","A crate-level visibility: `crate`.",162,N],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or `pub(super)` or `pub(crate)` or `pub(in some::module)`.",162,N],[13,"Inherited","","An inherited visibility, which usually means private.",162,N],[4,"Expr","","A Rust expression.",N,N],[13,"Box","","A box expression: `box f`.",163,N],[13,"InPlace","","A placement expression: `place <- value`.",163,N],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",163,N],[13,"Call","","A function call expression: `invoke(a, b)`.",163,N],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",163,N],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",163,N],[13,"Binary","","A binary operation: `a + b`, `a * b`.",163,N],[13,"Unary","","A unary operation: `!x`, `*x`.",163,N],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",163,N],[13,"Cast","","A cast expression: `foo as f64`.",163,N],[13,"Type","","A type ascription expression: `foo: f64`.",163,N],[13,"Let","","A `let` guard: `let Some(x) = opt`.",163,N],[13,"If","","An `if` expression with an optional `else` block: `if expr { ... } else { ... }`.",163,N],[13,"While","","A while loop: `while expr { ... }`.",163,N],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",163,N],[13,"Loop","","Conditionless loop: `loop { ... }`.",163,N],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {} }`.",163,N],[13,"Closure","","A closure expression: `|a, b| a + b`.",163,N],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",163,N],[13,"Block","","A blocked scope: `{ ... }`.",163,N],[13,"Assign","","An assignment expression: `a = compute()`.",163,N],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",163,N],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple struct field (`obj.0`).",163,N],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",163,N],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",163,N],[13,"Path","","A path like `std::mem::replace` possibly containing generic parameters and a qualified self-type.",163,N],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",163,N],[13,"Break","","A `break`, with an optional label to break and an optional expression.",163,N],[13,"Continue","","A `continue`, with an optional label.",163,N],[13,"Return","","A `return`, with an optional value to be returned.",163,N],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",163,N],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",163,N],[13,"Repeat","","An array literal constructed from one repeated element: `[0u8; N]`.",163,N],[13,"Paren","","A parenthesized expression: `(a + b)`.",163,N],[13,"Group","","An expression contained within invisible delimiters.",163,N],[13,"Try","","A try-expression: `expr?`.",163,N],[13,"Async","","An async block: `async { ... }`.",163,N],[13,"TryBlock","","A try block: `try { ... }`.",163,N],[13,"Yield","","A yield expression: `yield expr`.",163,N],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",163,N],[4,"Member","","A struct or tuple struct field accessed in a struct literal or field expression.",N,N],[13,"Named","","A named field like `self.x`.",164,N],[13,"Unnamed","","An unnamed field like `self.0`.",164,N],[4,"GenericMethodArgument","","An individual generic argument to a method, like `T`.",N,N],[13,"Type","","A type argument.",165,N],[13,"Const","","A const expression. Must be inside of a block.",165,N],[4,"Pat","","A pattern in a local binding, function signature, match expression, or various other places.",N,N],[13,"Wild","","A pattern that matches any value: `_`.",166,N],[13,"Ident","","A pattern that binds a new variable: `ref mut binding @ SUBPATTERN`.",166,N],[13,"Struct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",166,N],[13,"TupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y, .., z)`.",166,N],[13,"Path","","A path pattern like `Color::Red`, optionally qualified with a self-type.",166,N],[13,"Tuple","","A tuple pattern: `(a, b)`.",166,N],[13,"Box","","A box pattern: `box v`.",166,N],[13,"Ref","","A reference pattern: `&mut (first, second)`.",166,N],[13,"Lit","","A literal pattern: `0`.",166,N],[13,"Range","","A range pattern: `1..=2`.",166,N],[13,"Slice","","A dynamically sized slice pattern: `[a, b, i.., y, z]`.",166,N],[13,"Macro","","A macro in expression position.",166,N],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",166,N],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",N,N],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",167,N],[13,"Closed","","Inclusive at the beginning and end.",167,N],[4,"Stmt","","A statement, usually ending in a semicolon.",N,N],[13,"Local","","A local (let) binding.",168,N],[13,"Item","","An item definition.",168,N],[13,"Expr","","Expr without trailing semicolon.",168,N],[13,"Semi","","Expression with trailing semicolon.",168,N],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T: Into<String>`, `'a: 'b`, `const LEN: usize`.",N,N],[13,"Type","","A generic type parameter: `T: Into<String>`.",169,N],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",169,N],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",169,N],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the `?` in `?Sized`.",N,N],[13,"None","","",170,N],[13,"Maybe","","",170,N],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",N,N],[13,"Trait","","",171,N],[13,"Lifetime","","",171,N],[4,"WherePredicate","","A single predicate in a `where` clause: `T: Deserialize<'de>`.",N,N],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.",172,N],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",172,N],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",172,N],[4,"FnArg","","An argument in a function signature: the `n: usize` in `fn f(n: usize)`.",N,N],[13,"SelfRef","","Self captured by reference in a function signature: `&self` or `&mut self`.",173,N],[13,"SelfValue","","Self captured by value in a function signature: `self` or `mut self`.",173,N],[13,"Captured","","An explicitly typed pattern captured by a function signature.",173,N],[13,"Inferred","","A pattern whose type is inferred captured by a function signature.",173,N],[13,"Ignored","","A type not bound to any pattern in a function signature.",173,N],[4,"ForeignItem","","An item within an `extern` block.",N,N],[13,"Fn","","A foreign function in an `extern` block.",174,N],[13,"Static","","A foreign static item in an `extern` block: `static ext: u8`.",174,N],[13,"Type","","A foreign type in an `extern` block: `type void`.",174,N],[13,"Macro","","A macro invocation within an extern block.",174,N],[13,"Verbatim","","Tokens in an `extern` block not interpreted by Syn.",174,N],[4,"ImplItem","","An item within an impl block.",N,N],[13,"Const","","An associated constant within an impl block.",175,N],[13,"Method","","A method within an impl block.",175,N],[13,"Type","","An associated type within an impl block.",175,N],[13,"Existential","","An existential type within an impl block.",175,N],[13,"Macro","","A macro invocation within an impl block.",175,N],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",175,N],[4,"Item","","Things that can appear directly inside of a module or scope.",N,N],[13,"ExternCrate","","An `extern crate` item: `extern crate serde`.",176,N],[13,"Use","","A use declaration: `use std::collections::HashMap`.",176,N],[13,"Static","","A static item: `static BIKE: Shed = Shed(42)`.",176,N],[13,"Const","","A constant item: `const MAX: u16 = 65535`.",176,N],[13,"Fn","","A free-standing function: `fn process(n: usize) -> Result<()> { ... }`.",176,N],[13,"Mod","","A module or module declaration: `mod m` or `mod m { ... }`.",176,N],[13,"ForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",176,N],[13,"Type","","A type alias: `type Result<T> = std::result::Result<T, MyError>`.",176,N],[13,"Existential","","An existential type: `existential type Iter: Iterator<Item = u8>`.",176,N],[13,"Struct","","A struct definition: `struct Foo<A> { x: A }`.",176,N],[13,"Enum","","An enum definition: `enum Foo<A, B> { C<A>, D<B> }`.",176,N],[13,"Union","","A union definition: `union Foo<A, B> { x: A, y: B }`.",176,N],[13,"Trait","","A trait definition: `pub trait Iterator { ... }`.",176,N],[13,"TraitAlias","","A trait alias: `pub trait SharableIterator = Iterator + Sync`.",176,N],[13,"Impl","","An impl block providing trait or associated items: `impl<A> Trait for Data<A> { ... }`.",176,N],[13,"Macro","","A macro invocation, which includes `macro_rules!` definitions.",176,N],[13,"Macro2","","A 2.0-style declarative macro introduced by the `macro` keyword.",176,N],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",176,N],[4,"TraitItem","","An item declaration within the definition of a trait.",N,N],[13,"Const","","An associated constant within the definition of a trait.",177,N],[13,"Method","","A trait method within the definition of a trait.",177,N],[13,"Type","","An associated type within the definition of a trait.",177,N],[13,"Macro","","A macro invocation within the definition of a trait.",177,N],[13,"Verbatim","","Tokens within the definition of a trait not interpreted by Syn.",177,N],[4,"UseTree","","A suffix of an import tree in a `use` item: `Type as Renamed` or `*`.",N,N],[13,"Path","","A path prefix of imports in a `use` item: `std::...`.",178,N],[13,"Name","","An identifier imported by a `use` item: `HashMap`.",178,N],[13,"Rename","","An renamed identifier imported by a `use` item: `HashMap as Map`.",178,N],[13,"Glob","","A glob import in a `use` item: `*`.",178,N],[13,"Group","","A braced group of imports in a `use` item: `{A, B, C}`.",178,N],[4,"FloatSuffix","","The suffix on a floating point literal if any, like the `f32` in `1.0f32`.",N,N],[13,"F32","","",179,N],[13,"F64","","",179,N],[13,"None","","",179,N],[4,"IntSuffix","","The suffix on an integer literal if any, like the `u8` in `127u8`.",N,N],[13,"I8","","",180,N],[13,"I16","","",180,N],[13,"I32","","",180,N],[13,"I64","","",180,N],[13,"I128","","",180,N],[13,"Isize","","",180,N],[13,"U8","","",180,N],[13,"U16","","",180,N],[13,"U32","","",180,N],[13,"U64","","",180,N],[13,"U128","","",180,N],[13,"Usize","","",180,N],[13,"None","","",180,N],[4,"Lit","","A Rust literal such as a string or integer or boolean.",N,N],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",181,N],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",181,N],[13,"Byte","","A byte literal: `b'f'`.",181,N],[13,"Char","","A character literal: `'a'`.",181,N],[13,"Int","","An integer literal: `1` or `1u16`.",181,N],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",181,N],[13,"Bool","","A boolean literal: `true` or `false`.",181,N],[13,"Verbatim","","A raw token literal not interpreted by Syn, possibly because it represents an integer larger than 64 bits.",181,N],[4,"StrStyle","","The style of a string literal, either plain quoted or a raw string like `r##\"data\"##`.",N,N],[13,"Cooked","","An ordinary string like `\"data\"`.",182,N],[13,"Raw","","A raw string like `r##\"data\"##`.",182,N],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or `m!{...}` or `m![...]`.",N,N],[13,"Paren","","",183,N],[13,"Brace","","",183,N],[13,"Bracket","","",183,N],[4,"Data","","The storage of a struct, enum or union data structure.",N,N],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",184,N],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",184,N],[13,"Union","","A tagged union input to a `proc_macro_derive` macro.",184,N],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",N,N],[13,"Add","","The `+` operator (addition)",185,N],[13,"Sub","","The `-` operator (subtraction)",185,N],[13,"Mul","","The `*` operator (multiplication)",185,N],[13,"Div","","The `/` operator (division)",185,N],[13,"Rem","","The `%` operator (modulus)",185,N],[13,"And","","The `&&` operator (logical and)",185,N],[13,"Or","","The `||` operator (logical or)",185,N],[13,"BitXor","","The `^` operator (bitwise xor)",185,N],[13,"BitAnd","","The `&` operator (bitwise and)",185,N],[13,"BitOr","","The `|` operator (bitwise or)",185,N],[13,"Shl","","The `<<` operator (shift left)",185,N],[13,"Shr","","The `>>` operator (shift right)",185,N],[13,"Eq","","The `==` operator (equality)",185,N],[13,"Lt","","The `<` operator (less than)",185,N],[13,"Le","","The `<=` operator (less than or equal to)",185,N],[13,"Ne","","The `!=` operator (not equal to)",185,N],[13,"Ge","","The `>=` operator (greater than or equal to)",185,N],[13,"Gt","","The `>` operator (greater than)",185,N],[13,"AddEq","","The `+=` operator",185,N],[13,"SubEq","","The `-=` operator",185,N],[13,"MulEq","","The `*=` operator",185,N],[13,"DivEq","","The `/=` operator",185,N],[13,"RemEq","","The `%=` operator",185,N],[13,"BitXorEq","","The `^=` operator",185,N],[13,"BitAndEq","","The `&=` operator",185,N],[13,"BitOrEq","","The `|=` operator",185,N],[13,"ShlEq","","The `<<=` operator",185,N],[13,"ShrEq","","The `>>=` operator",185,N],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",N,N],[13,"Deref","","The `*` operator for dereferencing",186,N],[13,"Not","","The `!` operator for logical inversion",186,N],[13,"Neg","","The `-` operator for negation",186,N],[4,"BareFnArgName","","Name of an argument in a function type: the `n` in `fn(n: usize)`.",N,N],[13,"Named","","Argument given a name.",187,N],[13,"Wild","","Argument not given a name, matched with `_`.",187,N],[4,"ReturnType","","Return type of a function signature.",N,N],[13,"Default","","Return type is not specified.",188,N],[13,"Type","","A particular type is returned.",188,N],[4,"Type","","The possible types that a Rust value could have.",N,N],[13,"Slice","","A dynamically sized slice type: `[T]`.",189,N],[13,"Array","","A fixed size array type: `[T; n]`.",189,N],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",189,N],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",189,N],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",189,N],[13,"Never","","The never type: `!`.",189,N],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",189,N],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with a self-type as in `<Vec<T> as SomeTrait>::Associated`.",189,N],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",189,N],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",189,N],[13,"Paren","","A parenthesized type equivalent to the inner type.",189,N],[13,"Group","","A type contained within invisible delimiters.",189,N],[13,"Infer","","Indication that a type should be inferred by the compiler: `_`.",189,N],[13,"Macro","","A macro in the type position.",189,N],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",189,N],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item = T`.",N,N],[13,"Lifetime","","A lifetime argument.",190,N],[13,"Type","","A type argument.",190,N],[13,"Binding","","A binding (equality constraint) on an associated type: the `Item = u8` in `Iterator<Item = u8>`.",190,N],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",190,N],[13,"Const","","A const expression. Must be inside of a block.",190,N],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path segment.",N,N],[13,"None","","",191,N],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",191,N],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",191,N],[5,"parse","","Parse tokens of source code into the chosen syntax tree node.",N,[[["tokenstream"]],["result"]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax tree node.",N,[[["tokenstream"]],["result"]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree node.",N,[[["str"]],["result"]]],[5,"parse_file","","Parse the content of a file of Rust code.",N,[[["str"]],["result",["file"]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and delimiters.",N,N],[3,"Underscore","syn::token","`_`",N,N],[12,"spans","","",192,N],[3,"Abstract","","`abstract`",N,N],[12,"span","","",193,N],[3,"As","","`as`",N,N],[12,"span","","",194,N],[3,"Async","","`async`",N,N],[12,"span","","",195,N],[3,"Auto","","`auto`",N,N],[12,"span","","",196,N],[3,"Become","","`become`",N,N],[12,"span","","",197,N],[3,"Box","","`box`",N,N],[12,"span","","",198,N],[3,"Break","","`break`",N,N],[12,"span","","",199,N],[3,"Const","","`const`",N,N],[12,"span","","",200,N],[3,"Continue","","`continue`",N,N],[12,"span","","",201,N],[3,"Crate","","`crate`",N,N],[12,"span","","",202,N],[3,"Default","","`default`",N,N],[12,"span","","",203,N],[3,"Do","","`do`",N,N],[12,"span","","",204,N],[3,"Dyn","","`dyn`",N,N],[12,"span","","",205,N],[3,"Else","","`else`",N,N],[12,"span","","",206,N],[3,"Enum","","`enum`",N,N],[12,"span","","",207,N],[3,"Existential","","`existential`",N,N],[12,"span","","",208,N],[3,"Extern","","`extern`",N,N],[12,"span","","",209,N],[3,"Final","","`final`",N,N],[12,"span","","",210,N],[3,"Fn","","`fn`",N,N],[12,"span","","",211,N],[3,"For","","`for`",N,N],[12,"span","","",212,N],[3,"If","","`if`",N,N],[12,"span","","",213,N],[3,"Impl","","`impl`",N,N],[12,"span","","",214,N],[3,"In","","`in`",N,N],[12,"span","","",215,N],[3,"Let","","`let`",N,N],[12,"span","","",216,N],[3,"Loop","","`loop`",N,N],[12,"span","","",217,N],[3,"Macro","","`macro`",N,N],[12,"span","","",218,N],[3,"Match","","`match`",N,N],[12,"span","","",219,N],[3,"Mod","","`mod`",N,N],[12,"span","","",220,N],[3,"Move","","`move`",N,N],[12,"span","","",221,N],[3,"Mut","","`mut`",N,N],[12,"span","","",222,N],[3,"Override","","`override`",N,N],[12,"span","","",223,N],[3,"Priv","","`priv`",N,N],[12,"span","","",224,N],[3,"Pub","","`pub`",N,N],[12,"span","","",225,N],[3,"Ref","","`ref`",N,N],[12,"span","","",226,N],[3,"Return","","`return`",N,N],[12,"span","","",227,N],[3,"SelfType","","`Self`",N,N],[12,"span","","",228,N],[3,"SelfValue","","`self`",N,N],[12,"span","","",229,N],[3,"Static","","`static`",N,N],[12,"span","","",230,N],[3,"Struct","","`struct`",N,N],[12,"span","","",231,N],[3,"Super","","`super`",N,N],[12,"span","","",232,N],[3,"Trait","","`trait`",N,N],[12,"span","","",233,N],[3,"Try","","`try`",N,N],[12,"span","","",234,N],[3,"Type","","`type`",N,N],[12,"span","","",235,N],[3,"Typeof","","`typeof`",N,N],[12,"span","","",236,N],[3,"Union","","`union`",N,N],[12,"span","","",237,N],[3,"Unsafe","","`unsafe`",N,N],[12,"span","","",238,N],[3,"Unsized","","`unsized`",N,N],[12,"span","","",239,N],[3,"Use","","`use`",N,N],[12,"span","","",240,N],[3,"Virtual","","`virtual`",N,N],[12,"span","","",241,N],[3,"Where","","`where`",N,N],[12,"span","","",242,N],[3,"While","","`while`",N,N],[12,"span","","",243,N],[3,"Yield","","`yield`",N,N],[12,"span","","",244,N],[3,"Add","","`+`",N,N],[12,"spans","","",245,N],[3,"AddEq","","`+=`",N,N],[12,"spans","","",246,N],[3,"And","","`&`",N,N],[12,"spans","","",247,N],[3,"AndAnd","","`&&`",N,N],[12,"spans","","",248,N],[3,"AndEq","","`&=`",N,N],[12,"spans","","",249,N],[3,"At","","`@`",N,N],[12,"spans","","",250,N],[3,"Bang","","`!`",N,N],[12,"spans","","",251,N],[3,"Caret","","`^`",N,N],[12,"spans","","",252,N],[3,"CaretEq","","`^=`",N,N],[12,"spans","","",253,N],[3,"Colon","","`:`",N,N],[12,"spans","","",254,N],[3,"Colon2","","`::`",N,N],[12,"spans","","",255,N],[3,"Comma","","`,`",N,N],[12,"spans","","",256,N],[3,"Div","","`/`",N,N],[12,"spans","","",257,N],[3,"DivEq","","`/=`",N,N],[12,"spans","","",258,N],[3,"Dollar","","`$`",N,N],[12,"spans","","",259,N],[3,"Dot","","`.`",N,N],[12,"spans","","",260,N],[3,"Dot2","","`..`",N,N],[12,"spans","","",261,N],[3,"Dot3","","`...`",N,N],[12,"spans","","",262,N],[3,"DotDotEq","","`..=`",N,N],[12,"spans","","",263,N],[3,"Eq","","`=`",N,N],[12,"spans","","",264,N],[3,"EqEq","","`==`",N,N],[12,"spans","","",265,N],[3,"Ge","","`>=`",N,N],[12,"spans","","",266,N],[3,"Gt","","`>`",N,N],[12,"spans","","",267,N],[3,"Le","","`<=`",N,N],[12,"spans","","",268,N],[3,"Lt","","`<`",N,N],[12,"spans","","",269,N],[3,"MulEq","","`*=`",N,N],[12,"spans","","",270,N],[3,"Ne","","`!=`",N,N],[12,"spans","","",271,N],[3,"Or","","`|`",N,N],[12,"spans","","",272,N],[3,"OrEq","","`|=`",N,N],[12,"spans","","",273,N],[3,"OrOr","","`||`",N,N],[12,"spans","","",274,N],[3,"Pound","","`#`",N,N],[12,"spans","","",275,N],[3,"Question","","`?`",N,N],[12,"spans","","",276,N],[3,"RArrow","","`->`",N,N],[12,"spans","","",277,N],[3,"LArrow","","`<-`",N,N],[12,"spans","","",278,N],[3,"Rem","","`%`",N,N],[12,"spans","","",279,N],[3,"RemEq","","`%=`",N,N],[12,"spans","","",280,N],[3,"FatArrow","","`=>`",N,N],[12,"spans","","",281,N],[3,"Semi","","`;`",N,N],[12,"spans","","",282,N],[3,"Shl","","`<<`",N,N],[12,"spans","","",283,N],[3,"ShlEq","","`<<=`",N,N],[12,"spans","","",284,N],[3,"Shr","","`>>`",N,N],[12,"spans","","",285,N],[3,"ShrEq","","`>>=`",N,N],[12,"spans","","",286,N],[3,"Star","","`*`",N,N],[12,"spans","","",287,N],[3,"Sub","","`-`",N,N],[12,"spans","","",288,N],[3,"SubEq","","`-=`",N,N],[12,"spans","","",289,N],[3,"Tilde","","`~`",N,N],[12,"spans","","",290,N],[3,"Brace","","`{...}`",N,N],[12,"span","","",291,N],[3,"Bracket","","`[...]`",N,N],[12,"span","","",292,N],[3,"Paren","","`(...)`",N,N],[12,"span","","",293,N],[3,"Group","","None-delimited group",N,N],[12,"span","","",294,N],[8,"Token","","Marker trait for types that represent single tokens.",N,N],[11,"peek","syn","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"peek","","",295,[[["cursor"]],["bool"]]],[11,"display","","",295,[[],["str"]]],[11,"peek","","",296,[[["cursor"]],["bool"]]],[11,"display","","",296,[[],["str"]]],[11,"peek","","",297,[[["cursor"]],["bool"]]],[11,"display","","",297,[[],["str"]]],[11,"peek","","",298,[[["cursor"]],["bool"]]],[11,"display","","",298,[[],["str"]]],[11,"peek","","",299,[[["cursor"]],["bool"]]],[11,"display","","",299,[[],["str"]]],[11,"peek","","",300,[[["cursor"]],["bool"]]],[11,"display","","",300,[[],["str"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"clone","syn::token","",192,[[["self"]],["underscore"]]],[11,"default","","",192,[[],["self"]]],[11,"to_tokens","","",192,[[["self"],["tokenstream"]]]],[11,"parse","","",192,[[["parsestream"]],["result"]]],[11,"peek","","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"peek","","",293,[[["cursor"]],["bool"]]],[11,"display","","",293,[[],["str"]]],[11,"peek","","",291,[[["cursor"]],["bool"]]],[11,"display","","",291,[[],["str"]]],[11,"peek","","",292,[[["cursor"]],["bool"]]],[11,"display","","",292,[[],["str"]]],[11,"peek","","",294,[[["cursor"]],["bool"]]],[11,"display","","",294,[[],["str"]]],[11,"clone","","",193,[[["self"]],["abstract"]]],[11,"default","","",193,[[],["self"]]],[11,"to_tokens","","",193,[[["self"],["tokenstream"]]]],[11,"parse","","",193,[[["parsestream"]],["result"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"clone","","",194,[[["self"]],["as"]]],[11,"default","","",194,[[],["self"]]],[11,"to_tokens","","",194,[[["self"],["tokenstream"]]]],[11,"parse","","",194,[[["parsestream"]],["result"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"clone","","",195,[[["self"]],["async"]]],[11,"default","","",195,[[],["self"]]],[11,"to_tokens","","",195,[[["self"],["tokenstream"]]]],[11,"parse","","",195,[[["parsestream"]],["result"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"clone","","",196,[[["self"]],["auto"]]],[11,"default","","",196,[[],["self"]]],[11,"to_tokens","","",196,[[["self"],["tokenstream"]]]],[11,"parse","","",196,[[["parsestream"]],["result"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"clone","","",197,[[["self"]],["become"]]],[11,"default","","",197,[[],["self"]]],[11,"to_tokens","","",197,[[["self"],["tokenstream"]]]],[11,"parse","","",197,[[["parsestream"]],["result"]]],[11,"peek","","",197,[[["cursor"]],["bool"]]],[11,"display","","",197,[[],["str"]]],[11,"clone","","",198,[[["self"]],["box"]]],[11,"default","","",198,[[],["self"]]],[11,"to_tokens","","",198,[[["self"],["tokenstream"]]]],[11,"parse","","",198,[[["parsestream"]],["result"]]],[11,"peek","","",198,[[["cursor"]],["bool"]]],[11,"display","","",198,[[],["str"]]],[11,"clone","","",199,[[["self"]],["break"]]],[11,"default","","",199,[[],["self"]]],[11,"to_tokens","","",199,[[["self"],["tokenstream"]]]],[11,"parse","","",199,[[["parsestream"]],["result"]]],[11,"peek","","",199,[[["cursor"]],["bool"]]],[11,"display","","",199,[[],["str"]]],[11,"clone","","",200,[[["self"]],["const"]]],[11,"default","","",200,[[],["self"]]],[11,"to_tokens","","",200,[[["self"],["tokenstream"]]]],[11,"parse","","",200,[[["parsestream"]],["result"]]],[11,"peek","","",200,[[["cursor"]],["bool"]]],[11,"display","","",200,[[],["str"]]],[11,"clone","","",201,[[["self"]],["continue"]]],[11,"default","","",201,[[],["self"]]],[11,"to_tokens","","",201,[[["self"],["tokenstream"]]]],[11,"parse","","",201,[[["parsestream"]],["result"]]],[11,"peek","","",201,[[["cursor"]],["bool"]]],[11,"display","","",201,[[],["str"]]],[11,"clone","","",202,[[["self"]],["crate"]]],[11,"default","","",202,[[],["self"]]],[11,"to_tokens","","",202,[[["self"],["tokenstream"]]]],[11,"parse","","",202,[[["parsestream"]],["result"]]],[11,"peek","","",202,[[["cursor"]],["bool"]]],[11,"display","","",202,[[],["str"]]],[11,"clone","","",203,[[["self"]],["default"]]],[11,"default","","",203,[[],["self"]]],[11,"to_tokens","","",203,[[["self"],["tokenstream"]]]],[11,"parse","","",203,[[["parsestream"]],["result"]]],[11,"peek","","",203,[[["cursor"]],["bool"]]],[11,"display","","",203,[[],["str"]]],[11,"clone","","",204,[[["self"]],["do"]]],[11,"default","","",204,[[],["self"]]],[11,"to_tokens","","",204,[[["self"],["tokenstream"]]]],[11,"parse","","",204,[[["parsestream"]],["result"]]],[11,"peek","","",204,[[["cursor"]],["bool"]]],[11,"display","","",204,[[],["str"]]],[11,"clone","","",205,[[["self"]],["dyn"]]],[11,"default","","",205,[[],["self"]]],[11,"to_tokens","","",205,[[["self"],["tokenstream"]]]],[11,"parse","","",205,[[["parsestream"]],["result"]]],[11,"peek","","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"clone","","",206,[[["self"]],["else"]]],[11,"default","","",206,[[],["self"]]],[11,"to_tokens","","",206,[[["self"],["tokenstream"]]]],[11,"parse","","",206,[[["parsestream"]],["result"]]],[11,"peek","","",206,[[["cursor"]],["bool"]]],[11,"display","","",206,[[],["str"]]],[11,"clone","","",207,[[["self"]],["enum"]]],[11,"default","","",207,[[],["self"]]],[11,"to_tokens","","",207,[[["self"],["tokenstream"]]]],[11,"parse","","",207,[[["parsestream"]],["result"]]],[11,"peek","","",207,[[["cursor"]],["bool"]]],[11,"display","","",207,[[],["str"]]],[11,"clone","","",208,[[["self"]],["existential"]]],[11,"default","","",208,[[],["self"]]],[11,"to_tokens","","",208,[[["self"],["tokenstream"]]]],[11,"parse","","",208,[[["parsestream"]],["result"]]],[11,"peek","","",208,[[["cursor"]],["bool"]]],[11,"display","","",208,[[],["str"]]],[11,"clone","","",209,[[["self"]],["extern"]]],[11,"default","","",209,[[],["self"]]],[11,"to_tokens","","",209,[[["self"],["tokenstream"]]]],[11,"parse","","",209,[[["parsestream"]],["result"]]],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"clone","","",210,[[["self"]],["final"]]],[11,"default","","",210,[[],["self"]]],[11,"to_tokens","","",210,[[["self"],["tokenstream"]]]],[11,"parse","","",210,[[["parsestream"]],["result"]]],[11,"peek","","",210,[[["cursor"]],["bool"]]],[11,"display","","",210,[[],["str"]]],[11,"clone","","",211,[[["self"]],["fn"]]],[11,"default","","",211,[[],["self"]]],[11,"to_tokens","","",211,[[["self"],["tokenstream"]]]],[11,"parse","","",211,[[["parsestream"]],["result"]]],[11,"peek","","",211,[[["cursor"]],["bool"]]],[11,"display","","",211,[[],["str"]]],[11,"clone","","",212,[[["self"]],["for"]]],[11,"default","","",212,[[],["self"]]],[11,"to_tokens","","",212,[[["self"],["tokenstream"]]]],[11,"parse","","",212,[[["parsestream"]],["result"]]],[11,"peek","","",212,[[["cursor"]],["bool"]]],[11,"display","","",212,[[],["str"]]],[11,"clone","","",213,[[["self"]],["if"]]],[11,"default","","",213,[[],["self"]]],[11,"to_tokens","","",213,[[["self"],["tokenstream"]]]],[11,"parse","","",213,[[["parsestream"]],["result"]]],[11,"peek","","",213,[[["cursor"]],["bool"]]],[11,"display","","",213,[[],["str"]]],[11,"clone","","",214,[[["self"]],["impl"]]],[11,"default","","",214,[[],["self"]]],[11,"to_tokens","","",214,[[["self"],["tokenstream"]]]],[11,"parse","","",214,[[["parsestream"]],["result"]]],[11,"peek","","",214,[[["cursor"]],["bool"]]],[11,"display","","",214,[[],["str"]]],[11,"clone","","",215,[[["self"]],["in"]]],[11,"default","","",215,[[],["self"]]],[11,"to_tokens","","",215,[[["self"],["tokenstream"]]]],[11,"parse","","",215,[[["parsestream"]],["result"]]],[11,"peek","","",215,[[["cursor"]],["bool"]]],[11,"display","","",215,[[],["str"]]],[11,"clone","","",216,[[["self"]],["let"]]],[11,"default","","",216,[[],["self"]]],[11,"to_tokens","","",216,[[["self"],["tokenstream"]]]],[11,"parse","","",216,[[["parsestream"]],["result"]]],[11,"peek","","",216,[[["cursor"]],["bool"]]],[11,"display","","",216,[[],["str"]]],[11,"clone","","",217,[[["self"]],["loop"]]],[11,"default","","",217,[[],["self"]]],[11,"to_tokens","","",217,[[["self"],["tokenstream"]]]],[11,"parse","","",217,[[["parsestream"]],["result"]]],[11,"peek","","",217,[[["cursor"]],["bool"]]],[11,"display","","",217,[[],["str"]]],[11,"clone","","",218,[[["self"]],["macro"]]],[11,"default","","",218,[[],["self"]]],[11,"to_tokens","","",218,[[["self"],["tokenstream"]]]],[11,"parse","","",218,[[["parsestream"]],["result"]]],[11,"peek","","",218,[[["cursor"]],["bool"]]],[11,"display","","",218,[[],["str"]]],[11,"clone","","",219,[[["self"]],["match"]]],[11,"default","","",219,[[],["self"]]],[11,"to_tokens","","",219,[[["self"],["tokenstream"]]]],[11,"parse","","",219,[[["parsestream"]],["result"]]],[11,"peek","","",219,[[["cursor"]],["bool"]]],[11,"display","","",219,[[],["str"]]],[11,"clone","","",220,[[["self"]],["mod"]]],[11,"default","","",220,[[],["self"]]],[11,"to_tokens","","",220,[[["self"],["tokenstream"]]]],[11,"parse","","",220,[[["parsestream"]],["result"]]],[11,"peek","","",220,[[["cursor"]],["bool"]]],[11,"display","","",220,[[],["str"]]],[11,"clone","","",221,[[["self"]],["move"]]],[11,"default","","",221,[[],["self"]]],[11,"to_tokens","","",221,[[["self"],["tokenstream"]]]],[11,"parse","","",221,[[["parsestream"]],["result"]]],[11,"peek","","",221,[[["cursor"]],["bool"]]],[11,"display","","",221,[[],["str"]]],[11,"clone","","",222,[[["self"]],["mut"]]],[11,"default","","",222,[[],["self"]]],[11,"to_tokens","","",222,[[["self"],["tokenstream"]]]],[11,"parse","","",222,[[["parsestream"]],["result"]]],[11,"peek","","",222,[[["cursor"]],["bool"]]],[11,"display","","",222,[[],["str"]]],[11,"clone","","",223,[[["self"]],["override"]]],[11,"default","","",223,[[],["self"]]],[11,"to_tokens","","",223,[[["self"],["tokenstream"]]]],[11,"parse","","",223,[[["parsestream"]],["result"]]],[11,"peek","","",223,[[["cursor"]],["bool"]]],[11,"display","","",223,[[],["str"]]],[11,"clone","","",224,[[["self"]],["priv"]]],[11,"default","","",224,[[],["self"]]],[11,"to_tokens","","",224,[[["self"],["tokenstream"]]]],[11,"parse","","",224,[[["parsestream"]],["result"]]],[11,"peek","","",224,[[["cursor"]],["bool"]]],[11,"display","","",224,[[],["str"]]],[11,"clone","","",225,[[["self"]],["pub"]]],[11,"default","","",225,[[],["self"]]],[11,"to_tokens","","",225,[[["self"],["tokenstream"]]]],[11,"parse","","",225,[[["parsestream"]],["result"]]],[11,"peek","","",225,[[["cursor"]],["bool"]]],[11,"display","","",225,[[],["str"]]],[11,"clone","","",226,[[["self"]],["ref"]]],[11,"default","","",226,[[],["self"]]],[11,"to_tokens","","",226,[[["self"],["tokenstream"]]]],[11,"parse","","",226,[[["parsestream"]],["result"]]],[11,"peek","","",226,[[["cursor"]],["bool"]]],[11,"display","","",226,[[],["str"]]],[11,"clone","","",227,[[["self"]],["return"]]],[11,"default","","",227,[[],["self"]]],[11,"to_tokens","","",227,[[["self"],["tokenstream"]]]],[11,"parse","","",227,[[["parsestream"]],["result"]]],[11,"peek","","",227,[[["cursor"]],["bool"]]],[11,"display","","",227,[[],["str"]]],[11,"clone","","",228,[[["self"]],["selftype"]]],[11,"default","","",228,[[],["self"]]],[11,"to_tokens","","",228,[[["self"],["tokenstream"]]]],[11,"parse","","",228,[[["parsestream"]],["result"]]],[11,"peek","","",228,[[["cursor"]],["bool"]]],[11,"display","","",228,[[],["str"]]],[11,"clone","","",229,[[["self"]],["selfvalue"]]],[11,"default","","",229,[[],["self"]]],[11,"to_tokens","","",229,[[["self"],["tokenstream"]]]],[11,"parse","","",229,[[["parsestream"]],["result"]]],[11,"peek","","",229,[[["cursor"]],["bool"]]],[11,"display","","",229,[[],["str"]]],[11,"clone","","",230,[[["self"]],["static"]]],[11,"default","","",230,[[],["self"]]],[11,"to_tokens","","",230,[[["self"],["tokenstream"]]]],[11,"parse","","",230,[[["parsestream"]],["result"]]],[11,"peek","","",230,[[["cursor"]],["bool"]]],[11,"display","","",230,[[],["str"]]],[11,"clone","","",231,[[["self"]],["struct"]]],[11,"default","","",231,[[],["self"]]],[11,"to_tokens","","",231,[[["self"],["tokenstream"]]]],[11,"parse","","",231,[[["parsestream"]],["result"]]],[11,"peek","","",231,[[["cursor"]],["bool"]]],[11,"display","","",231,[[],["str"]]],[11,"clone","","",232,[[["self"]],["super"]]],[11,"default","","",232,[[],["self"]]],[11,"to_tokens","","",232,[[["self"],["tokenstream"]]]],[11,"parse","","",232,[[["parsestream"]],["result"]]],[11,"peek","","",232,[[["cursor"]],["bool"]]],[11,"display","","",232,[[],["str"]]],[11,"clone","","",233,[[["self"]],["trait"]]],[11,"default","","",233,[[],["self"]]],[11,"to_tokens","","",233,[[["self"],["tokenstream"]]]],[11,"parse","","",233,[[["parsestream"]],["result"]]],[11,"peek","","",233,[[["cursor"]],["bool"]]],[11,"display","","",233,[[],["str"]]],[11,"clone","","",234,[[["self"]],["try"]]],[11,"default","","",234,[[],["self"]]],[11,"to_tokens","","",234,[[["self"],["tokenstream"]]]],[11,"parse","","",234,[[["parsestream"]],["result"]]],[11,"peek","","",234,[[["cursor"]],["bool"]]],[11,"display","","",234,[[],["str"]]],[11,"clone","","",235,[[["self"]],["type"]]],[11,"default","","",235,[[],["self"]]],[11,"to_tokens","","",235,[[["self"],["tokenstream"]]]],[11,"parse","","",235,[[["parsestream"]],["result"]]],[11,"peek","","",235,[[["cursor"]],["bool"]]],[11,"display","","",235,[[],["str"]]],[11,"clone","","",236,[[["self"]],["typeof"]]],[11,"default","","",236,[[],["self"]]],[11,"to_tokens","","",236,[[["self"],["tokenstream"]]]],[11,"parse","","",236,[[["parsestream"]],["result"]]],[11,"peek","","",236,[[["cursor"]],["bool"]]],[11,"display","","",236,[[],["str"]]],[11,"clone","","",237,[[["self"]],["union"]]],[11,"default","","",237,[[],["self"]]],[11,"to_tokens","","",237,[[["self"],["tokenstream"]]]],[11,"parse","","",237,[[["parsestream"]],["result"]]],[11,"peek","","",237,[[["cursor"]],["bool"]]],[11,"display","","",237,[[],["str"]]],[11,"clone","","",238,[[["self"]],["unsafe"]]],[11,"default","","",238,[[],["self"]]],[11,"to_tokens","","",238,[[["self"],["tokenstream"]]]],[11,"parse","","",238,[[["parsestream"]],["result"]]],[11,"peek","","",238,[[["cursor"]],["bool"]]],[11,"display","","",238,[[],["str"]]],[11,"clone","","",239,[[["self"]],["unsized"]]],[11,"default","","",239,[[],["self"]]],[11,"to_tokens","","",239,[[["self"],["tokenstream"]]]],[11,"parse","","",239,[[["parsestream"]],["result"]]],[11,"peek","","",239,[[["cursor"]],["bool"]]],[11,"display","","",239,[[],["str"]]],[11,"clone","","",240,[[["self"]],["use"]]],[11,"default","","",240,[[],["self"]]],[11,"to_tokens","","",240,[[["self"],["tokenstream"]]]],[11,"parse","","",240,[[["parsestream"]],["result"]]],[11,"peek","","",240,[[["cursor"]],["bool"]]],[11,"display","","",240,[[],["str"]]],[11,"clone","","",241,[[["self"]],["virtual"]]],[11,"default","","",241,[[],["self"]]],[11,"to_tokens","","",241,[[["self"],["tokenstream"]]]],[11,"parse","","",241,[[["parsestream"]],["result"]]],[11,"peek","","",241,[[["cursor"]],["bool"]]],[11,"display","","",241,[[],["str"]]],[11,"clone","","",242,[[["self"]],["where"]]],[11,"default","","",242,[[],["self"]]],[11,"to_tokens","","",242,[[["self"],["tokenstream"]]]],[11,"parse","","",242,[[["parsestream"]],["result"]]],[11,"peek","","",242,[[["cursor"]],["bool"]]],[11,"display","","",242,[[],["str"]]],[11,"clone","","",243,[[["self"]],["while"]]],[11,"default","","",243,[[],["self"]]],[11,"to_tokens","","",243,[[["self"],["tokenstream"]]]],[11,"parse","","",243,[[["parsestream"]],["result"]]],[11,"peek","","",243,[[["cursor"]],["bool"]]],[11,"display","","",243,[[],["str"]]],[11,"clone","","",244,[[["self"]],["yield"]]],[11,"default","","",244,[[],["self"]]],[11,"to_tokens","","",244,[[["self"],["tokenstream"]]]],[11,"parse","","",244,[[["parsestream"]],["result"]]],[11,"peek","","",244,[[["cursor"]],["bool"]]],[11,"display","","",244,[[],["str"]]],[11,"clone","","",245,[[["self"]],["add"]]],[11,"default","","",245,[[],["self"]]],[11,"to_tokens","","",245,[[["self"],["tokenstream"]]]],[11,"parse","","",245,[[["parsestream"]],["result"]]],[11,"peek","","",245,[[["cursor"]],["bool"]]],[11,"display","","",245,[[],["str"]]],[11,"clone","","",246,[[["self"]],["addeq"]]],[11,"default","","",246,[[],["self"]]],[11,"to_tokens","","",246,[[["self"],["tokenstream"]]]],[11,"parse","","",246,[[["parsestream"]],["result"]]],[11,"peek","","",246,[[["cursor"]],["bool"]]],[11,"display","","",246,[[],["str"]]],[11,"clone","","",247,[[["self"]],["and"]]],[11,"default","","",247,[[],["self"]]],[11,"to_tokens","","",247,[[["self"],["tokenstream"]]]],[11,"parse","","",247,[[["parsestream"]],["result"]]],[11,"peek","","",247,[[["cursor"]],["bool"]]],[11,"display","","",247,[[],["str"]]],[11,"clone","","",248,[[["self"]],["andand"]]],[11,"default","","",248,[[],["self"]]],[11,"to_tokens","","",248,[[["self"],["tokenstream"]]]],[11,"parse","","",248,[[["parsestream"]],["result"]]],[11,"peek","","",248,[[["cursor"]],["bool"]]],[11,"display","","",248,[[],["str"]]],[11,"clone","","",249,[[["self"]],["andeq"]]],[11,"default","","",249,[[],["self"]]],[11,"to_tokens","","",249,[[["self"],["tokenstream"]]]],[11,"parse","","",249,[[["parsestream"]],["result"]]],[11,"peek","","",249,[[["cursor"]],["bool"]]],[11,"display","","",249,[[],["str"]]],[11,"clone","","",250,[[["self"]],["at"]]],[11,"default","","",250,[[],["self"]]],[11,"to_tokens","","",250,[[["self"],["tokenstream"]]]],[11,"parse","","",250,[[["parsestream"]],["result"]]],[11,"peek","","",250,[[["cursor"]],["bool"]]],[11,"display","","",250,[[],["str"]]],[11,"clone","","",251,[[["self"]],["bang"]]],[11,"default","","",251,[[],["self"]]],[11,"to_tokens","","",251,[[["self"],["tokenstream"]]]],[11,"parse","","",251,[[["parsestream"]],["result"]]],[11,"peek","","",251,[[["cursor"]],["bool"]]],[11,"display","","",251,[[],["str"]]],[11,"clone","","",252,[[["self"]],["caret"]]],[11,"default","","",252,[[],["self"]]],[11,"to_tokens","","",252,[[["self"],["tokenstream"]]]],[11,"parse","","",252,[[["parsestream"]],["result"]]],[11,"peek","","",252,[[["cursor"]],["bool"]]],[11,"display","","",252,[[],["str"]]],[11,"clone","","",253,[[["self"]],["careteq"]]],[11,"default","","",253,[[],["self"]]],[11,"to_tokens","","",253,[[["self"],["tokenstream"]]]],[11,"parse","","",253,[[["parsestream"]],["result"]]],[11,"peek","","",253,[[["cursor"]],["bool"]]],[11,"display","","",253,[[],["str"]]],[11,"clone","","",254,[[["self"]],["colon"]]],[11,"default","","",254,[[],["self"]]],[11,"to_tokens","","",254,[[["self"],["tokenstream"]]]],[11,"parse","","",254,[[["parsestream"]],["result"]]],[11,"peek","","",254,[[["cursor"]],["bool"]]],[11,"display","","",254,[[],["str"]]],[11,"clone","","",255,[[["self"]],["colon2"]]],[11,"default","","",255,[[],["self"]]],[11,"to_tokens","","",255,[[["self"],["tokenstream"]]]],[11,"parse","","",255,[[["parsestream"]],["result"]]],[11,"peek","","",255,[[["cursor"]],["bool"]]],[11,"display","","",255,[[],["str"]]],[11,"clone","","",256,[[["self"]],["comma"]]],[11,"default","","",256,[[],["self"]]],[11,"to_tokens","","",256,[[["self"],["tokenstream"]]]],[11,"parse","","",256,[[["parsestream"]],["result"]]],[11,"peek","","",256,[[["cursor"]],["bool"]]],[11,"display","","",256,[[],["str"]]],[11,"clone","","",257,[[["self"]],["div"]]],[11,"default","","",257,[[],["self"]]],[11,"to_tokens","","",257,[[["self"],["tokenstream"]]]],[11,"parse","","",257,[[["parsestream"]],["result"]]],[11,"peek","","",257,[[["cursor"]],["bool"]]],[11,"display","","",257,[[],["str"]]],[11,"clone","","",258,[[["self"]],["diveq"]]],[11,"default","","",258,[[],["self"]]],[11,"to_tokens","","",258,[[["self"],["tokenstream"]]]],[11,"parse","","",258,[[["parsestream"]],["result"]]],[11,"peek","","",258,[[["cursor"]],["bool"]]],[11,"display","","",258,[[],["str"]]],[11,"clone","","",259,[[["self"]],["dollar"]]],[11,"default","","",259,[[],["self"]]],[11,"to_tokens","","",259,[[["self"],["tokenstream"]]]],[11,"parse","","",259,[[["parsestream"]],["result"]]],[11,"peek","","",259,[[["cursor"]],["bool"]]],[11,"display","","",259,[[],["str"]]],[11,"clone","","",260,[[["self"]],["dot"]]],[11,"default","","",260,[[],["self"]]],[11,"to_tokens","","",260,[[["self"],["tokenstream"]]]],[11,"parse","","",260,[[["parsestream"]],["result"]]],[11,"peek","","",260,[[["cursor"]],["bool"]]],[11,"display","","",260,[[],["str"]]],[11,"clone","","",261,[[["self"]],["dot2"]]],[11,"default","","",261,[[],["self"]]],[11,"to_tokens","","",261,[[["self"],["tokenstream"]]]],[11,"parse","","",261,[[["parsestream"]],["result"]]],[11,"peek","","",261,[[["cursor"]],["bool"]]],[11,"display","","",261,[[],["str"]]],[11,"clone","","",262,[[["self"]],["dot3"]]],[11,"default","","",262,[[],["self"]]],[11,"to_tokens","","",262,[[["self"],["tokenstream"]]]],[11,"parse","","",262,[[["parsestream"]],["result"]]],[11,"peek","","",262,[[["cursor"]],["bool"]]],[11,"display","","",262,[[],["str"]]],[11,"clone","","",263,[[["self"]],["dotdoteq"]]],[11,"default","","",263,[[],["self"]]],[11,"to_tokens","","",263,[[["self"],["tokenstream"]]]],[11,"parse","","",263,[[["parsestream"]],["result"]]],[11,"peek","","",263,[[["cursor"]],["bool"]]],[11,"display","","",263,[[],["str"]]],[11,"clone","","",264,[[["self"]],["eq"]]],[11,"default","","",264,[[],["self"]]],[11,"to_tokens","","",264,[[["self"],["tokenstream"]]]],[11,"parse","","",264,[[["parsestream"]],["result"]]],[11,"peek","","",264,[[["cursor"]],["bool"]]],[11,"display","","",264,[[],["str"]]],[11,"clone","","",265,[[["self"]],["eqeq"]]],[11,"default","","",265,[[],["self"]]],[11,"to_tokens","","",265,[[["self"],["tokenstream"]]]],[11,"parse","","",265,[[["parsestream"]],["result"]]],[11,"peek","","",265,[[["cursor"]],["bool"]]],[11,"display","","",265,[[],["str"]]],[11,"clone","","",266,[[["self"]],["ge"]]],[11,"default","","",266,[[],["self"]]],[11,"to_tokens","","",266,[[["self"],["tokenstream"]]]],[11,"parse","","",266,[[["parsestream"]],["result"]]],[11,"peek","","",266,[[["cursor"]],["bool"]]],[11,"display","","",266,[[],["str"]]],[11,"clone","","",267,[[["self"]],["gt"]]],[11,"default","","",267,[[],["self"]]],[11,"to_tokens","","",267,[[["self"],["tokenstream"]]]],[11,"parse","","",267,[[["parsestream"]],["result"]]],[11,"peek","","",267,[[["cursor"]],["bool"]]],[11,"display","","",267,[[],["str"]]],[11,"clone","","",268,[[["self"]],["le"]]],[11,"default","","",268,[[],["self"]]],[11,"to_tokens","","",268,[[["self"],["tokenstream"]]]],[11,"parse","","",268,[[["parsestream"]],["result"]]],[11,"peek","","",268,[[["cursor"]],["bool"]]],[11,"display","","",268,[[],["str"]]],[11,"clone","","",269,[[["self"]],["lt"]]],[11,"default","","",269,[[],["self"]]],[11,"to_tokens","","",269,[[["self"],["tokenstream"]]]],[11,"parse","","",269,[[["parsestream"]],["result"]]],[11,"peek","","",269,[[["cursor"]],["bool"]]],[11,"display","","",269,[[],["str"]]],[11,"clone","","",270,[[["self"]],["muleq"]]],[11,"default","","",270,[[],["self"]]],[11,"to_tokens","","",270,[[["self"],["tokenstream"]]]],[11,"parse","","",270,[[["parsestream"]],["result"]]],[11,"peek","","",270,[[["cursor"]],["bool"]]],[11,"display","","",270,[[],["str"]]],[11,"clone","","",271,[[["self"]],["ne"]]],[11,"default","","",271,[[],["self"]]],[11,"to_tokens","","",271,[[["self"],["tokenstream"]]]],[11,"parse","","",271,[[["parsestream"]],["result"]]],[11,"peek","","",271,[[["cursor"]],["bool"]]],[11,"display","","",271,[[],["str"]]],[11,"clone","","",272,[[["self"]],["or"]]],[11,"default","","",272,[[],["self"]]],[11,"to_tokens","","",272,[[["self"],["tokenstream"]]]],[11,"parse","","",272,[[["parsestream"]],["result"]]],[11,"peek","","",272,[[["cursor"]],["bool"]]],[11,"display","","",272,[[],["str"]]],[11,"clone","","",273,[[["self"]],["oreq"]]],[11,"default","","",273,[[],["self"]]],[11,"to_tokens","","",273,[[["self"],["tokenstream"]]]],[11,"parse","","",273,[[["parsestream"]],["result"]]],[11,"peek","","",273,[[["cursor"]],["bool"]]],[11,"display","","",273,[[],["str"]]],[11,"clone","","",274,[[["self"]],["oror"]]],[11,"default","","",274,[[],["self"]]],[11,"to_tokens","","",274,[[["self"],["tokenstream"]]]],[11,"parse","","",274,[[["parsestream"]],["result"]]],[11,"peek","","",274,[[["cursor"]],["bool"]]],[11,"display","","",274,[[],["str"]]],[11,"clone","","",275,[[["self"]],["pound"]]],[11,"default","","",275,[[],["self"]]],[11,"to_tokens","","",275,[[["self"],["tokenstream"]]]],[11,"parse","","",275,[[["parsestream"]],["result"]]],[11,"peek","","",275,[[["cursor"]],["bool"]]],[11,"display","","",275,[[],["str"]]],[11,"clone","","",276,[[["self"]],["question"]]],[11,"default","","",276,[[],["self"]]],[11,"to_tokens","","",276,[[["self"],["tokenstream"]]]],[11,"parse","","",276,[[["parsestream"]],["result"]]],[11,"peek","","",276,[[["cursor"]],["bool"]]],[11,"display","","",276,[[],["str"]]],[11,"clone","","",277,[[["self"]],["rarrow"]]],[11,"default","","",277,[[],["self"]]],[11,"to_tokens","","",277,[[["self"],["tokenstream"]]]],[11,"parse","","",277,[[["parsestream"]],["result"]]],[11,"peek","","",277,[[["cursor"]],["bool"]]],[11,"display","","",277,[[],["str"]]],[11,"clone","","",278,[[["self"]],["larrow"]]],[11,"default","","",278,[[],["self"]]],[11,"to_tokens","","",278,[[["self"],["tokenstream"]]]],[11,"parse","","",278,[[["parsestream"]],["result"]]],[11,"peek","","",278,[[["cursor"]],["bool"]]],[11,"display","","",278,[[],["str"]]],[11,"clone","","",279,[[["self"]],["rem"]]],[11,"default","","",279,[[],["self"]]],[11,"to_tokens","","",279,[[["self"],["tokenstream"]]]],[11,"parse","","",279,[[["parsestream"]],["result"]]],[11,"peek","","",279,[[["cursor"]],["bool"]]],[11,"display","","",279,[[],["str"]]],[11,"clone","","",280,[[["self"]],["remeq"]]],[11,"default","","",280,[[],["self"]]],[11,"to_tokens","","",280,[[["self"],["tokenstream"]]]],[11,"parse","","",280,[[["parsestream"]],["result"]]],[11,"peek","","",280,[[["cursor"]],["bool"]]],[11,"display","","",280,[[],["str"]]],[11,"clone","","",281,[[["self"]],["fatarrow"]]],[11,"default","","",281,[[],["self"]]],[11,"to_tokens","","",281,[[["self"],["tokenstream"]]]],[11,"parse","","",281,[[["parsestream"]],["result"]]],[11,"peek","","",281,[[["cursor"]],["bool"]]],[11,"display","","",281,[[],["str"]]],[11,"clone","","",282,[[["self"]],["semi"]]],[11,"default","","",282,[[],["self"]]],[11,"to_tokens","","",282,[[["self"],["tokenstream"]]]],[11,"parse","","",282,[[["parsestream"]],["result"]]],[11,"peek","","",282,[[["cursor"]],["bool"]]],[11,"display","","",282,[[],["str"]]],[11,"clone","","",283,[[["self"]],["shl"]]],[11,"default","","",283,[[],["self"]]],[11,"to_tokens","","",283,[[["self"],["tokenstream"]]]],[11,"parse","","",283,[[["parsestream"]],["result"]]],[11,"peek","","",283,[[["cursor"]],["bool"]]],[11,"display","","",283,[[],["str"]]],[11,"clone","","",284,[[["self"]],["shleq"]]],[11,"default","","",284,[[],["self"]]],[11,"to_tokens","","",284,[[["self"],["tokenstream"]]]],[11,"parse","","",284,[[["parsestream"]],["result"]]],[11,"peek","","",284,[[["cursor"]],["bool"]]],[11,"display","","",284,[[],["str"]]],[11,"clone","","",285,[[["self"]],["shr"]]],[11,"default","","",285,[[],["self"]]],[11,"to_tokens","","",285,[[["self"],["tokenstream"]]]],[11,"parse","","",285,[[["parsestream"]],["result"]]],[11,"peek","","",285,[[["cursor"]],["bool"]]],[11,"display","","",285,[[],["str"]]],[11,"clone","","",286,[[["self"]],["shreq"]]],[11,"default","","",286,[[],["self"]]],[11,"to_tokens","","",286,[[["self"],["tokenstream"]]]],[11,"parse","","",286,[[["parsestream"]],["result"]]],[11,"peek","","",286,[[["cursor"]],["bool"]]],[11,"display","","",286,[[],["str"]]],[11,"clone","","",287,[[["self"]],["star"]]],[11,"default","","",287,[[],["self"]]],[11,"to_tokens","","",287,[[["self"],["tokenstream"]]]],[11,"parse","","",287,[[["parsestream"]],["result"]]],[11,"peek","","",287,[[["cursor"]],["bool"]]],[11,"display","","",287,[[],["str"]]],[11,"clone","","",288,[[["self"]],["sub"]]],[11,"default","","",288,[[],["self"]]],[11,"to_tokens","","",288,[[["self"],["tokenstream"]]]],[11,"parse","","",288,[[["parsestream"]],["result"]]],[11,"peek","","",288,[[["cursor"]],["bool"]]],[11,"display","","",288,[[],["str"]]],[11,"clone","","",289,[[["self"]],["subeq"]]],[11,"default","","",289,[[],["self"]]],[11,"to_tokens","","",289,[[["self"],["tokenstream"]]]],[11,"parse","","",289,[[["parsestream"]],["result"]]],[11,"peek","","",289,[[["cursor"]],["bool"]]],[11,"display","","",289,[[],["str"]]],[11,"clone","","",290,[[["self"]],["tilde"]]],[11,"default","","",290,[[],["self"]]],[11,"to_tokens","","",290,[[["self"],["tokenstream"]]]],[11,"parse","","",290,[[["parsestream"]],["result"]]],[11,"peek","","",290,[[["cursor"]],["bool"]]],[11,"display","","",290,[[],["str"]]],[11,"clone","","",291,[[["self"]],["brace"]]],[11,"default","","",291,[[],["self"]]],[11,"surround","","",291,[[["self"],["tokenstream"],["f"]]]],[11,"clone","","",292,[[["self"]],["bracket"]]],[11,"default","","",292,[[],["self"]]],[11,"surround","","",292,[[["self"],["tokenstream"],["f"]]]],[11,"clone","","",293,[[["self"]],["paren"]]],[11,"default","","",293,[[],["self"]]],[11,"surround","","",293,[[["self"],["tokenstream"],["f"]]]],[11,"clone","","",294,[[["self"]],["group"]]],[11,"default","","",294,[[],["self"]]],[11,"surround","","",294,[[["self"],["tokenstream"],["f"]]]],[11,"parse","syn","",301,[[["parsestream"]],["result"]]],[11,"peek","","",301,[[["cursor"]],["bool"]]],[11,"display","","",301,[[],["str"]]],[11,"from","","",301,[[["selfvalue"]],["ident"]]],[11,"from","","",301,[[["selftype"]],["ident"]]],[11,"from","","",301,[[["super"]],["ident"]]],[11,"from","","",301,[[["crate"]],["ident"]]],[11,"from","","",301,[[["extern"]],["ident"]]],[11,"from","","",301,[[["underscore"]],["ident"]]],[11,"parse","","",159,[[["parsestream"]],["result"]]],[11,"parse","","",1,[[["parsestream"]],["result"]]],[11,"parse","","",2,[[["parsestream"]],["result"]]],[11,"parse","","",160,[[["parsestream"]],["result"]]],[11,"to_tokens","","",0,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",1,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",2,[[["self"],["tokenstream"]]]],[11,"clone","","",0,[[["self"]],["attribute"]]],[11,"parse_meta","","Parses the tokens after the path as a `Meta` if possible.",0,[[["self"]],["result",["meta"]]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream"]],["result",["vec"]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream"]],["result",["vec"]]]],[11,"clone","","",158,[[["self"]],["attrstyle"]]],[11,"clone","","",159,[[["self"]],["meta"]]],[11,"from","","",159,[[["ident"]],["meta"]]],[11,"clone","","",1,[[["self"]],["metalist"]]],[11,"from","","",159,[[["metalist"]],["meta"]]],[11,"clone","","",2,[[["self"]],["metanamevalue"]]],[11,"from","","",159,[[["metanamevalue"]],["meta"]]],[11,"to_tokens","","",159,[[["self"],["tokenstream"]]]],[11,"name","","Returns the identifier that begins this structured meta item.",159,[[["self"]],["ident"]]],[11,"clone","","",160,[[["self"]],["nestedmeta"]]],[11,"from","","",160,[[["meta"]],["nestedmeta"]]],[11,"from","","",160,[[["lit"]],["nestedmeta"]]],[11,"to_tokens","","",160,[[["self"],["tokenstream"]]]],[11,"parse","","",6,[[["parsestream"]],["result"]]],[11,"parse","","",4,[[["parsestream"]],["result"]]],[11,"parse","","",5,[[["parsestream"]],["result"]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream"]],["result"]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream"]],["result"]]],[11,"parse","","",162,[[["parsestream"]],["result"]]],[11,"to_tokens","","",6,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",4,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",5,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",3,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",8,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",7,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",9,[[["self"],["tokenstream"]]]],[11,"clone","","",6,[[["self"]],["variant"]]],[11,"clone","","",161,[[["self"]],["fields"]]],[11,"clone","","",4,[[["self"]],["fieldsnamed"]]],[11,"from","","",161,[[["fieldsnamed"]],["fields"]]],[11,"clone","","",5,[[["self"]],["fieldsunnamed"]]],[11,"from","","",161,[[["fieldsunnamed"]],["fields"]]],[11,"to_tokens","","",161,[[["self"],["tokenstream"]]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this object. This iterator can be used to iterate over a named or unnamed struct or variant's fields uniformly.",161,[[["self"]],["iter",["field"]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items in this object. This iterator can be used to iterate over a named or unnamed struct or variant's fields uniformly.",161,[[["self"]],["itermut",["field"]]]],[11,"clone","","",3,[[["self"]],["field"]]],[11,"clone","","",162,[[["self"]],["visibility"]]],[11,"clone","","",8,[[["self"]],["vispublic"]]],[11,"from","","",162,[[["vispublic"]],["visibility"]]],[11,"clone","","",7,[[["self"]],["viscrate"]]],[11,"from","","",162,[[["viscrate"]],["visibility"]]],[11,"clone","","",9,[[["self"]],["visrestricted"]]],[11,"from","","",162,[[["visrestricted"]],["visibility"]]],[11,"to_tokens","","",162,[[["self"],["tokenstream"]]]],[11,"parse","","",163,[[["parsestream"]],["result"]]],[11,"parse","","",55,[[["parsestream"]],["result"]]],[11,"parse","","",54,[[["parsestream"]],["result"]]],[11,"parse","","",167,[[["parsestream"]],["result"]]],[11,"parse","","",35,[[["parsestream"]],["result"]]],[11,"parse","","",52,[[["parsestream"]],["result"]]],[11,"parse_within","","Parse the body of a block as zero or more statements, possibly including one trailing expression.",52,[[["parsestream"]],["result",["vec"]]]],[11,"parse","","",168,[[["parsestream"]],["result"]]],[11,"parse","","",166,[[["parsestream"]],["result"]]],[11,"parse","","",164,[[["parsestream"]],["result"]]],[11,"parse","","",51,[[["parsestream"]],["result",["arm"]]]],[11,"parse","","",50,[[["parsestream"]],["result"]]],[11,"to_tokens","","",16,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",26,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",10,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",18,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",33,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",57,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",165,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",43,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",14,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",45,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",29,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",19,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",44,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",28,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",25,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",48,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",23,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",30,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",32,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",13,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",42,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",49,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",20,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",46,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",15,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",11,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",12,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",22,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",164,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",50,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",27,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",36,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",35,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",37,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",17,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",21,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",39,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",31,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",40,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",38,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",24,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",34,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",41,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",47,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",55,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",54,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",51,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",70,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",59,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",66,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",68,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",62,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",67,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",58,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",64,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",60,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",63,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",65,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",61,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",69,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",53,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",52,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",168,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",56,[[["self"],["tokenstream"]]]],[11,"clone","","",163,[[["self"]],["expr"]]],[11,"clone","","",16,[[["self"]],["exprbox"]]],[11,"from","","",163,[[["exprbox"]],["expr"]]],[11,"clone","","",26,[[["self"]],["exprinplace"]]],[11,"from","","",163,[[["exprinplace"]],["expr"]]],[11,"clone","","",10,[[["self"]],["exprarray"]]],[11,"from","","",163,[[["exprarray"]],["expr"]]],[11,"clone","","",18,[[["self"]],["exprcall"]]],[11,"from","","",163,[[["exprcall"]],["expr"]]],[11,"clone","","",33,[[["self"]],["exprmethodcall"]]],[11,"from","","",163,[[["exprmethodcall"]],["expr"]]],[11,"clone","","",43,[[["self"]],["exprtuple"]]],[11,"from","","",163,[[["exprtuple"]],["expr"]]],[11,"clone","","",14,[[["self"]],["exprbinary"]]],[11,"from","","",163,[[["exprbinary"]],["expr"]]],[11,"clone","","",45,[[["self"]],["exprunary"]]],[11,"from","","",163,[[["exprunary"]],["expr"]]],[11,"clone","","",29,[[["self"]],["exprlit"]]],[11,"from","","",163,[[["exprlit"]],["expr"]]],[11,"clone","","",19,[[["self"]],["exprcast"]]],[11,"from","","",163,[[["exprcast"]],["expr"]]],[11,"clone","","",44,[[["self"]],["exprtype"]]],[11,"from","","",163,[[["exprtype"]],["expr"]]],[11,"clone","","",28,[[["self"]],["exprlet"]]],[11,"from","","",163,[[["exprlet"]],["expr"]]],[11,"clone","","",25,[[["self"]],["exprif"]]],[11,"from","","",163,[[["exprif"]],["expr"]]],[11,"clone","","",48,[[["self"]],["exprwhile"]]],[11,"from","","",163,[[["exprwhile"]],["expr"]]],[11,"clone","","",23,[[["self"]],["exprforloop"]]],[11,"from","","",163,[[["exprforloop"]],["expr"]]],[11,"clone","","",30,[[["self"]],["exprloop"]]],[11,"from","","",163,[[["exprloop"]],["expr"]]],[11,"clone","","",32,[[["self"]],["exprmatch"]]],[11,"from","","",163,[[["exprmatch"]],["expr"]]],[11,"clone","","",20,[[["self"]],["exprclosure"]]],[11,"from","","",163,[[["exprclosure"]],["expr"]]],[11,"clone","","",46,[[["self"]],["exprunsafe"]]],[11,"from","","",163,[[["exprunsafe"]],["expr"]]],[11,"clone","","",15,[[["self"]],["exprblock"]]],[11,"from","","",163,[[["exprblock"]],["expr"]]],[11,"clone","","",11,[[["self"]],["exprassign"]]],[11,"from","","",163,[[["exprassign"]],["expr"]]],[11,"clone","","",12,[[["self"]],["exprassignop"]]],[11,"from","","",163,[[["exprassignop"]],["expr"]]],[11,"clone","","",22,[[["self"]],["exprfield"]]],[11,"from","","",163,[[["exprfield"]],["expr"]]],[11,"clone","","",27,[[["self"]],["exprindex"]]],[11,"from","","",163,[[["exprindex"]],["expr"]]],[11,"clone","","",36,[[["self"]],["exprrange"]]],[11,"from","","",163,[[["exprrange"]],["expr"]]],[11,"clone","","",35,[[["self"]],["exprpath"]]],[11,"from","","",163,[[["exprpath"]],["expr"]]],[11,"clone","","",37,[[["self"]],["exprreference"]]],[11,"from","","",163,[[["exprreference"]],["expr"]]],[11,"clone","","",17,[[["self"]],["exprbreak"]]],[11,"from","","",163,[[["exprbreak"]],["expr"]]],[11,"clone","","",21,[[["self"]],["exprcontinue"]]],[11,"from","","",163,[[["exprcontinue"]],["expr"]]],[11,"clone","","",39,[[["self"]],["exprreturn"]]],[11,"from","","",163,[[["exprreturn"]],["expr"]]],[11,"clone","","",31,[[["self"]],["exprmacro"]]],[11,"from","","",163,[[["exprmacro"]],["expr"]]],[11,"clone","","",40,[[["self"]],["exprstruct"]]],[11,"from","","",163,[[["exprstruct"]],["expr"]]],[11,"clone","","",38,[[["self"]],["exprrepeat"]]],[11,"from","","",163,[[["exprrepeat"]],["expr"]]],[11,"clone","","",34,[[["self"]],["exprparen"]]],[11,"from","","",163,[[["exprparen"]],["expr"]]],[11,"clone","","",24,[[["self"]],["exprgroup"]]],[11,"from","","",163,[[["exprgroup"]],["expr"]]],[11,"clone","","",41,[[["self"]],["exprtry"]]],[11,"from","","",163,[[["exprtry"]],["expr"]]],[11,"clone","","",13,[[["self"]],["exprasync"]]],[11,"from","","",163,[[["exprasync"]],["expr"]]],[11,"clone","","",42,[[["self"]],["exprtryblock"]]],[11,"from","","",163,[[["exprtryblock"]],["expr"]]],[11,"clone","","",49,[[["self"]],["expryield"]]],[11,"from","","",163,[[["expryield"]],["expr"]]],[11,"clone","","",47,[[["self"]],["exprverbatim"]]],[11,"from","","",163,[[["exprverbatim"]],["expr"]]],[11,"to_tokens","","",163,[[["self"],["tokenstream"]]]],[11,"clone","","",164,[[["self"]],["member"]]],[11,"clone","","",50,[[["self"]],["index"]]],[11,"from","","",50,[[["usize"]],["index"]]],[11,"clone","","",57,[[["self"]],["methodturbofish"]]],[11,"clone","","",165,[[["self"]],["genericmethodargument"]]],[11,"clone","","",54,[[["self"]],["fieldvalue"]]],[11,"clone","","",55,[[["self"]],["label"]]],[11,"clone","","",52,[[["self"]],["block"]]],[11,"clone","","",168,[[["self"]],["stmt"]]],[11,"clone","","",56,[[["self"]],["local"]]],[11,"clone","","",166,[[["self"]],["pat"]]],[11,"clone","","",70,[[["self"]],["patwild"]]],[11,"from","","",166,[[["patwild"]],["pat"]]],[11,"clone","","",59,[[["self"]],["patident"]]],[11,"from","","",166,[[["patident"]],["pat"]]],[11,"clone","","",66,[[["self"]],["patstruct"]]],[11,"from","","",166,[[["patstruct"]],["pat"]]],[11,"clone","","",68,[[["self"]],["pattuplestruct"]]],[11,"from","","",166,[[["pattuplestruct"]],["pat"]]],[11,"clone","","",62,[[["self"]],["patpath"]]],[11,"from","","",166,[[["patpath"]],["pat"]]],[11,"clone","","",67,[[["self"]],["pattuple"]]],[11,"from","","",166,[[["pattuple"]],["pat"]]],[11,"clone","","",58,[[["self"]],["patbox"]]],[11,"from","","",166,[[["patbox"]],["pat"]]],[11,"clone","","",64,[[["self"]],["patref"]]],[11,"from","","",166,[[["patref"]],["pat"]]],[11,"clone","","",60,[[["self"]],["patlit"]]],[11,"from","","",166,[[["patlit"]],["pat"]]],[11,"clone","","",63,[[["self"]],["patrange"]]],[11,"from","","",166,[[["patrange"]],["pat"]]],[11,"clone","","",65,[[["self"]],["patslice"]]],[11,"from","","",166,[[["patslice"]],["pat"]]],[11,"clone","","",61,[[["self"]],["patmacro"]]],[11,"from","","",166,[[["patmacro"]],["pat"]]],[11,"clone","","",69,[[["self"]],["patverbatim"]]],[11,"from","","",166,[[["patverbatim"]],["pat"]]],[11,"to_tokens","","",166,[[["self"],["tokenstream"]]]],[11,"clone","","",51,[[["self"]],["arm"]]],[11,"clone","","",167,[[["self"]],["rangelimits"]]],[11,"clone","","",53,[[["self"]],["fieldpat"]]],[11,"parse","","",73,[[["parsestream"]],["result"]]],[11,"parse","","",169,[[["parsestream"]],["result"]]],[11,"parse","","",74,[[["parsestream"]],["result"]]],[11,"parse","","",71,[[["parsestream"]],["result"]]],[11,"parse","","",79,[[["parsestream"]],["result"]]],[11,"parse","","",171,[[["parsestream"]],["result"]]],[11,"parse","","",78,[[["parsestream"]],["result"]]],[11,"parse","","",170,[[["parsestream"]],["result"]]],[11,"parse","","",72,[[["parsestream"]],["result"]]],[11,"parse","","",80,[[["parsestream"]],["result"]]],[11,"parse","","",172,[[["parsestream"]],["result"]]],[11,"to_tokens","","",73,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",302,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",303,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",304,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",71,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",74,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",79,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",78,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",170,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",72,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",80,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",77,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",76,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",75,[[["self"],["tokenstream"]]]],[11,"default","","",73,[[],["generics"]]],[11,"clone","","",73,[[["self"]],["generics"]]],[11,"clone","","",169,[[["self"]],["genericparam"]]],[11,"clone","","",79,[[["self"]],["typeparam"]]],[11,"from","","",169,[[["typeparam"]],["genericparam"]]],[11,"clone","","",74,[[["self"]],["lifetimedef"]]],[11,"from","","",169,[[["lifetimedef"]],["genericparam"]]],[11,"clone","","",72,[[["self"]],["constparam"]]],[11,"from","","",169,[[["constparam"]],["genericparam"]]],[11,"to_tokens","","",169,[[["self"],["tokenstream"]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type parameters in `self.params`.",73,[[["self"]],["typeparams"]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type parameters in `self.params`.",73,[[["self"]],["typeparamsmut"]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime parameters in `self.params`.",73,[[["self"]],["lifetimes"]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the lifetime parameters in `self.params`.",73,[[["self"]],["lifetimesmut"]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant parameters in `self.params`.",73,[[["self"]],["constparams"]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the constant parameters in `self.params`.",73,[[["self"]],["constparamsmut"]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one present already.",73,[[["self"]],["whereclause"]]],[11,"clone","","",302,[[["self"]],["implgenerics"]]],[11,"clone","","",303,[[["self"]],["typegenerics"]]],[11,"clone","","",304,[[["self"]],["turbofish"]]],[11,"split_for_impl","","Split a type's generics into the pieces required for impl'ing a trait for that type.",73,N],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.",303,[[["self"]],["turbofish"]]],[11,"default","","",71,[[],["boundlifetimes"]]],[11,"clone","","",71,[[["self"]],["boundlifetimes"]]],[11,"new","","",74,[[["lifetime"]],["self"]]],[11,"from","","",79,[[["ident"]],["self"]]],[11,"clone","","",171,[[["self"]],["typeparambound"]]],[11,"from","","",171,[[["traitbound"]],["typeparambound"]]],[11,"from","","",171,[[["lifetime"]],["typeparambound"]]],[11,"to_tokens","","",171,[[["self"],["tokenstream"]]]],[11,"clone","","",78,[[["self"]],["traitbound"]]],[11,"clone","","",170,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",80,[[["self"]],["whereclause"]]],[11,"clone","","",172,[[["self"]],["wherepredicate"]]],[11,"clone","","",77,[[["self"]],["predicatetype"]]],[11,"from","","",172,[[["predicatetype"]],["wherepredicate"]]],[11,"clone","","",76,[[["self"]],["predicatelifetime"]]],[11,"from","","",172,[[["predicatelifetime"]],["wherepredicate"]]],[11,"clone","","",75,[[["self"]],["predicateeq"]]],[11,"from","","",172,[[["predicateeq"]],["wherepredicate"]]],[11,"to_tokens","","",172,[[["self"],["tokenstream"]]]],[11,"parse","","",176,[[["parsestream"]],["result"]]],[11,"parse","","",103,[[["parsestream"]],["result"]]],[11,"parse","","",104,[[["parsestream"]],["result"]]],[11,"parse","","",99,[[["parsestream"]],["result"]]],[11,"parse","","",112,[[["parsestream"]],["result"]]],[11,"parse","","",106,[[["parsestream"]],["result"]]],[11,"parse","","",96,[[["parsestream"]],["result"]]],[11,"parse","","",100,[[["parsestream"]],["result"]]],[11,"parse","","",173,[[["parsestream"]],["result"]]],[11,"parse","","",105,[[["parsestream"]],["result"]]],[11,"parse","","",101,[[["parsestream"]],["result"]]],[11,"parse","","",174,[[["parsestream"]],["result"]]],[11,"parse","","",85,[[["parsestream"]],["result"]]],[11,"parse","","",87,[[["parsestream"]],["result"]]],[11,"parse","","",88,[[["parsestream"]],["result"]]],[11,"parse","","",86,[[["parsestream"]],["result"]]],[11,"parse","","",110,[[["parsestream"]],["result"]]],[11,"parse","","",98,[[["parsestream"]],["result"]]],[11,"parse","","",107,[[["parsestream"]],["result"]]],[11,"parse","","",97,[[["parsestream"]],["result"]]],[11,"parse","","",111,[[["parsestream"]],["result"]]],[11,"parse","","",108,[[["parsestream"]],["result"]]],[11,"parse","","",109,[[["parsestream"]],["result"]]],[11,"parse","","",177,[[["parsestream"]],["result"]]],[11,"parse","","",115,[[["parsestream"]],["result"]]],[11,"parse","","",117,[[["parsestream"]],["result"]]],[11,"parse","","",118,[[["parsestream"]],["result"]]],[11,"parse","","",116,[[["parsestream"]],["result"]]],[11,"parse","","",102,[[["parsestream"]],["result"]]],[11,"parse","","",175,[[["parsestream"]],["result"]]],[11,"parse","","",90,[[["parsestream"]],["result"]]],[11,"parse","","",93,[[["parsestream"]],["result"]]],[11,"parse","","",94,[[["parsestream"]],["result"]]],[11,"parse","","",91,[[["parsestream"]],["result"]]],[11,"parse","","",92,[[["parsestream"]],["result"]]],[11,"to_tokens","","",99,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",112,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",106,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",96,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",100,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",105,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",101,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",110,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",98,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",97,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",107,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",111,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",108,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",109,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",102,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",103,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",104,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",113,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",123,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",122,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",124,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",120,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",121,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",115,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",117,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",118,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",116,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",119,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",90,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",93,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",94,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",91,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",92,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",95,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",85,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",87,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",88,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",86,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",89,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",114,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",83,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",82,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",81,[[["self"],["tokenstream"]]]],[11,"clone","","",176,[[["self"]],["item"]]],[11,"clone","","",99,[[["self"]],["itemexterncrate"]]],[11,"from","","",176,[[["itemexterncrate"]],["item"]]],[11,"clone","","",112,[[["self"]],["itemuse"]]],[11,"from","","",176,[[["itemuse"]],["item"]]],[11,"clone","","",106,[[["self"]],["itemstatic"]]],[11,"from","","",176,[[["itemstatic"]],["item"]]],[11,"clone","","",96,[[["self"]],["itemconst"]]],[11,"from","","",176,[[["itemconst"]],["item"]]],[11,"clone","","",100,[[["self"]],["itemfn"]]],[11,"from","","",176,[[["itemfn"]],["item"]]],[11,"clone","","",105,[[["self"]],["itemmod"]]],[11,"from","","",176,[[["itemmod"]],["item"]]],[11,"clone","","",101,[[["self"]],["itemforeignmod"]]],[11,"from","","",176,[[["itemforeignmod"]],["item"]]],[11,"clone","","",110,[[["self"]],["itemtype"]]],[11,"from","","",176,[[["itemtype"]],["item"]]],[11,"clone","","",98,[[["self"]],["itemexistential"]]],[11,"from","","",176,[[["itemexistential"]],["item"]]],[11,"clone","","",107,[[["self"]],["itemstruct"]]],[11,"from","","",176,[[["itemstruct"]],["item"]]],[11,"clone","","",97,[[["self"]],["itemenum"]]],[11,"from","","",176,[[["itemenum"]],["item"]]],[11,"clone","","",111,[[["self"]],["itemunion"]]],[11,"from","","",176,[[["itemunion"]],["item"]]],[11,"clone","","",108,[[["self"]],["itemtrait"]]],[11,"from","","",176,[[["itemtrait"]],["item"]]],[11,"clone","","",109,[[["self"]],["itemtraitalias"]]],[11,"from","","",176,[[["itemtraitalias"]],["item"]]],[11,"clone","","",102,[[["self"]],["itemimpl"]]],[11,"from","","",176,[[["itemimpl"]],["item"]]],[11,"clone","","",103,[[["self"]],["itemmacro"]]],[11,"from","","",176,[[["itemmacro"]],["item"]]],[11,"clone","","",104,[[["self"]],["itemmacro2"]]],[11,"from","","",176,[[["itemmacro2"]],["item"]]],[11,"clone","","",113,[[["self"]],["itemverbatim"]]],[11,"from","","",176,[[["itemverbatim"]],["item"]]],[11,"to_tokens","","",176,[[["self"],["tokenstream"]]]],[11,"from","","",176,[[["deriveinput"]],["item"]]],[11,"clone","","",178,[[["self"]],["usetree"]]],[11,"clone","","",123,[[["self"]],["usepath"]]],[11,"from","","",178,[[["usepath"]],["usetree"]]],[11,"clone","","",122,[[["self"]],["usename"]]],[11,"from","","",178,[[["usename"]],["usetree"]]],[11,"clone","","",124,[[["self"]],["userename"]]],[11,"from","","",178,[[["userename"]],["usetree"]]],[11,"clone","","",120,[[["self"]],["useglob"]]],[11,"from","","",178,[[["useglob"]],["usetree"]]],[11,"clone","","",121,[[["self"]],["usegroup"]]],[11,"from","","",178,[[["usegroup"]],["usetree"]]],[11,"to_tokens","","",178,[[["self"],["tokenstream"]]]],[11,"clone","","",174,[[["self"]],["foreignitem"]]],[11,"clone","","",85,[[["self"]],["foreignitemfn"]]],[11,"from","","",174,[[["foreignitemfn"]],["foreignitem"]]],[11,"clone","","",87,[[["self"]],["foreignitemstatic"]]],[11,"from","","",174,[[["foreignitemstatic"]],["foreignitem"]]],[11,"clone","","",88,[[["self"]],["foreignitemtype"]]],[11,"from","","",174,[[["foreignitemtype"]],["foreignitem"]]],[11,"clone","","",86,[[["self"]],["foreignitemmacro"]]],[11,"from","","",174,[[["foreignitemmacro"]],["foreignitem"]]],[11,"clone","","",89,[[["self"]],["foreignitemverbatim"]]],[11,"from","","",174,[[["foreignitemverbatim"]],["foreignitem"]]],[11,"to_tokens","","",174,[[["self"],["tokenstream"]]]],[11,"clone","","",177,[[["self"]],["traititem"]]],[11,"clone","","",115,[[["self"]],["traititemconst"]]],[11,"from","","",177,[[["traititemconst"]],["traititem"]]],[11,"clone","","",117,[[["self"]],["traititemmethod"]]],[11,"from","","",177,[[["traititemmethod"]],["traititem"]]],[11,"clone","","",118,[[["self"]],["traititemtype"]]],[11,"from","","",177,[[["traititemtype"]],["traititem"]]],[11,"clone","","",116,[[["self"]],["traititemmacro"]]],[11,"from","","",177,[[["traititemmacro"]],["traititem"]]],[11,"clone","","",119,[[["self"]],["traititemverbatim"]]],[11,"from","","",177,[[["traititemverbatim"]],["traititem"]]],[11,"to_tokens","","",177,[[["self"],["tokenstream"]]]],[11,"clone","","",175,[[["self"]],["implitem"]]],[11,"clone","","",90,[[["self"]],["implitemconst"]]],[11,"from","","",175,[[["implitemconst"]],["implitem"]]],[11,"clone","","",93,[[["self"]],["implitemmethod"]]],[11,"from","","",175,[[["implitemmethod"]],["implitem"]]],[11,"clone","","",94,[[["self"]],["implitemtype"]]],[11,"from","","",175,[[["implitemtype"]],["implitem"]]],[11,"clone","","",91,[[["self"]],["implitemexistential"]]],[11,"from","","",175,[[["implitemexistential"]],["implitem"]]],[11,"clone","","",92,[[["self"]],["implitemmacro"]]],[11,"from","","",175,[[["implitemmacro"]],["implitem"]]],[11,"clone","","",95,[[["self"]],["implitemverbatim"]]],[11,"from","","",175,[[["implitemverbatim"]],["implitem"]]],[11,"to_tokens","","",175,[[["self"],["tokenstream"]]]],[11,"clone","","",114,[[["self"]],["methodsig"]]],[11,"clone","","",84,[[["self"]],["fndecl"]]],[11,"clone","","",173,[[["self"]],["fnarg"]]],[11,"clone","","",83,[[["self"]],["argselfref"]]],[11,"from","","",173,[[["argselfref"]],["fnarg"]]],[11,"clone","","",82,[[["self"]],["argself"]]],[11,"from","","",173,[[["argself"]],["fnarg"]]],[11,"clone","","",81,[[["self"]],["argcaptured"]]],[11,"from","","",173,[[["argcaptured"]],["fnarg"]]],[11,"from","","",173,[[["pat"]],["fnarg"]]],[11,"from","","",173,[[["type"]],["fnarg"]]],[11,"to_tokens","","",173,[[["self"],["tokenstream"]]]],[11,"parse","","",125,[[["parsestream"]],["result"]]],[11,"to_tokens","","",125,[[["self"],["tokenstream"]]]],[11,"clone","","",125,[[["self"]],["file"]]],[11,"parse","","",126,[[["parsestream"]],["result"]]],[11,"to_tokens","","",126,[[["self"],["tokenstream"]]]],[11,"clone","","",126,[[["self"]],["lifetime"]]],[11,"new","","Panics",126,[[["str"],["span"]],["self"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"eq","","",126,[[["self"],["lifetime"]],["bool"]]],[11,"partial_cmp","","",126,[[["self"],["lifetime"]],["option",["ordering"]]]],[11,"cmp","","",126,[[["self"],["lifetime"]],["ordering"]]],[11,"hash","","",126,[[["self"],["h"]]]],[11,"parse","","",181,[[["parsestream"]],["result"]]],[11,"parse","","",295,[[["parsestream"]],["result"]]],[11,"parse","","",296,[[["parsestream"]],["result"]]],[11,"parse","","",297,[[["parsestream"]],["result"]]],[11,"parse","","",298,[[["parsestream"]],["result"]]],[11,"parse","","",299,[[["parsestream"]],["result"]]],[11,"parse","","",300,[[["parsestream"]],["result"]]],[11,"parse","","",127,[[["parsestream"]],["result"]]],[11,"to_tokens","","",295,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",296,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",297,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",298,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",299,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",300,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",127,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",128,[[["self"],["tokenstream"]]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",181,[[["literal"]],["self"]]],[11,"clone","","",181,[[["self"]],["lit"]]],[11,"clone","","",295,[[["self"]],["litstr"]]],[11,"from","","",181,[[["litstr"]],["lit"]]],[11,"clone","","",296,[[["self"]],["litbytestr"]]],[11,"from","","",181,[[["litbytestr"]],["lit"]]],[11,"clone","","",297,[[["self"]],["litbyte"]]],[11,"from","","",181,[[["litbyte"]],["lit"]]],[11,"clone","","",298,[[["self"]],["litchar"]]],[11,"from","","",181,[[["litchar"]],["lit"]]],[11,"clone","","",299,[[["self"]],["litint"]]],[11,"from","","",181,[[["litint"]],["lit"]]],[11,"clone","","",300,[[["self"]],["litfloat"]]],[11,"from","","",181,[[["litfloat"]],["lit"]]],[11,"clone","","",127,[[["self"]],["litbool"]]],[11,"from","","",181,[[["litbool"]],["lit"]]],[11,"clone","","",128,[[["self"]],["litverbatim"]]],[11,"from","","",181,[[["litverbatim"]],["lit"]]],[11,"to_tokens","","",181,[[["self"],["tokenstream"]]]],[11,"new","","",295,[[["str"],["span"]],["self"]]],[11,"value","","",295,[[["self"]],["string"]]],[11,"parse","","Parse a syntax tree node from the content of this string literal.",295,[[["self"]],["result",["error"]]]],[11,"span","","",295,[[["self"]],["span"]]],[11,"set_span","","",295,[[["self"],["span"]]]],[11,"new","","",296,N],[11,"value","","",296,[[["self"]],["vec",["u8"]]]],[11,"span","","",296,[[["self"]],["span"]]],[11,"set_span","","",296,[[["self"],["span"]]]],[11,"new","","",297,[[["u8"],["span"]],["self"]]],[11,"value","","",297,[[["self"]],["u8"]]],[11,"span","","",297,[[["self"]],["span"]]],[11,"set_span","","",297,[[["self"],["span"]]]],[11,"new","","",298,[[["char"],["span"]],["self"]]],[11,"value","","",298,[[["self"]],["char"]]],[11,"span","","",298,[[["self"]],["span"]]],[11,"set_span","","",298,[[["self"],["span"]]]],[11,"new","","",299,[[["u64"],["intsuffix"],["span"]],["self"]]],[11,"value","","",299,[[["self"]],["u64"]]],[11,"suffix","","",299,[[["self"]],["intsuffix"]]],[11,"span","","",299,[[["self"]],["span"]]],[11,"set_span","","",299,[[["self"],["span"]]]],[11,"new","","",300,[[["f64"],["floatsuffix"],["span"]],["self"]]],[11,"value","","",300,[[["self"]],["f64"]]],[11,"suffix","","",300,[[["self"]],["floatsuffix"]]],[11,"span","","",300,[[["self"]],["span"]]],[11,"set_span","","",300,[[["self"],["span"]]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"set_span","","",128,[[["self"],["span"]]]],[11,"clone","","",182,[[["self"]],["strstyle"]]],[11,"clone","","",180,[[["self"]],["intsuffix"]]],[11,"clone","","",179,[[["self"]],["floatsuffix"]]],[11,"parse","","",129,[[["parsestream"]],["result"]]],[11,"to_tokens","","",129,[[["self"],["tokenstream"]]]],[11,"clone","","",129,[[["self"]],["macro"]]],[11,"clone","","",183,[[["self"]],["macrodelimiter"]]],[11,"parse","","",133,[[["parsestream"]],["result"]]],[11,"to_tokens","","",133,[[["self"],["tokenstream"]]]],[11,"clone","","",133,[[["self"]],["deriveinput"]]],[11,"clone","","",184,[[["self"]],["data"]]],[11,"clone","","",131,[[["self"]],["datastruct"]]],[11,"from","","",184,[[["datastruct"]],["data"]]],[11,"clone","","",130,[[["self"]],["dataenum"]]],[11,"from","","",184,[[["dataenum"]],["data"]]],[11,"clone","","",132,[[["self"]],["dataunion"]]],[11,"from","","",184,[[["dataunion"]],["data"]]],[11,"parse","","",185,[[["parsestream"]],["result"]]],[11,"parse","","",186,[[["parsestream"]],["result"]]],[11,"to_tokens","","",185,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",186,[[["self"],["tokenstream"]]]],[11,"clone","","",185,[[["self"]],["binop"]]],[11,"clone","","",186,[[["self"]],["unop"]]],[11,"parse","","",189,[[["parsestream"]],["result"]]],[11,"without_plus","","In some positions, types may not contain the `+` character, to disambiguate them. For example in the expression `1 as T`, T may not contain a `+` character.",189,[[["parsestream"]],["result"]]],[11,"parse","","",147,[[["parsestream"]],["result"]]],[11,"parse","","",136,[[["parsestream"]],["result"]]],[11,"parse","","",145,[[["parsestream"]],["result"]]],[11,"parse","","",146,[[["parsestream"]],["result"]]],[11,"parse","","",137,[[["parsestream"]],["result"]]],[11,"parse","","",142,[[["parsestream"]],["result"]]],[11,"parse","","",140,[[["parsestream"]],["result"]]],[11,"parse","","",149,[[["parsestream"]],["result"]]],[11,"parse","","",141,[[["parsestream"]],["result"]]],[11,"parse","","",144,[[["parsestream"]],["result"]]],[11,"without_plus","","",188,[[["parsestream"]],["result"]]],[11,"parse","","",188,[[["parsestream"],["bool"]],["result"]]],[11,"parse","","",188,[[["parsestream"]],["result"]]],[11,"parse","","",148,[[["parsestream"]],["result"]]],[11,"without_plus","","",148,[[["parsestream"]],["result"]]],[11,"parse","","",148,[[["parsestream"],["bool"]],["result"]]],[11,"parse","","",139,[[["parsestream"]],["result"]]],[11,"parse","","",138,[[["parsestream"]],["result"]]],[11,"parse","","",143,[[["parsestream"]],["result"]]],[11,"parse","","",135,[[["parsestream"]],["result"]]],[11,"parse","","",187,[[["parsestream"]],["result"]]],[11,"parse","","",134,[[["parsestream"]],["result"]]],[11,"to_tokens","","",147,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",136,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",145,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",146,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",137,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",142,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",149,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",144,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",148,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",139,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",138,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",143,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",140,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",141,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",150,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",188,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",135,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",187,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",134,[[["self"],["tokenstream"]]]],[11,"clone","","",189,[[["self"]],["type"]]],[11,"clone","","",147,[[["self"]],["typeslice"]]],[11,"from","","",189,[[["typeslice"]],["type"]]],[11,"clone","","",136,[[["self"]],["typearray"]]],[11,"from","","",189,[[["typearray"]],["type"]]],[11,"clone","","",145,[[["self"]],["typeptr"]]],[11,"from","","",189,[[["typeptr"]],["type"]]],[11,"clone","","",146,[[["self"]],["typereference"]]],[11,"from","","",189,[[["typereference"]],["type"]]],[11,"clone","","",137,[[["self"]],["typebarefn"]]],[11,"from","","",189,[[["typebarefn"]],["type"]]],[11,"clone","","",142,[[["self"]],["typenever"]]],[11,"from","","",189,[[["typenever"]],["type"]]],[11,"clone","","",149,[[["self"]],["typetuple"]]],[11,"from","","",189,[[["typetuple"]],["type"]]],[11,"clone","","",144,[[["self"]],["typepath"]]],[11,"from","","",189,[[["typepath"]],["type"]]],[11,"clone","","",148,[[["self"]],["typetraitobject"]]],[11,"from","","",189,[[["typetraitobject"]],["type"]]],[11,"clone","","",139,[[["self"]],["typeimpltrait"]]],[11,"from","","",189,[[["typeimpltrait"]],["type"]]],[11,"clone","","",143,[[["self"]],["typeparen"]]],[11,"from","","",189,[[["typeparen"]],["type"]]],[11,"clone","","",138,[[["self"]],["typegroup"]]],[11,"from","","",189,[[["typegroup"]],["type"]]],[11,"clone","","",140,[[["self"]],["typeinfer"]]],[11,"from","","",189,[[["typeinfer"]],["type"]]],[11,"clone","","",141,[[["self"]],["typemacro"]]],[11,"from","","",189,[[["typemacro"]],["type"]]],[11,"clone","","",150,[[["self"]],["typeverbatim"]]],[11,"from","","",189,[[["typeverbatim"]],["type"]]],[11,"to_tokens","","",189,[[["self"],["tokenstream"]]]],[11,"clone","","",134,[[["self"]],["abi"]]],[11,"clone","","",135,[[["self"]],["barefnarg"]]],[11,"clone","","",187,[[["self"]],["barefnargname"]]],[11,"clone","","",188,[[["self"]],["returntype"]]],[11,"parse","","",155,[[["parsestream"]],["result"]]],[11,"parse","","",190,[[["parsestream"]],["result"]]],[11,"parse","","",151,[[["parsestream"]],["result"]]],[11,"parse","","",154,[[["parsestream"]],["result"]]],[11,"parse","","",156,[[["parsestream"]],["result"]]],[11,"parse","","",152,[[["parsestream"]],["result"]]],[11,"parse","","",153,[[["parsestream"]],["result"]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its segments.",155,[[["parsestream"]],["result"]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the given ident.",155,[[["self"],["i"]],["bool"]]],[11,"to_tokens","","",155,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",156,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",191,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",190,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",151,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",152,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",153,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",154,[[["self"],["tokenstream"]]]],[11,"clone","","",155,[[["self"]],["path"]]],[11,"from","","",155,[[["t"]],["self"]]],[11,"clone","","",156,[[["self"]],["pathsegment"]]],[11,"from","","",156,[[["t"]],["self"]]],[11,"clone","","",191,[[["self"]],["patharguments"]]],[11,"default","","",191,[[],["self"]]],[11,"is_empty","","",191,[[["self"]],["bool"]]],[11,"clone","","",190,[[["self"]],["genericargument"]]],[11,"clone","","",151,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone","","",152,[[["self"]],["binding"]]],[11,"clone","","",153,[[["self"]],["constraint"]]],[11,"clone","","",154,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone","","",157,[[["self"]],["qself"]]],[0,"buffer","","A stably addressed token buffer supporting efficient traversal based on a cheaply copyable cursor.",N,N],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times, unlike `TokenStream` which requires a deep copy in order to traverse more than once.",N,N],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",N,N],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the input `TokenStream`.",305,[[["tokenstream"]],["tokenbuffer"]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the input `TokenStream`.",305,[[["tokenstream"]],["tokenbuffer"]]],[11,"begin","","Creates a cursor referencing the first token in the buffer and able to traverse until the end of the buffer.",305,[[["self"]],["cursor"]]],[11,"clone","","",306,[[["self"]],["cursor"]]],[11,"eq","","",306,[[["self"],["cursor"]],["bool"]]],[11,"ne","","",306,[[["self"],["cursor"]],["bool"]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",306,[[],["self"]]],[11,"eof","","Checks whether the cursor is currently pointing at the end of its valid scope.",306,[[["self"]],["bool"]]],[11,"group","","If the cursor is pointing at a `Group` with the given delimiter, returns a cursor into that group and one pointing to the next `TokenTree`.",306,[[["self"],["delimiter"]],["option"]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along with a cursor pointing at the next `TokenTree`.",306,[[["self"]],["option"]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along with a cursor pointing at the next `TokenTree`.",306,[[["self"]],["option"]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along with a cursor pointing at the next `TokenTree`.",306,[[["self"]],["option"]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it along with a cursor pointing at the next `TokenTree`.",306,[[["self"]],["option"]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into a `TokenStream`.",306,[[["self"]],["tokenstream"]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it along with a cursor pointing at the next `TokenTree`.",306,[[["self"]],["option"]]],[11,"span","","Returns the `Span` of the current token, or `Span::call_site()` if this cursor points to eof.",306,[[["self"]],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign types.",N,N],[8,"IdentExt","syn::ext","Additional parsing methods for `Ident`.",N,N],[10,"parse_any","","Parses any identifier including keywords.",307,[[["parsestream"]],["result"]]],[11,"parse_any","syn","",301,[[["parsestream"]],["result"]]],[0,"punctuated","","A punctuated sequence of syntax tree nodes separated by punctuation.",N,N],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T` separated by punctuation of type `P`.",N,N],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",N,N],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut T, &mut P>`.",N,N],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",N,N],[3,"IntoIter","","An iterator over owned values of type `T`.",N,N],[3,"Iter","","An iterator over borrowed values of type `&T`.",N,N],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",N,N],[4,"Pair","","A single syntax tree node of type `T` followed by its trailing punctuation of type `P` if any.",N,N],[13,"Punctuated","","",308,N],[13,"End","","",308,N],[11,"to_tokens","","",309,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",308,[[["self"],["tokenstream"]]]],[11,"clone","","",309,[[["self"]],["punctuated"]]],[11,"new","","Creates an empty punctuated sequence.",309,[[],["punctuated"]]],[11,"is_empty","","Determines whether this punctuated sequence is empty, meaning it contains no syntax tree nodes or punctuation.",309,[[["self"]],["bool"]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated sequence.",309,[[["self"]],["usize"]]],[11,"first","","Borrows the first punctuated pair in this sequence.",309,[[["self"]],["option",["pair"]]]],[11,"last","","Borrows the last punctuated pair in this sequence.",309,[[["self"]],["option",["pair"]]]],[11,"last_mut","","Mutably borrows the last punctuated pair in this sequence.",309,[[["self"]],["option",["pair"]]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of type `&T`.",309,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree nodes of type `&mut T`.",309,[[["self"]],["itermut"]]],[11,"pairs","","Returns an iterator over the contents of this sequence as borrowed punctuated pairs.",309,[[["self"]],["pairs"]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as mutably borrowed punctuated pairs.",309,[[["self"]],["pairsmut"]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as owned punctuated pairs.",309,[[["self"]],["intopairs"]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated sequence. The sequence must previously have a trailing punctuation.",309,[[["self"],["t"]]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this punctuated sequence. The sequence must be non-empty and must not already have trailing punctuation.",309,[[["self"],["p"]]]],[11,"pop","","Removes the last punctuated pair from this sequence, or `None` if the sequence is empty.",309,[[["self"]],["option",["pair"]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a trailing punctuation.",309,[[["self"]],["bool"]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it has a trailing punctuation.",309,[[["self"]],["bool"]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated sequence.",309,[[["self"],["t"]]]],[11,"insert","","Inserts an element at position `index`.",309,[[["self"],["usize"],["t"]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by punctuation of type `P`, with optional trailing punctuation.",309,[[["parsestream"]],["result"]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given parse function, separated by punctuation of type `P`, with optional trailing punctuation.",309,N],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by punctuation of type `P`, not accepting trailing punctuation.",309,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given parse function, separated by punctuation of type `P`, not accepting trailing punctuation.",309,N],[11,"from_iter","","",309,[[["i"]],["self"]]],[11,"extend","","",309,[[["self"],["i"]]]],[11,"from_iter","","",309,[[["i"]],["self"]]],[11,"extend","","",309,[[["self"],["i"]]]],[11,"into_iter","","",309,N],[11,"default","","",309,[[],["self"]]],[11,"next","","",310,[[["self"]],["option"]]],[11,"len","","",310,[[["self"]],["usize"]]],[11,"next","","",311,[[["self"]],["option"]]],[11,"len","","",311,[[["self"]],["usize"]]],[11,"next","","",312,[[["self"]],["option"]]],[11,"len","","",312,[[["self"]],["usize"]]],[11,"next","","",313,[[["self"]],["option"]]],[11,"len","","",313,[[["self"]],["usize"]]],[11,"next","","",314,[[["self"]],["option"]]],[11,"len","","",314,[[["self"]],["usize"]]],[11,"next","","",315,[[["self"]],["option"]]],[11,"len","","",315,[[["self"]],["usize"]]],[11,"into_value","","Extracts the syntax tree node from this punctuated pair, discarding the following punctuation.",308,[[["self"]],["t"]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",308,[[["self"]],["t"]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated pair.",308,[[["self"]],["t"]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless this pair is the final one and there is no trailing punctuation.",308,[[["self"]],["option"]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an optional following punctuation.",308,[[["t"],["option"]],["self"]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree node and optional following punctuation.",308,N],[11,"index","","",309,N],[11,"index_mut","","",309,N],[0,"spanned","syn","A trait that can provide the `Span` of the complete contents of a syntax tree node.",N,N],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete contents of a syntax tree node.",N,N],[10,"span","","Returns a `Span` covering the complete contents of this syntax tree node, or [`Span::call_site()`] if this node is empty.",316,[[["self"]],["span"]]],[0,"fold","syn","Syntax tree traversal to transform the nodes of an owned syntax tree.",N,N],[5,"fold_lit_byte","syn::fold","",N,[[["v"],["litbyte"]],["litbyte"]]],[5,"fold_lit_byte_str","","",N,[[["v"],["litbytestr"]],["litbytestr"]]],[5,"fold_lit_char","","",N,[[["v"],["litchar"]],["litchar"]]],[5,"fold_lit_float","","",N,[[["v"],["litfloat"]],["litfloat"]]],[5,"fold_lit_int","","",N,[[["v"],["litint"]],["litint"]]],[5,"fold_lit_str","","",N,[[["v"],["litstr"]],["litstr"]]],[5,"fold_abi","","",N,[[["v"],["abi"]],["abi"]]],[5,"fold_angle_bracketed_generic_arguments","","",N,[[["v"],["anglebracketedgenericarguments"]],["anglebracketedgenericarguments"]]],[5,"fold_arg_captured","","",N,[[["v"],["argcaptured"]],["argcaptured"]]],[5,"fold_arg_self","","",N,[[["v"],["argself"]],["argself"]]],[5,"fold_arg_self_ref","","",N,[[["v"],["argselfref"]],["argselfref"]]],[5,"fold_arm","","",N,[[["v"],["arm"]],["arm"]]],[5,"fold_attr_style","","",N,[[["v"],["attrstyle"]],["attrstyle"]]],[5,"fold_attribute","","",N,[[["v"],["attribute"]],["attribute"]]],[5,"fold_bare_fn_arg","","",N,[[["v"],["barefnarg"]],["barefnarg"]]],[5,"fold_bare_fn_arg_name","","",N,[[["v"],["barefnargname"]],["barefnargname"]]],[5,"fold_bin_op","","",N,[[["v"],["binop"]],["binop"]]],[5,"fold_binding","","",N,[[["v"],["binding"]],["binding"]]],[5,"fold_block","","",N,[[["v"],["block"]],["block"]]],[5,"fold_bound_lifetimes","","",N,[[["v"],["boundlifetimes"]],["boundlifetimes"]]],[5,"fold_const_param","","",N,[[["v"],["constparam"]],["constparam"]]],[5,"fold_constraint","","",N,[[["v"],["constraint"]],["constraint"]]],[5,"fold_data","","",N,[[["v"],["data"]],["data"]]],[5,"fold_data_enum","","",N,[[["v"],["dataenum"]],["dataenum"]]],[5,"fold_data_struct","","",N,[[["v"],["datastruct"]],["datastruct"]]],[5,"fold_data_union","","",N,[[["v"],["dataunion"]],["dataunion"]]],[5,"fold_derive_input","","",N,[[["v"],["deriveinput"]],["deriveinput"]]],[5,"fold_expr","","",N,[[["v"],["expr"]],["expr"]]],[5,"fold_expr_array","","",N,[[["v"],["exprarray"]],["exprarray"]]],[5,"fold_expr_assign","","",N,[[["v"],["exprassign"]],["exprassign"]]],[5,"fold_expr_assign_op","","",N,[[["v"],["exprassignop"]],["exprassignop"]]],[5,"fold_expr_async","","",N,[[["v"],["exprasync"]],["exprasync"]]],[5,"fold_expr_binary","","",N,[[["v"],["exprbinary"]],["exprbinary"]]],[5,"fold_expr_block","","",N,[[["v"],["exprblock"]],["exprblock"]]],[5,"fold_expr_box","","",N,[[["v"],["exprbox"]],["exprbox"]]],[5,"fold_expr_break","","",N,[[["v"],["exprbreak"]],["exprbreak"]]],[5,"fold_expr_call","","",N,[[["v"],["exprcall"]],["exprcall"]]],[5,"fold_expr_cast","","",N,[[["v"],["exprcast"]],["exprcast"]]],[5,"fold_expr_closure","","",N,[[["v"],["exprclosure"]],["exprclosure"]]],[5,"fold_expr_continue","","",N,[[["v"],["exprcontinue"]],["exprcontinue"]]],[5,"fold_expr_field","","",N,[[["v"],["exprfield"]],["exprfield"]]],[5,"fold_expr_for_loop","","",N,[[["v"],["exprforloop"]],["exprforloop"]]],[5,"fold_expr_group","","",N,[[["v"],["exprgroup"]],["exprgroup"]]],[5,"fold_expr_if","","",N,[[["v"],["exprif"]],["exprif"]]],[5,"fold_expr_in_place","","",N,[[["v"],["exprinplace"]],["exprinplace"]]],[5,"fold_expr_index","","",N,[[["v"],["exprindex"]],["exprindex"]]],[5,"fold_expr_let","","",N,[[["v"],["exprlet"]],["exprlet"]]],[5,"fold_expr_lit","","",N,[[["v"],["exprlit"]],["exprlit"]]],[5,"fold_expr_loop","","",N,[[["v"],["exprloop"]],["exprloop"]]],[5,"fold_expr_macro","","",N,[[["v"],["exprmacro"]],["exprmacro"]]],[5,"fold_expr_match","","",N,[[["v"],["exprmatch"]],["exprmatch"]]],[5,"fold_expr_method_call","","",N,[[["v"],["exprmethodcall"]],["exprmethodcall"]]],[5,"fold_expr_paren","","",N,[[["v"],["exprparen"]],["exprparen"]]],[5,"fold_expr_path","","",N,[[["v"],["exprpath"]],["exprpath"]]],[5,"fold_expr_range","","",N,[[["v"],["exprrange"]],["exprrange"]]],[5,"fold_expr_reference","","",N,[[["v"],["exprreference"]],["exprreference"]]],[5,"fold_expr_repeat","","",N,[[["v"],["exprrepeat"]],["exprrepeat"]]],[5,"fold_expr_return","","",N,[[["v"],["exprreturn"]],["exprreturn"]]],[5,"fold_expr_struct","","",N,[[["v"],["exprstruct"]],["exprstruct"]]],[5,"fold_expr_try","","",N,[[["v"],["exprtry"]],["exprtry"]]],[5,"fold_expr_try_block","","",N,[[["v"],["exprtryblock"]],["exprtryblock"]]],[5,"fold_expr_tuple","","",N,[[["v"],["exprtuple"]],["exprtuple"]]],[5,"fold_expr_type","","",N,[[["v"],["exprtype"]],["exprtype"]]],[5,"fold_expr_unary","","",N,[[["v"],["exprunary"]],["exprunary"]]],[5,"fold_expr_unsafe","","",N,[[["v"],["exprunsafe"]],["exprunsafe"]]],[5,"fold_expr_verbatim","","",N,[[["v"],["exprverbatim"]],["exprverbatim"]]],[5,"fold_expr_while","","",N,[[["v"],["exprwhile"]],["exprwhile"]]],[5,"fold_expr_yield","","",N,[[["v"],["expryield"]],["expryield"]]],[5,"fold_field","","",N,[[["v"],["field"]],["field"]]],[5,"fold_field_pat","","",N,[[["v"],["fieldpat"]],["fieldpat"]]],[5,"fold_field_value","","",N,[[["v"],["fieldvalue"]],["fieldvalue"]]],[5,"fold_fields","","",N,[[["v"],["fields"]],["fields"]]],[5,"fold_fields_named","","",N,[[["v"],["fieldsnamed"]],["fieldsnamed"]]],[5,"fold_fields_unnamed","","",N,[[["v"],["fieldsunnamed"]],["fieldsunnamed"]]],[5,"fold_file","","",N,[[["v"],["file"]],["file"]]],[5,"fold_fn_arg","","",N,[[["v"],["fnarg"]],["fnarg"]]],[5,"fold_fn_decl","","",N,[[["v"],["fndecl"]],["fndecl"]]],[5,"fold_foreign_item","","",N,[[["v"],["foreignitem"]],["foreignitem"]]],[5,"fold_foreign_item_fn","","",N,[[["v"],["foreignitemfn"]],["foreignitemfn"]]],[5,"fold_foreign_item_macro","","",N,[[["v"],["foreignitemmacro"]],["foreignitemmacro"]]],[5,"fold_foreign_item_static","","",N,[[["v"],["foreignitemstatic"]],["foreignitemstatic"]]],[5,"fold_foreign_item_type","","",N,[[["v"],["foreignitemtype"]],["foreignitemtype"]]],[5,"fold_foreign_item_verbatim","","",N,[[["v"],["foreignitemverbatim"]],["foreignitemverbatim"]]],[5,"fold_generic_argument","","",N,[[["v"],["genericargument"]],["genericargument"]]],[5,"fold_generic_method_argument","","",N,[[["v"],["genericmethodargument"]],["genericmethodargument"]]],[5,"fold_generic_param","","",N,[[["v"],["genericparam"]],["genericparam"]]],[5,"fold_generics","","",N,[[["v"],["generics"]],["generics"]]],[5,"fold_ident","","",N,[[["v"],["ident"]],["ident"]]],[5,"fold_impl_item","","",N,[[["v"],["implitem"]],["implitem"]]],[5,"fold_impl_item_const","","",N,[[["v"],["implitemconst"]],["implitemconst"]]],[5,"fold_impl_item_existential","","",N,[[["v"],["implitemexistential"]],["implitemexistential"]]],[5,"fold_impl_item_macro","","",N,[[["v"],["implitemmacro"]],["implitemmacro"]]],[5,"fold_impl_item_method","","",N,[[["v"],["implitemmethod"]],["implitemmethod"]]],[5,"fold_impl_item_type","","",N,[[["v"],["implitemtype"]],["implitemtype"]]],[5,"fold_impl_item_verbatim","","",N,[[["v"],["implitemverbatim"]],["implitemverbatim"]]],[5,"fold_index","","",N,[[["v"],["index"]],["index"]]],[5,"fold_item","","",N,[[["v"],["item"]],["item"]]],[5,"fold_item_const","","",N,[[["v"],["itemconst"]],["itemconst"]]],[5,"fold_item_enum","","",N,[[["v"],["itemenum"]],["itemenum"]]],[5,"fold_item_existential","","",N,[[["v"],["itemexistential"]],["itemexistential"]]],[5,"fold_item_extern_crate","","",N,[[["v"],["itemexterncrate"]],["itemexterncrate"]]],[5,"fold_item_fn","","",N,[[["v"],["itemfn"]],["itemfn"]]],[5,"fold_item_foreign_mod","","",N,[[["v"],["itemforeignmod"]],["itemforeignmod"]]],[5,"fold_item_impl","","",N,[[["v"],["itemimpl"]],["itemimpl"]]],[5,"fold_item_macro","","",N,[[["v"],["itemmacro"]],["itemmacro"]]],[5,"fold_item_macro2","","",N,[[["v"],["itemmacro2"]],["itemmacro2"]]],[5,"fold_item_mod","","",N,[[["v"],["itemmod"]],["itemmod"]]],[5,"fold_item_static","","",N,[[["v"],["itemstatic"]],["itemstatic"]]],[5,"fold_item_struct","","",N,[[["v"],["itemstruct"]],["itemstruct"]]],[5,"fold_item_trait","","",N,[[["v"],["itemtrait"]],["itemtrait"]]],[5,"fold_item_trait_alias","","",N,[[["v"],["itemtraitalias"]],["itemtraitalias"]]],[5,"fold_item_type","","",N,[[["v"],["itemtype"]],["itemtype"]]],[5,"fold_item_union","","",N,[[["v"],["itemunion"]],["itemunion"]]],[5,"fold_item_use","","",N,[[["v"],["itemuse"]],["itemuse"]]],[5,"fold_item_verbatim","","",N,[[["v"],["itemverbatim"]],["itemverbatim"]]],[5,"fold_label","","",N,[[["v"],["label"]],["label"]]],[5,"fold_lifetime","","",N,[[["v"],["lifetime"]],["lifetime"]]],[5,"fold_lifetime_def","","",N,[[["v"],["lifetimedef"]],["lifetimedef"]]],[5,"fold_lit","","",N,[[["v"],["lit"]],["lit"]]],[5,"fold_lit_bool","","",N,[[["v"],["litbool"]],["litbool"]]],[5,"fold_lit_verbatim","","",N,[[["v"],["litverbatim"]],["litverbatim"]]],[5,"fold_local","","",N,[[["v"],["local"]],["local"]]],[5,"fold_macro","","",N,[[["v"],["macro"]],["macro"]]],[5,"fold_macro_delimiter","","",N,[[["v"],["macrodelimiter"]],["macrodelimiter"]]],[5,"fold_member","","",N,[[["v"],["member"]],["member"]]],[5,"fold_meta","","",N,[[["v"],["meta"]],["meta"]]],[5,"fold_meta_list","","",N,[[["v"],["metalist"]],["metalist"]]],[5,"fold_meta_name_value","","",N,[[["v"],["metanamevalue"]],["metanamevalue"]]],[5,"fold_method_sig","","",N,[[["v"],["methodsig"]],["methodsig"]]],[5,"fold_method_turbofish","","",N,[[["v"],["methodturbofish"]],["methodturbofish"]]],[5,"fold_nested_meta","","",N,[[["v"],["nestedmeta"]],["nestedmeta"]]],[5,"fold_parenthesized_generic_arguments","","",N,[[["v"],["parenthesizedgenericarguments"]],["parenthesizedgenericarguments"]]],[5,"fold_pat","","",N,[[["v"],["pat"]],["pat"]]],[5,"fold_pat_box","","",N,[[["v"],["patbox"]],["patbox"]]],[5,"fold_pat_ident","","",N,[[["v"],["patident"]],["patident"]]],[5,"fold_pat_lit","","",N,[[["v"],["patlit"]],["patlit"]]],[5,"fold_pat_macro","","",N,[[["v"],["patmacro"]],["patmacro"]]],[5,"fold_pat_path","","",N,[[["v"],["patpath"]],["patpath"]]],[5,"fold_pat_range","","",N,[[["v"],["patrange"]],["patrange"]]],[5,"fold_pat_ref","","",N,[[["v"],["patref"]],["patref"]]],[5,"fold_pat_slice","","",N,[[["v"],["patslice"]],["patslice"]]],[5,"fold_pat_struct","","",N,[[["v"],["patstruct"]],["patstruct"]]],[5,"fold_pat_tuple","","",N,[[["v"],["pattuple"]],["pattuple"]]],[5,"fold_pat_tuple_struct","","",N,[[["v"],["pattuplestruct"]],["pattuplestruct"]]],[5,"fold_pat_verbatim","","",N,[[["v"],["patverbatim"]],["patverbatim"]]],[5,"fold_pat_wild","","",N,[[["v"],["patwild"]],["patwild"]]],[5,"fold_path","","",N,[[["v"],["path"]],["path"]]],[5,"fold_path_arguments","","",N,[[["v"],["patharguments"]],["patharguments"]]],[5,"fold_path_segment","","",N,[[["v"],["pathsegment"]],["pathsegment"]]],[5,"fold_predicate_eq","","",N,[[["v"],["predicateeq"]],["predicateeq"]]],[5,"fold_predicate_lifetime","","",N,[[["v"],["predicatelifetime"]],["predicatelifetime"]]],[5,"fold_predicate_type","","",N,[[["v"],["predicatetype"]],["predicatetype"]]],[5,"fold_qself","","",N,[[["v"],["qself"]],["qself"]]],[5,"fold_range_limits","","",N,[[["v"],["rangelimits"]],["rangelimits"]]],[5,"fold_return_type","","",N,[[["v"],["returntype"]],["returntype"]]],[5,"fold_span","","",N,[[["v"],["span"]],["span"]]],[5,"fold_stmt","","",N,[[["v"],["stmt"]],["stmt"]]],[5,"fold_trait_bound","","",N,[[["v"],["traitbound"]],["traitbound"]]],[5,"fold_trait_bound_modifier","","",N,[[["v"],["traitboundmodifier"]],["traitboundmodifier"]]],[5,"fold_trait_item","","",N,[[["v"],["traititem"]],["traititem"]]],[5,"fold_trait_item_const","","",N,[[["v"],["traititemconst"]],["traititemconst"]]],[5,"fold_trait_item_macro","","",N,[[["v"],["traititemmacro"]],["traititemmacro"]]],[5,"fold_trait_item_method","","",N,[[["v"],["traititemmethod"]],["traititemmethod"]]],[5,"fold_trait_item_type","","",N,[[["v"],["traititemtype"]],["traititemtype"]]],[5,"fold_trait_item_verbatim","","",N,[[["v"],["traititemverbatim"]],["traititemverbatim"]]],[5,"fold_type","","",N,[[["v"],["type"]],["type"]]],[5,"fold_type_array","","",N,[[["v"],["typearray"]],["typearray"]]],[5,"fold_type_bare_fn","","",N,[[["v"],["typebarefn"]],["typebarefn"]]],[5,"fold_type_group","","",N,[[["v"],["typegroup"]],["typegroup"]]],[5,"fold_type_impl_trait","","",N,[[["v"],["typeimpltrait"]],["typeimpltrait"]]],[5,"fold_type_infer","","",N,[[["v"],["typeinfer"]],["typeinfer"]]],[5,"fold_type_macro","","",N,[[["v"],["typemacro"]],["typemacro"]]],[5,"fold_type_never","","",N,[[["v"],["typenever"]],["typenever"]]],[5,"fold_type_param","","",N,[[["v"],["typeparam"]],["typeparam"]]],[5,"fold_type_param_bound","","",N,[[["v"],["typeparambound"]],["typeparambound"]]],[5,"fold_type_paren","","",N,[[["v"],["typeparen"]],["typeparen"]]],[5,"fold_type_path","","",N,[[["v"],["typepath"]],["typepath"]]],[5,"fold_type_ptr","","",N,[[["v"],["typeptr"]],["typeptr"]]],[5,"fold_type_reference","","",N,[[["v"],["typereference"]],["typereference"]]],[5,"fold_type_slice","","",N,[[["v"],["typeslice"]],["typeslice"]]],[5,"fold_type_trait_object","","",N,[[["v"],["typetraitobject"]],["typetraitobject"]]],[5,"fold_type_tuple","","",N,[[["v"],["typetuple"]],["typetuple"]]],[5,"fold_type_verbatim","","",N,[[["v"],["typeverbatim"]],["typeverbatim"]]],[5,"fold_un_op","","",N,[[["v"],["unop"]],["unop"]]],[5,"fold_use_glob","","",N,[[["v"],["useglob"]],["useglob"]]],[5,"fold_use_group","","",N,[[["v"],["usegroup"]],["usegroup"]]],[5,"fold_use_name","","",N,[[["v"],["usename"]],["usename"]]],[5,"fold_use_path","","",N,[[["v"],["usepath"]],["usepath"]]],[5,"fold_use_rename","","",N,[[["v"],["userename"]],["userename"]]],[5,"fold_use_tree","","",N,[[["v"],["usetree"]],["usetree"]]],[5,"fold_variant","","",N,[[["v"],["variant"]],["variant"]]],[5,"fold_vis_crate","","",N,[[["v"],["viscrate"]],["viscrate"]]],[5,"fold_vis_public","","",N,[[["v"],["vispublic"]],["vispublic"]]],[5,"fold_vis_restricted","","",N,[[["v"],["visrestricted"]],["visrestricted"]]],[5,"fold_visibility","","",N,[[["v"],["visibility"]],["visibility"]]],[5,"fold_where_clause","","",N,[[["v"],["whereclause"]],["whereclause"]]],[5,"fold_where_predicate","","",N,[[["v"],["wherepredicate"]],["wherepredicate"]]],[8,"Fold","","Syntax tree traversal to transform the nodes of an owned syntax tree.",N,N],[11,"fold_abi","","",317,[[["self"],["abi"]],["abi"]]],[11,"fold_angle_bracketed_generic_arguments","","",317,[[["self"],["anglebracketedgenericarguments"]],["anglebracketedgenericarguments"]]],[11,"fold_arg_captured","","",317,[[["self"],["argcaptured"]],["argcaptured"]]],[11,"fold_arg_self","","",317,[[["self"],["argself"]],["argself"]]],[11,"fold_arg_self_ref","","",317,[[["self"],["argselfref"]],["argselfref"]]],[11,"fold_arm","","",317,[[["self"],["arm"]],["arm"]]],[11,"fold_attr_style","","",317,[[["self"],["attrstyle"]],["attrstyle"]]],[11,"fold_attribute","","",317,[[["self"],["attribute"]],["attribute"]]],[11,"fold_bare_fn_arg","","",317,[[["self"],["barefnarg"]],["barefnarg"]]],[11,"fold_bare_fn_arg_name","","",317,[[["self"],["barefnargname"]],["barefnargname"]]],[11,"fold_bin_op","","",317,[[["self"],["binop"]],["binop"]]],[11,"fold_binding","","",317,[[["self"],["binding"]],["binding"]]],[11,"fold_block","","",317,[[["self"],["block"]],["block"]]],[11,"fold_bound_lifetimes","","",317,[[["self"],["boundlifetimes"]],["boundlifetimes"]]],[11,"fold_const_param","","",317,[[["self"],["constparam"]],["constparam"]]],[11,"fold_constraint","","",317,[[["self"],["constraint"]],["constraint"]]],[11,"fold_data","","",317,[[["self"],["data"]],["data"]]],[11,"fold_data_enum","","",317,[[["self"],["dataenum"]],["dataenum"]]],[11,"fold_data_struct","","",317,[[["self"],["datastruct"]],["datastruct"]]],[11,"fold_data_union","","",317,[[["self"],["dataunion"]],["dataunion"]]],[11,"fold_derive_input","","",317,[[["self"],["deriveinput"]],["deriveinput"]]],[11,"fold_expr","","",317,[[["self"],["expr"]],["expr"]]],[11,"fold_expr_array","","",317,[[["self"],["exprarray"]],["exprarray"]]],[11,"fold_expr_assign","","",317,[[["self"],["exprassign"]],["exprassign"]]],[11,"fold_expr_assign_op","","",317,[[["self"],["exprassignop"]],["exprassignop"]]],[11,"fold_expr_async","","",317,[[["self"],["exprasync"]],["exprasync"]]],[11,"fold_expr_binary","","",317,[[["self"],["exprbinary"]],["exprbinary"]]],[11,"fold_expr_block","","",317,[[["self"],["exprblock"]],["exprblock"]]],[11,"fold_expr_box","","",317,[[["self"],["exprbox"]],["exprbox"]]],[11,"fold_expr_break","","",317,[[["self"],["exprbreak"]],["exprbreak"]]],[11,"fold_expr_call","","",317,[[["self"],["exprcall"]],["exprcall"]]],[11,"fold_expr_cast","","",317,[[["self"],["exprcast"]],["exprcast"]]],[11,"fold_expr_closure","","",317,[[["self"],["exprclosure"]],["exprclosure"]]],[11,"fold_expr_continue","","",317,[[["self"],["exprcontinue"]],["exprcontinue"]]],[11,"fold_expr_field","","",317,[[["self"],["exprfield"]],["exprfield"]]],[11,"fold_expr_for_loop","","",317,[[["self"],["exprforloop"]],["exprforloop"]]],[11,"fold_expr_group","","",317,[[["self"],["exprgroup"]],["exprgroup"]]],[11,"fold_expr_if","","",317,[[["self"],["exprif"]],["exprif"]]],[11,"fold_expr_in_place","","",317,[[["self"],["exprinplace"]],["exprinplace"]]],[11,"fold_expr_index","","",317,[[["self"],["exprindex"]],["exprindex"]]],[11,"fold_expr_let","","",317,[[["self"],["exprlet"]],["exprlet"]]],[11,"fold_expr_lit","","",317,[[["self"],["exprlit"]],["exprlit"]]],[11,"fold_expr_loop","","",317,[[["self"],["exprloop"]],["exprloop"]]],[11,"fold_expr_macro","","",317,[[["self"],["exprmacro"]],["exprmacro"]]],[11,"fold_expr_match","","",317,[[["self"],["exprmatch"]],["exprmatch"]]],[11,"fold_expr_method_call","","",317,[[["self"],["exprmethodcall"]],["exprmethodcall"]]],[11,"fold_expr_paren","","",317,[[["self"],["exprparen"]],["exprparen"]]],[11,"fold_expr_path","","",317,[[["self"],["exprpath"]],["exprpath"]]],[11,"fold_expr_range","","",317,[[["self"],["exprrange"]],["exprrange"]]],[11,"fold_expr_reference","","",317,[[["self"],["exprreference"]],["exprreference"]]],[11,"fold_expr_repeat","","",317,[[["self"],["exprrepeat"]],["exprrepeat"]]],[11,"fold_expr_return","","",317,[[["self"],["exprreturn"]],["exprreturn"]]],[11,"fold_expr_struct","","",317,[[["self"],["exprstruct"]],["exprstruct"]]],[11,"fold_expr_try","","",317,[[["self"],["exprtry"]],["exprtry"]]],[11,"fold_expr_try_block","","",317,[[["self"],["exprtryblock"]],["exprtryblock"]]],[11,"fold_expr_tuple","","",317,[[["self"],["exprtuple"]],["exprtuple"]]],[11,"fold_expr_type","","",317,[[["self"],["exprtype"]],["exprtype"]]],[11,"fold_expr_unary","","",317,[[["self"],["exprunary"]],["exprunary"]]],[11,"fold_expr_unsafe","","",317,[[["self"],["exprunsafe"]],["exprunsafe"]]],[11,"fold_expr_verbatim","","",317,[[["self"],["exprverbatim"]],["exprverbatim"]]],[11,"fold_expr_while","","",317,[[["self"],["exprwhile"]],["exprwhile"]]],[11,"fold_expr_yield","","",317,[[["self"],["expryield"]],["expryield"]]],[11,"fold_field","","",317,[[["self"],["field"]],["field"]]],[11,"fold_field_pat","","",317,[[["self"],["fieldpat"]],["fieldpat"]]],[11,"fold_field_value","","",317,[[["self"],["fieldvalue"]],["fieldvalue"]]],[11,"fold_fields","","",317,[[["self"],["fields"]],["fields"]]],[11,"fold_fields_named","","",317,[[["self"],["fieldsnamed"]],["fieldsnamed"]]],[11,"fold_fields_unnamed","","",317,[[["self"],["fieldsunnamed"]],["fieldsunnamed"]]],[11,"fold_file","","",317,[[["self"],["file"]],["file"]]],[11,"fold_fn_arg","","",317,[[["self"],["fnarg"]],["fnarg"]]],[11,"fold_fn_decl","","",317,[[["self"],["fndecl"]],["fndecl"]]],[11,"fold_foreign_item","","",317,[[["self"],["foreignitem"]],["foreignitem"]]],[11,"fold_foreign_item_fn","","",317,[[["self"],["foreignitemfn"]],["foreignitemfn"]]],[11,"fold_foreign_item_macro","","",317,[[["self"],["foreignitemmacro"]],["foreignitemmacro"]]],[11,"fold_foreign_item_static","","",317,[[["self"],["foreignitemstatic"]],["foreignitemstatic"]]],[11,"fold_foreign_item_type","","",317,[[["self"],["foreignitemtype"]],["foreignitemtype"]]],[11,"fold_foreign_item_verbatim","","",317,[[["self"],["foreignitemverbatim"]],["foreignitemverbatim"]]],[11,"fold_generic_argument","","",317,[[["self"],["genericargument"]],["genericargument"]]],[11,"fold_generic_method_argument","","",317,[[["self"],["genericmethodargument"]],["genericmethodargument"]]],[11,"fold_generic_param","","",317,[[["self"],["genericparam"]],["genericparam"]]],[11,"fold_generics","","",317,[[["self"],["generics"]],["generics"]]],[11,"fold_ident","","",317,[[["self"],["ident"]],["ident"]]],[11,"fold_impl_item","","",317,[[["self"],["implitem"]],["implitem"]]],[11,"fold_impl_item_const","","",317,[[["self"],["implitemconst"]],["implitemconst"]]],[11,"fold_impl_item_existential","","",317,[[["self"],["implitemexistential"]],["implitemexistential"]]],[11,"fold_impl_item_macro","","",317,[[["self"],["implitemmacro"]],["implitemmacro"]]],[11,"fold_impl_item_method","","",317,[[["self"],["implitemmethod"]],["implitemmethod"]]],[11,"fold_impl_item_type","","",317,[[["self"],["implitemtype"]],["implitemtype"]]],[11,"fold_impl_item_verbatim","","",317,[[["self"],["implitemverbatim"]],["implitemverbatim"]]],[11,"fold_index","","",317,[[["self"],["index"]],["index"]]],[11,"fold_item","","",317,[[["self"],["item"]],["item"]]],[11,"fold_item_const","","",317,[[["self"],["itemconst"]],["itemconst"]]],[11,"fold_item_enum","","",317,[[["self"],["itemenum"]],["itemenum"]]],[11,"fold_item_existential","","",317,[[["self"],["itemexistential"]],["itemexistential"]]],[11,"fold_item_extern_crate","","",317,[[["self"],["itemexterncrate"]],["itemexterncrate"]]],[11,"fold_item_fn","","",317,[[["self"],["itemfn"]],["itemfn"]]],[11,"fold_item_foreign_mod","","",317,[[["self"],["itemforeignmod"]],["itemforeignmod"]]],[11,"fold_item_impl","","",317,[[["self"],["itemimpl"]],["itemimpl"]]],[11,"fold_item_macro","","",317,[[["self"],["itemmacro"]],["itemmacro"]]],[11,"fold_item_macro2","","",317,[[["self"],["itemmacro2"]],["itemmacro2"]]],[11,"fold_item_mod","","",317,[[["self"],["itemmod"]],["itemmod"]]],[11,"fold_item_static","","",317,[[["self"],["itemstatic"]],["itemstatic"]]],[11,"fold_item_struct","","",317,[[["self"],["itemstruct"]],["itemstruct"]]],[11,"fold_item_trait","","",317,[[["self"],["itemtrait"]],["itemtrait"]]],[11,"fold_item_trait_alias","","",317,[[["self"],["itemtraitalias"]],["itemtraitalias"]]],[11,"fold_item_type","","",317,[[["self"],["itemtype"]],["itemtype"]]],[11,"fold_item_union","","",317,[[["self"],["itemunion"]],["itemunion"]]],[11,"fold_item_use","","",317,[[["self"],["itemuse"]],["itemuse"]]],[11,"fold_item_verbatim","","",317,[[["self"],["itemverbatim"]],["itemverbatim"]]],[11,"fold_label","","",317,[[["self"],["label"]],["label"]]],[11,"fold_lifetime","","",317,[[["self"],["lifetime"]],["lifetime"]]],[11,"fold_lifetime_def","","",317,[[["self"],["lifetimedef"]],["lifetimedef"]]],[11,"fold_lit","","",317,[[["self"],["lit"]],["lit"]]],[11,"fold_lit_bool","","",317,[[["self"],["litbool"]],["litbool"]]],[11,"fold_lit_byte","","",317,[[["self"],["litbyte"]],["litbyte"]]],[11,"fold_lit_byte_str","","",317,[[["self"],["litbytestr"]],["litbytestr"]]],[11,"fold_lit_char","","",317,[[["self"],["litchar"]],["litchar"]]],[11,"fold_lit_float","","",317,[[["self"],["litfloat"]],["litfloat"]]],[11,"fold_lit_int","","",317,[[["self"],["litint"]],["litint"]]],[11,"fold_lit_str","","",317,[[["self"],["litstr"]],["litstr"]]],[11,"fold_lit_verbatim","","",317,[[["self"],["litverbatim"]],["litverbatim"]]],[11,"fold_local","","",317,[[["self"],["local"]],["local"]]],[11,"fold_macro","","",317,[[["self"],["macro"]],["macro"]]],[11,"fold_macro_delimiter","","",317,[[["self"],["macrodelimiter"]],["macrodelimiter"]]],[11,"fold_member","","",317,[[["self"],["member"]],["member"]]],[11,"fold_meta","","",317,[[["self"],["meta"]],["meta"]]],[11,"fold_meta_list","","",317,[[["self"],["metalist"]],["metalist"]]],[11,"fold_meta_name_value","","",317,[[["self"],["metanamevalue"]],["metanamevalue"]]],[11,"fold_method_sig","","",317,[[["self"],["methodsig"]],["methodsig"]]],[11,"fold_method_turbofish","","",317,[[["self"],["methodturbofish"]],["methodturbofish"]]],[11,"fold_nested_meta","","",317,[[["self"],["nestedmeta"]],["nestedmeta"]]],[11,"fold_parenthesized_generic_arguments","","",317,[[["self"],["parenthesizedgenericarguments"]],["parenthesizedgenericarguments"]]],[11,"fold_pat","","",317,[[["self"],["pat"]],["pat"]]],[11,"fold_pat_box","","",317,[[["self"],["patbox"]],["patbox"]]],[11,"fold_pat_ident","","",317,[[["self"],["patident"]],["patident"]]],[11,"fold_pat_lit","","",317,[[["self"],["patlit"]],["patlit"]]],[11,"fold_pat_macro","","",317,[[["self"],["patmacro"]],["patmacro"]]],[11,"fold_pat_path","","",317,[[["self"],["patpath"]],["patpath"]]],[11,"fold_pat_range","","",317,[[["self"],["patrange"]],["patrange"]]],[11,"fold_pat_ref","","",317,[[["self"],["patref"]],["patref"]]],[11,"fold_pat_slice","","",317,[[["self"],["patslice"]],["patslice"]]],[11,"fold_pat_struct","","",317,[[["self"],["patstruct"]],["patstruct"]]],[11,"fold_pat_tuple","","",317,[[["self"],["pattuple"]],["pattuple"]]],[11,"fold_pat_tuple_struct","","",317,[[["self"],["pattuplestruct"]],["pattuplestruct"]]],[11,"fold_pat_verbatim","","",317,[[["self"],["patverbatim"]],["patverbatim"]]],[11,"fold_pat_wild","","",317,[[["self"],["patwild"]],["patwild"]]],[11,"fold_path","","",317,[[["self"],["path"]],["path"]]],[11,"fold_path_arguments","","",317,[[["self"],["patharguments"]],["patharguments"]]],[11,"fold_path_segment","","",317,[[["self"],["pathsegment"]],["pathsegment"]]],[11,"fold_predicate_eq","","",317,[[["self"],["predicateeq"]],["predicateeq"]]],[11,"fold_predicate_lifetime","","",317,[[["self"],["predicatelifetime"]],["predicatelifetime"]]],[11,"fold_predicate_type","","",317,[[["self"],["predicatetype"]],["predicatetype"]]],[11,"fold_qself","","",317,[[["self"],["qself"]],["qself"]]],[11,"fold_range_limits","","",317,[[["self"],["rangelimits"]],["rangelimits"]]],[11,"fold_return_type","","",317,[[["self"],["returntype"]],["returntype"]]],[11,"fold_span","","",317,[[["self"],["span"]],["span"]]],[11,"fold_stmt","","",317,[[["self"],["stmt"]],["stmt"]]],[11,"fold_trait_bound","","",317,[[["self"],["traitbound"]],["traitbound"]]],[11,"fold_trait_bound_modifier","","",317,[[["self"],["traitboundmodifier"]],["traitboundmodifier"]]],[11,"fold_trait_item","","",317,[[["self"],["traititem"]],["traititem"]]],[11,"fold_trait_item_const","","",317,[[["self"],["traititemconst"]],["traititemconst"]]],[11,"fold_trait_item_macro","","",317,[[["self"],["traititemmacro"]],["traititemmacro"]]],[11,"fold_trait_item_method","","",317,[[["self"],["traititemmethod"]],["traititemmethod"]]],[11,"fold_trait_item_type","","",317,[[["self"],["traititemtype"]],["traititemtype"]]],[11,"fold_trait_item_verbatim","","",317,[[["self"],["traititemverbatim"]],["traititemverbatim"]]],[11,"fold_type","","",317,[[["self"],["type"]],["type"]]],[11,"fold_type_array","","",317,[[["self"],["typearray"]],["typearray"]]],[11,"fold_type_bare_fn","","",317,[[["self"],["typebarefn"]],["typebarefn"]]],[11,"fold_type_group","","",317,[[["self"],["typegroup"]],["typegroup"]]],[11,"fold_type_impl_trait","","",317,[[["self"],["typeimpltrait"]],["typeimpltrait"]]],[11,"fold_type_infer","","",317,[[["self"],["typeinfer"]],["typeinfer"]]],[11,"fold_type_macro","","",317,[[["self"],["typemacro"]],["typemacro"]]],[11,"fold_type_never","","",317,[[["self"],["typenever"]],["typenever"]]],[11,"fold_type_param","","",317,[[["self"],["typeparam"]],["typeparam"]]],[11,"fold_type_param_bound","","",317,[[["self"],["typeparambound"]],["typeparambound"]]],[11,"fold_type_paren","","",317,[[["self"],["typeparen"]],["typeparen"]]],[11,"fold_type_path","","",317,[[["self"],["typepath"]],["typepath"]]],[11,"fold_type_ptr","","",317,[[["self"],["typeptr"]],["typeptr"]]],[11,"fold_type_reference","","",317,[[["self"],["typereference"]],["typereference"]]],[11,"fold_type_slice","","",317,[[["self"],["typeslice"]],["typeslice"]]],[11,"fold_type_trait_object","","",317,[[["self"],["typetraitobject"]],["typetraitobject"]]],[11,"fold_type_tuple","","",317,[[["self"],["typetuple"]],["typetuple"]]],[11,"fold_type_verbatim","","",317,[[["self"],["typeverbatim"]],["typeverbatim"]]],[11,"fold_un_op","","",317,[[["self"],["unop"]],["unop"]]],[11,"fold_use_glob","","",317,[[["self"],["useglob"]],["useglob"]]],[11,"fold_use_group","","",317,[[["self"],["usegroup"]],["usegroup"]]],[11,"fold_use_name","","",317,[[["self"],["usename"]],["usename"]]],[11,"fold_use_path","","",317,[[["self"],["usepath"]],["usepath"]]],[11,"fold_use_rename","","",317,[[["self"],["userename"]],["userename"]]],[11,"fold_use_tree","","",317,[[["self"],["usetree"]],["usetree"]]],[11,"fold_variant","","",317,[[["self"],["variant"]],["variant"]]],[11,"fold_vis_crate","","",317,[[["self"],["viscrate"]],["viscrate"]]],[11,"fold_vis_public","","",317,[[["self"],["vispublic"]],["vispublic"]]],[11,"fold_vis_restricted","","",317,[[["self"],["visrestricted"]],["visrestricted"]]],[11,"fold_visibility","","",317,[[["self"],["visibility"]],["visibility"]]],[11,"fold_where_clause","","",317,[[["self"],["whereclause"]],["whereclause"]]],[11,"fold_where_predicate","","",317,[[["self"],["wherepredicate"]],["wherepredicate"]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax tree node.",N,N],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input tokens.",N,N],[3,"Lookahead1","","Support for checking the next token in a stream to decide how to parse.",N,N],[3,"ParseBuffer","","Cursor position within a buffered token stream.",N,N],[3,"StepCursor","","Cursor state associated with speculative parsing.",N,N],[6,"Result","","The result of a Syn parser.",N,N],[6,"ParseStream","","Input to a Syn parser function.",N,N],[8,"Peek","","Types that can be parsed by looking at just one token.",N,N],[8,"Parse","","Parsing interface implemented by all types that can be parsed in a default way from a token stream.",N,N],[10,"parse","","",318,[[["parsestream"]],["result"]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax tree node.",N,N],[16,"Output","","",319,N],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax tree node.",319,[[["self"],["tokenstream"]],["result"]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree node.",319,[[["self"],["tokenstream"]],["result"]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree node.",319,[[["self"],["str"]],["result"]]],[11,"drop","","",320,[[["self"]]]],[11,"fmt","","",320,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",320,[[["self"],["formatter"]],["result"]]],[11,"clone","","",321,[[["self"]],["stepcursor"]]],[11,"deref","","",321,N],[11,"error","","Triggers an error at the current position of the parse stream.",321,[[["self"],["t"]],["error"]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the position of our parse stream past it.",320,[[["self"]],["result"]]],[11,"call","","Calls the given parser function to parse a syntax tree node of type `T` from this stream.",320,N],[11,"peek","","Looks at the next token in the parse stream to determine whether it matches the requested type of token.",320,[[["self"],["t"]],["bool"]]],[11,"peek2","","Looks at the second-next token in the parse stream.",320,[[["self"],["t"]],["bool"]]],[11,"peek3","","Looks at the third-next token in the parse stream.",320,[[["self"],["t"]],["bool"]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by punctuation of type `P`, with optional trailing punctuation.",320,N],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",320,[[["self"]],["bool"]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this stream and building an error message if it is not one of a set of expected tokens.",320,[[["self"]],["lookahead1"]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either the original or the fork does not advance the position of the other.",320,[[["self"]],["self"]]],[11,"error","","Triggers an error at the current position of the parse stream.",320,[[["self"],["t"]],["error"]]],[11,"step","","Speculatively parses tokens from this parse stream, advancing the position of this stream only if parsing succeeds.",320,[[["self"],["f"]],["result"]]],[11,"cursor","","Provides low-level access to the token representation underlying this parse stream.",320,[[["self"]],["cursor"]]],[11,"fmt","syn","",322,[[["self"],["formatter"]],["result"]]],[11,"new","","Usually the [`ParseStream::error`] method will be used instead, which automatically uses the correct span from the current position of the parse stream.",322,[[["span"],["t"]],["self"]]],[11,"new_spanned","","Creates an error with the specified message spanning the given syntax tree node.",322,[[["t"],["u"]],["self"]]],[11,"span","","The source location of the error.",322,[[["self"]],["span"]]],[11,"to_compile_error","","Render the error as an invocation of [`compile_error!`].",322,[[["self"]],["tokenstream"]]],[11,"fmt","","",322,[[["self"],["formatter"]],["result"]]],[11,"clone","","",322,[[["self"]],["self"]]],[11,"description","","",322,[[["self"]],["str"]]],[11,"from","","",322,[[["lexerror"]],["self"]]],[6,"AttributeArgs","","Conventional argument type associated with an invocation of an attribute macro.",N,N],[6,"Result","","The result of a Syn parser.",N,N],[14,"parenthesized","","Parse a set of parentheses and expose their content to subsequent parsers.",N,N],[14,"braced","","Parse a set of curly braces and expose their content to subsequent parsers.",N,N],[14,"bracketed","","Parse a set of square brackets and expose their content to subsequent parsers.",N,N],[14,"Token","","A type-macro that expands to the name of the Rust type representation of a given token.",N,N],[14,"parse_quote","","Quasi-quotation macro that accepts input like the [`quote!`] macro but uses type inference to figure out a return type for those tokens.",N,N],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a compile error if the tokens fail to parse.",N,N],[14,"custom_keyword","","Define a type that supports parsing and printing a given identifier as if it were a keyword.",N,N],[11,"new","","Creates a new `Ident` with the given `string` as well as the specified `span`.",301,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",301,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its hygiene context.",301,N],[11,"peek","","",301,[[["cursor"]],["bool"]]],[11,"display","","",301,[[],["str"]]],[11,"span","","",301,[[["self"]],["span"]]],[11,"to_owned","","",301,[[["self"]],["t"]]],[11,"clone_into","","",301,N],[11,"from","","",301,[[["t"]],["t"]]],[11,"to_string","","",301,[[["self"]],["string"]]],[11,"into","","",301,[[["self"]],["u"]]],[11,"try_from","","",301,[[["u"]],["result"]]],[11,"borrow","","",301,[[["self"]],["t"]]],[11,"try_into","","",301,[[["self"]],["result"]]],[11,"borrow_mut","","",301,[[["self"]],["t"]]],[11,"get_type_id","","",301,[[["self"]],["typeid"]]],[11,"not_found","","",301,[[["str"],["str"]],["e"]]],[11,"eq","","",301,[[["self"],["ident"]],["bool"]]],[11,"eq","","",301,[[["self"],["t"]],["bool"]]],[11,"fmt","","",301,[[["self"],["formatter"]],["result",["error"]]]],[11,"hash","","",301,N],[11,"partial_cmp","","",301,[[["self"],["ident"]],["option",["ordering"]]]],[11,"fmt","","",301,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",301,[[["self"]],["ident"]]],[11,"cmp","","",301,[[["self"],["ident"]],["ordering"]]],[11,"to_tokens","","",301,N],[11,"span","","",0,[[["self"]],["span"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"not_found","","",0,[[["str"],["str"]],["e"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"not_found","","",1,[[["str"],["str"]],["e"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"not_found","","",2,[[["str"],["str"]],["e"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"not_found","","",3,[[["str"],["str"]],["e"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"not_found","","",4,[[["str"],["str"]],["e"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"not_found","","",5,[[["str"],["str"]],["e"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"not_found","","",6,[[["str"],["str"]],["e"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"not_found","","",7,[[["str"],["str"]],["e"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"not_found","","",8,[[["str"],["str"]],["e"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"not_found","","",9,[[["str"],["str"]],["e"]]],[11,"span","","",10,[[["self"]],["span"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"not_found","","",10,[[["str"],["str"]],["e"]]],[11,"span","","",11,[[["self"]],["span"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"not_found","","",11,[[["str"],["str"]],["e"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"not_found","","",12,[[["str"],["str"]],["e"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"not_found","","",13,[[["str"],["str"]],["e"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"not_found","","",14,[[["str"],["str"]],["e"]]],[11,"span","","",15,[[["self"]],["span"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"not_found","","",15,[[["str"],["str"]],["e"]]],[11,"span","","",16,[[["self"]],["span"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"not_found","","",16,[[["str"],["str"]],["e"]]],[11,"span","","",17,[[["self"]],["span"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"not_found","","",17,[[["str"],["str"]],["e"]]],[11,"span","","",18,[[["self"]],["span"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"not_found","","",18,[[["str"],["str"]],["e"]]],[11,"span","","",19,[[["self"]],["span"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"not_found","","",19,[[["str"],["str"]],["e"]]],[11,"span","","",20,[[["self"]],["span"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"not_found","","",20,[[["str"],["str"]],["e"]]],[11,"span","","",21,[[["self"]],["span"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"not_found","","",21,[[["str"],["str"]],["e"]]],[11,"span","","",22,[[["self"]],["span"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"not_found","","",22,[[["str"],["str"]],["e"]]],[11,"span","","",23,[[["self"]],["span"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"not_found","","",23,[[["str"],["str"]],["e"]]],[11,"span","","",24,[[["self"]],["span"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"not_found","","",24,[[["str"],["str"]],["e"]]],[11,"span","","",25,[[["self"]],["span"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"not_found","","",25,[[["str"],["str"]],["e"]]],[11,"span","","",26,[[["self"]],["span"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"not_found","","",26,[[["str"],["str"]],["e"]]],[11,"span","","",27,[[["self"]],["span"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"not_found","","",27,[[["str"],["str"]],["e"]]],[11,"span","","",28,[[["self"]],["span"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"not_found","","",28,[[["str"],["str"]],["e"]]],[11,"span","","",29,[[["self"]],["span"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"not_found","","",29,[[["str"],["str"]],["e"]]],[11,"span","","",30,[[["self"]],["span"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"not_found","","",30,[[["str"],["str"]],["e"]]],[11,"span","","",31,[[["self"]],["span"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"not_found","","",31,[[["str"],["str"]],["e"]]],[11,"span","","",32,[[["self"]],["span"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"not_found","","",32,[[["str"],["str"]],["e"]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"not_found","","",33,[[["str"],["str"]],["e"]]],[11,"span","","",34,[[["self"]],["span"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"not_found","","",34,[[["str"],["str"]],["e"]]],[11,"span","","",35,[[["self"]],["span"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"not_found","","",35,[[["str"],["str"]],["e"]]],[11,"span","","",36,[[["self"]],["span"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"not_found","","",36,[[["str"],["str"]],["e"]]],[11,"span","","",37,[[["self"]],["span"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"not_found","","",37,[[["str"],["str"]],["e"]]],[11,"span","","",38,[[["self"]],["span"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"not_found","","",38,[[["str"],["str"]],["e"]]],[11,"span","","",39,[[["self"]],["span"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"not_found","","",39,[[["str"],["str"]],["e"]]],[11,"span","","",40,[[["self"]],["span"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"not_found","","",40,[[["str"],["str"]],["e"]]],[11,"span","","",41,[[["self"]],["span"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"not_found","","",41,[[["str"],["str"]],["e"]]],[11,"span","","",42,[[["self"]],["span"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"not_found","","",42,[[["str"],["str"]],["e"]]],[11,"span","","",43,[[["self"]],["span"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"not_found","","",43,[[["str"],["str"]],["e"]]],[11,"span","","",44,[[["self"]],["span"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"not_found","","",44,[[["str"],["str"]],["e"]]],[11,"span","","",45,[[["self"]],["span"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"not_found","","",45,[[["str"],["str"]],["e"]]],[11,"span","","",46,[[["self"]],["span"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"not_found","","",46,[[["str"],["str"]],["e"]]],[11,"span","","",47,[[["self"]],["span"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"not_found","","",47,[[["str"],["str"]],["e"]]],[11,"span","","",48,[[["self"]],["span"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"not_found","","",48,[[["str"],["str"]],["e"]]],[11,"span","","",49,[[["self"]],["span"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"not_found","","",49,[[["str"],["str"]],["e"]]],[11,"span","","",50,[[["self"]],["span"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"not_found","","",50,[[["str"],["str"]],["e"]]],[11,"span","","",51,[[["self"]],["span"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"not_found","","",51,[[["str"],["str"]],["e"]]],[11,"span","","",52,[[["self"]],["span"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"not_found","","",52,[[["str"],["str"]],["e"]]],[11,"span","","",53,[[["self"]],["span"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"not_found","","",53,[[["str"],["str"]],["e"]]],[11,"span","","",54,[[["self"]],["span"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"not_found","","",54,[[["str"],["str"]],["e"]]],[11,"span","","",55,[[["self"]],["span"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"not_found","","",55,[[["str"],["str"]],["e"]]],[11,"span","","",56,[[["self"]],["span"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"not_found","","",56,[[["str"],["str"]],["e"]]],[11,"span","","",57,[[["self"]],["span"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"not_found","","",57,[[["str"],["str"]],["e"]]],[11,"span","","",58,[[["self"]],["span"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"not_found","","",58,[[["str"],["str"]],["e"]]],[11,"span","","",59,[[["self"]],["span"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"not_found","","",59,[[["str"],["str"]],["e"]]],[11,"span","","",60,[[["self"]],["span"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"not_found","","",60,[[["str"],["str"]],["e"]]],[11,"span","","",61,[[["self"]],["span"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"not_found","","",61,[[["str"],["str"]],["e"]]],[11,"span","","",62,[[["self"]],["span"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"not_found","","",62,[[["str"],["str"]],["e"]]],[11,"span","","",63,[[["self"]],["span"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"not_found","","",63,[[["str"],["str"]],["e"]]],[11,"span","","",64,[[["self"]],["span"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"not_found","","",64,[[["str"],["str"]],["e"]]],[11,"span","","",65,[[["self"]],["span"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"not_found","","",65,[[["str"],["str"]],["e"]]],[11,"span","","",66,[[["self"]],["span"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"not_found","","",66,[[["str"],["str"]],["e"]]],[11,"span","","",67,[[["self"]],["span"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"not_found","","",67,[[["str"],["str"]],["e"]]],[11,"span","","",68,[[["self"]],["span"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"not_found","","",68,[[["str"],["str"]],["e"]]],[11,"span","","",69,[[["self"]],["span"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"not_found","","",69,[[["str"],["str"]],["e"]]],[11,"span","","",70,[[["self"]],["span"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"not_found","","",70,[[["str"],["str"]],["e"]]],[11,"span","","",71,[[["self"]],["span"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"not_found","","",71,[[["str"],["str"]],["e"]]],[11,"span","","",72,[[["self"]],["span"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"not_found","","",72,[[["str"],["str"]],["e"]]],[11,"span","","",73,[[["self"]],["span"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"not_found","","",73,[[["str"],["str"]],["e"]]],[11,"span","","",74,[[["self"]],["span"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"not_found","","",74,[[["str"],["str"]],["e"]]],[11,"span","","",75,[[["self"]],["span"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"not_found","","",75,[[["str"],["str"]],["e"]]],[11,"span","","",76,[[["self"]],["span"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"not_found","","",76,[[["str"],["str"]],["e"]]],[11,"span","","",77,[[["self"]],["span"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"not_found","","",77,[[["str"],["str"]],["e"]]],[11,"span","","",78,[[["self"]],["span"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"not_found","","",78,[[["str"],["str"]],["e"]]],[11,"span","","",79,[[["self"]],["span"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"not_found","","",79,[[["str"],["str"]],["e"]]],[11,"span","","",80,[[["self"]],["span"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"not_found","","",80,[[["str"],["str"]],["e"]]],[11,"span","","",302,[[["self"]],["span"]]],[11,"to_owned","","",302,[[["self"]],["t"]]],[11,"clone_into","","",302,N],[11,"from","","",302,[[["t"]],["t"]]],[11,"into","","",302,[[["self"]],["u"]]],[11,"try_from","","",302,[[["u"]],["result"]]],[11,"borrow","","",302,[[["self"]],["t"]]],[11,"try_into","","",302,[[["self"]],["result"]]],[11,"borrow_mut","","",302,[[["self"]],["t"]]],[11,"get_type_id","","",302,[[["self"]],["typeid"]]],[11,"not_found","","",302,[[["str"],["str"]],["e"]]],[11,"span","","",304,[[["self"]],["span"]]],[11,"to_owned","","",304,[[["self"]],["t"]]],[11,"clone_into","","",304,N],[11,"from","","",304,[[["t"]],["t"]]],[11,"into","","",304,[[["self"]],["u"]]],[11,"try_from","","",304,[[["u"]],["result"]]],[11,"borrow","","",304,[[["self"]],["t"]]],[11,"try_into","","",304,[[["self"]],["result"]]],[11,"borrow_mut","","",304,[[["self"]],["t"]]],[11,"get_type_id","","",304,[[["self"]],["typeid"]]],[11,"not_found","","",304,[[["str"],["str"]],["e"]]],[11,"span","","",303,[[["self"]],["span"]]],[11,"to_owned","","",303,[[["self"]],["t"]]],[11,"clone_into","","",303,N],[11,"from","","",303,[[["t"]],["t"]]],[11,"into","","",303,[[["self"]],["u"]]],[11,"try_from","","",303,[[["u"]],["result"]]],[11,"borrow","","",303,[[["self"]],["t"]]],[11,"try_into","","",303,[[["self"]],["result"]]],[11,"borrow_mut","","",303,[[["self"]],["t"]]],[11,"get_type_id","","",303,[[["self"]],["typeid"]]],[11,"not_found","","",303,[[["str"],["str"]],["e"]]],[11,"span","","",81,[[["self"]],["span"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"not_found","","",81,[[["str"],["str"]],["e"]]],[11,"span","","",82,[[["self"]],["span"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"not_found","","",82,[[["str"],["str"]],["e"]]],[11,"span","","",83,[[["self"]],["span"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"not_found","","",83,[[["str"],["str"]],["e"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"not_found","","",84,[[["str"],["str"]],["e"]]],[11,"span","","",85,[[["self"]],["span"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"not_found","","",85,[[["str"],["str"]],["e"]]],[11,"span","","",86,[[["self"]],["span"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"not_found","","",86,[[["str"],["str"]],["e"]]],[11,"span","","",87,[[["self"]],["span"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"not_found","","",87,[[["str"],["str"]],["e"]]],[11,"span","","",88,[[["self"]],["span"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"not_found","","",88,[[["str"],["str"]],["e"]]],[11,"span","","",89,[[["self"]],["span"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"not_found","","",89,[[["str"],["str"]],["e"]]],[11,"span","","",90,[[["self"]],["span"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"not_found","","",90,[[["str"],["str"]],["e"]]],[11,"span","","",91,[[["self"]],["span"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"not_found","","",91,[[["str"],["str"]],["e"]]],[11,"span","","",92,[[["self"]],["span"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"not_found","","",92,[[["str"],["str"]],["e"]]],[11,"span","","",93,[[["self"]],["span"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"not_found","","",93,[[["str"],["str"]],["e"]]],[11,"span","","",94,[[["self"]],["span"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"not_found","","",94,[[["str"],["str"]],["e"]]],[11,"span","","",95,[[["self"]],["span"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"not_found","","",95,[[["str"],["str"]],["e"]]],[11,"span","","",96,[[["self"]],["span"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"not_found","","",96,[[["str"],["str"]],["e"]]],[11,"span","","",97,[[["self"]],["span"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"not_found","","",97,[[["str"],["str"]],["e"]]],[11,"span","","",98,[[["self"]],["span"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"not_found","","",98,[[["str"],["str"]],["e"]]],[11,"span","","",99,[[["self"]],["span"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"not_found","","",99,[[["str"],["str"]],["e"]]],[11,"span","","",100,[[["self"]],["span"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"not_found","","",100,[[["str"],["str"]],["e"]]],[11,"span","","",101,[[["self"]],["span"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"not_found","","",101,[[["str"],["str"]],["e"]]],[11,"span","","",102,[[["self"]],["span"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"not_found","","",102,[[["str"],["str"]],["e"]]],[11,"span","","",103,[[["self"]],["span"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"not_found","","",103,[[["str"],["str"]],["e"]]],[11,"span","","",104,[[["self"]],["span"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"not_found","","",104,[[["str"],["str"]],["e"]]],[11,"span","","",105,[[["self"]],["span"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"not_found","","",105,[[["str"],["str"]],["e"]]],[11,"span","","",106,[[["self"]],["span"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"not_found","","",106,[[["str"],["str"]],["e"]]],[11,"span","","",107,[[["self"]],["span"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"not_found","","",107,[[["str"],["str"]],["e"]]],[11,"span","","",108,[[["self"]],["span"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"not_found","","",108,[[["str"],["str"]],["e"]]],[11,"span","","",109,[[["self"]],["span"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"not_found","","",109,[[["str"],["str"]],["e"]]],[11,"span","","",110,[[["self"]],["span"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"not_found","","",110,[[["str"],["str"]],["e"]]],[11,"span","","",111,[[["self"]],["span"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"not_found","","",111,[[["str"],["str"]],["e"]]],[11,"span","","",112,[[["self"]],["span"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"not_found","","",112,[[["str"],["str"]],["e"]]],[11,"span","","",113,[[["self"]],["span"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"not_found","","",113,[[["str"],["str"]],["e"]]],[11,"span","","",114,[[["self"]],["span"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"not_found","","",114,[[["str"],["str"]],["e"]]],[11,"span","","",115,[[["self"]],["span"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"not_found","","",115,[[["str"],["str"]],["e"]]],[11,"span","","",116,[[["self"]],["span"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"not_found","","",116,[[["str"],["str"]],["e"]]],[11,"span","","",117,[[["self"]],["span"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"not_found","","",117,[[["str"],["str"]],["e"]]],[11,"span","","",118,[[["self"]],["span"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"not_found","","",118,[[["str"],["str"]],["e"]]],[11,"span","","",119,[[["self"]],["span"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"not_found","","",119,[[["str"],["str"]],["e"]]],[11,"span","","",120,[[["self"]],["span"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"not_found","","",120,[[["str"],["str"]],["e"]]],[11,"span","","",121,[[["self"]],["span"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"not_found","","",121,[[["str"],["str"]],["e"]]],[11,"span","","",122,[[["self"]],["span"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"not_found","","",122,[[["str"],["str"]],["e"]]],[11,"span","","",123,[[["self"]],["span"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"not_found","","",123,[[["str"],["str"]],["e"]]],[11,"span","","",124,[[["self"]],["span"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"not_found","","",124,[[["str"],["str"]],["e"]]],[11,"span","","",125,[[["self"]],["span"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"not_found","","",125,[[["str"],["str"]],["e"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"span","","",126,[[["self"]],["span"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"from","","",126,[[["t"]],["t"]]],[11,"to_string","","",126,[[["self"]],["string"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"not_found","","",126,[[["str"],["str"]],["e"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"span","","",127,[[["self"]],["span"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"not_found","","",127,[[["str"],["str"]],["e"]]],[11,"peek","","",297,[[["cursor"]],["bool"]]],[11,"display","","",297,[[],["str"]]],[11,"span","","",297,[[["self"]],["span"]]],[11,"to_owned","","",297,[[["self"]],["t"]]],[11,"clone_into","","",297,N],[11,"from","","",297,[[["t"]],["t"]]],[11,"into","","",297,[[["self"]],["u"]]],[11,"try_from","","",297,[[["u"]],["result"]]],[11,"borrow","","",297,[[["self"]],["t"]]],[11,"try_into","","",297,[[["self"]],["result"]]],[11,"borrow_mut","","",297,[[["self"]],["t"]]],[11,"get_type_id","","",297,[[["self"]],["typeid"]]],[11,"not_found","","",297,[[["str"],["str"]],["e"]]],[11,"peek","","",296,[[["cursor"]],["bool"]]],[11,"display","","",296,[[],["str"]]],[11,"span","","",296,[[["self"]],["span"]]],[11,"to_owned","","",296,[[["self"]],["t"]]],[11,"clone_into","","",296,N],[11,"from","","",296,[[["t"]],["t"]]],[11,"into","","",296,[[["self"]],["u"]]],[11,"try_from","","",296,[[["u"]],["result"]]],[11,"borrow","","",296,[[["self"]],["t"]]],[11,"try_into","","",296,[[["self"]],["result"]]],[11,"borrow_mut","","",296,[[["self"]],["t"]]],[11,"get_type_id","","",296,[[["self"]],["typeid"]]],[11,"not_found","","",296,[[["str"],["str"]],["e"]]],[11,"peek","","",298,[[["cursor"]],["bool"]]],[11,"display","","",298,[[],["str"]]],[11,"span","","",298,[[["self"]],["span"]]],[11,"to_owned","","",298,[[["self"]],["t"]]],[11,"clone_into","","",298,N],[11,"from","","",298,[[["t"]],["t"]]],[11,"into","","",298,[[["self"]],["u"]]],[11,"try_from","","",298,[[["u"]],["result"]]],[11,"borrow","","",298,[[["self"]],["t"]]],[11,"try_into","","",298,[[["self"]],["result"]]],[11,"borrow_mut","","",298,[[["self"]],["t"]]],[11,"get_type_id","","",298,[[["self"]],["typeid"]]],[11,"not_found","","",298,[[["str"],["str"]],["e"]]],[11,"peek","","",300,[[["cursor"]],["bool"]]],[11,"display","","",300,[[],["str"]]],[11,"span","","",300,[[["self"]],["span"]]],[11,"to_owned","","",300,[[["self"]],["t"]]],[11,"clone_into","","",300,N],[11,"from","","",300,[[["t"]],["t"]]],[11,"into","","",300,[[["self"]],["u"]]],[11,"try_from","","",300,[[["u"]],["result"]]],[11,"borrow","","",300,[[["self"]],["t"]]],[11,"try_into","","",300,[[["self"]],["result"]]],[11,"borrow_mut","","",300,[[["self"]],["t"]]],[11,"get_type_id","","",300,[[["self"]],["typeid"]]],[11,"not_found","","",300,[[["str"],["str"]],["e"]]],[11,"peek","","",299,[[["cursor"]],["bool"]]],[11,"display","","",299,[[],["str"]]],[11,"span","","",299,[[["self"]],["span"]]],[11,"to_owned","","",299,[[["self"]],["t"]]],[11,"clone_into","","",299,N],[11,"from","","",299,[[["t"]],["t"]]],[11,"into","","",299,[[["self"]],["u"]]],[11,"try_from","","",299,[[["u"]],["result"]]],[11,"borrow","","",299,[[["self"]],["t"]]],[11,"try_into","","",299,[[["self"]],["result"]]],[11,"borrow_mut","","",299,[[["self"]],["t"]]],[11,"get_type_id","","",299,[[["self"]],["typeid"]]],[11,"not_found","","",299,[[["str"],["str"]],["e"]]],[11,"peek","","",295,[[["cursor"]],["bool"]]],[11,"display","","",295,[[],["str"]]],[11,"span","","",295,[[["self"]],["span"]]],[11,"to_owned","","",295,[[["self"]],["t"]]],[11,"clone_into","","",295,N],[11,"from","","",295,[[["t"]],["t"]]],[11,"into","","",295,[[["self"]],["u"]]],[11,"try_from","","",295,[[["u"]],["result"]]],[11,"borrow","","",295,[[["self"]],["t"]]],[11,"try_into","","",295,[[["self"]],["result"]]],[11,"borrow_mut","","",295,[[["self"]],["t"]]],[11,"get_type_id","","",295,[[["self"]],["typeid"]]],[11,"not_found","","",295,[[["str"],["str"]],["e"]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"not_found","","",128,[[["str"],["str"]],["e"]]],[11,"span","","",129,[[["self"]],["span"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"not_found","","",129,[[["str"],["str"]],["e"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"not_found","","",130,[[["str"],["str"]],["e"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"not_found","","",131,[[["str"],["str"]],["e"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"not_found","","",132,[[["str"],["str"]],["e"]]],[11,"span","","",133,[[["self"]],["span"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"not_found","","",133,[[["str"],["str"]],["e"]]],[11,"span","","",134,[[["self"]],["span"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"not_found","","",134,[[["str"],["str"]],["e"]]],[11,"span","","",135,[[["self"]],["span"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"not_found","","",135,[[["str"],["str"]],["e"]]],[11,"span","","",136,[[["self"]],["span"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,N],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"not_found","","",136,[[["str"],["str"]],["e"]]],[11,"span","","",137,[[["self"]],["span"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,N],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"not_found","","",137,[[["str"],["str"]],["e"]]],[11,"span","","",138,[[["self"]],["span"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,N],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"not_found","","",138,[[["str"],["str"]],["e"]]],[11,"span","","",139,[[["self"]],["span"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,N],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"not_found","","",139,[[["str"],["str"]],["e"]]],[11,"span","","",140,[[["self"]],["span"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,N],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"not_found","","",140,[[["str"],["str"]],["e"]]],[11,"span","","",141,[[["self"]],["span"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,N],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"not_found","","",141,[[["str"],["str"]],["e"]]],[11,"span","","",142,[[["self"]],["span"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,N],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"not_found","","",142,[[["str"],["str"]],["e"]]],[11,"span","","",143,[[["self"]],["span"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,N],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"not_found","","",143,[[["str"],["str"]],["e"]]],[11,"span","","",144,[[["self"]],["span"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,N],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"not_found","","",144,[[["str"],["str"]],["e"]]],[11,"span","","",145,[[["self"]],["span"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,N],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"not_found","","",145,[[["str"],["str"]],["e"]]],[11,"span","","",146,[[["self"]],["span"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,N],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"not_found","","",146,[[["str"],["str"]],["e"]]],[11,"span","","",147,[[["self"]],["span"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,N],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"not_found","","",147,[[["str"],["str"]],["e"]]],[11,"span","","",148,[[["self"]],["span"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,N],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"not_found","","",148,[[["str"],["str"]],["e"]]],[11,"span","","",149,[[["self"]],["span"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,N],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"not_found","","",149,[[["str"],["str"]],["e"]]],[11,"span","","",150,[[["self"]],["span"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,N],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"not_found","","",150,[[["str"],["str"]],["e"]]],[11,"span","","",151,[[["self"]],["span"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,N],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"not_found","","",151,[[["str"],["str"]],["e"]]],[11,"span","","",152,[[["self"]],["span"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,N],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"not_found","","",152,[[["str"],["str"]],["e"]]],[11,"span","","",153,[[["self"]],["span"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,N],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"not_found","","",153,[[["str"],["str"]],["e"]]],[11,"span","","",154,[[["self"]],["span"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,N],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"not_found","","",154,[[["str"],["str"]],["e"]]],[11,"span","","",155,[[["self"]],["span"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,N],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"not_found","","",155,[[["str"],["str"]],["e"]]],[11,"span","","",156,[[["self"]],["span"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,N],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"not_found","","",156,[[["str"],["str"]],["e"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,N],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[["self"]],["u"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"try_into","","",157,[[["self"]],["result"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"get_type_id","","",157,[[["self"]],["typeid"]]],[11,"not_found","","",157,[[["str"],["str"]],["e"]]],[11,"to_owned","","",322,[[["self"]],["t"]]],[11,"clone_into","","",322,N],[11,"from","","",322,[[["t"]],["t"]]],[11,"to_string","","",322,[[["self"]],["string"]]],[11,"into","","",322,[[["self"]],["u"]]],[11,"try_from","","",322,[[["u"]],["result"]]],[11,"borrow","","",322,[[["self"]],["t"]]],[11,"try_into","","",322,[[["self"]],["result"]]],[11,"borrow_mut","","",322,[[["self"]],["t"]]],[11,"get_type_id","","",322,[[["self"]],["typeid"]]],[11,"not_found","","",322,[[["str"],["str"]],["e"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,N],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"not_found","","",158,[[["str"],["str"]],["e"]]],[11,"span","","",159,[[["self"]],["span"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,N],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"not_found","","",159,[[["str"],["str"]],["e"]]],[11,"span","","",160,[[["self"]],["span"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,N],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[["self"]],["u"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"try_into","","",160,[[["self"]],["result"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"not_found","","",160,[[["str"],["str"]],["e"]]],[11,"span","","",161,[[["self"]],["span"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,N],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"not_found","","",161,[[["str"],["str"]],["e"]]],[11,"span","","",162,[[["self"]],["span"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,N],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"not_found","","",162,[[["str"],["str"]],["e"]]],[11,"span","","",163,[[["self"]],["span"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,N],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[["self"]],["u"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"try_into","","",163,[[["self"]],["result"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"not_found","","",163,[[["str"],["str"]],["e"]]],[11,"span","","",164,[[["self"]],["span"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,N],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[["self"]],["u"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"not_found","","",164,[[["str"],["str"]],["e"]]],[11,"span","","",165,[[["self"]],["span"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,N],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[["self"]],["u"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"not_found","","",165,[[["str"],["str"]],["e"]]],[11,"span","","",166,[[["self"]],["span"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,N],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[["self"]],["u"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"not_found","","",166,[[["str"],["str"]],["e"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,N],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[["self"]],["u"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"try_into","","",167,[[["self"]],["result"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"get_type_id","","",167,[[["self"]],["typeid"]]],[11,"not_found","","",167,[[["str"],["str"]],["e"]]],[11,"span","","",168,[[["self"]],["span"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,N],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[["self"]],["u"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"try_into","","",168,[[["self"]],["result"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"get_type_id","","",168,[[["self"]],["typeid"]]],[11,"not_found","","",168,[[["str"],["str"]],["e"]]],[11,"span","","",169,[[["self"]],["span"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,N],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[["self"]],["u"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"try_into","","",169,[[["self"]],["result"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"get_type_id","","",169,[[["self"]],["typeid"]]],[11,"not_found","","",169,[[["str"],["str"]],["e"]]],[11,"span","","",170,[[["self"]],["span"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,N],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[["self"]],["u"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"try_into","","",170,[[["self"]],["result"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"get_type_id","","",170,[[["self"]],["typeid"]]],[11,"not_found","","",170,[[["str"],["str"]],["e"]]],[11,"span","","",171,[[["self"]],["span"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,N],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[["self"]],["u"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"try_into","","",171,[[["self"]],["result"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"get_type_id","","",171,[[["self"]],["typeid"]]],[11,"not_found","","",171,[[["str"],["str"]],["e"]]],[11,"span","","",172,[[["self"]],["span"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,N],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[["self"]],["u"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"try_into","","",172,[[["self"]],["result"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"get_type_id","","",172,[[["self"]],["typeid"]]],[11,"not_found","","",172,[[["str"],["str"]],["e"]]],[11,"span","","",173,[[["self"]],["span"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,N],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[["self"]],["u"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"try_into","","",173,[[["self"]],["result"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"get_type_id","","",173,[[["self"]],["typeid"]]],[11,"not_found","","",173,[[["str"],["str"]],["e"]]],[11,"span","","",174,[[["self"]],["span"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,N],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[["self"]],["u"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"try_into","","",174,[[["self"]],["result"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"get_type_id","","",174,[[["self"]],["typeid"]]],[11,"not_found","","",174,[[["str"],["str"]],["e"]]],[11,"span","","",175,[[["self"]],["span"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,N],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[["self"]],["u"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"try_into","","",175,[[["self"]],["result"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"get_type_id","","",175,[[["self"]],["typeid"]]],[11,"not_found","","",175,[[["str"],["str"]],["e"]]],[11,"span","","",176,[[["self"]],["span"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,N],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[["self"]],["u"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"try_into","","",176,[[["self"]],["result"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"get_type_id","","",176,[[["self"]],["typeid"]]],[11,"not_found","","",176,[[["str"],["str"]],["e"]]],[11,"span","","",177,[[["self"]],["span"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,N],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[["self"]],["u"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"try_into","","",177,[[["self"]],["result"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"get_type_id","","",177,[[["self"]],["typeid"]]],[11,"not_found","","",177,[[["str"],["str"]],["e"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,N],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[["self"]],["u"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"try_into","","",178,[[["self"]],["result"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"get_type_id","","",178,[[["self"]],["typeid"]]],[11,"not_found","","",178,[[["str"],["str"]],["e"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,N],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[["self"]],["u"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"try_into","","",179,[[["self"]],["result"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"get_type_id","","",179,[[["self"]],["typeid"]]],[11,"not_found","","",179,[[["str"],["str"]],["e"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,N],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[["self"]],["u"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"try_into","","",180,[[["self"]],["result"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"get_type_id","","",180,[[["self"]],["typeid"]]],[11,"not_found","","",180,[[["str"],["str"]],["e"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"span","","",181,[[["self"]],["span"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,N],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[["self"]],["u"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"try_into","","",181,[[["self"]],["result"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"get_type_id","","",181,[[["self"]],["typeid"]]],[11,"not_found","","",181,[[["str"],["str"]],["e"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,N],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[["self"]],["u"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"try_into","","",182,[[["self"]],["result"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"get_type_id","","",182,[[["self"]],["typeid"]]],[11,"not_found","","",182,[[["str"],["str"]],["e"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,N],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[["self"]],["u"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"try_into","","",183,[[["self"]],["result"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"get_type_id","","",183,[[["self"]],["typeid"]]],[11,"not_found","","",183,[[["str"],["str"]],["e"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,N],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[["self"]],["u"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"try_into","","",184,[[["self"]],["result"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"get_type_id","","",184,[[["self"]],["typeid"]]],[11,"not_found","","",184,[[["str"],["str"]],["e"]]],[11,"span","","",185,[[["self"]],["span"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,N],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[["self"]],["u"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"try_into","","",185,[[["self"]],["result"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"get_type_id","","",185,[[["self"]],["typeid"]]],[11,"not_found","","",185,[[["str"],["str"]],["e"]]],[11,"span","","",186,[[["self"]],["span"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,N],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[["self"]],["u"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"try_into","","",186,[[["self"]],["result"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"get_type_id","","",186,[[["self"]],["typeid"]]],[11,"not_found","","",186,[[["str"],["str"]],["e"]]],[11,"span","","",187,[[["self"]],["span"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,N],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[["self"]],["u"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"try_into","","",187,[[["self"]],["result"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"get_type_id","","",187,[[["self"]],["typeid"]]],[11,"not_found","","",187,[[["str"],["str"]],["e"]]],[11,"span","","",188,[[["self"]],["span"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,N],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[["self"]],["u"]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"try_into","","",188,[[["self"]],["result"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"get_type_id","","",188,[[["self"]],["typeid"]]],[11,"not_found","","",188,[[["str"],["str"]],["e"]]],[11,"span","","",189,[[["self"]],["span"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,N],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[["self"]],["u"]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"try_into","","",189,[[["self"]],["result"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"get_type_id","","",189,[[["self"]],["typeid"]]],[11,"not_found","","",189,[[["str"],["str"]],["e"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,N],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[["self"]],["u"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"try_into","","",190,[[["self"]],["result"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"get_type_id","","",190,[[["self"]],["typeid"]]],[11,"not_found","","",190,[[["str"],["str"]],["e"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,N],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[["self"]],["u"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"try_into","","",191,[[["self"]],["result"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"get_type_id","","",191,[[["self"]],["typeid"]]],[11,"not_found","","",191,[[["str"],["str"]],["e"]]],[11,"peek","syn::token","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,N],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[["self"]],["u"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"try_into","","",192,[[["self"]],["result"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"get_type_id","","",192,[[["self"]],["typeid"]]],[11,"not_found","","",192,[[["str"],["str"]],["e"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,N],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[["self"]],["u"]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"try_into","","",193,[[["self"]],["result"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"get_type_id","","",193,[[["self"]],["typeid"]]],[11,"not_found","","",193,[[["str"],["str"]],["e"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,N],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[["self"]],["u"]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"try_into","","",194,[[["self"]],["result"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"get_type_id","","",194,[[["self"]],["typeid"]]],[11,"not_found","","",194,[[["str"],["str"]],["e"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,N],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[["self"]],["u"]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"try_into","","",195,[[["self"]],["result"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"get_type_id","","",195,[[["self"]],["typeid"]]],[11,"not_found","","",195,[[["str"],["str"]],["e"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,N],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[["self"]],["u"]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"try_into","","",196,[[["self"]],["result"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"get_type_id","","",196,[[["self"]],["typeid"]]],[11,"not_found","","",196,[[["str"],["str"]],["e"]]],[11,"peek","","",197,[[["cursor"]],["bool"]]],[11,"display","","",197,[[],["str"]]],[11,"span","","",197,[[["self"]],["span"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,N],[11,"from","","",197,[[["t"]],["t"]]],[11,"into","","",197,[[["self"]],["u"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"try_into","","",197,[[["self"]],["result"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"get_type_id","","",197,[[["self"]],["typeid"]]],[11,"not_found","","",197,[[["str"],["str"]],["e"]]],[11,"peek","","",198,[[["cursor"]],["bool"]]],[11,"display","","",198,[[],["str"]]],[11,"span","","",198,[[["self"]],["span"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,N],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[["self"]],["u"]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"try_into","","",198,[[["self"]],["result"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"get_type_id","","",198,[[["self"]],["typeid"]]],[11,"not_found","","",198,[[["str"],["str"]],["e"]]],[11,"peek","","",199,[[["cursor"]],["bool"]]],[11,"display","","",199,[[],["str"]]],[11,"span","","",199,[[["self"]],["span"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,N],[11,"from","","",199,[[["t"]],["t"]]],[11,"into","","",199,[[["self"]],["u"]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"try_into","","",199,[[["self"]],["result"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"get_type_id","","",199,[[["self"]],["typeid"]]],[11,"not_found","","",199,[[["str"],["str"]],["e"]]],[11,"peek","","",200,[[["cursor"]],["bool"]]],[11,"display","","",200,[[],["str"]]],[11,"span","","",200,[[["self"]],["span"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,N],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[["self"]],["u"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"try_into","","",200,[[["self"]],["result"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"get_type_id","","",200,[[["self"]],["typeid"]]],[11,"not_found","","",200,[[["str"],["str"]],["e"]]],[11,"peek","","",201,[[["cursor"]],["bool"]]],[11,"display","","",201,[[],["str"]]],[11,"span","","",201,[[["self"]],["span"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,N],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[["self"]],["u"]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"try_into","","",201,[[["self"]],["result"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"get_type_id","","",201,[[["self"]],["typeid"]]],[11,"not_found","","",201,[[["str"],["str"]],["e"]]],[11,"peek","","",202,[[["cursor"]],["bool"]]],[11,"display","","",202,[[],["str"]]],[11,"span","","",202,[[["self"]],["span"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,N],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[["self"]],["u"]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"try_into","","",202,[[["self"]],["result"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"get_type_id","","",202,[[["self"]],["typeid"]]],[11,"not_found","","",202,[[["str"],["str"]],["e"]]],[11,"peek","","",203,[[["cursor"]],["bool"]]],[11,"display","","",203,[[],["str"]]],[11,"span","","",203,[[["self"]],["span"]]],[11,"to_owned","","",203,[[["self"]],["t"]]],[11,"clone_into","","",203,N],[11,"from","","",203,[[["t"]],["t"]]],[11,"into","","",203,[[["self"]],["u"]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"try_into","","",203,[[["self"]],["result"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"get_type_id","","",203,[[["self"]],["typeid"]]],[11,"not_found","","",203,[[["str"],["str"]],["e"]]],[11,"peek","","",204,[[["cursor"]],["bool"]]],[11,"display","","",204,[[],["str"]]],[11,"span","","",204,[[["self"]],["span"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,N],[11,"from","","",204,[[["t"]],["t"]]],[11,"into","","",204,[[["self"]],["u"]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"try_into","","",204,[[["self"]],["result"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"get_type_id","","",204,[[["self"]],["typeid"]]],[11,"not_found","","",204,[[["str"],["str"]],["e"]]],[11,"peek","","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"span","","",205,[[["self"]],["span"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,N],[11,"from","","",205,[[["t"]],["t"]]],[11,"into","","",205,[[["self"]],["u"]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"try_into","","",205,[[["self"]],["result"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"get_type_id","","",205,[[["self"]],["typeid"]]],[11,"not_found","","",205,[[["str"],["str"]],["e"]]],[11,"peek","","",206,[[["cursor"]],["bool"]]],[11,"display","","",206,[[],["str"]]],[11,"span","","",206,[[["self"]],["span"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,N],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[["self"]],["u"]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"try_into","","",206,[[["self"]],["result"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"get_type_id","","",206,[[["self"]],["typeid"]]],[11,"not_found","","",206,[[["str"],["str"]],["e"]]],[11,"peek","","",207,[[["cursor"]],["bool"]]],[11,"display","","",207,[[],["str"]]],[11,"span","","",207,[[["self"]],["span"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,N],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[["self"]],["u"]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"try_into","","",207,[[["self"]],["result"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"get_type_id","","",207,[[["self"]],["typeid"]]],[11,"not_found","","",207,[[["str"],["str"]],["e"]]],[11,"peek","","",208,[[["cursor"]],["bool"]]],[11,"display","","",208,[[],["str"]]],[11,"span","","",208,[[["self"]],["span"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,N],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[["self"]],["u"]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"try_into","","",208,[[["self"]],["result"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"get_type_id","","",208,[[["self"]],["typeid"]]],[11,"not_found","","",208,[[["str"],["str"]],["e"]]],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"span","","",209,[[["self"]],["span"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,N],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[["self"]],["u"]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"try_into","","",209,[[["self"]],["result"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"get_type_id","","",209,[[["self"]],["typeid"]]],[11,"not_found","","",209,[[["str"],["str"]],["e"]]],[11,"peek","","",210,[[["cursor"]],["bool"]]],[11,"display","","",210,[[],["str"]]],[11,"span","","",210,[[["self"]],["span"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,N],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[["self"]],["u"]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"try_into","","",210,[[["self"]],["result"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"get_type_id","","",210,[[["self"]],["typeid"]]],[11,"not_found","","",210,[[["str"],["str"]],["e"]]],[11,"peek","","",211,[[["cursor"]],["bool"]]],[11,"display","","",211,[[],["str"]]],[11,"span","","",211,[[["self"]],["span"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,N],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[["self"]],["u"]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"try_into","","",211,[[["self"]],["result"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"get_type_id","","",211,[[["self"]],["typeid"]]],[11,"not_found","","",211,[[["str"],["str"]],["e"]]],[11,"peek","","",212,[[["cursor"]],["bool"]]],[11,"display","","",212,[[],["str"]]],[11,"span","","",212,[[["self"]],["span"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,N],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[["self"]],["u"]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"try_into","","",212,[[["self"]],["result"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"get_type_id","","",212,[[["self"]],["typeid"]]],[11,"not_found","","",212,[[["str"],["str"]],["e"]]],[11,"peek","","",213,[[["cursor"]],["bool"]]],[11,"display","","",213,[[],["str"]]],[11,"span","","",213,[[["self"]],["span"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,N],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[["self"]],["u"]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"try_into","","",213,[[["self"]],["result"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"get_type_id","","",213,[[["self"]],["typeid"]]],[11,"not_found","","",213,[[["str"],["str"]],["e"]]],[11,"peek","","",214,[[["cursor"]],["bool"]]],[11,"display","","",214,[[],["str"]]],[11,"span","","",214,[[["self"]],["span"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,N],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[["self"]],["u"]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"try_into","","",214,[[["self"]],["result"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"get_type_id","","",214,[[["self"]],["typeid"]]],[11,"not_found","","",214,[[["str"],["str"]],["e"]]],[11,"peek","","",215,[[["cursor"]],["bool"]]],[11,"display","","",215,[[],["str"]]],[11,"span","","",215,[[["self"]],["span"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,N],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[["self"]],["u"]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"try_into","","",215,[[["self"]],["result"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"get_type_id","","",215,[[["self"]],["typeid"]]],[11,"not_found","","",215,[[["str"],["str"]],["e"]]],[11,"peek","","",216,[[["cursor"]],["bool"]]],[11,"display","","",216,[[],["str"]]],[11,"span","","",216,[[["self"]],["span"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,N],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[["self"]],["u"]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"try_into","","",216,[[["self"]],["result"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"get_type_id","","",216,[[["self"]],["typeid"]]],[11,"not_found","","",216,[[["str"],["str"]],["e"]]],[11,"peek","","",217,[[["cursor"]],["bool"]]],[11,"display","","",217,[[],["str"]]],[11,"span","","",217,[[["self"]],["span"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,N],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[["self"]],["u"]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"try_into","","",217,[[["self"]],["result"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"get_type_id","","",217,[[["self"]],["typeid"]]],[11,"not_found","","",217,[[["str"],["str"]],["e"]]],[11,"peek","","",218,[[["cursor"]],["bool"]]],[11,"display","","",218,[[],["str"]]],[11,"span","","",218,[[["self"]],["span"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,N],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[["self"]],["u"]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"try_into","","",218,[[["self"]],["result"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"get_type_id","","",218,[[["self"]],["typeid"]]],[11,"not_found","","",218,[[["str"],["str"]],["e"]]],[11,"peek","","",219,[[["cursor"]],["bool"]]],[11,"display","","",219,[[],["str"]]],[11,"span","","",219,[[["self"]],["span"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,N],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[["self"]],["u"]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"try_into","","",219,[[["self"]],["result"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"get_type_id","","",219,[[["self"]],["typeid"]]],[11,"not_found","","",219,[[["str"],["str"]],["e"]]],[11,"peek","","",220,[[["cursor"]],["bool"]]],[11,"display","","",220,[[],["str"]]],[11,"span","","",220,[[["self"]],["span"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,N],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[["self"]],["u"]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"try_into","","",220,[[["self"]],["result"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"get_type_id","","",220,[[["self"]],["typeid"]]],[11,"not_found","","",220,[[["str"],["str"]],["e"]]],[11,"peek","","",221,[[["cursor"]],["bool"]]],[11,"display","","",221,[[],["str"]]],[11,"span","","",221,[[["self"]],["span"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,N],[11,"from","","",221,[[["t"]],["t"]]],[11,"into","","",221,[[["self"]],["u"]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"try_into","","",221,[[["self"]],["result"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"get_type_id","","",221,[[["self"]],["typeid"]]],[11,"not_found","","",221,[[["str"],["str"]],["e"]]],[11,"peek","","",222,[[["cursor"]],["bool"]]],[11,"display","","",222,[[],["str"]]],[11,"span","","",222,[[["self"]],["span"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,N],[11,"from","","",222,[[["t"]],["t"]]],[11,"into","","",222,[[["self"]],["u"]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"try_into","","",222,[[["self"]],["result"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"get_type_id","","",222,[[["self"]],["typeid"]]],[11,"not_found","","",222,[[["str"],["str"]],["e"]]],[11,"peek","","",223,[[["cursor"]],["bool"]]],[11,"display","","",223,[[],["str"]]],[11,"span","","",223,[[["self"]],["span"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,N],[11,"from","","",223,[[["t"]],["t"]]],[11,"into","","",223,[[["self"]],["u"]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"try_into","","",223,[[["self"]],["result"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"get_type_id","","",223,[[["self"]],["typeid"]]],[11,"not_found","","",223,[[["str"],["str"]],["e"]]],[11,"peek","","",224,[[["cursor"]],["bool"]]],[11,"display","","",224,[[],["str"]]],[11,"span","","",224,[[["self"]],["span"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,N],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[["self"]],["u"]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"try_into","","",224,[[["self"]],["result"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"get_type_id","","",224,[[["self"]],["typeid"]]],[11,"not_found","","",224,[[["str"],["str"]],["e"]]],[11,"peek","","",225,[[["cursor"]],["bool"]]],[11,"display","","",225,[[],["str"]]],[11,"span","","",225,[[["self"]],["span"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,N],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[["self"]],["u"]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"try_into","","",225,[[["self"]],["result"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"get_type_id","","",225,[[["self"]],["typeid"]]],[11,"not_found","","",225,[[["str"],["str"]],["e"]]],[11,"peek","","",226,[[["cursor"]],["bool"]]],[11,"display","","",226,[[],["str"]]],[11,"span","","",226,[[["self"]],["span"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,N],[11,"from","","",226,[[["t"]],["t"]]],[11,"into","","",226,[[["self"]],["u"]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"try_into","","",226,[[["self"]],["result"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"get_type_id","","",226,[[["self"]],["typeid"]]],[11,"not_found","","",226,[[["str"],["str"]],["e"]]],[11,"peek","","",227,[[["cursor"]],["bool"]]],[11,"display","","",227,[[],["str"]]],[11,"span","","",227,[[["self"]],["span"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,N],[11,"from","","",227,[[["t"]],["t"]]],[11,"into","","",227,[[["self"]],["u"]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"try_into","","",227,[[["self"]],["result"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"get_type_id","","",227,[[["self"]],["typeid"]]],[11,"not_found","","",227,[[["str"],["str"]],["e"]]],[11,"peek","","",228,[[["cursor"]],["bool"]]],[11,"display","","",228,[[],["str"]]],[11,"span","","",228,[[["self"]],["span"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,N],[11,"from","","",228,[[["t"]],["t"]]],[11,"into","","",228,[[["self"]],["u"]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"try_into","","",228,[[["self"]],["result"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"get_type_id","","",228,[[["self"]],["typeid"]]],[11,"not_found","","",228,[[["str"],["str"]],["e"]]],[11,"peek","","",229,[[["cursor"]],["bool"]]],[11,"display","","",229,[[],["str"]]],[11,"span","","",229,[[["self"]],["span"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,N],[11,"from","","",229,[[["t"]],["t"]]],[11,"into","","",229,[[["self"]],["u"]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"try_into","","",229,[[["self"]],["result"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"get_type_id","","",229,[[["self"]],["typeid"]]],[11,"not_found","","",229,[[["str"],["str"]],["e"]]],[11,"peek","","",230,[[["cursor"]],["bool"]]],[11,"display","","",230,[[],["str"]]],[11,"span","","",230,[[["self"]],["span"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,N],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[["self"]],["u"]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"try_into","","",230,[[["self"]],["result"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"get_type_id","","",230,[[["self"]],["typeid"]]],[11,"not_found","","",230,[[["str"],["str"]],["e"]]],[11,"peek","","",231,[[["cursor"]],["bool"]]],[11,"display","","",231,[[],["str"]]],[11,"span","","",231,[[["self"]],["span"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,N],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[["self"]],["u"]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"try_into","","",231,[[["self"]],["result"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"get_type_id","","",231,[[["self"]],["typeid"]]],[11,"not_found","","",231,[[["str"],["str"]],["e"]]],[11,"peek","","",232,[[["cursor"]],["bool"]]],[11,"display","","",232,[[],["str"]]],[11,"span","","",232,[[["self"]],["span"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,N],[11,"from","","",232,[[["t"]],["t"]]],[11,"into","","",232,[[["self"]],["u"]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"try_into","","",232,[[["self"]],["result"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"get_type_id","","",232,[[["self"]],["typeid"]]],[11,"not_found","","",232,[[["str"],["str"]],["e"]]],[11,"peek","","",233,[[["cursor"]],["bool"]]],[11,"display","","",233,[[],["str"]]],[11,"span","","",233,[[["self"]],["span"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,N],[11,"from","","",233,[[["t"]],["t"]]],[11,"into","","",233,[[["self"]],["u"]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"try_into","","",233,[[["self"]],["result"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"get_type_id","","",233,[[["self"]],["typeid"]]],[11,"not_found","","",233,[[["str"],["str"]],["e"]]],[11,"peek","","",234,[[["cursor"]],["bool"]]],[11,"display","","",234,[[],["str"]]],[11,"span","","",234,[[["self"]],["span"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,N],[11,"from","","",234,[[["t"]],["t"]]],[11,"into","","",234,[[["self"]],["u"]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"try_into","","",234,[[["self"]],["result"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"get_type_id","","",234,[[["self"]],["typeid"]]],[11,"not_found","","",234,[[["str"],["str"]],["e"]]],[11,"peek","","",235,[[["cursor"]],["bool"]]],[11,"display","","",235,[[],["str"]]],[11,"span","","",235,[[["self"]],["span"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,N],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[["self"]],["u"]]],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"try_into","","",235,[[["self"]],["result"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"get_type_id","","",235,[[["self"]],["typeid"]]],[11,"not_found","","",235,[[["str"],["str"]],["e"]]],[11,"peek","","",236,[[["cursor"]],["bool"]]],[11,"display","","",236,[[],["str"]]],[11,"span","","",236,[[["self"]],["span"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,N],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[["self"]],["u"]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"try_into","","",236,[[["self"]],["result"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"get_type_id","","",236,[[["self"]],["typeid"]]],[11,"not_found","","",236,[[["str"],["str"]],["e"]]],[11,"peek","","",237,[[["cursor"]],["bool"]]],[11,"display","","",237,[[],["str"]]],[11,"span","","",237,[[["self"]],["span"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,N],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[["self"]],["u"]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"try_into","","",237,[[["self"]],["result"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"get_type_id","","",237,[[["self"]],["typeid"]]],[11,"not_found","","",237,[[["str"],["str"]],["e"]]],[11,"peek","","",238,[[["cursor"]],["bool"]]],[11,"display","","",238,[[],["str"]]],[11,"span","","",238,[[["self"]],["span"]]],[11,"to_owned","","",238,[[["self"]],["t"]]],[11,"clone_into","","",238,N],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[["self"]],["u"]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"try_into","","",238,[[["self"]],["result"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"get_type_id","","",238,[[["self"]],["typeid"]]],[11,"not_found","","",238,[[["str"],["str"]],["e"]]],[11,"peek","","",239,[[["cursor"]],["bool"]]],[11,"display","","",239,[[],["str"]]],[11,"span","","",239,[[["self"]],["span"]]],[11,"to_owned","","",239,[[["self"]],["t"]]],[11,"clone_into","","",239,N],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[["self"]],["u"]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"try_into","","",239,[[["self"]],["result"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"get_type_id","","",239,[[["self"]],["typeid"]]],[11,"not_found","","",239,[[["str"],["str"]],["e"]]],[11,"peek","","",240,[[["cursor"]],["bool"]]],[11,"display","","",240,[[],["str"]]],[11,"span","","",240,[[["self"]],["span"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,N],[11,"from","","",240,[[["t"]],["t"]]],[11,"into","","",240,[[["self"]],["u"]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"try_into","","",240,[[["self"]],["result"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"get_type_id","","",240,[[["self"]],["typeid"]]],[11,"not_found","","",240,[[["str"],["str"]],["e"]]],[11,"peek","","",241,[[["cursor"]],["bool"]]],[11,"display","","",241,[[],["str"]]],[11,"span","","",241,[[["self"]],["span"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,N],[11,"from","","",241,[[["t"]],["t"]]],[11,"into","","",241,[[["self"]],["u"]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"try_into","","",241,[[["self"]],["result"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"get_type_id","","",241,[[["self"]],["typeid"]]],[11,"not_found","","",241,[[["str"],["str"]],["e"]]],[11,"peek","","",242,[[["cursor"]],["bool"]]],[11,"display","","",242,[[],["str"]]],[11,"span","","",242,[[["self"]],["span"]]],[11,"to_owned","","",242,[[["self"]],["t"]]],[11,"clone_into","","",242,N],[11,"from","","",242,[[["t"]],["t"]]],[11,"into","","",242,[[["self"]],["u"]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"try_into","","",242,[[["self"]],["result"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"get_type_id","","",242,[[["self"]],["typeid"]]],[11,"not_found","","",242,[[["str"],["str"]],["e"]]],[11,"peek","","",243,[[["cursor"]],["bool"]]],[11,"display","","",243,[[],["str"]]],[11,"span","","",243,[[["self"]],["span"]]],[11,"to_owned","","",243,[[["self"]],["t"]]],[11,"clone_into","","",243,N],[11,"from","","",243,[[["t"]],["t"]]],[11,"into","","",243,[[["self"]],["u"]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"try_into","","",243,[[["self"]],["result"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"get_type_id","","",243,[[["self"]],["typeid"]]],[11,"not_found","","",243,[[["str"],["str"]],["e"]]],[11,"peek","","",244,[[["cursor"]],["bool"]]],[11,"display","","",244,[[],["str"]]],[11,"span","","",244,[[["self"]],["span"]]],[11,"to_owned","","",244,[[["self"]],["t"]]],[11,"clone_into","","",244,N],[11,"from","","",244,[[["t"]],["t"]]],[11,"into","","",244,[[["self"]],["u"]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"try_into","","",244,[[["self"]],["result"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"get_type_id","","",244,[[["self"]],["typeid"]]],[11,"not_found","","",244,[[["str"],["str"]],["e"]]],[11,"peek","","",245,[[["cursor"]],["bool"]]],[11,"display","","",245,[[],["str"]]],[11,"span","","",245,[[["self"]],["span"]]],[11,"to_owned","","",245,[[["self"]],["t"]]],[11,"clone_into","","",245,N],[11,"from","","",245,[[["t"]],["t"]]],[11,"into","","",245,[[["self"]],["u"]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"try_into","","",245,[[["self"]],["result"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"get_type_id","","",245,[[["self"]],["typeid"]]],[11,"not_found","","",245,[[["str"],["str"]],["e"]]],[11,"peek","","",246,[[["cursor"]],["bool"]]],[11,"display","","",246,[[],["str"]]],[11,"span","","",246,[[["self"]],["span"]]],[11,"to_owned","","",246,[[["self"]],["t"]]],[11,"clone_into","","",246,N],[11,"from","","",246,[[["t"]],["t"]]],[11,"into","","",246,[[["self"]],["u"]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"try_into","","",246,[[["self"]],["result"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"get_type_id","","",246,[[["self"]],["typeid"]]],[11,"not_found","","",246,[[["str"],["str"]],["e"]]],[11,"peek","","",247,[[["cursor"]],["bool"]]],[11,"display","","",247,[[],["str"]]],[11,"span","","",247,[[["self"]],["span"]]],[11,"to_owned","","",247,[[["self"]],["t"]]],[11,"clone_into","","",247,N],[11,"from","","",247,[[["t"]],["t"]]],[11,"into","","",247,[[["self"]],["u"]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"try_into","","",247,[[["self"]],["result"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"get_type_id","","",247,[[["self"]],["typeid"]]],[11,"not_found","","",247,[[["str"],["str"]],["e"]]],[11,"peek","","",248,[[["cursor"]],["bool"]]],[11,"display","","",248,[[],["str"]]],[11,"span","","",248,[[["self"]],["span"]]],[11,"to_owned","","",248,[[["self"]],["t"]]],[11,"clone_into","","",248,N],[11,"from","","",248,[[["t"]],["t"]]],[11,"into","","",248,[[["self"]],["u"]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"try_into","","",248,[[["self"]],["result"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"get_type_id","","",248,[[["self"]],["typeid"]]],[11,"not_found","","",248,[[["str"],["str"]],["e"]]],[11,"peek","","",249,[[["cursor"]],["bool"]]],[11,"display","","",249,[[],["str"]]],[11,"span","","",249,[[["self"]],["span"]]],[11,"to_owned","","",249,[[["self"]],["t"]]],[11,"clone_into","","",249,N],[11,"from","","",249,[[["t"]],["t"]]],[11,"into","","",249,[[["self"]],["u"]]],[11,"try_from","","",249,[[["u"]],["result"]]],[11,"borrow","","",249,[[["self"]],["t"]]],[11,"try_into","","",249,[[["self"]],["result"]]],[11,"borrow_mut","","",249,[[["self"]],["t"]]],[11,"get_type_id","","",249,[[["self"]],["typeid"]]],[11,"not_found","","",249,[[["str"],["str"]],["e"]]],[11,"peek","","",250,[[["cursor"]],["bool"]]],[11,"display","","",250,[[],["str"]]],[11,"span","","",250,[[["self"]],["span"]]],[11,"to_owned","","",250,[[["self"]],["t"]]],[11,"clone_into","","",250,N],[11,"from","","",250,[[["t"]],["t"]]],[11,"into","","",250,[[["self"]],["u"]]],[11,"try_from","","",250,[[["u"]],["result"]]],[11,"borrow","","",250,[[["self"]],["t"]]],[11,"try_into","","",250,[[["self"]],["result"]]],[11,"borrow_mut","","",250,[[["self"]],["t"]]],[11,"get_type_id","","",250,[[["self"]],["typeid"]]],[11,"not_found","","",250,[[["str"],["str"]],["e"]]],[11,"peek","","",251,[[["cursor"]],["bool"]]],[11,"display","","",251,[[],["str"]]],[11,"span","","",251,[[["self"]],["span"]]],[11,"to_owned","","",251,[[["self"]],["t"]]],[11,"clone_into","","",251,N],[11,"from","","",251,[[["t"]],["t"]]],[11,"into","","",251,[[["self"]],["u"]]],[11,"try_from","","",251,[[["u"]],["result"]]],[11,"borrow","","",251,[[["self"]],["t"]]],[11,"try_into","","",251,[[["self"]],["result"]]],[11,"borrow_mut","","",251,[[["self"]],["t"]]],[11,"get_type_id","","",251,[[["self"]],["typeid"]]],[11,"not_found","","",251,[[["str"],["str"]],["e"]]],[11,"peek","","",252,[[["cursor"]],["bool"]]],[11,"display","","",252,[[],["str"]]],[11,"span","","",252,[[["self"]],["span"]]],[11,"to_owned","","",252,[[["self"]],["t"]]],[11,"clone_into","","",252,N],[11,"from","","",252,[[["t"]],["t"]]],[11,"into","","",252,[[["self"]],["u"]]],[11,"try_from","","",252,[[["u"]],["result"]]],[11,"borrow","","",252,[[["self"]],["t"]]],[11,"try_into","","",252,[[["self"]],["result"]]],[11,"borrow_mut","","",252,[[["self"]],["t"]]],[11,"get_type_id","","",252,[[["self"]],["typeid"]]],[11,"not_found","","",252,[[["str"],["str"]],["e"]]],[11,"peek","","",253,[[["cursor"]],["bool"]]],[11,"display","","",253,[[],["str"]]],[11,"span","","",253,[[["self"]],["span"]]],[11,"to_owned","","",253,[[["self"]],["t"]]],[11,"clone_into","","",253,N],[11,"from","","",253,[[["t"]],["t"]]],[11,"into","","",253,[[["self"]],["u"]]],[11,"try_from","","",253,[[["u"]],["result"]]],[11,"borrow","","",253,[[["self"]],["t"]]],[11,"try_into","","",253,[[["self"]],["result"]]],[11,"borrow_mut","","",253,[[["self"]],["t"]]],[11,"get_type_id","","",253,[[["self"]],["typeid"]]],[11,"not_found","","",253,[[["str"],["str"]],["e"]]],[11,"peek","","",254,[[["cursor"]],["bool"]]],[11,"display","","",254,[[],["str"]]],[11,"span","","",254,[[["self"]],["span"]]],[11,"to_owned","","",254,[[["self"]],["t"]]],[11,"clone_into","","",254,N],[11,"from","","",254,[[["t"]],["t"]]],[11,"into","","",254,[[["self"]],["u"]]],[11,"try_from","","",254,[[["u"]],["result"]]],[11,"borrow","","",254,[[["self"]],["t"]]],[11,"try_into","","",254,[[["self"]],["result"]]],[11,"borrow_mut","","",254,[[["self"]],["t"]]],[11,"get_type_id","","",254,[[["self"]],["typeid"]]],[11,"not_found","","",254,[[["str"],["str"]],["e"]]],[11,"peek","","",255,[[["cursor"]],["bool"]]],[11,"display","","",255,[[],["str"]]],[11,"span","","",255,[[["self"]],["span"]]],[11,"to_owned","","",255,[[["self"]],["t"]]],[11,"clone_into","","",255,N],[11,"from","","",255,[[["t"]],["t"]]],[11,"into","","",255,[[["self"]],["u"]]],[11,"try_from","","",255,[[["u"]],["result"]]],[11,"borrow","","",255,[[["self"]],["t"]]],[11,"try_into","","",255,[[["self"]],["result"]]],[11,"borrow_mut","","",255,[[["self"]],["t"]]],[11,"get_type_id","","",255,[[["self"]],["typeid"]]],[11,"not_found","","",255,[[["str"],["str"]],["e"]]],[11,"peek","","",256,[[["cursor"]],["bool"]]],[11,"display","","",256,[[],["str"]]],[11,"span","","",256,[[["self"]],["span"]]],[11,"to_owned","","",256,[[["self"]],["t"]]],[11,"clone_into","","",256,N],[11,"from","","",256,[[["t"]],["t"]]],[11,"into","","",256,[[["self"]],["u"]]],[11,"try_from","","",256,[[["u"]],["result"]]],[11,"borrow","","",256,[[["self"]],["t"]]],[11,"try_into","","",256,[[["self"]],["result"]]],[11,"borrow_mut","","",256,[[["self"]],["t"]]],[11,"get_type_id","","",256,[[["self"]],["typeid"]]],[11,"not_found","","",256,[[["str"],["str"]],["e"]]],[11,"peek","","",257,[[["cursor"]],["bool"]]],[11,"display","","",257,[[],["str"]]],[11,"span","","",257,[[["self"]],["span"]]],[11,"to_owned","","",257,[[["self"]],["t"]]],[11,"clone_into","","",257,N],[11,"from","","",257,[[["t"]],["t"]]],[11,"into","","",257,[[["self"]],["u"]]],[11,"try_from","","",257,[[["u"]],["result"]]],[11,"borrow","","",257,[[["self"]],["t"]]],[11,"try_into","","",257,[[["self"]],["result"]]],[11,"borrow_mut","","",257,[[["self"]],["t"]]],[11,"get_type_id","","",257,[[["self"]],["typeid"]]],[11,"not_found","","",257,[[["str"],["str"]],["e"]]],[11,"peek","","",258,[[["cursor"]],["bool"]]],[11,"display","","",258,[[],["str"]]],[11,"span","","",258,[[["self"]],["span"]]],[11,"to_owned","","",258,[[["self"]],["t"]]],[11,"clone_into","","",258,N],[11,"from","","",258,[[["t"]],["t"]]],[11,"into","","",258,[[["self"]],["u"]]],[11,"try_from","","",258,[[["u"]],["result"]]],[11,"borrow","","",258,[[["self"]],["t"]]],[11,"try_into","","",258,[[["self"]],["result"]]],[11,"borrow_mut","","",258,[[["self"]],["t"]]],[11,"get_type_id","","",258,[[["self"]],["typeid"]]],[11,"not_found","","",258,[[["str"],["str"]],["e"]]],[11,"peek","","",259,[[["cursor"]],["bool"]]],[11,"display","","",259,[[],["str"]]],[11,"span","","",259,[[["self"]],["span"]]],[11,"to_owned","","",259,[[["self"]],["t"]]],[11,"clone_into","","",259,N],[11,"from","","",259,[[["t"]],["t"]]],[11,"into","","",259,[[["self"]],["u"]]],[11,"try_from","","",259,[[["u"]],["result"]]],[11,"borrow","","",259,[[["self"]],["t"]]],[11,"try_into","","",259,[[["self"]],["result"]]],[11,"borrow_mut","","",259,[[["self"]],["t"]]],[11,"get_type_id","","",259,[[["self"]],["typeid"]]],[11,"not_found","","",259,[[["str"],["str"]],["e"]]],[11,"peek","","",260,[[["cursor"]],["bool"]]],[11,"display","","",260,[[],["str"]]],[11,"span","","",260,[[["self"]],["span"]]],[11,"to_owned","","",260,[[["self"]],["t"]]],[11,"clone_into","","",260,N],[11,"from","","",260,[[["t"]],["t"]]],[11,"into","","",260,[[["self"]],["u"]]],[11,"try_from","","",260,[[["u"]],["result"]]],[11,"borrow","","",260,[[["self"]],["t"]]],[11,"try_into","","",260,[[["self"]],["result"]]],[11,"borrow_mut","","",260,[[["self"]],["t"]]],[11,"get_type_id","","",260,[[["self"]],["typeid"]]],[11,"not_found","","",260,[[["str"],["str"]],["e"]]],[11,"peek","","",261,[[["cursor"]],["bool"]]],[11,"display","","",261,[[],["str"]]],[11,"span","","",261,[[["self"]],["span"]]],[11,"to_owned","","",261,[[["self"]],["t"]]],[11,"clone_into","","",261,N],[11,"from","","",261,[[["t"]],["t"]]],[11,"into","","",261,[[["self"]],["u"]]],[11,"try_from","","",261,[[["u"]],["result"]]],[11,"borrow","","",261,[[["self"]],["t"]]],[11,"try_into","","",261,[[["self"]],["result"]]],[11,"borrow_mut","","",261,[[["self"]],["t"]]],[11,"get_type_id","","",261,[[["self"]],["typeid"]]],[11,"not_found","","",261,[[["str"],["str"]],["e"]]],[11,"peek","","",262,[[["cursor"]],["bool"]]],[11,"display","","",262,[[],["str"]]],[11,"span","","",262,[[["self"]],["span"]]],[11,"to_owned","","",262,[[["self"]],["t"]]],[11,"clone_into","","",262,N],[11,"from","","",262,[[["t"]],["t"]]],[11,"into","","",262,[[["self"]],["u"]]],[11,"try_from","","",262,[[["u"]],["result"]]],[11,"borrow","","",262,[[["self"]],["t"]]],[11,"try_into","","",262,[[["self"]],["result"]]],[11,"borrow_mut","","",262,[[["self"]],["t"]]],[11,"get_type_id","","",262,[[["self"]],["typeid"]]],[11,"not_found","","",262,[[["str"],["str"]],["e"]]],[11,"peek","","",263,[[["cursor"]],["bool"]]],[11,"display","","",263,[[],["str"]]],[11,"span","","",263,[[["self"]],["span"]]],[11,"to_owned","","",263,[[["self"]],["t"]]],[11,"clone_into","","",263,N],[11,"from","","",263,[[["t"]],["t"]]],[11,"into","","",263,[[["self"]],["u"]]],[11,"try_from","","",263,[[["u"]],["result"]]],[11,"borrow","","",263,[[["self"]],["t"]]],[11,"try_into","","",263,[[["self"]],["result"]]],[11,"borrow_mut","","",263,[[["self"]],["t"]]],[11,"get_type_id","","",263,[[["self"]],["typeid"]]],[11,"not_found","","",263,[[["str"],["str"]],["e"]]],[11,"peek","","",264,[[["cursor"]],["bool"]]],[11,"display","","",264,[[],["str"]]],[11,"span","","",264,[[["self"]],["span"]]],[11,"to_owned","","",264,[[["self"]],["t"]]],[11,"clone_into","","",264,N],[11,"from","","",264,[[["t"]],["t"]]],[11,"into","","",264,[[["self"]],["u"]]],[11,"try_from","","",264,[[["u"]],["result"]]],[11,"borrow","","",264,[[["self"]],["t"]]],[11,"try_into","","",264,[[["self"]],["result"]]],[11,"borrow_mut","","",264,[[["self"]],["t"]]],[11,"get_type_id","","",264,[[["self"]],["typeid"]]],[11,"not_found","","",264,[[["str"],["str"]],["e"]]],[11,"peek","","",265,[[["cursor"]],["bool"]]],[11,"display","","",265,[[],["str"]]],[11,"span","","",265,[[["self"]],["span"]]],[11,"to_owned","","",265,[[["self"]],["t"]]],[11,"clone_into","","",265,N],[11,"from","","",265,[[["t"]],["t"]]],[11,"into","","",265,[[["self"]],["u"]]],[11,"try_from","","",265,[[["u"]],["result"]]],[11,"borrow","","",265,[[["self"]],["t"]]],[11,"try_into","","",265,[[["self"]],["result"]]],[11,"borrow_mut","","",265,[[["self"]],["t"]]],[11,"get_type_id","","",265,[[["self"]],["typeid"]]],[11,"not_found","","",265,[[["str"],["str"]],["e"]]],[11,"peek","","",266,[[["cursor"]],["bool"]]],[11,"display","","",266,[[],["str"]]],[11,"span","","",266,[[["self"]],["span"]]],[11,"to_owned","","",266,[[["self"]],["t"]]],[11,"clone_into","","",266,N],[11,"from","","",266,[[["t"]],["t"]]],[11,"into","","",266,[[["self"]],["u"]]],[11,"try_from","","",266,[[["u"]],["result"]]],[11,"borrow","","",266,[[["self"]],["t"]]],[11,"try_into","","",266,[[["self"]],["result"]]],[11,"borrow_mut","","",266,[[["self"]],["t"]]],[11,"get_type_id","","",266,[[["self"]],["typeid"]]],[11,"not_found","","",266,[[["str"],["str"]],["e"]]],[11,"peek","","",267,[[["cursor"]],["bool"]]],[11,"display","","",267,[[],["str"]]],[11,"span","","",267,[[["self"]],["span"]]],[11,"to_owned","","",267,[[["self"]],["t"]]],[11,"clone_into","","",267,N],[11,"from","","",267,[[["t"]],["t"]]],[11,"into","","",267,[[["self"]],["u"]]],[11,"try_from","","",267,[[["u"]],["result"]]],[11,"borrow","","",267,[[["self"]],["t"]]],[11,"try_into","","",267,[[["self"]],["result"]]],[11,"borrow_mut","","",267,[[["self"]],["t"]]],[11,"get_type_id","","",267,[[["self"]],["typeid"]]],[11,"not_found","","",267,[[["str"],["str"]],["e"]]],[11,"peek","","",268,[[["cursor"]],["bool"]]],[11,"display","","",268,[[],["str"]]],[11,"span","","",268,[[["self"]],["span"]]],[11,"to_owned","","",268,[[["self"]],["t"]]],[11,"clone_into","","",268,N],[11,"from","","",268,[[["t"]],["t"]]],[11,"into","","",268,[[["self"]],["u"]]],[11,"try_from","","",268,[[["u"]],["result"]]],[11,"borrow","","",268,[[["self"]],["t"]]],[11,"try_into","","",268,[[["self"]],["result"]]],[11,"borrow_mut","","",268,[[["self"]],["t"]]],[11,"get_type_id","","",268,[[["self"]],["typeid"]]],[11,"not_found","","",268,[[["str"],["str"]],["e"]]],[11,"peek","","",269,[[["cursor"]],["bool"]]],[11,"display","","",269,[[],["str"]]],[11,"span","","",269,[[["self"]],["span"]]],[11,"to_owned","","",269,[[["self"]],["t"]]],[11,"clone_into","","",269,N],[11,"from","","",269,[[["t"]],["t"]]],[11,"into","","",269,[[["self"]],["u"]]],[11,"try_from","","",269,[[["u"]],["result"]]],[11,"borrow","","",269,[[["self"]],["t"]]],[11,"try_into","","",269,[[["self"]],["result"]]],[11,"borrow_mut","","",269,[[["self"]],["t"]]],[11,"get_type_id","","",269,[[["self"]],["typeid"]]],[11,"not_found","","",269,[[["str"],["str"]],["e"]]],[11,"peek","","",270,[[["cursor"]],["bool"]]],[11,"display","","",270,[[],["str"]]],[11,"span","","",270,[[["self"]],["span"]]],[11,"to_owned","","",270,[[["self"]],["t"]]],[11,"clone_into","","",270,N],[11,"from","","",270,[[["t"]],["t"]]],[11,"into","","",270,[[["self"]],["u"]]],[11,"try_from","","",270,[[["u"]],["result"]]],[11,"borrow","","",270,[[["self"]],["t"]]],[11,"try_into","","",270,[[["self"]],["result"]]],[11,"borrow_mut","","",270,[[["self"]],["t"]]],[11,"get_type_id","","",270,[[["self"]],["typeid"]]],[11,"not_found","","",270,[[["str"],["str"]],["e"]]],[11,"peek","","",271,[[["cursor"]],["bool"]]],[11,"display","","",271,[[],["str"]]],[11,"span","","",271,[[["self"]],["span"]]],[11,"to_owned","","",271,[[["self"]],["t"]]],[11,"clone_into","","",271,N],[11,"from","","",271,[[["t"]],["t"]]],[11,"into","","",271,[[["self"]],["u"]]],[11,"try_from","","",271,[[["u"]],["result"]]],[11,"borrow","","",271,[[["self"]],["t"]]],[11,"try_into","","",271,[[["self"]],["result"]]],[11,"borrow_mut","","",271,[[["self"]],["t"]]],[11,"get_type_id","","",271,[[["self"]],["typeid"]]],[11,"not_found","","",271,[[["str"],["str"]],["e"]]],[11,"peek","","",272,[[["cursor"]],["bool"]]],[11,"display","","",272,[[],["str"]]],[11,"span","","",272,[[["self"]],["span"]]],[11,"to_owned","","",272,[[["self"]],["t"]]],[11,"clone_into","","",272,N],[11,"from","","",272,[[["t"]],["t"]]],[11,"into","","",272,[[["self"]],["u"]]],[11,"try_from","","",272,[[["u"]],["result"]]],[11,"borrow","","",272,[[["self"]],["t"]]],[11,"try_into","","",272,[[["self"]],["result"]]],[11,"borrow_mut","","",272,[[["self"]],["t"]]],[11,"get_type_id","","",272,[[["self"]],["typeid"]]],[11,"not_found","","",272,[[["str"],["str"]],["e"]]],[11,"peek","","",273,[[["cursor"]],["bool"]]],[11,"display","","",273,[[],["str"]]],[11,"span","","",273,[[["self"]],["span"]]],[11,"to_owned","","",273,[[["self"]],["t"]]],[11,"clone_into","","",273,N],[11,"from","","",273,[[["t"]],["t"]]],[11,"into","","",273,[[["self"]],["u"]]],[11,"try_from","","",273,[[["u"]],["result"]]],[11,"borrow","","",273,[[["self"]],["t"]]],[11,"try_into","","",273,[[["self"]],["result"]]],[11,"borrow_mut","","",273,[[["self"]],["t"]]],[11,"get_type_id","","",273,[[["self"]],["typeid"]]],[11,"not_found","","",273,[[["str"],["str"]],["e"]]],[11,"peek","","",274,[[["cursor"]],["bool"]]],[11,"display","","",274,[[],["str"]]],[11,"span","","",274,[[["self"]],["span"]]],[11,"to_owned","","",274,[[["self"]],["t"]]],[11,"clone_into","","",274,N],[11,"from","","",274,[[["t"]],["t"]]],[11,"into","","",274,[[["self"]],["u"]]],[11,"try_from","","",274,[[["u"]],["result"]]],[11,"borrow","","",274,[[["self"]],["t"]]],[11,"try_into","","",274,[[["self"]],["result"]]],[11,"borrow_mut","","",274,[[["self"]],["t"]]],[11,"get_type_id","","",274,[[["self"]],["typeid"]]],[11,"not_found","","",274,[[["str"],["str"]],["e"]]],[11,"peek","","",275,[[["cursor"]],["bool"]]],[11,"display","","",275,[[],["str"]]],[11,"span","","",275,[[["self"]],["span"]]],[11,"to_owned","","",275,[[["self"]],["t"]]],[11,"clone_into","","",275,N],[11,"from","","",275,[[["t"]],["t"]]],[11,"into","","",275,[[["self"]],["u"]]],[11,"try_from","","",275,[[["u"]],["result"]]],[11,"borrow","","",275,[[["self"]],["t"]]],[11,"try_into","","",275,[[["self"]],["result"]]],[11,"borrow_mut","","",275,[[["self"]],["t"]]],[11,"get_type_id","","",275,[[["self"]],["typeid"]]],[11,"not_found","","",275,[[["str"],["str"]],["e"]]],[11,"peek","","",276,[[["cursor"]],["bool"]]],[11,"display","","",276,[[],["str"]]],[11,"span","","",276,[[["self"]],["span"]]],[11,"to_owned","","",276,[[["self"]],["t"]]],[11,"clone_into","","",276,N],[11,"from","","",276,[[["t"]],["t"]]],[11,"into","","",276,[[["self"]],["u"]]],[11,"try_from","","",276,[[["u"]],["result"]]],[11,"borrow","","",276,[[["self"]],["t"]]],[11,"try_into","","",276,[[["self"]],["result"]]],[11,"borrow_mut","","",276,[[["self"]],["t"]]],[11,"get_type_id","","",276,[[["self"]],["typeid"]]],[11,"not_found","","",276,[[["str"],["str"]],["e"]]],[11,"peek","","",277,[[["cursor"]],["bool"]]],[11,"display","","",277,[[],["str"]]],[11,"span","","",277,[[["self"]],["span"]]],[11,"to_owned","","",277,[[["self"]],["t"]]],[11,"clone_into","","",277,N],[11,"from","","",277,[[["t"]],["t"]]],[11,"into","","",277,[[["self"]],["u"]]],[11,"try_from","","",277,[[["u"]],["result"]]],[11,"borrow","","",277,[[["self"]],["t"]]],[11,"try_into","","",277,[[["self"]],["result"]]],[11,"borrow_mut","","",277,[[["self"]],["t"]]],[11,"get_type_id","","",277,[[["self"]],["typeid"]]],[11,"not_found","","",277,[[["str"],["str"]],["e"]]],[11,"peek","","",278,[[["cursor"]],["bool"]]],[11,"display","","",278,[[],["str"]]],[11,"span","","",278,[[["self"]],["span"]]],[11,"to_owned","","",278,[[["self"]],["t"]]],[11,"clone_into","","",278,N],[11,"from","","",278,[[["t"]],["t"]]],[11,"into","","",278,[[["self"]],["u"]]],[11,"try_from","","",278,[[["u"]],["result"]]],[11,"borrow","","",278,[[["self"]],["t"]]],[11,"try_into","","",278,[[["self"]],["result"]]],[11,"borrow_mut","","",278,[[["self"]],["t"]]],[11,"get_type_id","","",278,[[["self"]],["typeid"]]],[11,"not_found","","",278,[[["str"],["str"]],["e"]]],[11,"peek","","",279,[[["cursor"]],["bool"]]],[11,"display","","",279,[[],["str"]]],[11,"span","","",279,[[["self"]],["span"]]],[11,"to_owned","","",279,[[["self"]],["t"]]],[11,"clone_into","","",279,N],[11,"from","","",279,[[["t"]],["t"]]],[11,"into","","",279,[[["self"]],["u"]]],[11,"try_from","","",279,[[["u"]],["result"]]],[11,"borrow","","",279,[[["self"]],["t"]]],[11,"try_into","","",279,[[["self"]],["result"]]],[11,"borrow_mut","","",279,[[["self"]],["t"]]],[11,"get_type_id","","",279,[[["self"]],["typeid"]]],[11,"not_found","","",279,[[["str"],["str"]],["e"]]],[11,"peek","","",280,[[["cursor"]],["bool"]]],[11,"display","","",280,[[],["str"]]],[11,"span","","",280,[[["self"]],["span"]]],[11,"to_owned","","",280,[[["self"]],["t"]]],[11,"clone_into","","",280,N],[11,"from","","",280,[[["t"]],["t"]]],[11,"into","","",280,[[["self"]],["u"]]],[11,"try_from","","",280,[[["u"]],["result"]]],[11,"borrow","","",280,[[["self"]],["t"]]],[11,"try_into","","",280,[[["self"]],["result"]]],[11,"borrow_mut","","",280,[[["self"]],["t"]]],[11,"get_type_id","","",280,[[["self"]],["typeid"]]],[11,"not_found","","",280,[[["str"],["str"]],["e"]]],[11,"peek","","",281,[[["cursor"]],["bool"]]],[11,"display","","",281,[[],["str"]]],[11,"span","","",281,[[["self"]],["span"]]],[11,"to_owned","","",281,[[["self"]],["t"]]],[11,"clone_into","","",281,N],[11,"from","","",281,[[["t"]],["t"]]],[11,"into","","",281,[[["self"]],["u"]]],[11,"try_from","","",281,[[["u"]],["result"]]],[11,"borrow","","",281,[[["self"]],["t"]]],[11,"try_into","","",281,[[["self"]],["result"]]],[11,"borrow_mut","","",281,[[["self"]],["t"]]],[11,"get_type_id","","",281,[[["self"]],["typeid"]]],[11,"not_found","","",281,[[["str"],["str"]],["e"]]],[11,"peek","","",282,[[["cursor"]],["bool"]]],[11,"display","","",282,[[],["str"]]],[11,"span","","",282,[[["self"]],["span"]]],[11,"to_owned","","",282,[[["self"]],["t"]]],[11,"clone_into","","",282,N],[11,"from","","",282,[[["t"]],["t"]]],[11,"into","","",282,[[["self"]],["u"]]],[11,"try_from","","",282,[[["u"]],["result"]]],[11,"borrow","","",282,[[["self"]],["t"]]],[11,"try_into","","",282,[[["self"]],["result"]]],[11,"borrow_mut","","",282,[[["self"]],["t"]]],[11,"get_type_id","","",282,[[["self"]],["typeid"]]],[11,"not_found","","",282,[[["str"],["str"]],["e"]]],[11,"peek","","",283,[[["cursor"]],["bool"]]],[11,"display","","",283,[[],["str"]]],[11,"span","","",283,[[["self"]],["span"]]],[11,"to_owned","","",283,[[["self"]],["t"]]],[11,"clone_into","","",283,N],[11,"from","","",283,[[["t"]],["t"]]],[11,"into","","",283,[[["self"]],["u"]]],[11,"try_from","","",283,[[["u"]],["result"]]],[11,"borrow","","",283,[[["self"]],["t"]]],[11,"try_into","","",283,[[["self"]],["result"]]],[11,"borrow_mut","","",283,[[["self"]],["t"]]],[11,"get_type_id","","",283,[[["self"]],["typeid"]]],[11,"not_found","","",283,[[["str"],["str"]],["e"]]],[11,"peek","","",284,[[["cursor"]],["bool"]]],[11,"display","","",284,[[],["str"]]],[11,"span","","",284,[[["self"]],["span"]]],[11,"to_owned","","",284,[[["self"]],["t"]]],[11,"clone_into","","",284,N],[11,"from","","",284,[[["t"]],["t"]]],[11,"into","","",284,[[["self"]],["u"]]],[11,"try_from","","",284,[[["u"]],["result"]]],[11,"borrow","","",284,[[["self"]],["t"]]],[11,"try_into","","",284,[[["self"]],["result"]]],[11,"borrow_mut","","",284,[[["self"]],["t"]]],[11,"get_type_id","","",284,[[["self"]],["typeid"]]],[11,"not_found","","",284,[[["str"],["str"]],["e"]]],[11,"peek","","",285,[[["cursor"]],["bool"]]],[11,"display","","",285,[[],["str"]]],[11,"span","","",285,[[["self"]],["span"]]],[11,"to_owned","","",285,[[["self"]],["t"]]],[11,"clone_into","","",285,N],[11,"from","","",285,[[["t"]],["t"]]],[11,"into","","",285,[[["self"]],["u"]]],[11,"try_from","","",285,[[["u"]],["result"]]],[11,"borrow","","",285,[[["self"]],["t"]]],[11,"try_into","","",285,[[["self"]],["result"]]],[11,"borrow_mut","","",285,[[["self"]],["t"]]],[11,"get_type_id","","",285,[[["self"]],["typeid"]]],[11,"not_found","","",285,[[["str"],["str"]],["e"]]],[11,"peek","","",286,[[["cursor"]],["bool"]]],[11,"display","","",286,[[],["str"]]],[11,"span","","",286,[[["self"]],["span"]]],[11,"to_owned","","",286,[[["self"]],["t"]]],[11,"clone_into","","",286,N],[11,"from","","",286,[[["t"]],["t"]]],[11,"into","","",286,[[["self"]],["u"]]],[11,"try_from","","",286,[[["u"]],["result"]]],[11,"borrow","","",286,[[["self"]],["t"]]],[11,"try_into","","",286,[[["self"]],["result"]]],[11,"borrow_mut","","",286,[[["self"]],["t"]]],[11,"get_type_id","","",286,[[["self"]],["typeid"]]],[11,"not_found","","",286,[[["str"],["str"]],["e"]]],[11,"peek","","",287,[[["cursor"]],["bool"]]],[11,"display","","",287,[[],["str"]]],[11,"span","","",287,[[["self"]],["span"]]],[11,"to_owned","","",287,[[["self"]],["t"]]],[11,"clone_into","","",287,N],[11,"from","","",287,[[["t"]],["t"]]],[11,"into","","",287,[[["self"]],["u"]]],[11,"try_from","","",287,[[["u"]],["result"]]],[11,"borrow","","",287,[[["self"]],["t"]]],[11,"try_into","","",287,[[["self"]],["result"]]],[11,"borrow_mut","","",287,[[["self"]],["t"]]],[11,"get_type_id","","",287,[[["self"]],["typeid"]]],[11,"not_found","","",287,[[["str"],["str"]],["e"]]],[11,"peek","","",288,[[["cursor"]],["bool"]]],[11,"display","","",288,[[],["str"]]],[11,"span","","",288,[[["self"]],["span"]]],[11,"to_owned","","",288,[[["self"]],["t"]]],[11,"clone_into","","",288,N],[11,"from","","",288,[[["t"]],["t"]]],[11,"into","","",288,[[["self"]],["u"]]],[11,"try_from","","",288,[[["u"]],["result"]]],[11,"borrow","","",288,[[["self"]],["t"]]],[11,"try_into","","",288,[[["self"]],["result"]]],[11,"borrow_mut","","",288,[[["self"]],["t"]]],[11,"get_type_id","","",288,[[["self"]],["typeid"]]],[11,"not_found","","",288,[[["str"],["str"]],["e"]]],[11,"peek","","",289,[[["cursor"]],["bool"]]],[11,"display","","",289,[[],["str"]]],[11,"span","","",289,[[["self"]],["span"]]],[11,"to_owned","","",289,[[["self"]],["t"]]],[11,"clone_into","","",289,N],[11,"from","","",289,[[["t"]],["t"]]],[11,"into","","",289,[[["self"]],["u"]]],[11,"try_from","","",289,[[["u"]],["result"]]],[11,"borrow","","",289,[[["self"]],["t"]]],[11,"try_into","","",289,[[["self"]],["result"]]],[11,"borrow_mut","","",289,[[["self"]],["t"]]],[11,"get_type_id","","",289,[[["self"]],["typeid"]]],[11,"not_found","","",289,[[["str"],["str"]],["e"]]],[11,"peek","","",290,[[["cursor"]],["bool"]]],[11,"display","","",290,[[],["str"]]],[11,"span","","",290,[[["self"]],["span"]]],[11,"to_owned","","",290,[[["self"]],["t"]]],[11,"clone_into","","",290,N],[11,"from","","",290,[[["t"]],["t"]]],[11,"into","","",290,[[["self"]],["u"]]],[11,"try_from","","",290,[[["u"]],["result"]]],[11,"borrow","","",290,[[["self"]],["t"]]],[11,"try_into","","",290,[[["self"]],["result"]]],[11,"borrow_mut","","",290,[[["self"]],["t"]]],[11,"get_type_id","","",290,[[["self"]],["typeid"]]],[11,"not_found","","",290,[[["str"],["str"]],["e"]]],[11,"peek","","",291,[[["cursor"]],["bool"]]],[11,"display","","",291,[[],["str"]]],[11,"to_owned","","",291,[[["self"]],["t"]]],[11,"clone_into","","",291,N],[11,"from","","",291,[[["t"]],["t"]]],[11,"into","","",291,[[["self"]],["u"]]],[11,"try_from","","",291,[[["u"]],["result"]]],[11,"borrow","","",291,[[["self"]],["t"]]],[11,"try_into","","",291,[[["self"]],["result"]]],[11,"borrow_mut","","",291,[[["self"]],["t"]]],[11,"get_type_id","","",291,[[["self"]],["typeid"]]],[11,"not_found","","",291,[[["str"],["str"]],["e"]]],[11,"peek","","",292,[[["cursor"]],["bool"]]],[11,"display","","",292,[[],["str"]]],[11,"to_owned","","",292,[[["self"]],["t"]]],[11,"clone_into","","",292,N],[11,"from","","",292,[[["t"]],["t"]]],[11,"into","","",292,[[["self"]],["u"]]],[11,"try_from","","",292,[[["u"]],["result"]]],[11,"borrow","","",292,[[["self"]],["t"]]],[11,"try_into","","",292,[[["self"]],["result"]]],[11,"borrow_mut","","",292,[[["self"]],["t"]]],[11,"get_type_id","","",292,[[["self"]],["typeid"]]],[11,"not_found","","",292,[[["str"],["str"]],["e"]]],[11,"peek","","",293,[[["cursor"]],["bool"]]],[11,"display","","",293,[[],["str"]]],[11,"to_owned","","",293,[[["self"]],["t"]]],[11,"clone_into","","",293,N],[11,"from","","",293,[[["t"]],["t"]]],[11,"into","","",293,[[["self"]],["u"]]],[11,"try_from","","",293,[[["u"]],["result"]]],[11,"borrow","","",293,[[["self"]],["t"]]],[11,"try_into","","",293,[[["self"]],["result"]]],[11,"borrow_mut","","",293,[[["self"]],["t"]]],[11,"get_type_id","","",293,[[["self"]],["typeid"]]],[11,"not_found","","",293,[[["str"],["str"]],["e"]]],[11,"peek","","",294,[[["cursor"]],["bool"]]],[11,"display","","",294,[[],["str"]]],[11,"to_owned","","",294,[[["self"]],["t"]]],[11,"clone_into","","",294,N],[11,"from","","",294,[[["t"]],["t"]]],[11,"into","","",294,[[["self"]],["u"]]],[11,"try_from","","",294,[[["u"]],["result"]]],[11,"borrow","","",294,[[["self"]],["t"]]],[11,"try_into","","",294,[[["self"]],["result"]]],[11,"borrow_mut","","",294,[[["self"]],["t"]]],[11,"get_type_id","","",294,[[["self"]],["typeid"]]],[11,"not_found","","",294,[[["str"],["str"]],["e"]]],[11,"from","syn::buffer","",305,[[["t"]],["t"]]],[11,"into","","",305,[[["self"]],["u"]]],[11,"try_from","","",305,[[["u"]],["result"]]],[11,"borrow","","",305,[[["self"]],["t"]]],[11,"try_into","","",305,[[["self"]],["result"]]],[11,"borrow_mut","","",305,[[["self"]],["t"]]],[11,"get_type_id","","",305,[[["self"]],["typeid"]]],[11,"not_found","","",305,[[["str"],["str"]],["e"]]],[11,"to_owned","","",306,[[["self"]],["t"]]],[11,"clone_into","","",306,N],[11,"from","","",306,[[["t"]],["t"]]],[11,"into","","",306,[[["self"]],["u"]]],[11,"try_from","","",306,[[["u"]],["result"]]],[11,"borrow","","",306,[[["self"]],["t"]]],[11,"try_into","","",306,[[["self"]],["result"]]],[11,"borrow_mut","","",306,[[["self"]],["t"]]],[11,"get_type_id","","",306,[[["self"]],["typeid"]]],[11,"not_found","","",306,[[["str"],["str"]],["e"]]],[11,"span","syn::punctuated","",309,[[["self"]],["span"]]],[11,"to_owned","","",309,[[["self"]],["t"]]],[11,"clone_into","","",309,N],[11,"from","","",309,[[["t"]],["t"]]],[11,"into_iter","","",309,[[["self"]],["i"]]],[11,"into","","",309,[[["self"]],["u"]]],[11,"try_from","","",309,[[["u"]],["result"]]],[11,"borrow","","",309,[[["self"]],["t"]]],[11,"try_into","","",309,[[["self"]],["result"]]],[11,"borrow_mut","","",309,[[["self"]],["t"]]],[11,"get_type_id","","",309,[[["self"]],["typeid"]]],[11,"not_found","","",309,[[["str"],["str"]],["e"]]],[11,"from","","",310,[[["t"]],["t"]]],[11,"into_iter","","",310,[[["self"]],["i"]]],[11,"into","","",310,[[["self"]],["u"]]],[11,"try_from","","",310,[[["u"]],["result"]]],[11,"borrow","","",310,[[["self"]],["t"]]],[11,"try_into","","",310,[[["self"]],["result"]]],[11,"borrow_mut","","",310,[[["self"]],["t"]]],[11,"get_type_id","","",310,[[["self"]],["typeid"]]],[11,"not_found","","",310,[[["str"],["str"]],["e"]]],[11,"from","","",311,[[["t"]],["t"]]],[11,"into_iter","","",311,[[["self"]],["i"]]],[11,"into","","",311,[[["self"]],["u"]]],[11,"try_from","","",311,[[["u"]],["result"]]],[11,"borrow","","",311,[[["self"]],["t"]]],[11,"try_into","","",311,[[["self"]],["result"]]],[11,"borrow_mut","","",311,[[["self"]],["t"]]],[11,"get_type_id","","",311,[[["self"]],["typeid"]]],[11,"not_found","","",311,[[["str"],["str"]],["e"]]],[11,"from","","",312,[[["t"]],["t"]]],[11,"into_iter","","",312,[[["self"]],["i"]]],[11,"into","","",312,[[["self"]],["u"]]],[11,"try_from","","",312,[[["u"]],["result"]]],[11,"borrow","","",312,[[["self"]],["t"]]],[11,"try_into","","",312,[[["self"]],["result"]]],[11,"borrow_mut","","",312,[[["self"]],["t"]]],[11,"get_type_id","","",312,[[["self"]],["typeid"]]],[11,"not_found","","",312,[[["str"],["str"]],["e"]]],[11,"from","","",313,[[["t"]],["t"]]],[11,"into_iter","","",313,[[["self"]],["i"]]],[11,"into","","",313,[[["self"]],["u"]]],[11,"try_from","","",313,[[["u"]],["result"]]],[11,"borrow","","",313,[[["self"]],["t"]]],[11,"try_into","","",313,[[["self"]],["result"]]],[11,"borrow_mut","","",313,[[["self"]],["t"]]],[11,"get_type_id","","",313,[[["self"]],["typeid"]]],[11,"not_found","","",313,[[["str"],["str"]],["e"]]],[11,"from","","",314,[[["t"]],["t"]]],[11,"into_iter","","",314,[[["self"]],["i"]]],[11,"into","","",314,[[["self"]],["u"]]],[11,"try_from","","",314,[[["u"]],["result"]]],[11,"borrow","","",314,[[["self"]],["t"]]],[11,"try_into","","",314,[[["self"]],["result"]]],[11,"borrow_mut","","",314,[[["self"]],["t"]]],[11,"get_type_id","","",314,[[["self"]],["typeid"]]],[11,"not_found","","",314,[[["str"],["str"]],["e"]]],[11,"from","","",315,[[["t"]],["t"]]],[11,"into_iter","","",315,[[["self"]],["i"]]],[11,"into","","",315,[[["self"]],["u"]]],[11,"try_from","","",315,[[["u"]],["result"]]],[11,"borrow","","",315,[[["self"]],["t"]]],[11,"try_into","","",315,[[["self"]],["result"]]],[11,"borrow_mut","","",315,[[["self"]],["t"]]],[11,"get_type_id","","",315,[[["self"]],["typeid"]]],[11,"not_found","","",315,[[["str"],["str"]],["e"]]],[11,"span","","",308,[[["self"]],["span"]]],[11,"from","","",308,[[["t"]],["t"]]],[11,"into","","",308,[[["self"]],["u"]]],[11,"try_from","","",308,[[["u"]],["result"]]],[11,"borrow","","",308,[[["self"]],["t"]]],[11,"try_into","","",308,[[["self"]],["result"]]],[11,"borrow_mut","","",308,[[["self"]],["t"]]],[11,"get_type_id","","",308,[[["self"]],["typeid"]]],[11,"not_found","","",308,[[["str"],["str"]],["e"]]],[11,"fold_abi","syn::fold","",317,[[["self"],["abi"]],["abi"]]],[11,"fold_angle_bracketed_generic_arguments","","",317,[[["self"],["anglebracketedgenericarguments"]],["anglebracketedgenericarguments"]]],[11,"fold_arg_captured","","",317,[[["self"],["argcaptured"]],["argcaptured"]]],[11,"fold_arg_self","","",317,[[["self"],["argself"]],["argself"]]],[11,"fold_arg_self_ref","","",317,[[["self"],["argselfref"]],["argselfref"]]],[11,"fold_arm","","",317,[[["self"],["arm"]],["arm"]]],[11,"fold_attr_style","","",317,[[["self"],["attrstyle"]],["attrstyle"]]],[11,"fold_attribute","","",317,[[["self"],["attribute"]],["attribute"]]],[11,"fold_bare_fn_arg","","",317,[[["self"],["barefnarg"]],["barefnarg"]]],[11,"fold_bare_fn_arg_name","","",317,[[["self"],["barefnargname"]],["barefnargname"]]],[11,"fold_bin_op","","",317,[[["self"],["binop"]],["binop"]]],[11,"fold_binding","","",317,[[["self"],["binding"]],["binding"]]],[11,"fold_block","","",317,[[["self"],["block"]],["block"]]],[11,"fold_bound_lifetimes","","",317,[[["self"],["boundlifetimes"]],["boundlifetimes"]]],[11,"fold_const_param","","",317,[[["self"],["constparam"]],["constparam"]]],[11,"fold_constraint","","",317,[[["self"],["constraint"]],["constraint"]]],[11,"fold_data","","",317,[[["self"],["data"]],["data"]]],[11,"fold_data_enum","","",317,[[["self"],["dataenum"]],["dataenum"]]],[11,"fold_data_struct","","",317,[[["self"],["datastruct"]],["datastruct"]]],[11,"fold_data_union","","",317,[[["self"],["dataunion"]],["dataunion"]]],[11,"fold_derive_input","","",317,[[["self"],["deriveinput"]],["deriveinput"]]],[11,"fold_expr","","",317,[[["self"],["expr"]],["expr"]]],[11,"fold_expr_array","","",317,[[["self"],["exprarray"]],["exprarray"]]],[11,"fold_expr_assign","","",317,[[["self"],["exprassign"]],["exprassign"]]],[11,"fold_expr_assign_op","","",317,[[["self"],["exprassignop"]],["exprassignop"]]],[11,"fold_expr_async","","",317,[[["self"],["exprasync"]],["exprasync"]]],[11,"fold_expr_binary","","",317,[[["self"],["exprbinary"]],["exprbinary"]]],[11,"fold_expr_block","","",317,[[["self"],["exprblock"]],["exprblock"]]],[11,"fold_expr_box","","",317,[[["self"],["exprbox"]],["exprbox"]]],[11,"fold_expr_break","","",317,[[["self"],["exprbreak"]],["exprbreak"]]],[11,"fold_expr_call","","",317,[[["self"],["exprcall"]],["exprcall"]]],[11,"fold_expr_cast","","",317,[[["self"],["exprcast"]],["exprcast"]]],[11,"fold_expr_closure","","",317,[[["self"],["exprclosure"]],["exprclosure"]]],[11,"fold_expr_continue","","",317,[[["self"],["exprcontinue"]],["exprcontinue"]]],[11,"fold_expr_field","","",317,[[["self"],["exprfield"]],["exprfield"]]],[11,"fold_expr_for_loop","","",317,[[["self"],["exprforloop"]],["exprforloop"]]],[11,"fold_expr_group","","",317,[[["self"],["exprgroup"]],["exprgroup"]]],[11,"fold_expr_if","","",317,[[["self"],["exprif"]],["exprif"]]],[11,"fold_expr_in_place","","",317,[[["self"],["exprinplace"]],["exprinplace"]]],[11,"fold_expr_index","","",317,[[["self"],["exprindex"]],["exprindex"]]],[11,"fold_expr_let","","",317,[[["self"],["exprlet"]],["exprlet"]]],[11,"fold_expr_lit","","",317,[[["self"],["exprlit"]],["exprlit"]]],[11,"fold_expr_loop","","",317,[[["self"],["exprloop"]],["exprloop"]]],[11,"fold_expr_macro","","",317,[[["self"],["exprmacro"]],["exprmacro"]]],[11,"fold_expr_match","","",317,[[["self"],["exprmatch"]],["exprmatch"]]],[11,"fold_expr_method_call","","",317,[[["self"],["exprmethodcall"]],["exprmethodcall"]]],[11,"fold_expr_paren","","",317,[[["self"],["exprparen"]],["exprparen"]]],[11,"fold_expr_path","","",317,[[["self"],["exprpath"]],["exprpath"]]],[11,"fold_expr_range","","",317,[[["self"],["exprrange"]],["exprrange"]]],[11,"fold_expr_reference","","",317,[[["self"],["exprreference"]],["exprreference"]]],[11,"fold_expr_repeat","","",317,[[["self"],["exprrepeat"]],["exprrepeat"]]],[11,"fold_expr_return","","",317,[[["self"],["exprreturn"]],["exprreturn"]]],[11,"fold_expr_struct","","",317,[[["self"],["exprstruct"]],["exprstruct"]]],[11,"fold_expr_try","","",317,[[["self"],["exprtry"]],["exprtry"]]],[11,"fold_expr_try_block","","",317,[[["self"],["exprtryblock"]],["exprtryblock"]]],[11,"fold_expr_tuple","","",317,[[["self"],["exprtuple"]],["exprtuple"]]],[11,"fold_expr_type","","",317,[[["self"],["exprtype"]],["exprtype"]]],[11,"fold_expr_unary","","",317,[[["self"],["exprunary"]],["exprunary"]]],[11,"fold_expr_unsafe","","",317,[[["self"],["exprunsafe"]],["exprunsafe"]]],[11,"fold_expr_verbatim","","",317,[[["self"],["exprverbatim"]],["exprverbatim"]]],[11,"fold_expr_while","","",317,[[["self"],["exprwhile"]],["exprwhile"]]],[11,"fold_expr_yield","","",317,[[["self"],["expryield"]],["expryield"]]],[11,"fold_field","","",317,[[["self"],["field"]],["field"]]],[11,"fold_field_pat","","",317,[[["self"],["fieldpat"]],["fieldpat"]]],[11,"fold_field_value","","",317,[[["self"],["fieldvalue"]],["fieldvalue"]]],[11,"fold_fields","","",317,[[["self"],["fields"]],["fields"]]],[11,"fold_fields_named","","",317,[[["self"],["fieldsnamed"]],["fieldsnamed"]]],[11,"fold_fields_unnamed","","",317,[[["self"],["fieldsunnamed"]],["fieldsunnamed"]]],[11,"fold_file","","",317,[[["self"],["file"]],["file"]]],[11,"fold_fn_arg","","",317,[[["self"],["fnarg"]],["fnarg"]]],[11,"fold_fn_decl","","",317,[[["self"],["fndecl"]],["fndecl"]]],[11,"fold_foreign_item","","",317,[[["self"],["foreignitem"]],["foreignitem"]]],[11,"fold_foreign_item_fn","","",317,[[["self"],["foreignitemfn"]],["foreignitemfn"]]],[11,"fold_foreign_item_macro","","",317,[[["self"],["foreignitemmacro"]],["foreignitemmacro"]]],[11,"fold_foreign_item_static","","",317,[[["self"],["foreignitemstatic"]],["foreignitemstatic"]]],[11,"fold_foreign_item_type","","",317,[[["self"],["foreignitemtype"]],["foreignitemtype"]]],[11,"fold_foreign_item_verbatim","","",317,[[["self"],["foreignitemverbatim"]],["foreignitemverbatim"]]],[11,"fold_generic_argument","","",317,[[["self"],["genericargument"]],["genericargument"]]],[11,"fold_generic_method_argument","","",317,[[["self"],["genericmethodargument"]],["genericmethodargument"]]],[11,"fold_generic_param","","",317,[[["self"],["genericparam"]],["genericparam"]]],[11,"fold_generics","","",317,[[["self"],["generics"]],["generics"]]],[11,"fold_ident","","",317,[[["self"],["ident"]],["ident"]]],[11,"fold_impl_item","","",317,[[["self"],["implitem"]],["implitem"]]],[11,"fold_impl_item_const","","",317,[[["self"],["implitemconst"]],["implitemconst"]]],[11,"fold_impl_item_existential","","",317,[[["self"],["implitemexistential"]],["implitemexistential"]]],[11,"fold_impl_item_macro","","",317,[[["self"],["implitemmacro"]],["implitemmacro"]]],[11,"fold_impl_item_method","","",317,[[["self"],["implitemmethod"]],["implitemmethod"]]],[11,"fold_impl_item_type","","",317,[[["self"],["implitemtype"]],["implitemtype"]]],[11,"fold_impl_item_verbatim","","",317,[[["self"],["implitemverbatim"]],["implitemverbatim"]]],[11,"fold_index","","",317,[[["self"],["index"]],["index"]]],[11,"fold_item","","",317,[[["self"],["item"]],["item"]]],[11,"fold_item_const","","",317,[[["self"],["itemconst"]],["itemconst"]]],[11,"fold_item_enum","","",317,[[["self"],["itemenum"]],["itemenum"]]],[11,"fold_item_existential","","",317,[[["self"],["itemexistential"]],["itemexistential"]]],[11,"fold_item_extern_crate","","",317,[[["self"],["itemexterncrate"]],["itemexterncrate"]]],[11,"fold_item_fn","","",317,[[["self"],["itemfn"]],["itemfn"]]],[11,"fold_item_foreign_mod","","",317,[[["self"],["itemforeignmod"]],["itemforeignmod"]]],[11,"fold_item_impl","","",317,[[["self"],["itemimpl"]],["itemimpl"]]],[11,"fold_item_macro","","",317,[[["self"],["itemmacro"]],["itemmacro"]]],[11,"fold_item_macro2","","",317,[[["self"],["itemmacro2"]],["itemmacro2"]]],[11,"fold_item_mod","","",317,[[["self"],["itemmod"]],["itemmod"]]],[11,"fold_item_static","","",317,[[["self"],["itemstatic"]],["itemstatic"]]],[11,"fold_item_struct","","",317,[[["self"],["itemstruct"]],["itemstruct"]]],[11,"fold_item_trait","","",317,[[["self"],["itemtrait"]],["itemtrait"]]],[11,"fold_item_trait_alias","","",317,[[["self"],["itemtraitalias"]],["itemtraitalias"]]],[11,"fold_item_type","","",317,[[["self"],["itemtype"]],["itemtype"]]],[11,"fold_item_union","","",317,[[["self"],["itemunion"]],["itemunion"]]],[11,"fold_item_use","","",317,[[["self"],["itemuse"]],["itemuse"]]],[11,"fold_item_verbatim","","",317,[[["self"],["itemverbatim"]],["itemverbatim"]]],[11,"fold_label","","",317,[[["self"],["label"]],["label"]]],[11,"fold_lifetime","","",317,[[["self"],["lifetime"]],["lifetime"]]],[11,"fold_lifetime_def","","",317,[[["self"],["lifetimedef"]],["lifetimedef"]]],[11,"fold_lit","","",317,[[["self"],["lit"]],["lit"]]],[11,"fold_lit_bool","","",317,[[["self"],["litbool"]],["litbool"]]],[11,"fold_lit_byte","","",317,[[["self"],["litbyte"]],["litbyte"]]],[11,"fold_lit_byte_str","","",317,[[["self"],["litbytestr"]],["litbytestr"]]],[11,"fold_lit_char","","",317,[[["self"],["litchar"]],["litchar"]]],[11,"fold_lit_float","","",317,[[["self"],["litfloat"]],["litfloat"]]],[11,"fold_lit_int","","",317,[[["self"],["litint"]],["litint"]]],[11,"fold_lit_str","","",317,[[["self"],["litstr"]],["litstr"]]],[11,"fold_lit_verbatim","","",317,[[["self"],["litverbatim"]],["litverbatim"]]],[11,"fold_local","","",317,[[["self"],["local"]],["local"]]],[11,"fold_macro","","",317,[[["self"],["macro"]],["macro"]]],[11,"fold_macro_delimiter","","",317,[[["self"],["macrodelimiter"]],["macrodelimiter"]]],[11,"fold_member","","",317,[[["self"],["member"]],["member"]]],[11,"fold_meta","","",317,[[["self"],["meta"]],["meta"]]],[11,"fold_meta_list","","",317,[[["self"],["metalist"]],["metalist"]]],[11,"fold_meta_name_value","","",317,[[["self"],["metanamevalue"]],["metanamevalue"]]],[11,"fold_method_sig","","",317,[[["self"],["methodsig"]],["methodsig"]]],[11,"fold_method_turbofish","","",317,[[["self"],["methodturbofish"]],["methodturbofish"]]],[11,"fold_nested_meta","","",317,[[["self"],["nestedmeta"]],["nestedmeta"]]],[11,"fold_parenthesized_generic_arguments","","",317,[[["self"],["parenthesizedgenericarguments"]],["parenthesizedgenericarguments"]]],[11,"fold_pat","","",317,[[["self"],["pat"]],["pat"]]],[11,"fold_pat_box","","",317,[[["self"],["patbox"]],["patbox"]]],[11,"fold_pat_ident","","",317,[[["self"],["patident"]],["patident"]]],[11,"fold_pat_lit","","",317,[[["self"],["patlit"]],["patlit"]]],[11,"fold_pat_macro","","",317,[[["self"],["patmacro"]],["patmacro"]]],[11,"fold_pat_path","","",317,[[["self"],["patpath"]],["patpath"]]],[11,"fold_pat_range","","",317,[[["self"],["patrange"]],["patrange"]]],[11,"fold_pat_ref","","",317,[[["self"],["patref"]],["patref"]]],[11,"fold_pat_slice","","",317,[[["self"],["patslice"]],["patslice"]]],[11,"fold_pat_struct","","",317,[[["self"],["patstruct"]],["patstruct"]]],[11,"fold_pat_tuple","","",317,[[["self"],["pattuple"]],["pattuple"]]],[11,"fold_pat_tuple_struct","","",317,[[["self"],["pattuplestruct"]],["pattuplestruct"]]],[11,"fold_pat_verbatim","","",317,[[["self"],["patverbatim"]],["patverbatim"]]],[11,"fold_pat_wild","","",317,[[["self"],["patwild"]],["patwild"]]],[11,"fold_path","","",317,[[["self"],["path"]],["path"]]],[11,"fold_path_arguments","","",317,[[["self"],["patharguments"]],["patharguments"]]],[11,"fold_path_segment","","",317,[[["self"],["pathsegment"]],["pathsegment"]]],[11,"fold_predicate_eq","","",317,[[["self"],["predicateeq"]],["predicateeq"]]],[11,"fold_predicate_lifetime","","",317,[[["self"],["predicatelifetime"]],["predicatelifetime"]]],[11,"fold_predicate_type","","",317,[[["self"],["predicatetype"]],["predicatetype"]]],[11,"fold_qself","","",317,[[["self"],["qself"]],["qself"]]],[11,"fold_range_limits","","",317,[[["self"],["rangelimits"]],["rangelimits"]]],[11,"fold_return_type","","",317,[[["self"],["returntype"]],["returntype"]]],[11,"fold_span","","",317,[[["self"],["span"]],["span"]]],[11,"fold_stmt","","",317,[[["self"],["stmt"]],["stmt"]]],[11,"fold_trait_bound","","",317,[[["self"],["traitbound"]],["traitbound"]]],[11,"fold_trait_bound_modifier","","",317,[[["self"],["traitboundmodifier"]],["traitboundmodifier"]]],[11,"fold_trait_item","","",317,[[["self"],["traititem"]],["traititem"]]],[11,"fold_trait_item_const","","",317,[[["self"],["traititemconst"]],["traititemconst"]]],[11,"fold_trait_item_macro","","",317,[[["self"],["traititemmacro"]],["traititemmacro"]]],[11,"fold_trait_item_method","","",317,[[["self"],["traititemmethod"]],["traititemmethod"]]],[11,"fold_trait_item_type","","",317,[[["self"],["traititemtype"]],["traititemtype"]]],[11,"fold_trait_item_verbatim","","",317,[[["self"],["traititemverbatim"]],["traititemverbatim"]]],[11,"fold_type","","",317,[[["self"],["type"]],["type"]]],[11,"fold_type_array","","",317,[[["self"],["typearray"]],["typearray"]]],[11,"fold_type_bare_fn","","",317,[[["self"],["typebarefn"]],["typebarefn"]]],[11,"fold_type_group","","",317,[[["self"],["typegroup"]],["typegroup"]]],[11,"fold_type_impl_trait","","",317,[[["self"],["typeimpltrait"]],["typeimpltrait"]]],[11,"fold_type_infer","","",317,[[["self"],["typeinfer"]],["typeinfer"]]],[11,"fold_type_macro","","",317,[[["self"],["typemacro"]],["typemacro"]]],[11,"fold_type_never","","",317,[[["self"],["typenever"]],["typenever"]]],[11,"fold_type_param","","",317,[[["self"],["typeparam"]],["typeparam"]]],[11,"fold_type_param_bound","","",317,[[["self"],["typeparambound"]],["typeparambound"]]],[11,"fold_type_paren","","",317,[[["self"],["typeparen"]],["typeparen"]]],[11,"fold_type_path","","",317,[[["self"],["typepath"]],["typepath"]]],[11,"fold_type_ptr","","",317,[[["self"],["typeptr"]],["typeptr"]]],[11,"fold_type_reference","","",317,[[["self"],["typereference"]],["typereference"]]],[11,"fold_type_slice","","",317,[[["self"],["typeslice"]],["typeslice"]]],[11,"fold_type_trait_object","","",317,[[["self"],["typetraitobject"]],["typetraitobject"]]],[11,"fold_type_tuple","","",317,[[["self"],["typetuple"]],["typetuple"]]],[11,"fold_type_verbatim","","",317,[[["self"],["typeverbatim"]],["typeverbatim"]]],[11,"fold_un_op","","",317,[[["self"],["unop"]],["unop"]]],[11,"fold_use_glob","","",317,[[["self"],["useglob"]],["useglob"]]],[11,"fold_use_group","","",317,[[["self"],["usegroup"]],["usegroup"]]],[11,"fold_use_name","","",317,[[["self"],["usename"]],["usename"]]],[11,"fold_use_path","","",317,[[["self"],["usepath"]],["usepath"]]],[11,"fold_use_rename","","",317,[[["self"],["userename"]],["userename"]]],[11,"fold_use_tree","","",317,[[["self"],["usetree"]],["usetree"]]],[11,"fold_variant","","",317,[[["self"],["variant"]],["variant"]]],[11,"fold_vis_crate","","",317,[[["self"],["viscrate"]],["viscrate"]]],[11,"fold_vis_public","","",317,[[["self"],["vispublic"]],["vispublic"]]],[11,"fold_vis_restricted","","",317,[[["self"],["visrestricted"]],["visrestricted"]]],[11,"fold_visibility","","",317,[[["self"],["visibility"]],["visibility"]]],[11,"fold_where_clause","","",317,[[["self"],["whereclause"]],["whereclause"]]],[11,"fold_where_predicate","","",317,[[["self"],["wherepredicate"]],["wherepredicate"]]],[11,"from","syn::parse","",323,[[["t"]],["t"]]],[11,"into","","",323,[[["self"]],["u"]]],[11,"try_from","","",323,[[["u"]],["result"]]],[11,"borrow","","",323,[[["self"]],["t"]]],[11,"try_into","","",323,[[["self"]],["result"]]],[11,"borrow_mut","","",323,[[["self"]],["t"]]],[11,"get_type_id","","",323,[[["self"]],["typeid"]]],[11,"not_found","","",323,[[["str"],["str"]],["e"]]],[11,"peek","","Looks at the next token in the parse stream to determine whether it matches the requested type of token.",323,[[["self"],["t"]],["bool"]]],[11,"error","","Triggers an error at the current position of the parse stream.",323,[[["self"]],["error"]]],[11,"from","","",320,[[["t"]],["t"]]],[11,"to_string","","",320,[[["self"]],["string"]]],[11,"into","","",320,[[["self"]],["u"]]],[11,"try_from","","",320,[[["u"]],["result"]]],[11,"borrow","","",320,[[["self"]],["t"]]],[11,"try_into","","",320,[[["self"]],["result"]]],[11,"borrow_mut","","",320,[[["self"]],["t"]]],[11,"get_type_id","","",320,[[["self"]],["typeid"]]],[11,"not_found","","",320,[[["str"],["str"]],["e"]]],[11,"to_owned","","",321,[[["self"]],["t"]]],[11,"clone_into","","",321,N],[11,"from","","",321,[[["t"]],["t"]]],[11,"into","","",321,[[["self"]],["u"]]],[11,"try_from","","",321,[[["u"]],["result"]]],[11,"borrow","","",321,[[["self"]],["t"]]],[11,"try_into","","",321,[[["self"]],["result"]]],[11,"borrow_mut","","",321,[[["self"]],["t"]]],[11,"get_type_id","","",321,[[["self"]],["typeid"]]],[11,"not_found","","",321,[[["str"],["str"]],["e"]]]],"paths":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprInPlace"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprVerbatim"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[3,"Arm"],[3,"Block"],[3,"FieldPat"],[3,"FieldValue"],[3,"Label"],[3,"Local"],[3,"MethodTurbofish"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatPath"],[3,"PatRange"],[3,"PatRef"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatVerbatim"],[3,"PatWild"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"ArgCaptured"],[3,"ArgSelf"],[3,"ArgSelfRef"],[3,"FnDecl"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ForeignItemVerbatim"],[3,"ImplItemConst"],[3,"ImplItemExistential"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[3,"ImplItemVerbatim"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExistential"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"ItemVerbatim"],[3,"MethodSig"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"TraitItemVerbatim"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[3,"File"],[3,"Lifetime"],[3,"LitBool"],[3,"LitVerbatim"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"TypeVerbatim"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,"GenericMethodArgument"],[4,"Pat"],[4,"RangeLimits"],[4,"Stmt"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[4,"ImplItem"],[4,"Item"],[4,"TraitItem"],[4,"UseTree"],[4,"FloatSuffix"],[4,"IntSuffix"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"BareFnArgName"],[4,"ReturnType"],[4,"Type"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Existential"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"Ident"],[3,"ImplGenerics"],[3,"TypeGenerics"],[3,"Turbofish"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[8,"Spanned"],[8,"Fold"],[8,"Parse"],[8,"Parser"],[3,"ParseBuffer"],[3,"StepCursor"],[3,"Error"],[3,"Lookahead1"]]};
searchIndex["unicode_xid"]={"doc":"Determine if a `char` is a valid identifier for a parser and/or lexer according to Unicode Standard Annex #31 rules.","items":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is based on.",N,N],[8,"UnicodeXID","","Methods for determining if a character is a valid identifier character.",N,N],[10,"is_xid_start","","Returns whether the specified character satisfies the 'XID_Start' Unicode property.",0,[[["self"]],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the 'XID_Continue' Unicode property.",0,[[["self"]],["bool"]]]],"paths":[[8,"UnicodeXID"]]};
searchIndex["void"]={"doc":"Void","items":[[4,"Void","void","The empty type for cases which can't occur.",N,N],[5,"unreachable","","A safe version of `intrinsincs::unreachable`.",N,N],[8,"ResultVoidExt","","Extensions to `Result<T, Void>`",N,N],[10,"void_unwrap","","Get the value out of a wrapper.",0,[[["self"]],["t"]]],[8,"ResultVoidErrExt","","Extensions to `Result<Void, E>`",N,N],[10,"void_unwrap_err","","Get the error out of a wrapper.",1,[[["self"]],["e"]]],[11,"clone","","",2,[[["self"]],["void"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"eq","","",2,[[["self"],["t"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["t"]],["option",["ordering"]]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"cause","","",2,[[["self"]],["option",["error"]]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]]],"paths":[[8,"ResultVoidExt"],[8,"ResultVoidErrExt"],[4,"Void"]]};
searchIndex["vsprintf"]={"doc":"Convert C format strings to Rust.","items":[[5,"vsprintf","vsprintf","Prints a format string into a Rust string.",N,N],[5,"vsprintf_raw","","Prints a format string into a list of raw bytes that form a null-terminated C string.",N,N],[6,"Result","","The result of a vsprintf call.",N,N]],"paths":[]};
searchIndex["wayland_commons"]={"doc":"Common definitions for wayland","items":[[3,"AnonymousObject","wayland_commons","Anonymous interface",N,N],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",N,N],[0,"map","","Wayland objects map",N,N],[3,"Object","wayland_commons::map","The representation of a protocol object",N,N],[12,"interface","","Interface name of this object",0,N],[12,"version","","Version of this object",0,N],[12,"requests","","Description of the requests of this object",0,N],[12,"events","","Description of the events of this object",0,N],[12,"meta","","Metadata associated to this object (ex: its event queue client side)",0,N],[12,"childs_from_events","","A function which, from an opcode, a version, and the Meta, creates a child object associated with this event if any",0,N],[12,"childs_from_requests","","A function which, from an opcode, a version, and the Meta, creates a child object associated with this request if any",0,N],[3,"ObjectMap","","A holder for the object store of a connection",N,N],[17,"SERVER_ID_LIMIT","","Limit separating server-created from client-created objects IDs in the namespace",N,N],[8,"ObjectMetadata","","A trait representing the metadata a wayland implementation may attach to an object.",N,N],[10,"child","","Create the metadata for a child object",1,[[["self"]],["self"]]],[11,"clone","","",0,[[["self"]],["object"]]],[11,"from_interface","","Create an Object corresponding to given interface and version",0,[[["u32"],["meta"]],["object"]]],[11,"event_child","","Create an optional `Object` corresponding to the possible `new_id` associated with given event opcode",0,[[["self"],["u16"]],["option",["object"]]]],[11,"request_child","","Create an optional `Object` corresponding to the possible `new_id` associated with given request opcode",0,[[["self"],["u16"]],["option",["object"]]]],[11,"is_interface","","Check whether this object is of given interface",0,[[["self"]],["bool"]]],[11,"placeholder","","Create a placeholder object that will be filled-in by the message logic",0,[[["meta"]],["object"]]],[11,"new","","Create a new empty object map",2,[[],["objectmap"]]],[11,"find","","Find an object in the store",2,[[["self"],["u32"]],["option",["object"]]]],[11,"remove","","Remove an object from the store",2,[[["self"],["u32"]]]],[11,"insert_at","","Insert given object for given id",2,[[["self"],["u32"],["object"]],["result"]]],[11,"client_insert_new","","Allocate a new id for an object in the client namespace",2,[[["self"],["object"]],["u32"]]],[11,"server_insert_new","","Allocate a new id for an object in the server namespace",2,[[["self"],["object"]],["u32"]]],[11,"with","","Mutably access an object of the map",2,[[["self"],["u32"],["f"]],["result"]]],[11,"with_all","","Mutably access all objects of the map in sequence",2,[[["self"],["f"]]]],[0,"socket","wayland_commons","Wayland socket manipulation",N,N],[3,"Socket","wayland_commons::socket","A wayland socket",N,N],[3,"BufferedSocket","","An adapter around a raw Socket that directly handles buffering and conversion from/to wayland messages",N,N],[17,"MAX_FDS_OUT","","Maximum number of FD that can be sent in a single socket message",N,N],[17,"MAX_BYTES_OUT","","Maximum number of bytes that can be sent in a single socket message",N,N],[11,"send_msg","","Send a single message to the socket",3,N],[11,"rcv_msg","","Receive a single message from the socket",3,N],[11,"from_raw_fd","","",3,[[["rawfd"]],["socket"]]],[11,"as_raw_fd","","",3,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",3,[[["self"]],["rawfd"]]],[11,"drop","","",3,[[["self"]]]],[11,"new","","Wrap a Socket into a Buffered Socket",4,[[["socket"]],["bufferedsocket"]]],[11,"get_socket","","Get direct access to the underlying socket",4,[[["self"]],["socket"]]],[11,"into_socket","","Retrieve ownership of the underlying Socket",4,[[["self"]],["socket"]]],[11,"flush","","Flush the contents of the outgoing buffer into the socket",4,[[["self"]],["nixresult"]]],[11,"write_message","","Write a message to the outgoing buffer",4,[[["self"],["message"]],["nixresult"]]],[11,"fill_incoming_buffers","","Try to fill the incoming buffers of this socket, to prepare a new round of parsing.",4,[[["self"]],["nixresult"]]],[11,"read_one_message","","Read and deserialize a single message from the incoming buffers socket",4,[[["self"],["f"]],["result",["message","messageparseerror"]]]],[11,"read_messages","","Read and deserialize messages from the socket",4,[[["self"],["f1"],["f2"]],["nixresult",["result"]]]],[0,"utils","wayland_commons","Various utilities used for other implementations",N,N],[3,"UserData","wayland_commons::utils","A wrapper for user data, able to store any type, and correctly handling access from a wrong thread",N,N],[3,"UserDataMap","","A storage able to store several values of `UserData` of different types. It behaves similarly to a `TypeMap`.",N,N],[11,"new_threadsafe","","Create a new `UserData` using a threadsafe type",5,[[["t"]],["userdata"]]],[11,"new","","Create a new `UserData` using a non-threadsafe type",5,[[["t"]],["userdata"]]],[11,"empty","","Create a new `UserData` containing nothing",5,[[],["userdata"]]],[11,"get","","Attempt to access the wrapped user data",5,[[["self"]],["option"]]],[11,"new","","Create a new map",6,[[],["userdatamap"]]],[11,"get","","Attempt to access the wrapped user data of a given type",6,[[["self"]],["option"]]],[11,"insert_if_missing","","Insert a value in the map if it is not already there",6,[[["self"],["f"]],["bool"]]],[11,"insert_if_missing_threadsafe","","Insert a value in the map if it is not already there",6,[[["self"],["f"]],["bool"]]],[0,"wire","wayland_commons","Types and routines used to manipulate arguments from the wire format",N,N],[3,"MessageDesc","wayland_commons::wire","Wire metadata of a given message",N,N],[12,"name","","Name of this message",7,N],[12,"signature","","Signature of the message",7,N],[12,"since","","Minimum required version of the interface",7,N],[3,"Message","","A wire message",N,N],[12,"sender_id","","ID of the object sending this message",8,N],[12,"opcode","","Opcode of the message",8,N],[12,"args","","Arguments of the message",8,N],[4,"ArgumentType","","Enum of possible argument types as recognized by the wire",N,N],[13,"Int","","i32",9,N],[13,"Uint","","u32",9,N],[13,"Fixed","","fixed point, 1/256 precision",9,N],[13,"Str","","CString",9,N],[13,"Object","","id of a wayland object",9,N],[13,"NewId","","id of a newly created wayland object",9,N],[13,"Array","","Vec",9,N],[13,"Fd","","RawFd",9,N],[4,"Argument","","Enum of possible argument as recognized by the wire, including values",N,N],[13,"Int","","i32",10,N],[13,"Uint","","u32",10,N],[13,"Fixed","","fixed point, 1/256 precision",10,N],[13,"Str","","CString",10,N],[13,"Object","","id of a wayland object",10,N],[13,"NewId","","id of a newly created wayland object",10,N],[13,"Array","","Vec",10,N],[13,"Fd","","RawFd",10,N],[4,"MessageWriteError","","Error generated when trying to serialize a message into buffers",N,N],[13,"BufferTooSmall","","The buffer is too small to hold the message contents",11,N],[13,"DupFdFailed","","The message contains a FD that could not be dup-ed",11,N],[4,"MessageParseError","","Error generated when trying to deserialize a message from buffers",N,N],[13,"MissingFD","","The message references a FD but the buffer FD is empty",12,N],[13,"MissingData","","More data is needed to deserialize the message",12,N],[13,"Malformed","","The message is malformed and cannot be parsed",12,N],[5,"dup_fd_cloexec","","Duplicate a `RawFd` and set the CLOEXEC flag on the copy",N,[[["rawfd"]],["nixresult",["rawfd"]]]],[11,"clone","","",9,[[["self"]],["argumenttype"]]],[11,"eq","","",9,[[["self"],["argumenttype"]],["bool"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"clone","","",10,[[["self"]],["argument"]]],[11,"eq","","",10,[[["self"],["argument"]],["bool"]]],[11,"ne","","",10,[[["self"],["argument"]],["bool"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"get_type","","Retrieve the type of a given argument instance",10,[[["self"]],["argumenttype"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"clone","","",8,[[["self"]],["message"]]],[11,"eq","","",8,[[["self"],["message"]],["bool"]]],[11,"ne","","",8,[[["self"],["message"]],["bool"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"clone","","",11,[[["self"]],["messagewriteerror"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"clone","","",12,[[["self"]],["messageparseerror"]]],[11,"write_to_buffers","","Serialize the contents of this message into provided buffers",8,N],[11,"from_raw","","Attempts to parse a single wayland message with the given signature.",8,N],[8,"MessageGroup","wayland_commons","A group of messages",N,N],[18,"MESSAGES","","Wire representation of this MessageGroup",13,N],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of Object and NewId arguments to the object map during parsing.",13,N],[10,"opcode","","The opcode of this message",13,[[["self"]],["u16"]]],[10,"is_destructor","","Whether this message is a destructor",13,[[["self"]],["bool"]]],[10,"child","","Retrieve the child `Object` associated with this message if any",13,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[10,"from_raw","","Construct a message from its raw representation",13,N],[10,"into_raw","","Turn this message into its raw representation",13,[[["self"],["u32"]],["message"]]],[10,"from_raw_c","","Construct a message of this group from its C representation",13,N],[10,"as_raw_c_in","","Build a C representation of this message",13,[[["self"],["f"]],["t"]]],[8,"Interface","","The description of a wayland interface",N,N],[16,"Request","","Set of requests associated to this interface",14,N],[16,"Event","","Set of events associated to this interface",14,N],[18,"NAME","","Name of this interface",14,N],[18,"VERSION","","Maximum supported version of this interface",14,N],[10,"c_interface","","Pointer to the C representation of this interface",14,N],[11,"c_interface","","",15,N],[11,"is_destructor","","",16,[[["self"]],["bool"]]],[11,"opcode","","",16,[[["self"]],["u16"]]],[11,"child","","",16,[[["u16"],["u32"],["m"]],["option",["object"]]]],[11,"from_raw","","",16,N],[11,"into_raw","","",16,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",16,N],[11,"as_raw_c_in","","",16,[[["self"],["f"]],["t"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"to_owned","wayland_commons::map","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","wayland_commons::socket","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","wayland_commons::utils","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","wayland_commons::wire","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]]],"paths":[[3,"Object"],[8,"ObjectMetadata"],[3,"ObjectMap"],[3,"Socket"],[3,"BufferedSocket"],[3,"UserData"],[3,"UserDataMap"],[3,"MessageDesc"],[3,"Message"],[4,"ArgumentType"],[4,"Argument"],[4,"MessageWriteError"],[4,"MessageParseError"],[8,"MessageGroup"],[8,"Interface"],[3,"AnonymousObject"],[4,"NoMessage"]]};
searchIndex["wayland_server"]={"doc":"Server-side Wayland connector","items":[[3,"UserDataMap","wayland_server","A storage able to store several values of `UserData` of different types. It behaves similarly to a `TypeMap`.",N,N],[3,"AnonymousObject","","Anonymous interface",N,N],[8,"Interface","","The description of a wayland interface",N,N],[16,"Request","","Set of requests associated to this interface",0,N],[16,"Event","","Set of events associated to this interface",0,N],[18,"NAME","","Name of this interface",0,N],[18,"VERSION","","Maximum supported version of this interface",0,N],[10,"c_interface","","Pointer to the C representation of this interface",0,N],[8,"MessageGroup","","A group of messages",N,N],[18,"MESSAGES","","Wire representation of this MessageGroup",1,N],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of Object and NewId arguments to the object map during parsing.",1,N],[10,"opcode","","The opcode of this message",1,[[["self"]],["u16"]]],[10,"is_destructor","","Whether this message is a destructor",1,[[["self"]],["bool"]]],[10,"child","","Retrieve the child `Object` associated with this message if any",1,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[10,"from_raw","","Construct a message from its raw representation",1,N],[10,"into_raw","","Turn this message into its raw representation",1,[[["self"],["u32"]],["message"]]],[10,"from_raw_c","","Construct a message of this group from its C representation",1,N],[10,"as_raw_c_in","","Build a C representation of this message",1,[[["self"],["f"]],["t"]]],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",N,N],[3,"Client","","A handle to a client connected to your server",N,N],[3,"Display","","The wayland display",N,N],[3,"DisplayToken","","A token that is required for providing non-Send implementations to resources",N,N],[3,"Global","","A handle to a global object",N,N],[3,"NewResource","","A newly-created resource that needs implementation",N,N],[3,"Resource","","An handle to a wayland resource",N,N],[4,"ResourceMap","","A handle to the object map internal to the lib state",N,N],[11,"clone","","",2,[[["self"]],["client"]]],[11,"from_ptr","","Create a client from a `wayland-server.so` pointer",2,N],[11,"c_ptr","","Retrieve a pointer to the underlying `wl_client` of `wayland-server.so`",2,N],[11,"alive","","Check whether this client is still connected to the server",2,[[["self"]],["bool"]]],[11,"equals","","Check whether this client handle refers to the same client as an other",2,[[["self"],["client"]],["bool"]]],[11,"flush","","Flush the pending events to this client",2,[[["self"]]]],[11,"kill","","Kills this client",2,[[["self"]]]],[11,"data_map","","Access the map handling user data associated to this client",2,[[["self"]],["userdatamap"]]],[11,"add_destructor","","Add a destructor for this client",2,[[["self"],["f"]]]],[11,"create_resource","","Create a new resource for this client",2,[[["self"],["u32"]],["option",["newresource"]]]],[11,"clone","","",3,[[["self"]],["displaytoken"]]],[11,"new","","Create a new display",4,[[["loophandle"]],["display"]]],[11,"get_token","","Get a `DisplayToken` for make non-send implementations",4,[[["self"]],["displaytoken"]]],[11,"create_global","","Create a new global object",4,[[["self"],["u32"],["f"]],["global"]]],[11,"create_global_with_filter","","Create a new global object with a filter",4,[[["self"],["u32"],["f1"],["f2"]],["global"]]],[11,"flush_clients","","Flush events to the clients",4,[[["self"]]]],[11,"add_socket","","Add a listening socket to this display",4,[[["self"],["option"]],["ioresult"]]],[11,"add_socket_auto","","Add an automatically named listening socket to this display",4,[[["self"]],["ioresult",["osstring"]]]],[11,"add_socket_from","","Add existing listening socket to this display",4,[[["self"],["t"]],["ioresult"]]],[11,"add_socket_fd","","Add existing listening socket to this display from a raw file descriptor",4,[[["self"],["rawfd"]],["ioresult"]]],[11,"create_client","","Create a new client to this display from an already-existing connected Fd",4,[[["self"],["rawfd"]],["client"]]],[11,"c_ptr","","Retrieve a pointer from the C lib to this `wl_display`",4,N],[11,"destroy","","Destroy the associated global object.",5,[[["self"]]]],[11,"eq","","",6,[[["self"],["resource"]],["bool"]]],[11,"send","","Send an event through this object",6,N],[11,"is_alive","","Check if the object associated with this resource is still alive",6,[[["self"]],["bool"]]],[11,"version","","Retrieve the interface version of this wayland object instance",6,[[["self"]],["u32"]]],[11,"equals","","Check if the other resource refers to the same underlying wayland object",6,[[["self"],["resource"]],["bool"]]],[11,"same_client_as","","Check if this resource and the other belong to the same client",6,[[["self"],["resource"]],["bool"]]],[11,"post_error","","Posts a protocol error to this resource",6,[[["self"],["u32"],["string"]]]],[11,"user_data","","Access the arbitrary payload associated to this object",6,[[["self"]],["option"]]],[11,"client","","Retrieve an handle to the client associated with this resource",6,[[["self"]],["option",["client"]]]],[11,"id","","Retrieve the object id of this wayland object",6,[[["self"]],["u32"]]],[11,"is_external","","Check whether this resource is managed by the library or not",6,[[["self"]],["bool"]]],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",6,N],[11,"from_c_ptr","","Create a `Resource` instance from a C pointer",6,N],[11,"implement","","Implement this resource using given function, destructor, and user data.",7,[[["self"],["f"],["option"],["ud"]],["resource"]]],[11,"implement_nonsend","","Implement this resource using given function and implementation data.",7,[[["self"],["f"],["option"],["ud"],["displaytoken"]],["resource"]]],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",7,N],[11,"from_c_ptr","","Create a `NewResource` instance from a C pointer.",7,N],[11,"clone","","",6,[[["self"]],["resource"]]],[0,"sys","","C-associated types",N,N],[0,"common","wayland_server::sys","Various types and functions that are used by both the client and the server libraries.",N,N],[3,"wl_message","wayland_server::sys::common","",N,N],[12,"name","","",8,N],[12,"signature","","",8,N],[12,"types","","",8,N],[3,"wl_interface","","",N,N],[12,"name","","",9,N],[12,"version","","",9,N],[12,"request_count","","",9,N],[12,"requests","","",9,N],[12,"event_count","","",9,N],[12,"events","","",9,N],[3,"wl_list","","",N,N],[12,"prev","","",10,N],[12,"next","","",10,N],[3,"wl_array","","",N,N],[12,"size","","",11,N],[12,"alloc","","",11,N],[12,"data","","",11,N],[6,"wl_fixed_t","","",N,N],[5,"wl_fixed_to_double","","",N,[[["i32"]],["f64"]]],[5,"wl_fixed_from_double","","",N,[[["f64"]],["i32"]]],[5,"wl_fixed_to_int","","",N,[[["i32"]],["i32"]]],[5,"wl_fixed_from_int","","",N,[[["i32"]],["i32"]]],[19,"wl_argument","","",N,N],[12,"i","","",12,N],[12,"u","","",12,N],[12,"f","","",12,N],[12,"s","","",12,N],[12,"o","","",12,N],[12,"n","","",12,N],[12,"a","","",12,N],[12,"h","","",12,N],[6,"wl_dispatcher_func_t","","",N,N],[6,"wl_log_func_t","","",N,N],[0,"server","wayland_server::sys","Bindings to the client library `libwayland-server.so`",N,N],[4,"wl_client","wayland_server::sys::server","",N,N],[4,"wl_display","","",N,N],[4,"wl_event_loop","","",N,N],[4,"wl_event_source","","",N,N],[4,"wl_global","","",N,N],[4,"wl_resource","","",N,N],[4,"wl_shm_buffer","","",N,N],[6,"wl_event_loop_fd_func_t","","",N,N],[6,"wl_event_loop_timer_func_t","","",N,N],[6,"wl_event_loop_signal_func_t","","",N,N],[6,"wl_event_loop_idle_func_t","","",N,N],[6,"wl_global_bind_func_t","","",N,N],[6,"wl_notify_func_t","","",N,N],[6,"wl_resource_destroy_func_t","","",N,N],[6,"wl_display_global_filter_func_t","","",N,N],[3,"wl_listener","","",N,N],[12,"link","","",13,N],[12,"notify","","",13,N],[3,"wl_signal","","",N,N],[12,"listener_list","","",14,N],[3,"WaylandServer","","",N,N],[12,"wl_client_flush","","",15,N],[12,"wl_client_destroy","","",15,N],[12,"wl_client_get_display","","",15,N],[12,"wl_client_get_credentials","","",15,N],[12,"wl_client_get_object","","",15,N],[12,"wl_client_add_destroy_listener","","",15,N],[12,"wl_client_get_destroy_listener","","",15,N],[12,"wl_client_post_no_memory","","",15,N],[12,"wl_resource_create","","",15,N],[12,"wl_client_create","","",15,N],[12,"wl_display_create","","",15,N],[12,"wl_display_destroy","","",15,N],[12,"wl_display_destroy_clients","","",15,N],[12,"wl_display_get_serial","","",15,N],[12,"wl_display_next_serial","","",15,N],[12,"wl_display_add_socket","","",15,N],[12,"wl_display_add_socket_auto","","",15,N],[12,"wl_display_add_socket_fd","","",15,N],[12,"wl_display_add_shm_format","","",15,N],[12,"wl_display_get_event_loop","","",15,N],[12,"wl_display_terminate","","",15,N],[12,"wl_display_run","","",15,N],[12,"wl_display_flush_clients","","",15,N],[12,"wl_display_add_destroy_listener","","",15,N],[12,"wl_display_get_destroy_listener","","",15,N],[12,"wl_global_create","","",15,N],[12,"wl_display_init_shm","","",15,N],[12,"wl_display_add_client_created_listener","","",15,N],[12,"wl_display_set_global_filter","","",15,N],[12,"wl_event_loop_create","","",15,N],[12,"wl_event_loop_destroy","","",15,N],[12,"wl_event_loop_add_fd","","",15,N],[12,"wl_event_loop_add_timer","","",15,N],[12,"wl_event_loop_add_signal","","",15,N],[12,"wl_event_loop_dispatch","","",15,N],[12,"wl_event_loop_dispatch_idle","","",15,N],[12,"wl_event_loop_add_idle","","",15,N],[12,"wl_event_loop_get_fd","","",15,N],[12,"wl_event_loop_add_destroy_listener","","",15,N],[12,"wl_event_loop_get_destroy_listener","","",15,N],[12,"wl_event_source_fd_update","","",15,N],[12,"wl_event_source_timer_update","","",15,N],[12,"wl_event_source_remove","","",15,N],[12,"wl_event_source_check","","",15,N],[12,"wl_global_destroy","","",15,N],[12,"wl_global_get_user_data","","",15,N],[12,"wl_resource_post_event_array","","",15,N],[12,"wl_resource_queue_event_array","","",15,N],[12,"wl_resource_post_no_memory","","",15,N],[12,"wl_resource_set_implementation","","",15,N],[12,"wl_resource_set_dispatcher","","",15,N],[12,"wl_resource_destroy","","",15,N],[12,"wl_resource_get_client","","",15,N],[12,"wl_resource_get_id","","",15,N],[12,"wl_resource_get_link","","",15,N],[12,"wl_resource_from_link","","",15,N],[12,"wl_resource_find_for_client","","",15,N],[12,"wl_resource_set_user_data","","",15,N],[12,"wl_resource_get_user_data","","",15,N],[12,"wl_resource_get_version","","",15,N],[12,"wl_resource_set_destructor","","",15,N],[12,"wl_resource_instance_of","","",15,N],[12,"wl_resource_add_destroy_listener","","",15,N],[12,"wl_resource_get_destroy_listener","","",15,N],[12,"wl_shm_buffer_begin_access","","",15,N],[12,"wl_shm_buffer_end_access","","",15,N],[12,"wl_shm_buffer_get","","",15,N],[12,"wl_shm_buffer_get_data","","",15,N],[12,"wl_shm_buffer_get_stride","","",15,N],[12,"wl_shm_buffer_get_format","","",15,N],[12,"wl_shm_buffer_get_width","","",15,N],[12,"wl_shm_buffer_get_height","","",15,N],[12,"wl_log_set_handler_server","","",15,N],[12,"wl_list_init","","",15,N],[12,"wl_list_insert","","",15,N],[12,"wl_list_remove","","",15,N],[12,"wl_list_length","","",15,N],[12,"wl_list_empty","","",15,N],[12,"wl_list_insert_list","","",15,N],[12,"wl_array_init","","",15,N],[12,"wl_array_release","","",15,N],[12,"wl_array_add","","",15,N],[12,"wl_array_copy","","",15,N],[12,"wl_resource_post_event","","",15,N],[12,"wl_resource_queue_event","","",15,N],[12,"wl_resource_post_error","","",15,N],[3,"WAYLAND_SERVER_OPTION","","",N,N],[3,"WAYLAND_SERVER_HANDLE","","",N,N],[5,"is_lib_available","","",N,[[],["bool"]]],[0,"signal","","",N,N],[5,"wl_signal_init","wayland_server::sys::server::signal","",N,N],[5,"wl_signal_add","","",N,N],[5,"wl_signal_get","","",N,N],[5,"wl_signal_emit","","",N,N],[5,"rust_listener_create","","",N,N],[5,"rust_listener_get_user_data","","",N,N],[5,"rust_listener_set_user_data","","",N,N],[5,"rust_listener_destroy","","",N,N],[0,"protocol_interfaces","wayland_server::sys","",N,N],[7,"wl_display_requests","wayland_server::sys::protocol_interfaces","",N,N],[7,"wl_display_events","","",N,N],[7,"wl_display_interface","","",N,N],[7,"wl_registry_requests","","",N,N],[7,"wl_registry_events","","",N,N],[7,"wl_registry_interface","","",N,N],[7,"wl_callback_events","","",N,N],[7,"wl_callback_interface","","",N,N],[7,"wl_compositor_requests","","",N,N],[7,"wl_compositor_interface","","",N,N],[7,"wl_shm_pool_requests","","",N,N],[7,"wl_shm_pool_interface","","",N,N],[7,"wl_shm_requests","","",N,N],[7,"wl_shm_events","","",N,N],[7,"wl_shm_interface","","",N,N],[7,"wl_buffer_requests","","",N,N],[7,"wl_buffer_events","","",N,N],[7,"wl_buffer_interface","","",N,N],[7,"wl_data_offer_requests","","",N,N],[7,"wl_data_offer_events","","",N,N],[7,"wl_data_offer_interface","","",N,N],[7,"wl_data_source_requests","","",N,N],[7,"wl_data_source_events","","",N,N],[7,"wl_data_source_interface","","",N,N],[7,"wl_data_device_requests","","",N,N],[7,"wl_data_device_events","","",N,N],[7,"wl_data_device_interface","","",N,N],[7,"wl_data_device_manager_requests","","",N,N],[7,"wl_data_device_manager_interface","","",N,N],[7,"wl_shell_requests","","",N,N],[7,"wl_shell_interface","","",N,N],[7,"wl_shell_surface_requests","","",N,N],[7,"wl_shell_surface_events","","",N,N],[7,"wl_shell_surface_interface","","",N,N],[7,"wl_surface_requests","","",N,N],[7,"wl_surface_events","","",N,N],[7,"wl_surface_interface","","",N,N],[7,"wl_seat_requests","","",N,N],[7,"wl_seat_events","","",N,N],[7,"wl_seat_interface","","",N,N],[7,"wl_pointer_requests","","",N,N],[7,"wl_pointer_events","","",N,N],[7,"wl_pointer_interface","","",N,N],[7,"wl_keyboard_requests","","",N,N],[7,"wl_keyboard_events","","",N,N],[7,"wl_keyboard_interface","","",N,N],[7,"wl_touch_requests","","",N,N],[7,"wl_touch_events","","",N,N],[7,"wl_touch_interface","","",N,N],[7,"wl_output_requests","","",N,N],[7,"wl_output_events","","",N,N],[7,"wl_output_interface","","",N,N],[7,"wl_region_requests","","",N,N],[7,"wl_region_interface","","",N,N],[7,"wl_subcompositor_requests","","",N,N],[7,"wl_subcompositor_interface","","",N,N],[7,"wl_subsurface_requests","","",N,N],[7,"wl_subsurface_interface","","",N,N],[11,"get","wayland_server","Retrieve the Resource corresponding to a given id",16,[[["self"],["u32"]],["option",["resource"]]]],[11,"get_new","","Create a new resource for a given id",16,[[["self"],["u32"]],["option",["newresource"]]]],[0,"protocol","","Generated interfaces for the core wayland protocol",N,N],[0,"wl_callback","wayland_server::protocol","callback object",N,N],[3,"WlCallback","wayland_server::protocol::wl_callback","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"Done","","done event",17,N],[12,"callback_data","wayland_server::protocol::wl_callback::Event","",17,N],[0,"wl_compositor","wayland_server::protocol","the compositor singleton",N,N],[3,"WlCompositor","wayland_server::protocol::wl_compositor","",N,N],[4,"Request","","",N,N],[13,"CreateSurface","","create new surface",18,N],[12,"id","wayland_server::protocol::wl_compositor::Request","",18,N],[13,"CreateRegion","wayland_server::protocol::wl_compositor","create new region",18,N],[12,"id","wayland_server::protocol::wl_compositor::Request","",18,N],[4,"Event","wayland_server::protocol::wl_compositor","",N,N],[0,"wl_shm_pool","wayland_server::protocol","a shared memory pool",N,N],[3,"WlShmPool","wayland_server::protocol::wl_shm_pool","",N,N],[4,"Request","","",N,N],[13,"CreateBuffer","","create a buffer from the pool",19,N],[12,"id","wayland_server::protocol::wl_shm_pool::Request","",19,N],[12,"offset","","",19,N],[12,"width","","",19,N],[12,"height","","",19,N],[12,"stride","","",19,N],[12,"format","","",19,N],[13,"Destroy","wayland_server::protocol::wl_shm_pool","destroy the pool",19,N],[13,"Resize","","change the size of the pool mapping",19,N],[12,"size","wayland_server::protocol::wl_shm_pool::Request","",19,N],[4,"Event","wayland_server::protocol::wl_shm_pool","",N,N],[0,"wl_shm","wayland_server::protocol","shared memory support",N,N],[3,"WlShm","wayland_server::protocol::wl_shm","",N,N],[4,"Error","","wl_shm error values",N,N],[13,"InvalidFormat","","buffer format is not known",20,N],[13,"InvalidStride","","invalid size or stride during pool or buffer creation",20,N],[13,"InvalidFd","","mmapping the file descriptor failed",20,N],[4,"Format","","pixel formats",N,N],[13,"Argb8888","","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian",21,N],[13,"Xrgb8888","","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian",21,N],[13,"C8","","8-bit color index format, [7:0] C",21,N],[13,"Rgb332","","8-bit RGB format, [7:0] R:G:B 3:3:2",21,N],[13,"Bgr233","","8-bit BGR format, [7:0] B:G:R 2:3:3",21,N],[13,"Xrgb4444","","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian",21,N],[13,"Xbgr4444","","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian",21,N],[13,"Rgbx4444","","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian",21,N],[13,"Bgrx4444","","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian",21,N],[13,"Argb4444","","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian",21,N],[13,"Abgr4444","","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian",21,N],[13,"Rgba4444","","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian",21,N],[13,"Bgra4444","","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian",21,N],[13,"Xrgb1555","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian",21,N],[13,"Xbgr1555","","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little endian",21,N],[13,"Rgbx5551","","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little endian",21,N],[13,"Bgrx5551","","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little endian",21,N],[13,"Argb1555","","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little endian",21,N],[13,"Abgr1555","","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little endian",21,N],[13,"Rgba5551","","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little endian",21,N],[13,"Bgra5551","","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little endian",21,N],[13,"Rgb565","","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian",21,N],[13,"Bgr565","","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian",21,N],[13,"Rgb888","","24-bit RGB format, [23:0] R:G:B little endian",21,N],[13,"Bgr888","","24-bit BGR format, [23:0] B:G:R little endian",21,N],[13,"Xbgr8888","","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian",21,N],[13,"Rgbx8888","","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian",21,N],[13,"Bgrx8888","","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian",21,N],[13,"Abgr8888","","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian",21,N],[13,"Rgba8888","","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian",21,N],[13,"Bgra8888","","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian",21,N],[13,"Xrgb2101010","","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian",21,N],[13,"Xbgr2101010","","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian",21,N],[13,"Rgbx1010102","","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian",21,N],[13,"Bgrx1010102","","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian",21,N],[13,"Argb2101010","","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian",21,N],[13,"Abgr2101010","","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian",21,N],[13,"Rgba1010102","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian",21,N],[13,"Bgra1010102","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian",21,N],[13,"Yuyv","","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little endian",21,N],[13,"Yvyu","","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little endian",21,N],[13,"Uyvy","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little endian",21,N],[13,"Vyuy","","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little endian",21,N],[13,"Ayuv","","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little endian",21,N],[13,"Nv12","","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane",21,N],[13,"Nv21","","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane",21,N],[13,"Nv16","","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane",21,N],[13,"Nv61","","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane",21,N],[13,"Yuv410","","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) planes",21,N],[13,"Yvu410","","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) planes",21,N],[13,"Yuv411","","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) planes",21,N],[13,"Yvu411","","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) planes",21,N],[13,"Yuv420","","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) planes",21,N],[13,"Yvu420","","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) planes",21,N],[13,"Yuv422","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) planes",21,N],[13,"Yvu422","","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) planes",21,N],[13,"Yuv444","","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) planes",21,N],[13,"Yvu444","","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) planes",21,N],[4,"Request","","",N,N],[13,"CreatePool","","create a shm pool",22,N],[12,"id","wayland_server::protocol::wl_shm::Request","",22,N],[12,"fd","","",22,N],[12,"size","","",22,N],[4,"Event","wayland_server::protocol::wl_shm","",N,N],[13,"Format","","pixel format description",23,N],[12,"format","wayland_server::protocol::wl_shm::Event","",23,N],[0,"wl_buffer","wayland_server::protocol","content for a wl_surface",N,N],[3,"WlBuffer","wayland_server::protocol::wl_buffer","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy a buffer",24,N],[4,"Event","","",N,N],[13,"Release","","compositor releases buffer",25,N],[0,"wl_data_offer","wayland_server::protocol","offer to transfer data",N,N],[3,"WlDataOffer","wayland_server::protocol::wl_data_offer","",N,N],[4,"Error","","",N,N],[13,"InvalidFinish","","finish request was called untimely",26,N],[13,"InvalidActionMask","","action mask contains invalid values",26,N],[13,"InvalidAction","","action argument has an invalid value",26,N],[13,"InvalidOffer","","offer doesn't accept this request",26,N],[4,"Request","","",N,N],[13,"Accept","","accept one of the offered mime types",27,N],[12,"serial","wayland_server::protocol::wl_data_offer::Request","",27,N],[12,"mime_type","","",27,N],[13,"Receive","wayland_server::protocol::wl_data_offer","request that the data is transferred",27,N],[12,"mime_type","wayland_server::protocol::wl_data_offer::Request","",27,N],[12,"fd","","",27,N],[13,"Destroy","wayland_server::protocol::wl_data_offer","destroy data offer",27,N],[13,"Finish","","the offer will no longer be used",27,N],[13,"SetActions","","set the available/preferred drag-and-drop actions",27,N],[12,"dnd_actions","wayland_server::protocol::wl_data_offer::Request","",27,N],[12,"preferred_action","","",27,N],[4,"Event","wayland_server::protocol::wl_data_offer","",N,N],[13,"Offer","","advertise offered mime type",28,N],[12,"mime_type","wayland_server::protocol::wl_data_offer::Event","",28,N],[13,"SourceActions","wayland_server::protocol::wl_data_offer","notify the source-side available actions",28,N],[12,"source_actions","wayland_server::protocol::wl_data_offer::Event","",28,N],[13,"Action","wayland_server::protocol::wl_data_offer","notify the selected action",28,N],[12,"dnd_action","wayland_server::protocol::wl_data_offer::Event","",28,N],[0,"wl_data_source","wayland_server::protocol","offer to transfer data",N,N],[3,"WlDataSource","wayland_server::protocol::wl_data_source","",N,N],[4,"Error","","",N,N],[13,"InvalidActionMask","","action mask contains invalid values",29,N],[13,"InvalidSource","","source doesn't accept this request",29,N],[4,"Request","","",N,N],[13,"Offer","","add an offered mime type",30,N],[12,"mime_type","wayland_server::protocol::wl_data_source::Request","",30,N],[13,"Destroy","wayland_server::protocol::wl_data_source","destroy the data source",30,N],[13,"SetActions","","set the available drag-and-drop actions",30,N],[12,"dnd_actions","wayland_server::protocol::wl_data_source::Request","",30,N],[4,"Event","wayland_server::protocol::wl_data_source","",N,N],[13,"Target","","a target accepts an offered mime type",31,N],[12,"mime_type","wayland_server::protocol::wl_data_source::Event","",31,N],[13,"Send","wayland_server::protocol::wl_data_source","send the data",31,N],[12,"mime_type","wayland_server::protocol::wl_data_source::Event","",31,N],[12,"fd","","",31,N],[13,"Cancelled","wayland_server::protocol::wl_data_source","selection was cancelled",31,N],[13,"DndDropPerformed","","the drag-and-drop operation physically finished",31,N],[13,"DndFinished","","the drag-and-drop operation concluded",31,N],[13,"Action","","notify the selected action",31,N],[12,"dnd_action","wayland_server::protocol::wl_data_source::Event","",31,N],[0,"wl_data_device","wayland_server::protocol","data transfer device",N,N],[3,"WlDataDevice","wayland_server::protocol::wl_data_device","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",32,N],[4,"Request","","",N,N],[13,"StartDrag","","start drag-and-drop operation",33,N],[12,"source","wayland_server::protocol::wl_data_device::Request","",33,N],[12,"origin","","",33,N],[12,"icon","","",33,N],[12,"serial","","",33,N],[13,"SetSelection","wayland_server::protocol::wl_data_device","copy data to the selection",33,N],[12,"source","wayland_server::protocol::wl_data_device::Request","",33,N],[12,"serial","","",33,N],[13,"Release","wayland_server::protocol::wl_data_device","destroy data device",33,N],[4,"Event","","",N,N],[13,"DataOffer","","introduce a new wl_data_offer",34,N],[12,"id","wayland_server::protocol::wl_data_device::Event","",34,N],[13,"Enter","wayland_server::protocol::wl_data_device","initiate drag-and-drop session",34,N],[12,"serial","wayland_server::protocol::wl_data_device::Event","",34,N],[12,"surface","","",34,N],[12,"x","","",34,N],[12,"y","","",34,N],[12,"id","","",34,N],[13,"Leave","wayland_server::protocol::wl_data_device","end drag-and-drop session",34,N],[13,"Motion","","drag-and-drop session motion",34,N],[12,"time","wayland_server::protocol::wl_data_device::Event","",34,N],[12,"x","","",34,N],[12,"y","","",34,N],[13,"Drop","wayland_server::protocol::wl_data_device","end drag-and-drop session successfully",34,N],[13,"Selection","","advertise new selection",34,N],[12,"id","wayland_server::protocol::wl_data_device::Event","",34,N],[0,"wl_data_device_manager","wayland_server::protocol","data transfer interface",N,N],[3,"DndAction","wayland_server::protocol::wl_data_device_manager","drag and drop actions",N,N],[3,"WlDataDeviceManager","","",N,N],[4,"Request","","",N,N],[13,"CreateDataSource","","create a new data source",35,N],[12,"id","wayland_server::protocol::wl_data_device_manager::Request","",35,N],[13,"GetDataDevice","wayland_server::protocol::wl_data_device_manager","create a new data device",35,N],[12,"id","wayland_server::protocol::wl_data_device_manager::Request","",35,N],[12,"seat","","",35,N],[4,"Event","wayland_server::protocol::wl_data_device_manager","",N,N],[0,"wl_shell","wayland_server::protocol","create desktop-style surfaces",N,N],[3,"WlShell","wayland_server::protocol::wl_shell","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",36,N],[4,"Request","","",N,N],[13,"GetShellSurface","","create a shell surface from a surface",37,N],[12,"id","wayland_server::protocol::wl_shell::Request","",37,N],[12,"surface","","",37,N],[4,"Event","wayland_server::protocol::wl_shell","",N,N],[0,"wl_shell_surface","wayland_server::protocol","desktop-style metadata interface",N,N],[3,"Resize","wayland_server::protocol::wl_shell_surface","edge values for resizing",N,N],[3,"Transient","","details of transient behaviour",N,N],[3,"WlShellSurface","","",N,N],[4,"FullscreenMethod","","different method to set the surface fullscreen",N,N],[13,"Default","","no preference, apply default policy",38,N],[13,"Scale","","scale, preserve the surface's aspect ratio and center on output",38,N],[13,"Driver","","switch output mode to the smallest mode that can fit the surface, add black borders to compensate size mismatch",38,N],[13,"Fill","","no upscaling, center on output and add black borders to compensate size mismatch",38,N],[4,"Request","","",N,N],[13,"Pong","","respond to a ping event",39,N],[12,"serial","wayland_server::protocol::wl_shell_surface::Request","",39,N],[13,"Move","wayland_server::protocol::wl_shell_surface","start an interactive move",39,N],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",39,N],[12,"serial","","",39,N],[13,"Resize","wayland_server::protocol::wl_shell_surface","start an interactive resize",39,N],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",39,N],[12,"serial","","",39,N],[12,"edges","","",39,N],[13,"SetToplevel","wayland_server::protocol::wl_shell_surface","make the surface a toplevel surface",39,N],[13,"SetTransient","","make the surface a transient surface",39,N],[12,"parent","wayland_server::protocol::wl_shell_surface::Request","",39,N],[12,"x","","",39,N],[12,"y","","",39,N],[12,"flags","","",39,N],[13,"SetFullscreen","wayland_server::protocol::wl_shell_surface","make the surface a fullscreen surface",39,N],[12,"method","wayland_server::protocol::wl_shell_surface::Request","",39,N],[12,"framerate","","",39,N],[12,"output","","",39,N],[13,"SetPopup","wayland_server::protocol::wl_shell_surface","make the surface a popup surface",39,N],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",39,N],[12,"serial","","",39,N],[12,"parent","","",39,N],[12,"x","","",39,N],[12,"y","","",39,N],[12,"flags","","",39,N],[13,"SetMaximized","wayland_server::protocol::wl_shell_surface","make the surface a maximized surface",39,N],[12,"output","wayland_server::protocol::wl_shell_surface::Request","",39,N],[13,"SetTitle","wayland_server::protocol::wl_shell_surface","set surface title",39,N],[12,"title","wayland_server::protocol::wl_shell_surface::Request","",39,N],[13,"SetClass","wayland_server::protocol::wl_shell_surface","set surface class",39,N],[12,"class_","wayland_server::protocol::wl_shell_surface::Request","",39,N],[4,"Event","wayland_server::protocol::wl_shell_surface","",N,N],[13,"Ping","","ping client",40,N],[12,"serial","wayland_server::protocol::wl_shell_surface::Event","",40,N],[13,"Configure","wayland_server::protocol::wl_shell_surface","suggest resize",40,N],[12,"edges","wayland_server::protocol::wl_shell_surface::Event","",40,N],[12,"width","","",40,N],[12,"height","","",40,N],[13,"PopupDone","wayland_server::protocol::wl_shell_surface","popup interaction is done",40,N],[0,"wl_surface","wayland_server::protocol","an onscreen surface",N,N],[3,"WlSurface","wayland_server::protocol::wl_surface","",N,N],[4,"Error","","wl_surface error values",N,N],[13,"InvalidScale","","buffer scale value is invalid",41,N],[13,"InvalidTransform","","buffer transform value is invalid",41,N],[4,"Request","","",N,N],[13,"Destroy","","delete surface",42,N],[13,"Attach","","set the surface contents",42,N],[12,"buffer","wayland_server::protocol::wl_surface::Request","",42,N],[12,"x","","",42,N],[12,"y","","",42,N],[13,"Damage","wayland_server::protocol::wl_surface","mark part of the surface damaged",42,N],[12,"x","wayland_server::protocol::wl_surface::Request","",42,N],[12,"y","","",42,N],[12,"width","","",42,N],[12,"height","","",42,N],[13,"Frame","wayland_server::protocol::wl_surface","request a frame throttling hint",42,N],[12,"callback","wayland_server::protocol::wl_surface::Request","",42,N],[13,"SetOpaqueRegion","wayland_server::protocol::wl_surface","set opaque region",42,N],[12,"region","wayland_server::protocol::wl_surface::Request","",42,N],[13,"SetInputRegion","wayland_server::protocol::wl_surface","set input region",42,N],[12,"region","wayland_server::protocol::wl_surface::Request","",42,N],[13,"Commit","wayland_server::protocol::wl_surface","commit pending surface state",42,N],[13,"SetBufferTransform","","sets the buffer transformation",42,N],[12,"transform","wayland_server::protocol::wl_surface::Request","",42,N],[13,"SetBufferScale","wayland_server::protocol::wl_surface","sets the buffer scaling factor",42,N],[12,"scale","wayland_server::protocol::wl_surface::Request","",42,N],[13,"DamageBuffer","wayland_server::protocol::wl_surface","mark part of the surface damaged using buffer coordinates",42,N],[12,"x","wayland_server::protocol::wl_surface::Request","",42,N],[12,"y","","",42,N],[12,"width","","",42,N],[12,"height","","",42,N],[4,"Event","wayland_server::protocol::wl_surface","",N,N],[13,"Enter","","surface enters an output",43,N],[12,"output","wayland_server::protocol::wl_surface::Event","",43,N],[13,"Leave","wayland_server::protocol::wl_surface","surface leaves an output",43,N],[12,"output","wayland_server::protocol::wl_surface::Event","",43,N],[0,"wl_seat","wayland_server::protocol","group of input devices",N,N],[3,"Capability","wayland_server::protocol::wl_seat","seat capability bitmask",N,N],[3,"WlSeat","","",N,N],[4,"Request","","",N,N],[13,"GetPointer","","return pointer object",44,N],[12,"id","wayland_server::protocol::wl_seat::Request","",44,N],[13,"GetKeyboard","wayland_server::protocol::wl_seat","return keyboard object",44,N],[12,"id","wayland_server::protocol::wl_seat::Request","",44,N],[13,"GetTouch","wayland_server::protocol::wl_seat","return touch object",44,N],[12,"id","wayland_server::protocol::wl_seat::Request","",44,N],[13,"Release","wayland_server::protocol::wl_seat","release the seat object",44,N],[4,"Event","","",N,N],[13,"Capabilities","","seat capabilities changed",45,N],[12,"capabilities","wayland_server::protocol::wl_seat::Event","",45,N],[13,"Name","wayland_server::protocol::wl_seat","unique identifier for this seat",45,N],[12,"name","wayland_server::protocol::wl_seat::Event","",45,N],[0,"wl_pointer","wayland_server::protocol","pointer input device",N,N],[3,"WlPointer","wayland_server::protocol::wl_pointer","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",46,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","the button is not pressed",47,N],[13,"Pressed","","the button is pressed",47,N],[4,"Axis","","axis types",N,N],[13,"VerticalScroll","","vertical axis",48,N],[13,"HorizontalScroll","","horizontal axis",48,N],[4,"AxisSource","","axis source types",N,N],[13,"Wheel","","a physical wheel",49,N],[13,"Finger","","finger on a touch surface",49,N],[13,"Continuous","","continuous coordinate space",49,N],[4,"Request","","",N,N],[13,"SetCursor","","set the pointer surface",50,N],[12,"serial","wayland_server::protocol::wl_pointer::Request","",50,N],[12,"surface","","",50,N],[12,"hotspot_x","","",50,N],[12,"hotspot_y","","",50,N],[13,"Release","wayland_server::protocol::wl_pointer","release the pointer object",50,N],[4,"Event","","",N,N],[13,"Enter","","enter event",51,N],[12,"serial","wayland_server::protocol::wl_pointer::Event","",51,N],[12,"surface","","",51,N],[12,"surface_x","","",51,N],[12,"surface_y","","",51,N],[13,"Leave","wayland_server::protocol::wl_pointer","leave event",51,N],[12,"serial","wayland_server::protocol::wl_pointer::Event","",51,N],[12,"surface","","",51,N],[13,"Motion","wayland_server::protocol::wl_pointer","pointer motion event",51,N],[12,"time","wayland_server::protocol::wl_pointer::Event","",51,N],[12,"surface_x","","",51,N],[12,"surface_y","","",51,N],[13,"Button","wayland_server::protocol::wl_pointer","pointer button event",51,N],[12,"serial","wayland_server::protocol::wl_pointer::Event","",51,N],[12,"time","","",51,N],[12,"button","","",51,N],[12,"state","","",51,N],[13,"Axis","wayland_server::protocol::wl_pointer","axis event",51,N],[12,"time","wayland_server::protocol::wl_pointer::Event","",51,N],[12,"axis","","",51,N],[12,"value","","",51,N],[13,"Frame","wayland_server::protocol::wl_pointer","end of a pointer event sequence",51,N],[13,"AxisSource","","axis source event",51,N],[12,"axis_source","wayland_server::protocol::wl_pointer::Event","",51,N],[13,"AxisStop","wayland_server::protocol::wl_pointer","axis stop event",51,N],[12,"time","wayland_server::protocol::wl_pointer::Event","",51,N],[12,"axis","","",51,N],[13,"AxisDiscrete","wayland_server::protocol::wl_pointer","axis click event",51,N],[12,"axis","wayland_server::protocol::wl_pointer::Event","",51,N],[12,"discrete","","",51,N],[0,"wl_keyboard","wayland_server::protocol","keyboard input device",N,N],[3,"WlKeyboard","wayland_server::protocol::wl_keyboard","",N,N],[4,"KeymapFormat","","keyboard mapping format",N,N],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw keycode",52,N],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode, clients must add 8 to the key event keycode",52,N],[4,"KeyState","","physical key state",N,N],[13,"Released","","key is not pressed",53,N],[13,"Pressed","","key is pressed",53,N],[4,"Request","","",N,N],[13,"Release","","release the keyboard object",54,N],[4,"Event","","",N,N],[13,"Keymap","","keyboard mapping",55,N],[12,"format","wayland_server::protocol::wl_keyboard::Event","",55,N],[12,"fd","","",55,N],[12,"size","","",55,N],[13,"Enter","wayland_server::protocol::wl_keyboard","enter event",55,N],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",55,N],[12,"surface","","",55,N],[12,"keys","","",55,N],[13,"Leave","wayland_server::protocol::wl_keyboard","leave event",55,N],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",55,N],[12,"surface","","",55,N],[13,"Key","wayland_server::protocol::wl_keyboard","key event",55,N],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",55,N],[12,"time","","",55,N],[12,"key","","",55,N],[12,"state","","",55,N],[13,"Modifiers","wayland_server::protocol::wl_keyboard","modifier and group state",55,N],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",55,N],[12,"mods_depressed","","",55,N],[12,"mods_latched","","",55,N],[12,"mods_locked","","",55,N],[12,"group","","",55,N],[13,"RepeatInfo","wayland_server::protocol::wl_keyboard","repeat rate and delay",55,N],[12,"rate","wayland_server::protocol::wl_keyboard::Event","",55,N],[12,"delay","","",55,N],[0,"wl_touch","wayland_server::protocol","touchscreen input device",N,N],[3,"WlTouch","wayland_server::protocol::wl_touch","",N,N],[4,"Request","","",N,N],[13,"Release","","release the touch object",56,N],[4,"Event","","",N,N],[13,"Down","","touch down event and beginning of a touch sequence",57,N],[12,"serial","wayland_server::protocol::wl_touch::Event","",57,N],[12,"time","","",57,N],[12,"surface","","",57,N],[12,"id","","",57,N],[12,"x","","",57,N],[12,"y","","",57,N],[13,"Up","wayland_server::protocol::wl_touch","end of a touch event sequence",57,N],[12,"serial","wayland_server::protocol::wl_touch::Event","",57,N],[12,"time","","",57,N],[12,"id","","",57,N],[13,"Motion","wayland_server::protocol::wl_touch","update of touch point coordinates",57,N],[12,"time","wayland_server::protocol::wl_touch::Event","",57,N],[12,"id","","",57,N],[12,"x","","",57,N],[12,"y","","",57,N],[13,"Frame","wayland_server::protocol::wl_touch","end of touch frame event",57,N],[13,"Cancel","","touch session cancelled",57,N],[0,"wl_output","wayland_server::protocol","compositor output region",N,N],[3,"Mode","wayland_server::protocol::wl_output","mode information",N,N],[3,"WlOutput","","",N,N],[4,"Subpixel","","subpixel geometry information",N,N],[13,"Unknown","","unknown geometry",58,N],[13,"None","","no geometry",58,N],[13,"HorizontalRgb","","horizontal RGB",58,N],[13,"HorizontalBgr","","horizontal BGR",58,N],[13,"VerticalRgb","","vertical RGB",58,N],[13,"VerticalBgr","","vertical BGR",58,N],[4,"Transform","","transform from framebuffer to output",N,N],[13,"Normal","","no transform",59,N],[13,"_90","","90 degrees counter-clockwise",59,N],[13,"_180","","180 degrees counter-clockwise",59,N],[13,"_270","","270 degrees counter-clockwise",59,N],[13,"Flipped","","180 degree flip around a vertical axis",59,N],[13,"Flipped90","","flip and rotate 90 degrees counter-clockwise",59,N],[13,"Flipped180","","flip and rotate 180 degrees counter-clockwise",59,N],[13,"Flipped270","","flip and rotate 270 degrees counter-clockwise",59,N],[4,"Request","","",N,N],[13,"Release","","release the output object",60,N],[4,"Event","","",N,N],[13,"Geometry","","properties of the output",61,N],[12,"x","wayland_server::protocol::wl_output::Event","",61,N],[12,"y","","",61,N],[12,"physical_width","","",61,N],[12,"physical_height","","",61,N],[12,"subpixel","","",61,N],[12,"make","","",61,N],[12,"model","","",61,N],[12,"transform","","",61,N],[13,"Mode","wayland_server::protocol::wl_output","advertise available modes for the output",61,N],[12,"flags","wayland_server::protocol::wl_output::Event","",61,N],[12,"width","","",61,N],[12,"height","","",61,N],[12,"refresh","","",61,N],[13,"Done","wayland_server::protocol::wl_output","sent all information about output",61,N],[13,"Scale","","output scaling properties",61,N],[12,"factor","wayland_server::protocol::wl_output::Event","",61,N],[0,"wl_region","wayland_server::protocol","region interface",N,N],[3,"WlRegion","wayland_server::protocol::wl_region","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy region",62,N],[13,"Add","","add rectangle to region",62,N],[12,"x","wayland_server::protocol::wl_region::Request","",62,N],[12,"y","","",62,N],[12,"width","","",62,N],[12,"height","","",62,N],[13,"Subtract","wayland_server::protocol::wl_region","subtract rectangle from region",62,N],[12,"x","wayland_server::protocol::wl_region::Request","",62,N],[12,"y","","",62,N],[12,"width","","",62,N],[12,"height","","",62,N],[4,"Event","wayland_server::protocol::wl_region","",N,N],[0,"wl_subcompositor","wayland_server::protocol","sub-surface compositing",N,N],[3,"WlSubcompositor","wayland_server::protocol::wl_subcompositor","",N,N],[4,"Error","","",N,N],[13,"BadSurface","","the to-be sub-surface is invalid",63,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the subcompositor interface",64,N],[13,"GetSubsurface","","give a surface the role sub-surface",64,N],[12,"id","wayland_server::protocol::wl_subcompositor::Request","",64,N],[12,"surface","","",64,N],[12,"parent","","",64,N],[4,"Event","wayland_server::protocol::wl_subcompositor","",N,N],[0,"wl_subsurface","wayland_server::protocol","sub-surface interface to a wl_surface",N,N],[3,"WlSubsurface","wayland_server::protocol::wl_subsurface","",N,N],[4,"Error","","",N,N],[13,"BadSurface","","wl_surface is not a sibling or the parent",65,N],[4,"Request","","",N,N],[13,"Destroy","","remove sub-surface interface",66,N],[13,"SetPosition","","reposition the sub-surface",66,N],[12,"x","wayland_server::protocol::wl_subsurface::Request","",66,N],[12,"y","","",66,N],[13,"PlaceAbove","wayland_server::protocol::wl_subsurface","restack the sub-surface",66,N],[12,"sibling","wayland_server::protocol::wl_subsurface::Request","",66,N],[13,"PlaceBelow","wayland_server::protocol::wl_subsurface","restack the sub-surface",66,N],[12,"sibling","wayland_server::protocol::wl_subsurface::Request","",66,N],[13,"SetSync","wayland_server::protocol::wl_subsurface","set sub-surface to synchronized mode",66,N],[13,"SetDesync","","set sub-surface to desynchronized mode",66,N],[4,"Event","","",N,N],[11,"is_destructor","wayland_server::protocol::wl_callback","",67,[[["self"]],["bool"]]],[11,"opcode","","",67,[[["self"]],["u16"]]],[11,"child","","",67,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",67,N],[11,"into_raw","","",67,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",67,N],[11,"as_raw_c_in","","",67,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",17,[[["self"]],["bool"]]],[11,"opcode","","",17,[[["self"]],["u16"]]],[11,"child","","",17,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",17,N],[11,"into_raw","","",17,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",17,N],[11,"as_raw_c_in","","",17,[[["self"],["f"]],["t"]]],[11,"c_interface","","",68,N],[11,"is_destructor","wayland_server::protocol::wl_compositor","",18,[[["self"]],["bool"]]],[11,"opcode","","",18,[[["self"]],["u16"]]],[11,"child","","",18,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",18,N],[11,"into_raw","","",18,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",18,N],[11,"as_raw_c_in","","",18,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",69,[[["self"]],["bool"]]],[11,"opcode","","",69,[[["self"]],["u16"]]],[11,"child","","",69,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",69,N],[11,"into_raw","","",69,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",69,N],[11,"as_raw_c_in","","",69,[[["self"],["f"]],["t"]]],[11,"c_interface","","",70,N],[11,"is_destructor","wayland_server::protocol::wl_shm_pool","",19,[[["self"]],["bool"]]],[11,"opcode","","",19,[[["self"]],["u16"]]],[11,"child","","",19,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",19,N],[11,"into_raw","","",19,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",19,N],[11,"as_raw_c_in","","",19,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",71,[[["self"]],["bool"]]],[11,"opcode","","",71,[[["self"]],["u16"]]],[11,"child","","",71,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",71,N],[11,"into_raw","","",71,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",71,N],[11,"as_raw_c_in","","",71,[[["self"],["f"]],["t"]]],[11,"c_interface","","",72,N],[11,"clone","wayland_server::protocol::wl_shm","",20,[[["self"]],["error"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"eq","","",20,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",20,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",20,[[["self"]],["u32"]]],[11,"clone","","",21,[[["self"]],["format"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"eq","","",21,[[["self"],["format"]],["bool"]]],[11,"from_raw","","",21,[[["u32"]],["option",["format"]]]],[11,"to_raw","","",21,[[["self"]],["u32"]]],[11,"is_destructor","","",22,[[["self"]],["bool"]]],[11,"opcode","","",22,[[["self"]],["u16"]]],[11,"child","","",22,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",22,N],[11,"into_raw","","",22,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",22,N],[11,"as_raw_c_in","","",22,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",23,[[["self"]],["bool"]]],[11,"opcode","","",23,[[["self"]],["u16"]]],[11,"child","","",23,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",23,N],[11,"into_raw","","",23,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",23,N],[11,"as_raw_c_in","","",23,[[["self"],["f"]],["t"]]],[11,"c_interface","","",73,N],[11,"is_destructor","wayland_server::protocol::wl_buffer","",24,[[["self"]],["bool"]]],[11,"opcode","","",24,[[["self"]],["u16"]]],[11,"child","","",24,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",24,N],[11,"into_raw","","",24,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",24,N],[11,"as_raw_c_in","","",24,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",25,[[["self"]],["bool"]]],[11,"opcode","","",25,[[["self"]],["u16"]]],[11,"child","","",25,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",25,N],[11,"into_raw","","",25,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",25,N],[11,"as_raw_c_in","","",25,[[["self"],["f"]],["t"]]],[11,"c_interface","","",74,N],[11,"clone","wayland_server::protocol::wl_data_offer","",26,[[["self"]],["error"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"eq","","",26,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",26,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",26,[[["self"]],["u32"]]],[11,"is_destructor","","",27,[[["self"]],["bool"]]],[11,"opcode","","",27,[[["self"]],["u16"]]],[11,"child","","",27,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",27,N],[11,"into_raw","","",27,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",27,N],[11,"as_raw_c_in","","",27,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",28,[[["self"]],["bool"]]],[11,"opcode","","",28,[[["self"]],["u16"]]],[11,"child","","",28,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",28,N],[11,"into_raw","","",28,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",28,N],[11,"as_raw_c_in","","",28,[[["self"],["f"]],["t"]]],[11,"c_interface","","",75,N],[11,"clone","wayland_server::protocol::wl_data_source","",29,[[["self"]],["error"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"eq","","",29,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",29,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",29,[[["self"]],["u32"]]],[11,"is_destructor","","",30,[[["self"]],["bool"]]],[11,"opcode","","",30,[[["self"]],["u16"]]],[11,"child","","",30,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",30,N],[11,"into_raw","","",30,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",30,N],[11,"as_raw_c_in","","",30,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",31,[[["self"]],["bool"]]],[11,"opcode","","",31,[[["self"]],["u16"]]],[11,"child","","",31,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",31,N],[11,"into_raw","","",31,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",31,N],[11,"as_raw_c_in","","",31,[[["self"],["f"]],["t"]]],[11,"c_interface","","",76,N],[11,"clone","wayland_server::protocol::wl_data_device","",32,[[["self"]],["error"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"eq","","",32,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",32,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",32,[[["self"]],["u32"]]],[11,"is_destructor","","",33,[[["self"]],["bool"]]],[11,"opcode","","",33,[[["self"]],["u16"]]],[11,"child","","",33,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",33,N],[11,"into_raw","","",33,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",33,N],[11,"as_raw_c_in","","",33,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",34,[[["self"]],["bool"]]],[11,"opcode","","",34,[[["self"]],["u16"]]],[11,"child","","",34,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",34,N],[11,"into_raw","","",34,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",34,N],[11,"as_raw_c_in","","",34,[[["self"],["f"]],["t"]]],[11,"c_interface","","",77,N],[11,"eq","wayland_server::protocol::wl_data_device_manager","",78,[[["self"],["dndaction"]],["bool"]]],[11,"ne","","",78,[[["self"],["dndaction"]],["bool"]]],[11,"clone","","",78,[[["self"]],["dndaction"]]],[11,"partial_cmp","","",78,[[["self"],["dndaction"]],["option",["ordering"]]]],[11,"lt","","",78,[[["self"],["dndaction"]],["bool"]]],[11,"le","","",78,[[["self"],["dndaction"]],["bool"]]],[11,"gt","","",78,[[["self"],["dndaction"]],["bool"]]],[11,"ge","","",78,[[["self"],["dndaction"]],["bool"]]],[11,"cmp","","",78,[[["self"],["dndaction"]],["ordering"]]],[11,"hash","","",78,N],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[18,"None","","no action",78,N],[18,"Copy","","copy action",78,N],[18,"Move","","move action",78,N],[18,"Ask","","ask action",78,N],[11,"empty","","Returns an empty set of flags.",78,[[],["dndaction"]]],[11,"all","","Returns the set containing all flags.",78,[[],["dndaction"]]],[11,"bits","","Returns the raw value of the flags currently stored.",78,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",78,[[["u32"]],["option",["dndaction"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",78,[[["u32"]],["dndaction"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",78,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",78,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",78,[[["self"],["dndaction"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",78,[[["self"],["dndaction"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",78,[[["self"],["dndaction"]]]],[11,"remove","","Removes the specified flags in-place.",78,[[["self"],["dndaction"]]]],[11,"toggle","","Toggles the specified flags in-place.",78,[[["self"],["dndaction"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",78,[[["self"],["dndaction"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",78,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitor_assign","","Adds the set of flags.",78,[[["self"],["dndaction"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",78,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitxor_assign","","Toggles the set of flags.",78,[[["self"],["dndaction"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",78,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",78,[[["self"],["dndaction"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",78,[[["self"],["dndaction"]],["dndaction"]]],[11,"sub_assign","","Disables all flags enabled in the set.",78,[[["self"],["dndaction"]]]],[11,"not","","Returns the complement of this set of flags.",78,[[["self"]],["dndaction"]]],[11,"extend","","",78,[[["self"],["t"]]]],[11,"from_iter","","",78,[[["t"]],["dndaction"]]],[11,"from_raw","","",78,[[["u32"]],["option",["dndaction"]]]],[11,"to_raw","","",78,[[["self"]],["u32"]]],[11,"is_destructor","","",35,[[["self"]],["bool"]]],[11,"opcode","","",35,[[["self"]],["u16"]]],[11,"child","","",35,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",35,N],[11,"into_raw","","",35,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",35,N],[11,"as_raw_c_in","","",35,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",79,[[["self"]],["bool"]]],[11,"opcode","","",79,[[["self"]],["u16"]]],[11,"child","","",79,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",79,N],[11,"into_raw","","",79,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",79,N],[11,"as_raw_c_in","","",79,[[["self"],["f"]],["t"]]],[11,"c_interface","","",80,N],[11,"clone","wayland_server::protocol::wl_shell","",36,[[["self"]],["error"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"eq","","",36,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",36,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",36,[[["self"]],["u32"]]],[11,"is_destructor","","",37,[[["self"]],["bool"]]],[11,"opcode","","",37,[[["self"]],["u16"]]],[11,"child","","",37,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",37,N],[11,"into_raw","","",37,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",37,N],[11,"as_raw_c_in","","",37,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",81,[[["self"]],["bool"]]],[11,"opcode","","",81,[[["self"]],["u16"]]],[11,"child","","",81,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",81,N],[11,"into_raw","","",81,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",81,N],[11,"as_raw_c_in","","",81,[[["self"],["f"]],["t"]]],[11,"c_interface","","",82,N],[11,"eq","wayland_server::protocol::wl_shell_surface","",83,[[["self"],["resize"]],["bool"]]],[11,"ne","","",83,[[["self"],["resize"]],["bool"]]],[11,"clone","","",83,[[["self"]],["resize"]]],[11,"partial_cmp","","",83,[[["self"],["resize"]],["option",["ordering"]]]],[11,"lt","","",83,[[["self"],["resize"]],["bool"]]],[11,"le","","",83,[[["self"],["resize"]],["bool"]]],[11,"gt","","",83,[[["self"],["resize"]],["bool"]]],[11,"ge","","",83,[[["self"],["resize"]],["bool"]]],[11,"cmp","","",83,[[["self"],["resize"]],["ordering"]]],[11,"hash","","",83,N],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[18,"None","","no edge",83,N],[18,"Top","","top edge",83,N],[18,"Bottom","","bottom edge",83,N],[18,"Left","","left edge",83,N],[18,"TopLeft","","top and left edges",83,N],[18,"BottomLeft","","bottom and left edges",83,N],[18,"Right","","right edge",83,N],[18,"TopRight","","top and right edges",83,N],[18,"BottomRight","","bottom and right edges",83,N],[11,"empty","","Returns an empty set of flags.",83,[[],["resize"]]],[11,"all","","Returns the set containing all flags.",83,[[],["resize"]]],[11,"bits","","Returns the raw value of the flags currently stored.",83,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",83,[[["u32"]],["option",["resize"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",83,[[["u32"]],["resize"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",83,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",83,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",83,[[["self"],["resize"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",83,[[["self"],["resize"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",83,[[["self"],["resize"]]]],[11,"remove","","Removes the specified flags in-place.",83,[[["self"],["resize"]]]],[11,"toggle","","Toggles the specified flags in-place.",83,[[["self"],["resize"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",83,[[["self"],["resize"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",83,[[["self"],["resize"]],["resize"]]],[11,"bitor_assign","","Adds the set of flags.",83,[[["self"],["resize"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",83,[[["self"],["resize"]],["resize"]]],[11,"bitxor_assign","","Toggles the set of flags.",83,[[["self"],["resize"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",83,[[["self"],["resize"]],["resize"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",83,[[["self"],["resize"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",83,[[["self"],["resize"]],["resize"]]],[11,"sub_assign","","Disables all flags enabled in the set.",83,[[["self"],["resize"]]]],[11,"not","","Returns the complement of this set of flags.",83,[[["self"]],["resize"]]],[11,"extend","","",83,[[["self"],["t"]]]],[11,"from_iter","","",83,[[["t"]],["resize"]]],[11,"from_raw","","",83,[[["u32"]],["option",["resize"]]]],[11,"to_raw","","",83,[[["self"]],["u32"]]],[11,"eq","","",84,[[["self"],["transient"]],["bool"]]],[11,"ne","","",84,[[["self"],["transient"]],["bool"]]],[11,"clone","","",84,[[["self"]],["transient"]]],[11,"partial_cmp","","",84,[[["self"],["transient"]],["option",["ordering"]]]],[11,"lt","","",84,[[["self"],["transient"]],["bool"]]],[11,"le","","",84,[[["self"],["transient"]],["bool"]]],[11,"gt","","",84,[[["self"],["transient"]],["bool"]]],[11,"ge","","",84,[[["self"],["transient"]],["bool"]]],[11,"cmp","","",84,[[["self"],["transient"]],["ordering"]]],[11,"hash","","",84,N],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[18,"Inactive","","do not set keyboard focus",84,N],[11,"empty","","Returns an empty set of flags.",84,[[],["transient"]]],[11,"all","","Returns the set containing all flags.",84,[[],["transient"]]],[11,"bits","","Returns the raw value of the flags currently stored.",84,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",84,[[["u32"]],["option",["transient"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",84,[[["u32"]],["transient"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",84,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",84,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",84,[[["self"],["transient"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",84,[[["self"],["transient"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",84,[[["self"],["transient"]]]],[11,"remove","","Removes the specified flags in-place.",84,[[["self"],["transient"]]]],[11,"toggle","","Toggles the specified flags in-place.",84,[[["self"],["transient"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",84,[[["self"],["transient"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",84,[[["self"],["transient"]],["transient"]]],[11,"bitor_assign","","Adds the set of flags.",84,[[["self"],["transient"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",84,[[["self"],["transient"]],["transient"]]],[11,"bitxor_assign","","Toggles the set of flags.",84,[[["self"],["transient"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",84,[[["self"],["transient"]],["transient"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",84,[[["self"],["transient"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",84,[[["self"],["transient"]],["transient"]]],[11,"sub_assign","","Disables all flags enabled in the set.",84,[[["self"],["transient"]]]],[11,"not","","Returns the complement of this set of flags.",84,[[["self"]],["transient"]]],[11,"extend","","",84,[[["self"],["t"]]]],[11,"from_iter","","",84,[[["t"]],["transient"]]],[11,"from_raw","","",84,[[["u32"]],["option",["transient"]]]],[11,"to_raw","","",84,[[["self"]],["u32"]]],[11,"clone","","",38,[[["self"]],["fullscreenmethod"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"eq","","",38,[[["self"],["fullscreenmethod"]],["bool"]]],[11,"from_raw","","",38,[[["u32"]],["option",["fullscreenmethod"]]]],[11,"to_raw","","",38,[[["self"]],["u32"]]],[11,"is_destructor","","",39,[[["self"]],["bool"]]],[11,"opcode","","",39,[[["self"]],["u16"]]],[11,"child","","",39,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",39,N],[11,"into_raw","","",39,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",39,N],[11,"as_raw_c_in","","",39,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",40,[[["self"]],["bool"]]],[11,"opcode","","",40,[[["self"]],["u16"]]],[11,"child","","",40,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",40,N],[11,"into_raw","","",40,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",40,N],[11,"as_raw_c_in","","",40,[[["self"],["f"]],["t"]]],[11,"c_interface","","",85,N],[11,"clone","wayland_server::protocol::wl_surface","",41,[[["self"]],["error"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"eq","","",41,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",41,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",41,[[["self"]],["u32"]]],[11,"is_destructor","","",42,[[["self"]],["bool"]]],[11,"opcode","","",42,[[["self"]],["u16"]]],[11,"child","","",42,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",42,N],[11,"into_raw","","",42,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",42,N],[11,"as_raw_c_in","","",42,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",43,[[["self"]],["bool"]]],[11,"opcode","","",43,[[["self"]],["u16"]]],[11,"child","","",43,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",43,N],[11,"into_raw","","",43,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",43,N],[11,"as_raw_c_in","","",43,[[["self"],["f"]],["t"]]],[11,"c_interface","","",86,N],[11,"eq","wayland_server::protocol::wl_seat","",87,[[["self"],["capability"]],["bool"]]],[11,"ne","","",87,[[["self"],["capability"]],["bool"]]],[11,"clone","","",87,[[["self"]],["capability"]]],[11,"partial_cmp","","",87,[[["self"],["capability"]],["option",["ordering"]]]],[11,"lt","","",87,[[["self"],["capability"]],["bool"]]],[11,"le","","",87,[[["self"],["capability"]],["bool"]]],[11,"gt","","",87,[[["self"],["capability"]],["bool"]]],[11,"ge","","",87,[[["self"],["capability"]],["bool"]]],[11,"cmp","","",87,[[["self"],["capability"]],["ordering"]]],[11,"hash","","",87,N],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[18,"Pointer","","the seat has pointer devices",87,N],[18,"Keyboard","","the seat has one or more keyboards",87,N],[18,"Touch","","the seat has touch devices",87,N],[11,"empty","","Returns an empty set of flags.",87,[[],["capability"]]],[11,"all","","Returns the set containing all flags.",87,[[],["capability"]]],[11,"bits","","Returns the raw value of the flags currently stored.",87,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",87,[[["u32"]],["option",["capability"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",87,[[["u32"]],["capability"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",87,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",87,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",87,[[["self"],["capability"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",87,[[["self"],["capability"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",87,[[["self"],["capability"]]]],[11,"remove","","Removes the specified flags in-place.",87,[[["self"],["capability"]]]],[11,"toggle","","Toggles the specified flags in-place.",87,[[["self"],["capability"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",87,[[["self"],["capability"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",87,[[["self"],["capability"]],["capability"]]],[11,"bitor_assign","","Adds the set of flags.",87,[[["self"],["capability"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",87,[[["self"],["capability"]],["capability"]]],[11,"bitxor_assign","","Toggles the set of flags.",87,[[["self"],["capability"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",87,[[["self"],["capability"]],["capability"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",87,[[["self"],["capability"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",87,[[["self"],["capability"]],["capability"]]],[11,"sub_assign","","Disables all flags enabled in the set.",87,[[["self"],["capability"]]]],[11,"not","","Returns the complement of this set of flags.",87,[[["self"]],["capability"]]],[11,"extend","","",87,[[["self"],["t"]]]],[11,"from_iter","","",87,[[["t"]],["capability"]]],[11,"from_raw","","",87,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",87,[[["self"]],["u32"]]],[11,"is_destructor","","",44,[[["self"]],["bool"]]],[11,"opcode","","",44,[[["self"]],["u16"]]],[11,"child","","",44,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",44,N],[11,"into_raw","","",44,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",44,N],[11,"as_raw_c_in","","",44,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",45,[[["self"]],["bool"]]],[11,"opcode","","",45,[[["self"]],["u16"]]],[11,"child","","",45,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",45,N],[11,"into_raw","","",45,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",45,N],[11,"as_raw_c_in","","",45,[[["self"],["f"]],["t"]]],[11,"c_interface","","",88,N],[11,"clone","wayland_server::protocol::wl_pointer","",46,[[["self"]],["error"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"eq","","",46,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",46,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",46,[[["self"]],["u32"]]],[11,"clone","","",47,[[["self"]],["buttonstate"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"eq","","",47,[[["self"],["buttonstate"]],["bool"]]],[11,"from_raw","","",47,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",47,[[["self"]],["u32"]]],[11,"clone","","",48,[[["self"]],["axis"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"eq","","",48,[[["self"],["axis"]],["bool"]]],[11,"from_raw","","",48,[[["u32"]],["option",["axis"]]]],[11,"to_raw","","",48,[[["self"]],["u32"]]],[11,"clone","","",49,[[["self"]],["axissource"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"eq","","",49,[[["self"],["axissource"]],["bool"]]],[11,"from_raw","","",49,[[["u32"]],["option",["axissource"]]]],[11,"to_raw","","",49,[[["self"]],["u32"]]],[11,"is_destructor","","",50,[[["self"]],["bool"]]],[11,"opcode","","",50,[[["self"]],["u16"]]],[11,"child","","",50,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",50,N],[11,"into_raw","","",50,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",50,N],[11,"as_raw_c_in","","",50,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",51,[[["self"]],["bool"]]],[11,"opcode","","",51,[[["self"]],["u16"]]],[11,"child","","",51,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",51,N],[11,"into_raw","","",51,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",51,N],[11,"as_raw_c_in","","",51,[[["self"],["f"]],["t"]]],[11,"c_interface","","",89,N],[11,"clone","wayland_server::protocol::wl_keyboard","",52,[[["self"]],["keymapformat"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"eq","","",52,[[["self"],["keymapformat"]],["bool"]]],[11,"from_raw","","",52,[[["u32"]],["option",["keymapformat"]]]],[11,"to_raw","","",52,[[["self"]],["u32"]]],[11,"clone","","",53,[[["self"]],["keystate"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"eq","","",53,[[["self"],["keystate"]],["bool"]]],[11,"from_raw","","",53,[[["u32"]],["option",["keystate"]]]],[11,"to_raw","","",53,[[["self"]],["u32"]]],[11,"is_destructor","","",54,[[["self"]],["bool"]]],[11,"opcode","","",54,[[["self"]],["u16"]]],[11,"child","","",54,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",54,N],[11,"into_raw","","",54,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",54,N],[11,"as_raw_c_in","","",54,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",55,[[["self"]],["bool"]]],[11,"opcode","","",55,[[["self"]],["u16"]]],[11,"child","","",55,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",55,N],[11,"into_raw","","",55,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",55,N],[11,"as_raw_c_in","","",55,[[["self"],["f"]],["t"]]],[11,"c_interface","","",90,N],[11,"is_destructor","wayland_server::protocol::wl_touch","",56,[[["self"]],["bool"]]],[11,"opcode","","",56,[[["self"]],["u16"]]],[11,"child","","",56,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",56,N],[11,"into_raw","","",56,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",56,N],[11,"as_raw_c_in","","",56,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",57,[[["self"]],["bool"]]],[11,"opcode","","",57,[[["self"]],["u16"]]],[11,"child","","",57,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",57,N],[11,"into_raw","","",57,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",57,N],[11,"as_raw_c_in","","",57,[[["self"],["f"]],["t"]]],[11,"c_interface","","",91,N],[11,"clone","wayland_server::protocol::wl_output","",58,[[["self"]],["subpixel"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"eq","","",58,[[["self"],["subpixel"]],["bool"]]],[11,"from_raw","","",58,[[["u32"]],["option",["subpixel"]]]],[11,"to_raw","","",58,[[["self"]],["u32"]]],[11,"clone","","",59,[[["self"]],["transform"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"eq","","",59,[[["self"],["transform"]],["bool"]]],[11,"from_raw","","",59,[[["u32"]],["option",["transform"]]]],[11,"to_raw","","",59,[[["self"]],["u32"]]],[11,"eq","","",92,[[["self"],["mode"]],["bool"]]],[11,"ne","","",92,[[["self"],["mode"]],["bool"]]],[11,"clone","","",92,[[["self"]],["mode"]]],[11,"partial_cmp","","",92,[[["self"],["mode"]],["option",["ordering"]]]],[11,"lt","","",92,[[["self"],["mode"]],["bool"]]],[11,"le","","",92,[[["self"],["mode"]],["bool"]]],[11,"gt","","",92,[[["self"],["mode"]],["bool"]]],[11,"ge","","",92,[[["self"],["mode"]],["bool"]]],[11,"cmp","","",92,[[["self"],["mode"]],["ordering"]]],[11,"hash","","",92,N],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[18,"Current","","indicates this is the current mode",92,N],[18,"Preferred","","indicates this is the preferred mode",92,N],[11,"empty","","Returns an empty set of flags.",92,[[],["mode"]]],[11,"all","","Returns the set containing all flags.",92,[[],["mode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",92,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",92,[[["u32"]],["option",["mode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",92,[[["u32"]],["mode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",92,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",92,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",92,[[["self"],["mode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",92,[[["self"],["mode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",92,[[["self"],["mode"]]]],[11,"remove","","Removes the specified flags in-place.",92,[[["self"],["mode"]]]],[11,"toggle","","Toggles the specified flags in-place.",92,[[["self"],["mode"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",92,[[["self"],["mode"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",92,[[["self"],["mode"]],["mode"]]],[11,"bitor_assign","","Adds the set of flags.",92,[[["self"],["mode"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",92,[[["self"],["mode"]],["mode"]]],[11,"bitxor_assign","","Toggles the set of flags.",92,[[["self"],["mode"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",92,[[["self"],["mode"]],["mode"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",92,[[["self"],["mode"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",92,[[["self"],["mode"]],["mode"]]],[11,"sub_assign","","Disables all flags enabled in the set.",92,[[["self"],["mode"]]]],[11,"not","","Returns the complement of this set of flags.",92,[[["self"]],["mode"]]],[11,"extend","","",92,[[["self"],["t"]]]],[11,"from_iter","","",92,[[["t"]],["mode"]]],[11,"from_raw","","",92,[[["u32"]],["option",["mode"]]]],[11,"to_raw","","",92,[[["self"]],["u32"]]],[11,"is_destructor","","",60,[[["self"]],["bool"]]],[11,"opcode","","",60,[[["self"]],["u16"]]],[11,"child","","",60,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",60,N],[11,"into_raw","","",60,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",60,N],[11,"as_raw_c_in","","",60,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",61,[[["self"]],["bool"]]],[11,"opcode","","",61,[[["self"]],["u16"]]],[11,"child","","",61,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",61,N],[11,"into_raw","","",61,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",61,N],[11,"as_raw_c_in","","",61,[[["self"],["f"]],["t"]]],[11,"c_interface","","",93,N],[11,"is_destructor","wayland_server::protocol::wl_region","",62,[[["self"]],["bool"]]],[11,"opcode","","",62,[[["self"]],["u16"]]],[11,"child","","",62,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",62,N],[11,"into_raw","","",62,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",62,N],[11,"as_raw_c_in","","",62,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",94,[[["self"]],["bool"]]],[11,"opcode","","",94,[[["self"]],["u16"]]],[11,"child","","",94,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",94,N],[11,"into_raw","","",94,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",94,N],[11,"as_raw_c_in","","",94,[[["self"],["f"]],["t"]]],[11,"c_interface","","",95,N],[11,"clone","wayland_server::protocol::wl_subcompositor","",63,[[["self"]],["error"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"eq","","",63,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",63,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",63,[[["self"]],["u32"]]],[11,"is_destructor","","",64,[[["self"]],["bool"]]],[11,"opcode","","",64,[[["self"]],["u16"]]],[11,"child","","",64,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",64,N],[11,"into_raw","","",64,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",64,N],[11,"as_raw_c_in","","",64,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",96,[[["self"]],["bool"]]],[11,"opcode","","",96,[[["self"]],["u16"]]],[11,"child","","",96,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",96,N],[11,"into_raw","","",96,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",96,N],[11,"as_raw_c_in","","",96,[[["self"],["f"]],["t"]]],[11,"c_interface","","",97,N],[11,"clone","wayland_server::protocol::wl_subsurface","",65,[[["self"]],["error"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"eq","","",65,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",65,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",65,[[["self"]],["u32"]]],[11,"is_destructor","","",66,[[["self"]],["bool"]]],[11,"opcode","","",66,[[["self"]],["u16"]]],[11,"child","","",66,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",66,N],[11,"into_raw","","",66,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",66,N],[11,"as_raw_c_in","","",66,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",98,[[["self"]],["bool"]]],[11,"opcode","","",98,[[["self"]],["u16"]]],[11,"child","","",98,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",98,N],[11,"into_raw","","",98,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",98,N],[11,"as_raw_c_in","","",98,[[["self"],["f"]],["t"]]],[11,"c_interface","","",99,N],[11,"new","wayland_server","Create a new map",100,[[],["userdatamap"]]],[11,"get","","Attempt to access the wrapped user data of a given type",100,[[["self"]],["option"]]],[11,"insert_if_missing","","Insert a value in the map if it is not already there",100,[[["self"],["f"]],["bool"]]],[11,"insert_if_missing_threadsafe","","Insert a value in the map if it is not already there",100,[[["self"],["f"]],["bool"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"is_destructor","","",101,[[["self"]],["bool"]]],[11,"opcode","","",101,[[["self"]],["u16"]]],[11,"child","","",101,[[["u16"],["u32"],["m"]],["option",["object"]]]],[11,"from_raw","","",101,N],[11,"into_raw","","",101,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",101,N],[11,"as_raw_c_in","","",101,[[["self"],["f"]],["t"]]],[11,"c_interface","","",102,N],[11,"deref","wayland_server::sys::server","",103,[[["self"]],["waylandserver"]]],[11,"deref","","",104,[[["self"]],["option"]]],[11,"initialize","","",104,N],[11,"initialize","","",103,N],[11,"from","wayland_server","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","wayland_server::sys::common","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","wayland_server::sys::server","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"open","","",15,[[["str"]],["result",["waylandserver","dlerror"]]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_callback","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_compositor","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_shm_pool","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_shm","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_buffer","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_data_offer","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_data_source","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_data_device","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"to_owned","wayland_server::protocol::wl_data_device_manager","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_shell","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"to_owned","wayland_server::protocol::wl_shell_surface","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_surface","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"to_owned","wayland_server::protocol::wl_seat","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_pointer","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_keyboard","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_touch","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"to_owned","wayland_server::protocol::wl_output","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_region","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_subcompositor","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_subsurface","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]]],"paths":[[8,"Interface"],[8,"MessageGroup"],[3,"Client"],[3,"DisplayToken"],[3,"Display"],[3,"Global"],[3,"Resource"],[3,"NewResource"],[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[3,"wl_listener"],[3,"wl_signal"],[3,"WaylandServer"],[4,"ResourceMap"],[4,"Event"],[4,"Request"],[4,"Request"],[4,"Error"],[4,"Format"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"FullscreenMethod"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[4,"Request"],[4,"Event"],[4,"KeymapFormat"],[4,"KeyState"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Subpixel"],[4,"Transform"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Request"],[3,"WlCallback"],[4,"Event"],[3,"WlCompositor"],[4,"Event"],[3,"WlShmPool"],[3,"WlShm"],[3,"WlBuffer"],[3,"WlDataOffer"],[3,"WlDataSource"],[3,"WlDataDevice"],[3,"DndAction"],[4,"Event"],[3,"WlDataDeviceManager"],[4,"Event"],[3,"WlShell"],[3,"Resize"],[3,"Transient"],[3,"WlShellSurface"],[3,"WlSurface"],[3,"Capability"],[3,"WlSeat"],[3,"WlPointer"],[3,"WlKeyboard"],[3,"WlTouch"],[3,"Mode"],[3,"WlOutput"],[4,"Event"],[3,"WlRegion"],[4,"Event"],[3,"WlSubcompositor"],[4,"Event"],[3,"WlSubsurface"],[3,"UserDataMap"],[4,"NoMessage"],[3,"AnonymousObject"],[3,"WAYLAND_SERVER_HANDLE"],[3,"WAYLAND_SERVER_OPTION"],[4,"wl_client"],[4,"wl_display"],[4,"wl_event_loop"],[4,"wl_event_source"],[4,"wl_global"],[4,"wl_resource"],[4,"wl_shm_buffer"]]};
searchIndex["wayland_sys"]={"doc":"FFI bindings to the wayland system libraries.","items":[[6,"gid_t","wayland_sys","",N,N],[6,"pid_t","","",N,N],[6,"uid_t","","",N,N],[0,"common","","Various types and functions that are used by both the client and the server libraries.",N,N],[3,"wl_message","wayland_sys::common","",N,N],[12,"name","","",0,N],[12,"signature","","",0,N],[12,"types","","",0,N],[3,"wl_interface","","",N,N],[12,"name","","",1,N],[12,"version","","",1,N],[12,"request_count","","",1,N],[12,"requests","","",1,N],[12,"event_count","","",1,N],[12,"events","","",1,N],[3,"wl_list","","",N,N],[12,"prev","","",2,N],[12,"next","","",2,N],[3,"wl_array","","",N,N],[12,"size","","",3,N],[12,"alloc","","",3,N],[12,"data","","",3,N],[19,"wl_argument","","",N,N],[12,"i","","",4,N],[12,"u","","",4,N],[12,"f","","",4,N],[12,"s","","",4,N],[12,"o","","",4,N],[12,"n","","",4,N],[12,"a","","",4,N],[12,"h","","",4,N],[5,"wl_fixed_to_double","","",N,[[["wl_fixed_t"]],["f64"]]],[5,"wl_fixed_from_double","","",N,[[["f64"]],["wl_fixed_t"]]],[5,"wl_fixed_to_int","","",N,[[["wl_fixed_t"]],["i32"]]],[5,"wl_fixed_from_int","","",N,[[["i32"]],["wl_fixed_t"]]],[6,"wl_fixed_t","","",N,N],[6,"wl_dispatcher_func_t","","",N,N],[6,"wl_log_func_t","","",N,N],[0,"server","wayland_sys","Bindings to the client library `libwayland-server.so`",N,N],[3,"wl_listener","wayland_sys::server","",N,N],[12,"link","","",5,N],[12,"notify","","",5,N],[3,"wl_signal","","",N,N],[12,"listener_list","","",6,N],[3,"WaylandServer","","",N,N],[12,"wl_client_flush","","",7,N],[12,"wl_client_destroy","","",7,N],[12,"wl_client_get_display","","",7,N],[12,"wl_client_get_credentials","","",7,N],[12,"wl_client_get_object","","",7,N],[12,"wl_client_add_destroy_listener","","",7,N],[12,"wl_client_get_destroy_listener","","",7,N],[12,"wl_client_post_no_memory","","",7,N],[12,"wl_resource_create","","",7,N],[12,"wl_client_create","","",7,N],[12,"wl_display_create","","",7,N],[12,"wl_display_destroy","","",7,N],[12,"wl_display_destroy_clients","","",7,N],[12,"wl_display_get_serial","","",7,N],[12,"wl_display_next_serial","","",7,N],[12,"wl_display_add_socket","","",7,N],[12,"wl_display_add_socket_auto","","",7,N],[12,"wl_display_add_socket_fd","","",7,N],[12,"wl_display_add_shm_format","","",7,N],[12,"wl_display_get_event_loop","","",7,N],[12,"wl_display_terminate","","",7,N],[12,"wl_display_run","","",7,N],[12,"wl_display_flush_clients","","",7,N],[12,"wl_display_add_destroy_listener","","",7,N],[12,"wl_display_get_destroy_listener","","",7,N],[12,"wl_global_create","","",7,N],[12,"wl_display_init_shm","","",7,N],[12,"wl_display_add_client_created_listener","","",7,N],[12,"wl_display_set_global_filter","","",7,N],[12,"wl_event_loop_create","","",7,N],[12,"wl_event_loop_destroy","","",7,N],[12,"wl_event_loop_add_fd","","",7,N],[12,"wl_event_loop_add_timer","","",7,N],[12,"wl_event_loop_add_signal","","",7,N],[12,"wl_event_loop_dispatch","","",7,N],[12,"wl_event_loop_dispatch_idle","","",7,N],[12,"wl_event_loop_add_idle","","",7,N],[12,"wl_event_loop_get_fd","","",7,N],[12,"wl_event_loop_add_destroy_listener","","",7,N],[12,"wl_event_loop_get_destroy_listener","","",7,N],[12,"wl_event_source_fd_update","","",7,N],[12,"wl_event_source_timer_update","","",7,N],[12,"wl_event_source_remove","","",7,N],[12,"wl_event_source_check","","",7,N],[12,"wl_global_destroy","","",7,N],[12,"wl_global_get_user_data","","",7,N],[12,"wl_resource_post_event_array","","",7,N],[12,"wl_resource_queue_event_array","","",7,N],[12,"wl_resource_post_no_memory","","",7,N],[12,"wl_resource_set_implementation","","",7,N],[12,"wl_resource_set_dispatcher","","",7,N],[12,"wl_resource_destroy","","",7,N],[12,"wl_resource_get_client","","",7,N],[12,"wl_resource_get_id","","",7,N],[12,"wl_resource_get_link","","",7,N],[12,"wl_resource_from_link","","",7,N],[12,"wl_resource_find_for_client","","",7,N],[12,"wl_resource_set_user_data","","",7,N],[12,"wl_resource_get_user_data","","",7,N],[12,"wl_resource_get_version","","",7,N],[12,"wl_resource_set_destructor","","",7,N],[12,"wl_resource_instance_of","","",7,N],[12,"wl_resource_add_destroy_listener","","",7,N],[12,"wl_resource_get_destroy_listener","","",7,N],[12,"wl_shm_buffer_begin_access","","",7,N],[12,"wl_shm_buffer_end_access","","",7,N],[12,"wl_shm_buffer_get","","",7,N],[12,"wl_shm_buffer_get_data","","",7,N],[12,"wl_shm_buffer_get_stride","","",7,N],[12,"wl_shm_buffer_get_format","","",7,N],[12,"wl_shm_buffer_get_width","","",7,N],[12,"wl_shm_buffer_get_height","","",7,N],[12,"wl_log_set_handler_server","","",7,N],[12,"wl_list_init","","",7,N],[12,"wl_list_insert","","",7,N],[12,"wl_list_remove","","",7,N],[12,"wl_list_length","","",7,N],[12,"wl_list_empty","","",7,N],[12,"wl_list_insert_list","","",7,N],[12,"wl_array_init","","",7,N],[12,"wl_array_release","","",7,N],[12,"wl_array_add","","",7,N],[12,"wl_array_copy","","",7,N],[12,"wl_resource_post_event","","",7,N],[12,"wl_resource_queue_event","","",7,N],[12,"wl_resource_post_error","","",7,N],[3,"WAYLAND_SERVER_OPTION","","",N,N],[3,"WAYLAND_SERVER_HANDLE","","",N,N],[4,"wl_client","","",N,N],[4,"wl_display","","",N,N],[4,"wl_event_loop","","",N,N],[4,"wl_event_source","","",N,N],[4,"wl_global","","",N,N],[4,"wl_resource","","",N,N],[4,"wl_shm_buffer","","",N,N],[5,"is_lib_available","","",N,[[],["bool"]]],[0,"signal","","",N,N],[5,"wl_signal_init","wayland_sys::server::signal","",N,N],[5,"wl_signal_add","","",N,N],[5,"wl_signal_get","","",N,N],[5,"wl_signal_emit","","",N,N],[5,"rust_listener_create","","",N,N],[5,"rust_listener_get_user_data","","",N,N],[5,"rust_listener_set_user_data","","",N,N],[5,"rust_listener_destroy","","",N,N],[6,"wl_event_loop_fd_func_t","wayland_sys::server","",N,N],[6,"wl_event_loop_timer_func_t","","",N,N],[6,"wl_event_loop_signal_func_t","","",N,N],[6,"wl_event_loop_idle_func_t","","",N,N],[6,"wl_global_bind_func_t","","",N,N],[6,"wl_notify_func_t","","",N,N],[6,"wl_resource_destroy_func_t","","",N,N],[6,"wl_display_global_filter_func_t","","",N,N],[11,"open","","",7,[[["str"]],["result",["waylandserver","dlerror"]]]],[11,"deref","","",8,[[["self"]],["option"]]],[11,"initialize","","",8,[[["self"]]]],[11,"deref","","",9,[[["self"]],["waylandserver"]]],[11,"initialize","","",9,[[["self"]]]],[7,"RUST_MANAGED","wayland_sys","Magic pointer for wayland objects managed by wayland-client or wayland-server",N,N],[14,"ffi_dispatch","","",N,N],[11,"from","wayland_sys::common","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","wayland_sys::server","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]]],"paths":[[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[3,"wl_listener"],[3,"wl_signal"],[3,"WaylandServer"],[3,"WAYLAND_SERVER_OPTION"],[3,"WAYLAND_SERVER_HANDLE"],[4,"wl_client"],[4,"wl_display"],[4,"wl_event_loop"],[4,"wl_event_source"],[4,"wl_global"],[4,"wl_resource"],[4,"wl_shm_buffer"]]};
searchIndex["wlroots"]={"doc":"This crate provides safe bindings to wlroots.","items":[[3,"KeyboardModifiers","wlroots","",N,N],[12,"depressed","","",0,N],[12,"latched","","",0,N],[12,"locked","","",0,N],[12,"group","","",0,N],[4,"TabletToolAxes","","",N,N],[13,"WLR_TABLET_TOOL_AXIS_X","","",1,N],[13,"WLR_TABLET_TOOL_AXIS_Y","","",1,N],[13,"WLR_TABLET_TOOL_AXIS_DISTANCE","","",1,N],[13,"WLR_TABLET_TOOL_AXIS_PRESSURE","","",1,N],[13,"WLR_TABLET_TOOL_AXIS_TILT_X","","",1,N],[13,"WLR_TABLET_TOOL_AXIS_TILT_Y","","",1,N],[13,"WLR_TABLET_TOOL_AXIS_ROTATION","","",1,N],[13,"WLR_TABLET_TOOL_AXIS_SLIDER","","",1,N],[13,"WLR_TABLET_TOOL_AXIS_WHEEL","","",1,N],[4,"wl_shm_format","","",N,N],[13,"WL_SHM_FORMAT_ARGB8888","","",2,N],[13,"WL_SHM_FORMAT_XRGB8888","","",2,N],[13,"WL_SHM_FORMAT_C8","","",2,N],[13,"WL_SHM_FORMAT_RGB332","","",2,N],[13,"WL_SHM_FORMAT_BGR233","","",2,N],[13,"WL_SHM_FORMAT_XRGB4444","","",2,N],[13,"WL_SHM_FORMAT_XBGR4444","","",2,N],[13,"WL_SHM_FORMAT_RGBX4444","","",2,N],[13,"WL_SHM_FORMAT_BGRX4444","","",2,N],[13,"WL_SHM_FORMAT_ARGB4444","","",2,N],[13,"WL_SHM_FORMAT_ABGR4444","","",2,N],[13,"WL_SHM_FORMAT_RGBA4444","","",2,N],[13,"WL_SHM_FORMAT_BGRA4444","","",2,N],[13,"WL_SHM_FORMAT_XRGB1555","","",2,N],[13,"WL_SHM_FORMAT_XBGR1555","","",2,N],[13,"WL_SHM_FORMAT_RGBX5551","","",2,N],[13,"WL_SHM_FORMAT_BGRX5551","","",2,N],[13,"WL_SHM_FORMAT_ARGB1555","","",2,N],[13,"WL_SHM_FORMAT_ABGR1555","","",2,N],[13,"WL_SHM_FORMAT_RGBA5551","","",2,N],[13,"WL_SHM_FORMAT_BGRA5551","","",2,N],[13,"WL_SHM_FORMAT_RGB565","","",2,N],[13,"WL_SHM_FORMAT_BGR565","","",2,N],[13,"WL_SHM_FORMAT_RGB888","","",2,N],[13,"WL_SHM_FORMAT_BGR888","","",2,N],[13,"WL_SHM_FORMAT_XBGR8888","","",2,N],[13,"WL_SHM_FORMAT_RGBX8888","","",2,N],[13,"WL_SHM_FORMAT_BGRX8888","","",2,N],[13,"WL_SHM_FORMAT_ABGR8888","","",2,N],[13,"WL_SHM_FORMAT_RGBA8888","","",2,N],[13,"WL_SHM_FORMAT_BGRA8888","","",2,N],[13,"WL_SHM_FORMAT_XRGB2101010","","",2,N],[13,"WL_SHM_FORMAT_XBGR2101010","","",2,N],[13,"WL_SHM_FORMAT_RGBX1010102","","",2,N],[13,"WL_SHM_FORMAT_BGRX1010102","","",2,N],[13,"WL_SHM_FORMAT_ARGB2101010","","",2,N],[13,"WL_SHM_FORMAT_ABGR2101010","","",2,N],[13,"WL_SHM_FORMAT_RGBA1010102","","",2,N],[13,"WL_SHM_FORMAT_BGRA1010102","","",2,N],[13,"WL_SHM_FORMAT_YUYV","","",2,N],[13,"WL_SHM_FORMAT_YVYU","","",2,N],[13,"WL_SHM_FORMAT_UYVY","","",2,N],[13,"WL_SHM_FORMAT_VYUY","","",2,N],[13,"WL_SHM_FORMAT_AYUV","","",2,N],[13,"WL_SHM_FORMAT_NV12","","",2,N],[13,"WL_SHM_FORMAT_NV21","","",2,N],[13,"WL_SHM_FORMAT_NV16","","",2,N],[13,"WL_SHM_FORMAT_NV61","","",2,N],[13,"WL_SHM_FORMAT_YUV410","","",2,N],[13,"WL_SHM_FORMAT_YVU410","","",2,N],[13,"WL_SHM_FORMAT_YUV411","","",2,N],[13,"WL_SHM_FORMAT_YVU411","","",2,N],[13,"WL_SHM_FORMAT_YUV420","","",2,N],[13,"WL_SHM_FORMAT_YVU420","","",2,N],[13,"WL_SHM_FORMAT_YUV422","","",2,N],[13,"WL_SHM_FORMAT_YVU422","","",2,N],[13,"WL_SHM_FORMAT_YUV444","","",2,N],[13,"WL_SHM_FORMAT_YVU444","","",2,N],[4,"wlr_axis_orientation","","",N,N],[13,"WLR_AXIS_ORIENTATION_VERTICAL","","",3,N],[13,"WLR_AXIS_ORIENTATION_HORIZONTAL","","",3,N],[4,"wlr_axis_source","","",N,N],[13,"WLR_AXIS_SOURCE_WHEEL","","",4,N],[13,"WLR_AXIS_SOURCE_FINGER","","",4,N],[13,"WLR_AXIS_SOURCE_CONTINUOUS","","",4,N],[13,"WLR_AXIS_SOURCE_WHEEL_TILT","","",4,N],[4,"wlr_button_state","","",N,N],[13,"WLR_BUTTON_RELEASED","","",5,N],[13,"WLR_BUTTON_PRESSED","","",5,N],[4,"wlr_input_device_type","","",N,N],[13,"WLR_INPUT_DEVICE_KEYBOARD","","",6,N],[13,"WLR_INPUT_DEVICE_POINTER","","",6,N],[13,"WLR_INPUT_DEVICE_TOUCH","","",6,N],[13,"WLR_INPUT_DEVICE_TABLET_TOOL","","",6,N],[13,"WLR_INPUT_DEVICE_TABLET_PAD","","",6,N],[4,"wlr_key_state","","",N,N],[13,"WLR_KEY_RELEASED","","",7,N],[13,"WLR_KEY_PRESSED","","",7,N],[4,"wlr_keyboard_modifier","","",N,N],[13,"WLR_MODIFIER_SHIFT","","",8,N],[13,"WLR_MODIFIER_CAPS","","",8,N],[13,"WLR_MODIFIER_CTRL","","",8,N],[13,"WLR_MODIFIER_ALT","","",8,N],[13,"WLR_MODIFIER_MOD2","","",8,N],[13,"WLR_MODIFIER_MOD3","","",8,N],[13,"WLR_MODIFIER_LOGO","","",8,N],[13,"WLR_MODIFIER_MOD5","","",8,N],[4,"wlr_tablet_pad_ring_source","","",N,N],[13,"WLR_TABLET_PAD_RING_SOURCE_UNKNOWN","","",9,N],[13,"WLR_TABLET_PAD_RING_SOURCE_FINGER","","",9,N],[4,"wlr_tablet_pad_strip_source","","",N,N],[13,"WLR_TABLET_PAD_STRIP_SOURCE_UNKNOWN","","",10,N],[13,"WLR_TABLET_PAD_STRIP_SOURCE_FINGER","","",10,N],[4,"wlr_tablet_tool_proximity_state","","",N,N],[13,"WLR_TABLET_TOOL_PROXIMITY_OUT","","",11,N],[13,"WLR_TABLET_TOOL_PROXIMITY_IN","","",11,N],[0,"compositor","","Main entry point to the library. See examples for documentation on how to use this struct.",N,N],[3,"Handle","wlroots::compositor","",N,N],[3,"Compositor","","",N,N],[12,"data","","User data.",12,N],[12,"display","","Pointer to the wayland display.",12,N],[12,"event_loop","","Pointer to the event loop.",12,N],[12,"server_decoration_manager","","Optional decoration manager extension.",12,N],[12,"renderer","","The renderer used to draw things to the screen.",12,N],[12,"xwayland","","XWayland server, only Some if it is enabled",12,N],[3,"Builder","","",N,N],[5,"terminate","","Terminates the compositor and execute any user clean up code.",N,[[]]],[5,"handle","","Gets a handle to the compositor.",N,[[],["option",["handle"]]]],[8,"Handler","","",N,N],[11,"new_surface","","Callback that's triggered when a surface is provided to the compositor.",13,[[["self"],["handle"],["handle"]]]],[11,"on_shutdown","","Callback that's triggered during shutdown.",13,[[["self"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"clone","","",14,[[["self"]],["handle"]]],[11,"default","","",15,[[],["builder"]]],[11,"new","","Make a new compositor builder.",15,[[],["self"]]],[11,"compositor_handler","","Set the handler for global compositor callbacks.",15,[[["self"],["box",["handler"]]],["self"]]],[11,"input_manager","","Set the handler for inputs.",15,[[["self"],["box",["managerhandler"]]],["self"]]],[11,"output_manager","","Set the handler for outputs.",15,[[["self"],["box",["managerhandler"]]],["self"]]],[11,"xdg_shell_manager","","",15,[[["self"],["box",["managerhandler"]]],["self"]]],[11,"xdg_shell_v6_manager","","Set the handler for xdg v6 shells.",15,[[["self"],["box",["managerhandler"]]],["self"]]],[11,"data_device","","Decide whether or not to enable the data device manager.",15,[[["self"],["bool"]],["self"]]],[11,"gles2","","Decide whether or not to enable the GLES2 extension.",15,[[["self"],["bool"]],["self"]]],[11,"server_decoration_manager","","Decide whether or not to enable the server decoration manager protocol extension.",15,[[["self"],["bool"]],["self"]]],[11,"xwayland","","Add a handler for xwayland.",15,[[["self"],["box",["managerhandler"]]],["self"]]],[11,"custom_terminate","","Add a custom function to run when shutting down the compositor or whenever a function in a callback panics.",15,N],[11,"render_setup_function","","Give an unsafe function to setup the renderer instead of the default renderer.",15,[[["self"],["unsaferendersetupfunction"]],["self"]]],[11,"build_auto","","Makes a new compositor that handles the setup of the graphical backend (e.g, Wayland, X11, or DRM).",15,[[["self"],["d"]],["compositor"]]],[11,"wayland_remote","","Set the name of the Wayland remote socket to connect to when using the Wayland backend.",15,[[["self"],["string"]],["self"]]],[11,"x11_display","","Set the name of the X11 display socket to be used to connect to a running X11 instance for the backend.",15,[[["self"],["string"]],["self"]]],[11,"build_x11","","",15,[[["self"],["d"]],["compositor"]]],[11,"build_wayland","","Creates the compositor using an already running Wayland instance as a backend.",15,[[["self"],["d"]],["compositor"]]],[11,"build_drm","","",15,[[["self"],["d"],["session"],["c_int"],["option",["drm"]]],["compositor"]]],[11,"build_headless","","",15,[[["self"],["d"]],["compositor"]]],[11,"weak_reference","","Creates a weak reference to the `Compositor`.",12,[[["self"]],["handle"]]],[11,"run","","Enters the wayland event loop. Won't return until the compositor is shut off",12,[[["self"]]]],[11,"run_with","","Prepare to enter the wayland event loop. Instead of calling `wl_display_run`, the provided callback function is invoked. Allows integration with a different event loop.",12,[[["self"],["f"]]]],[11,"backend","","Get a reference to the currently running backend.",12,[[["self"]],["backend"]]],[11,"drop","","",12,[[["self"]]]],[11,"new","","Constructs a new `compositor::Handle` that is always invalid. Calling `run` on this will always fail.",14,[[],["self"]]],[11,"run","","Run a function on the referenced `Compositor`, if it still exists.",14,[[["self"],["f"]],["handleresult"]]],[0,"extensions","wlroots","",N,N],[0,"server_decoration","wlroots::extensions","",N,N],[4,"Mode","wlroots::extensions::server_decoration","Possible values to use in request_mode and the event mode.",N,N],[13,"None","","Undecorated: The surface is not decorated at all, neither server nor client-side. An example is a popup surface which should not be decorated.",16,N],[13,"Client","","Client-side decoration: The decoration is part of the surface and the client.",16,N],[13,"Server","","Server-side decoration: The server embeds the surface into a decoration frame.",16,N],[3,"Manager","","",N,N],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"set_default_mode","","",17,[[["self"],["mode"]]]],[11,"drop","","",17,[[["self"]]]],[0,"render","wlroots","",N,N],[3,"GenericRenderer","wlroots::render","A generic interface for rendering to the screen.",N,N],[3,"Renderer","","The state machine type that allows you to manipulate a screen and its buffer.",N,N],[12,"damage","","",18,N],[12,"output","","",18,N],[3,"PixmanRegion","","A pixman region, used for damage tracking.",N,N],[12,"region","","",19,N],[3,"Image","","An image that can be attached to a `Cursor` or `OutputCursor`.",N,N],[12,"pixels","","",20,N],[12,"stride","","",20,N],[12,"width","","",20,N],[12,"height","","",20,N],[12,"hotspot_x","","",20,N],[12,"hotspot_y","","",20,N],[12,"delay","","",20,N],[12,"scale","","",20,N],[3,"Texture","","A wrapper for a wlr_texture.",N,N],[4,"TextureFormat","","Wrapper around wl_shm_format, to make it easier and nicer to type.",N,N],[13,"ARGB8888","","",21,N],[13,"XRGB8888","","",21,N],[13,"C8","","",21,N],[13,"RGB332","","",21,N],[13,"BGR233","","",21,N],[13,"XRGB4444","","",21,N],[13,"XBGR4444","","",21,N],[13,"RGBX4444","","",21,N],[13,"BGRX4444","","",21,N],[13,"ARGB4444","","",21,N],[13,"ABGR4444","","",21,N],[13,"RGBA4444","","",21,N],[13,"BGRA4444","","",21,N],[13,"XRGB1555","","",21,N],[13,"XBGR1555","","",21,N],[13,"RGBX5551","","",21,N],[13,"BGRX5551","","",21,N],[13,"ARGB1555","","",21,N],[13,"ABGR1555","","",21,N],[13,"RGBA5551","","",21,N],[13,"BGRA5551","","",21,N],[13,"RGB565","","",21,N],[13,"BGR565","","",21,N],[13,"RGB888","","",21,N],[13,"BGR888","","",21,N],[13,"XBGR8888","","",21,N],[13,"RGBX8888","","",21,N],[13,"BGRX8888","","",21,N],[13,"ABGR8888","","",21,N],[13,"RGBA8888","","",21,N],[13,"BGRA8888","","",21,N],[13,"XRGB2101010","","",21,N],[13,"XBGR2101010","","",21,N],[13,"RGBX1010102","","",21,N],[13,"BGRX1010102","","",21,N],[13,"ARGB2101010","","",21,N],[13,"ABGR2101010","","",21,N],[13,"RGBA1010102","","",21,N],[13,"BGRA1010102","","",21,N],[13,"YUYV","","",21,N],[13,"YVYU","","",21,N],[13,"UYVY","","",21,N],[13,"VYUY","","",21,N],[13,"AYUV","","",21,N],[13,"NV12","","",21,N],[13,"NV21","","",21,N],[13,"NV16","","",21,N],[13,"NV61","","",21,N],[13,"YUV410","","",21,N],[13,"YVU410","","",21,N],[13,"YUV411","","",21,N],[13,"YVU411","","",21,N],[13,"YUV420","","",21,N],[13,"YVU420","","",21,N],[13,"YUV422","","",21,N],[13,"YVU422","","",21,N],[13,"YUV444","","",21,N],[13,"YVU444","","",21,N],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"drop_texture","","Drops a texture that was created explicitly through the renderer.",22,[[["self"],["texture"]]]],[11,"render","","Make the `Renderer` state machine type.",22,[[["self"],["output"],["t"]],["renderer"]]],[11,"create_texture_from_pixels","","Create a texture using this renderer.",22,N],[11,"drop","","",22,[[["self"]]]],[11,"create_texture_from_pixels","","Create a texture using this renderer.",18,N],[11,"clear","","",18,N],[11,"render_texture","","Renders the requseted texture.",18,N],[11,"render_texture_with_matrix","","Renders the requested texture using the provided matrix. A typical texture rendering goes like so:",18,N],[11,"render_scissor","","Defines a scissor box. Only pixels that lie within the scissor box can be modified by drawing functions.",18,[[["self"],["t"]]]],[11,"render_colored_quad","","Renders a solid quad in the specified color.",18,N],[11,"render_colored_ellipse","","Renders a solid ellipse in the specified color.",18,N],[11,"render_colored_rect","","Renders a solid rectangle in the specified color.",18,N],[11,"drop","","",18,[[["self"]]]],[11,"into","","",21,[[["self"]],["wl_shm_format"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"eq","","",23,[[["self"],["texture"]],["bool"]]],[11,"ne","","",23,[[["self"],["texture"]],["bool"]]],[11,"hash","","",23,N],[11,"size","","Gets the size of the texture.",23,N],[0,"matrix","","Matrix math is used to render things on a computer screen. This is common throughout computer graphics, for examples and primers on using matrix math to render things to screens please read an OpengGL tutorial.",N,N],[5,"project_box","wlroots::render::matrix","Shortcut for the various matrix operations involved in projecting the specified wlr_box onto a given orthographic projection with a given rotation. The result can be applied to each coordinate of the box to get a new coordinate from [-1,1].",N,N],[5,"translate","","Translate the 2D matrix to a magnitude of (x, y).",N,N],[5,"scale","","Scales the 2D matrix to a magnitude of (x, y).",N,N],[5,"rotate","","Rotate the matrix by some amount of radians.",N,N],[5,"multiply","","Multiply two matrices together.",N,N],[5,"transform","","Transform the matrix based on the given Wayland output transform mode.",N,N],[5,"projection","","Create a 2D orthographic projection matrix of (width, height) with a specified `wl_output_transform`",N,N],[5,"transpose","","Flip the values over the diagonal of a matrix",N,N],[17,"IDENTITY","","",N,N],[11,"fmt","wlroots::render","",20,[[["self"],["formatter"]],["result"]]],[11,"default","","",20,[[],["image"]]],[11,"eq","","",20,[[["self"],["image"]],["bool"]]],[11,"ne","","",20,[[["self"],["image"]],["bool"]]],[11,"new","","",20,N],[11,"into","","",20,[[["self"]],["image"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"new","","Make a new pixman region.",19,[[],["self"]]],[11,"rectangle","","",19,[[["self"],["c_int"],["c_int"],["c_uint"],["c_uint"]]]],[11,"drop","","",19,[[["self"]]]],[0,"utils","wlroots","Utilities for use within wlroots-rs that are not directly related to Wayland or compositors.",N,N],[3,"Handle","wlroots::utils","A non-owned reference counted handle to a resource.",N,N],[4,"HandleErr","","The types of ways upgrading a handle can fail.",N,N],[13,"AlreadyBorrowed","","Attempting a handle that already has a mutable borrow to its backing structure.",24,N],[13,"AlreadyDropped","","Tried to upgrade a handle for a structure that has already been dropped.",24,N],[5,"current_time","","Get the current time as a duration suitable for functions such as `surface.send_frame_done()`.",N,[[],["duration"]]],[0,"edges","","Some events refer to actions that occurred on certain \"edges\" of windows. This is represented as a bit flag since multiple edges (including none) could be affected.",N,N],[3,"Edges","wlroots::utils::edges","A bit flag representing which edge was affected by an event.",N,N],[11,"eq","","",25,[[["self"],["edges"]],["bool"]]],[11,"ne","","",25,[[["self"],["edges"]],["bool"]]],[11,"clone","","",25,[[["self"]],["edges"]]],[11,"partial_cmp","","",25,[[["self"],["edges"]],["option",["ordering"]]]],[11,"lt","","",25,[[["self"],["edges"]],["bool"]]],[11,"le","","",25,[[["self"],["edges"]],["bool"]]],[11,"gt","","",25,[[["self"],["edges"]],["bool"]]],[11,"ge","","",25,[[["self"],["edges"]],["bool"]]],[11,"cmp","","",25,[[["self"],["edges"]],["ordering"]]],[11,"hash","","",25,N],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[18,"WLR_EDGE_NONE","","",25,N],[18,"WLR_EDGE_TOP","","",25,N],[18,"WLR_EDGE_BOTTOM","","",25,N],[18,"WLR_EDGE_LEFT","","",25,N],[18,"WLR_EDGE_RIGHT","","",25,N],[11,"empty","","Returns an empty set of flags.",25,[[],["edges"]]],[11,"all","","Returns the set containing all flags.",25,[[],["edges"]]],[11,"bits","","Returns the raw value of the flags currently stored.",25,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",25,[[["u32"]],["option",["edges"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",25,[[["u32"]],["edges"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",25,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",25,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",25,[[["self"],["edges"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",25,[[["self"],["edges"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",25,[[["self"],["edges"]]]],[11,"remove","","Removes the specified flags in-place.",25,[[["self"],["edges"]]]],[11,"toggle","","Toggles the specified flags in-place.",25,[[["self"],["edges"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",25,[[["self"],["edges"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",25,[[["self"],["edges"]],["edges"]]],[11,"bitor_assign","","Adds the set of flags.",25,[[["self"],["edges"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",25,[[["self"],["edges"]],["edges"]]],[11,"bitxor_assign","","Toggles the set of flags.",25,[[["self"],["edges"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",25,[[["self"],["edges"]],["edges"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",25,[[["self"],["edges"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",25,[[["self"],["edges"]],["edges"]]],[11,"sub_assign","","Disables all flags enabled in the set.",25,[[["self"],["edges"]]]],[11,"not","","Returns the complement of this set of flags.",25,[[["self"]],["edges"]]],[11,"extend","","",25,[[["self"],["t"]]]],[11,"from_iter","","",25,[[["t"]],["edges"]]],[0,"log","wlroots::utils","Hooks into the wlroots logging functionality. Internally many events are logged and are reported on standard error. The verbosity of the logs is determined by the verbosity level when initializing the logs.",N,N],[5,"init_logging","wlroots::utils::log","Initialize wlroots logging at a certain level of verbosity with an optional callback that will be called for every log.",N,[[["logverbosity"],["f"]]]],[6,"LogVerbosity","","How verbose you want the logging. Lower levels prints more.",N,N],[6,"LogCallback","","The signature for the callback function you can hook into the logging functionality of wlroots.",N,N],[0,"region","wlroots::utils","Helper functions for manipulating Pixman regions from the Pixman library.",N,N],[3,"PixmanRegion32","wlroots::utils::region","A thin wrapper around a 32 bit Pixman region.",N,N],[12,"region","","",26,N],[11,"new","","Construct a new Pixman region.",26,[[],["self"]]],[11,"scale","","Scales a region, ie. multiplies all its coordinates by `scale` and write out the result to `dest`.",26,[[["self"],["pixmanregion32"],["c_float"]]]],[11,"transform","","Applies a transform to a region inside a box of size `width` x `height`. Writes the result to `dest`.",26,[[["self"],["pixmanregion32"],["wl_output_transform"],["c_int"],["c_int"]]]],[11,"expand","","Expands the region of `distance`. If `distance` is negative, it shrinks the region. Writes the result to the `dest`.",26,[[["self"],["pixmanregion32"],["c_int"]]]],[11,"rotated_bounds","","Builds the smallest possible region that contains the region rotated about the point in output space (ox, oy). Writes the result to the `dest`.",26,[[["self"],["pixmanregion32"],["c_float"],["c_int"],["c_int"]]]],[11,"confine","","Confines a region to the box formed by the points.",26,[[["self"],["c_double"],["c_double"],["c_double"],["c_double"]],["result"]]],[11,"fmt","wlroots::utils","",24,[[["self"],["formatter"]],["result"]]],[11,"clone","","",24,[[["self"]],["handleerr"]]],[11,"eq","","",24,[[["self"],["handleerr"]],["bool"]]],[11,"clone","","",27,[[["self"]],["self"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"hash","","",27,[[["self"],["h"]]]],[11,"eq","","",27,[[["self"],["handle"]],["bool"]]],[11,"default","","Constructs a new handle that is always invalid. Calling `run` on this will always fail.",27,[[],["self"]]],[11,"run","","Run a function with a reference to the resource if it's still alive.",27,[[["self"],["f"]],["handleresult"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"description","","",24,[[["self"]],["str"]]],[6,"HandleResult","","The result of trying to upgrade a handle, either using `run` or `with_handles!`.",N,N],[8,"ToMs","","Trait to convert something to milliseconds.",N,N],[10,"to_ms","","Convert the time to a millisecond representation.",28,[[["self"]],["u32"]]],[8,"Handleable","","",N,N],[10,"weak_reference","","Creates a weak reference to the resource.",29,[[["self"]],["handle"]]],[0,"xwayland","wlroots","",N,N],[3,"Server","wlroots::xwayland","",N,N],[11,"pid","","Get the PID of the XWayland server.",30,[[["self"]],["pid_t"]]],[11,"display","","",30,[[["self"]],["c_int"]]],[11,"x_fd","","",30,N],[11,"wl_fd","","",30,N],[11,"wm_fd","","",30,N],[11,"wl_client","","",30,N],[11,"set_cursor","","",30,N],[11,"drop","","",30,[[["self"]]]],[0,"surface","","",N,N],[3,"Hints","wlroots::xwayland::surface","Hints provided by the XWayland client to aid in compositing.",N,N],[3,"SizeHints","","Hints provided by the XWayland client to aid in compositing specifically for placement.",N,N],[3,"Surface","","An Xwayland user interface component. It has an absolute position in layout-local coordinates.",N,N],[6,"Handle","","",N,N],[8,"Handler","","",N,N],[11,"destroyed","","Called when the XWayland surface is destroyed (e.g by the user).",31,[[["self"],["handle"],["option",["handle"]],["handle"]]]],[11,"on_configure","","Called when the XWayland surface wants to be configured.",31,[[["self"],["handle"],["option",["handle"]],["handle"],["configure"]]]],[11,"on_move","","Called when the XWayland surface wants to move.",31,[[["self"],["handle"],["option",["handle"]],["handle"],["move"]]]],[11,"on_resize","","Called when the XWayland surface wants to be resized.",31,[[["self"],["handle"],["option",["handle"]],["handle"],["resize"]]]],[11,"on_maximize","","Called when the XWayland surface wants to be maximized.",31,[[["self"],["handle"],["option",["handle"]],["handle"]]]],[11,"on_fullscreen","","Called when the XWayland surface wants to be fullscreen.",31,[[["self"],["handle"],["option",["handle"]],["handle"]]]],[11,"on_map","","",31,[[["self"],["handle"],["option",["handle"]],["handle"]],["option",["box"]]]],[11,"on_unmap","","",31,[[["self"],["handle"],["option",["handle"]],["handle"]]]],[11,"title_set","","Called when the title has been set on the XWayland surface.",31,[[["self"],["handle"],["option",["handle"]],["handle"]]]],[11,"class_set","","Called when the class has been set on the XWayland surface.",31,[[["self"],["handle"],["option",["handle"]],["handle"]]]],[11,"parent_set","","Called when the parent has been set on the XWayland surface.",31,[[["self"],["handle"],["option",["handle"]],["handle"]]]],[11,"pid_set","","Called when the PID has been set on the XWayland surface.",31,[[["self"],["handle"],["option",["handle"]],["handle"]]]],[11,"window_type_set","","Called when the window type has been set on the XWayland surface.",31,[[["self"],["handle"],["option",["handle"]],["handle"]]]],[11,"ping_timeout","","Called when the ping request timed out.",31,[[["self"],["handle"],["option",["handle"]],["handle"]]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"window_id","","Get the window id for this surface.",32,[[["self"]],["xcb_window_t"]]],[11,"surface_id","","Get the surface id for this surface.",32,[[["self"]],["u32"]]],[11,"surface","","Get the Wayland surface associated with this Surface. If the shell surface is not mapped, then it has no surface, and this will return None.",32,[[["self"]],["option",["handle"]]]],[11,"coords","","Get the coordinates of the window.",32,N],[11,"dimensions","","Get the dimensions the XWayland surface.",32,N],[11,"saved_dimensions","","TODO What does this represent?",32,N],[11,"override_redirect","","TODO What does this represent?",32,[[["self"]],["bool"]]],[11,"mapped","","",32,[[["self"]],["bool"]]],[11,"title","","Get the title of the client, if there is one.",32,[[["self"]],["option",["string"]]]],[11,"class","","Get the class of the client, if there is one.",32,[[["self"]],["option",["string"]]]],[11,"instance","","Get the instance of the client, if there is one.",32,[[["self"]],["option",["string"]]]],[11,"pid","","Get the PID associated with the client.",32,[[["self"]],["pid_t"]]],[11,"parent","","Get the parent surface if there is one.",32,[[["self"]],["option",["handle"]]]],[11,"children","","Get the list of children surfaces.",32,[[["self"]],["vec",["handle"]]]],[11,"window_type","","Get the type of the window from xcb.",32,N],[11,"window_type_len","","Get the length of the window_type ptr",32,[[["self"]],["size_t"]]],[11,"protocols","","Get the protocols of the client.",32,N],[11,"protocols_len","","Get the length of the protocols ptr.",32,[[["self"]],["size_t"]]],[11,"decorations","","Get the decorations on this XWayland client.",32,[[["self"]],["u32"]]],[11,"hints","","Get any surface hints the client is providing.",32,[[["self"]],["hints"]]],[11,"size_hints","","Get any size hints the client is providing.",32,[[["self"]],["sizehints"]]],[11,"hints_urgency","","Get the urgency of the hints.",32,[[["self"]],["u32"]]],[11,"pinging","","",32,[[["self"]],["bool"]]],[11,"ping_timer","","",32,N],[11,"fullscreen","","Determine if the client is fullscreen or not.",32,[[["self"]],["bool"]]],[11,"maximized_vert","","Determine if the client is maximized vertically.",32,[[["self"]],["bool"]]],[11,"maximized_horz","","Determine if the client is maximized horizontally.",32,[[["self"]],["bool"]]],[11,"has_alpha","","Determine if the client has an alpha channel.",32,[[["self"]],["bool"]]],[11,"geometry","","Geometry of the surface in layout-local coordinates",32,[[["self"]],["area"]]],[11,"configure","","Send the surface a configure request, requesting the new position and dimensions",32,[[["self"],["i16"],["i16"],["u16"],["u16"]]]],[11,"set_activated","","Tell the window whether it is the foucsed window",32,[[["self"],["bool"]]]],[11,"drop","","",32,[[["self"]]]],[11,"weak_reference","","Creates a weak reference to an `Surface`.",32,[[["self"]],["handle"]]],[0,"event","wlroots::xwayland","",N,N],[3,"Configure","wlroots::xwayland::event","Event for when XWayland surface needs to be configured.",N,N],[3,"Move","","Event for when an XWayland surface is moved.",N,N],[3,"Resize","","Event for when an XWayland surface is resized.",N,N],[8,"ManagerHandler","wlroots::xwayland","",N,N],[11,"on_ready","","Callback that's triggered when the XWayland library is ready.",33,[[["self"],["handle"]]]],[10,"new_surface","","Callback that's triggered when a new surface is presented to the X server.",33,[[["self"],["handle"],["handle"]],["option",["box"]]]],[0,"backend","wlroots","",N,N],[3,"Device","wlroots::backend","",N,N],[3,"Session","","",N,N],[3,"Wayland","","When the compositor is running in a nested Wayland environment. e.g. your compositor is executed while the user is running Gnome+Mutter or Weston.",N,N],[3,"X11","","When the compositor is running in a nested X11 environment. e.g. your compositor is executed while the user is running an X11 window manager.",N,N],[3,"Headless","","In this backend the only resource the compositor uses is the Wayland file descriptor. It doesn't try to grab actual keyboard/pointers and it doesn't render anything.",N,N],[3,"Drm","","When the compositor is ran on a TTY and has full control of the system resources.",N,N],[3,"Libinput","","",N,N],[3,"Multi","","When multiple backends are running or when the compositor writer doesn't care and just used the auto create option in the `CompositorBuilder`.",N,N],[4,"Backend","","",N,N],[13,"Wayland","","",34,N],[13,"X11","","",34,N],[13,"DRM","","",34,N],[13,"Headless","","",34,N],[13,"LibInput","","",34,N],[13,"Multi","","",34,N],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"hash","","",34,N],[11,"eq","","",34,[[["self"],["backend"]],["bool"]]],[11,"ne","","",34,[[["self"],["backend"]],["bool"]]],[11,"from_backend","","Create a backend from a `*mut wlr_backend`.",34,N],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"hash","","",35,N],[11,"eq","","",35,[[["self"],["wayland"]],["bool"]]],[11,"ne","","",35,[[["self"],["wayland"]],["bool"]]],[11,"new","","Creates a new wlr_wl_backend. This backend will be created with no outputs; you must use wlr_wl_output_create to add them.",35,N],[11,"create_output","","Adds a new output to this backend.",35,[[["self"]],["option",["handle"]]]],[11,"is_wl_input_device","","True if the given input device is a wlr_wl_input_device.",35,[[["self"],["device"]],["bool"]]],[11,"is_wl_output_device","","True if the given output is a wlr_wl_output.",35,[[["self"],["output"]],["bool"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"hash","","",36,N],[11,"eq","","",36,[[["self"],["x11"]],["bool"]]],[11,"ne","","",36,[[["self"],["x11"]],["bool"]]],[11,"new","","",36,N],[11,"create_output","","",36,[[["self"]],["option",["handle"]]]],[11,"is_x11_input_device","","",36,[[["self"],["device"]],["bool"]]],[11,"is_x11_output_device","","",36,[[["self"],["output"]],["bool"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"hash","","",37,N],[11,"eq","","",37,[[["self"],["headless"]],["bool"]]],[11,"ne","","",37,[[["self"],["headless"]],["bool"]]],[11,"new","","Creates a headless backend.",37,N],[11,"add_output","","Create a new headless output backed by an in-memory EGL framebuffer.",37,[[["self"],["c_uint"],["c_uint"]],["option",["handle"]]]],[11,"add_input_device","","Creates a new input device.",37,[[["self"],["wlr_input_device_type"]],["option",["handle"]]]],[11,"is_headless_input_device","","",37,[[["self"],["device"]],["bool"]]],[11,"is_headless_output","","",37,[[["self"],["output"]],["bool"]]],[11,"as_ptr","","",37,N],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"hash","","",38,N],[11,"eq","","",38,[[["self"],["drm"]],["bool"]]],[11,"ne","","",38,[[["self"],["drm"]],["bool"]]],[11,"new","","Creates a DRM backend using the specified GPU file descriptor (typically from a device node in /dev/dri).",38,N],[11,"output_is_drm","","",38,[[["self"],["output"]],["bool"]]],[11,"as_ptr","","",38,N],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"hash","","",39,N],[11,"eq","","",39,[[["self"],["libinput"]],["bool"]]],[11,"ne","","",39,[[["self"],["libinput"]],["bool"]]],[11,"new","","",39,N],[11,"device_handle","","Get the underlying libinput_device handle for the given input device.",39,N],[11,"is_libinput_input_device","","",39,[[["self"],["device"]],["bool"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"hash","","",40,N],[11,"eq","","",40,[[["self"],["multi"]],["bool"]]],[11,"ne","","",40,[[["self"],["multi"]],["bool"]]],[11,"auto_create","","Auto create a backend based on the environment.",40,N],[11,"add_backend","","Adds the given backend to the multi backend.",40,N],[11,"remove_backend","","Removes the backend.",40,N],[11,"is_empty","","",40,[[["self"]],["bool"]]],[11,"fd","","",41,[[["self"]],["c_int"]]],[11,"dev","","",41,[[["self"]],["dev_t"]]],[11,"session_signal","","Signal for when the session becomes active/inactive. It's called when we swap virtual terminal.",42,[[["self"]],["wl_signal"]]],[11,"active","","",42,[[["self"]],["bool"]]],[11,"vtnr","","",42,[[["self"]],["c_uint"]]],[11,"seat","","",42,N],[11,"udev","","",42,N],[11,"udev_monitor","","",42,N],[11,"devices","","",42,[[["self"]],["vec",["device"]]]],[11,"change_vt","","Changes the virtual terminal.",42,[[["self"],["c_uint"]],["bool"]]],[11,"as_ptr","","",42,N],[11,"new","","Opens a session, taking control of the current virtual terminal. This should not be called if another program is already in control of the terminal (Xorg, another Wayland compositor, etc.).",42,N],[11,"destroy","","Closes a previously opened session and restores the virtual terminal. You should call Session::close_file on each files you opened with Session::open_file before you call this.",42,[[["self"]]]],[11,"open_file","","Opens the file at path. This can only be used to open DRM or evdev (input) devices.",42,[[["self"],["p"]],["c_int"]]],[11,"close_file","","",42,[[["self"],["c_int"]]]],[11,"signal_add","","",42,N],[6,"UnsafeRenderSetupFunction","","A custom function to set up the renderer.",N,N],[0,"cursor","wlroots","",N,N],[3,"Handle","wlroots::cursor","",N,N],[0,"xcursor","","Wrappers around the XCursor library used by wlroots.",N,N],[3,"ManagerTheme","wlroots::cursor::xcursor","An `xcursor::Theme` at a particular scale factor of the base size.",N,N],[3,"Manager","","xcursor::Manager dynamically loads xcursor themes at sizes necessary for use on outputs at arbitrary scale factors. You should call `load` for each output you will show your cursor on, with the scale factor parameter set to that output's scale factor.",N,N],[3,"Theme","","Wrapper for an xcursor theme from the X11 xcursor library.",N,N],[3,"XCursor","","Wrapper for an xcursor from the X11 xcursor library.",N,N],[3,"Image","","Contains the information necessary to render the cursor.",N,N],[12,"width","","The width of the image in pixels.",43,N],[12,"height","","The height of the image in pixels.",43,N],[12,"hotspot_x","","The x coordinate of the hotspot, which must be inside the image.",43,N],[12,"hotspot_y","","The y coordinate of the hotspot, which must be inside the image.",43,N],[12,"delay","","Animation delay to the next frame in milliseconds.",43,N],[12,"buffer","","The bytes in ARGB format.",43,N],[8,"Handler","wlroots::cursor","",N,N],[11,"on_pointer_motion","","Callback that is triggered when the cursor moves.",44,[[["self"],["handle"],["handle"],["motion"]]]],[11,"on_pointer_motion_absolute","","",44,[[["self"],["handle"],["handle"],["absolutemotion"]]]],[11,"on_pointer_button","","Callback that is triggered when the buttons on the pointer are pressed.",44,[[["self"],["handle"],["handle"],["button"]]]],[11,"on_pointer_axis","","",44,[[["self"],["handle"],["handle"],["axis"]]]],[11,"on_touch_up","","",44,[[["self"],["handle"],["handle"],["up"]]]],[11,"on_touch_down","","",44,[[["self"],["handle"],["handle"],["down"]]]],[11,"on_touch_motion","","",44,[[["self"],["handle"],["handle"],["motion"]]]],[11,"on_touch_cancel","","",44,[[["self"],["handle"],["handle"],["cancel"]]]],[11,"on_tablet_tool_axis","","",44,[[["self"],["handle"],["handle"],["axis"]]]],[11,"on_tablet_tool_proximity","","",44,[[["self"],["handle"],["handle"],["proximity"]]]],[11,"on_tablet_tool_tip","","",44,[[["self"],["handle"],["handle"],["tip"]]]],[11,"on_tablet_tool_button","","",44,[[["self"],["handle"],["handle"],["button"]]]],[0,"input","wlroots","",N,N],[3,"Device","wlroots::input","Wrapper for wlr_input_device",N,N],[4,"Handle","","A handle to an input device.",N,N],[13,"Keyboard","","",45,N],[13,"Pointer","","",45,N],[13,"Touch","","",45,N],[13,"TabletPad","","",45,N],[13,"TabletTool","","",45,N],[0,"keyboard","","TODO Documentation",N,N],[4,"wlr_key_state","wlroots::input::keyboard","",N,N],[13,"WLR_KEY_RELEASED","","",7,N],[13,"WLR_KEY_PRESSED","","",7,N],[3,"RepeatInfo","","Information about repeated keypresses for a particular Keyboard.",N,N],[12,"rate","","The rate at which extended keypresses will fire more events.",46,N],[12,"delay","","How long it takes for a keypress to register on this device.",46,N],[3,"Keyboard","","",N,N],[3,"Led","","",N,N],[3,"Modifier","","",N,N],[0,"event","","",N,N],[3,"Key","wlroots::input::keyboard::event","",N,N],[6,"Key","wlroots::input::keyboard","",N,N],[6,"Handle","","",N,N],[8,"Handler","","",N,N],[11,"on_key","","Callback that is triggered when a key is pressed.",47,[[["self"],["handle"],["handle"],["key"]]]],[11,"modifiers","","Callback that is triggered when modifiers are pressed.",47,[[["self"],["handle"],["handle"]]]],[11,"keymap","","Callback that is triggered when the keymap is updated.",47,[[["self"],["handle"],["handle"]]]],[11,"repeat_info","","Callback that is triggered when repeat info is updated.",47,[[["self"],["handle"],["handle"]]]],[11,"destroyed","","Callback that is triggered when the keyboard is destroyed.",47,[[["self"],["handle"],["handle"]]]],[0,"pointer","wlroots::input","TODO Documentation",N,N],[3,"Pointer","wlroots::input::pointer","",N,N],[0,"event","","Pointers and their events",N,N],[3,"Axis","wlroots::input::pointer::event","Event that triggers when the pointer device scrolls (e.g using a wheel",N,N],[3,"Button","","Event that triggers when a button is pressed (e.g left click, right click, a gaming mouse button, etc.).",N,N],[3,"Motion","","Event that triggers when the pointer moves.",N,N],[3,"AbsoluteMotion","","Event that triggers when data from a device that supports absolute motion sends data to the compositor.",N,N],[17,"BTN_MOUSE","","",N,N],[17,"BTN_LEFT","","",N,N],[17,"BTN_RIGHT","","",N,N],[17,"BTN_MIDDLE","","",N,N],[17,"BTN_SIDE","","",N,N],[17,"BTN_EXTRA","","",N,N],[17,"BTN_FORWARD","","",N,N],[17,"BTN_BACK","","",N,N],[17,"BTN_TASK","","",N,N],[6,"Handle","wlroots::input::pointer","",N,N],[8,"Handler","","",N,N],[11,"on_motion","","Callback that is triggered when the pointer moves.",48,[[["self"],["handle"],["handle"],["motion"]]]],[11,"on_motion_absolute","","",48,[[["self"],["handle"],["handle"],["absolutemotion"]]]],[11,"on_button","","Callback that is triggered when the buttons on the pointer are pressed.",48,[[["self"],["handle"],["handle"],["button"]]]],[11,"on_axis","","Callback that is triggered when an axis event fires.",48,[[["self"],["handle"],["handle"],["axis"]]]],[11,"destroyed","","Callback that is triggered when the pointer is destroyed.",48,[[["self"],["handle"],["handle"]]]],[0,"touch","wlroots::input","TODO Documentation",N,N],[3,"Touch","wlroots::input::touch","",N,N],[0,"event","","TODO Documentation",N,N],[3,"Down","wlroots::input::touch::event","Event that is triggered when a touch down event occurs.",N,N],[3,"Up","","Event that is triggered when a touch up event occurs.",N,N],[3,"Motion","","Event that is triggered when a touch motion event occurs.",N,N],[3,"Cancel","","Event that is triggered when a touch cancel event occurs.",N,N],[6,"Handle","wlroots::input::touch","",N,N],[8,"Handler","","",N,N],[11,"on_down","","Callback that is triggered when the user starts touching the screen/input device.",49,[[["self"],["handle"],["handle"],["down"]]]],[11,"on_up","","Callback that is triggered when the user stops touching the screen/input device.",49,[[["self"],["handle"],["handle"],["up"]]]],[11,"on_motion","","Callback that is triggered when the user moves his fingers along the screen/input device.",49,[[["self"],["handle"],["handle"],["motion"]]]],[11,"on_cancel","","Callback triggered when the touch is canceled.",49,[[["self"],["handle"],["handle"],["cancel"]]]],[11,"destroyed","","Callback that is triggered when the touch is destroyed.",49,[[["self"],["handle"],["handle"]]]],[0,"tablet_tool","wlroots::input","TODO Documentation",N,N],[3,"TabletTool","wlroots::input::tablet_tool","",N,N],[3,"Axis","","",N,N],[0,"event","","TODO Documentation",N,N],[3,"Axis","wlroots::input::tablet_tool::event","Event that is triggered when a tablet tool axis event occurs.",N,N],[3,"Proximity","","Event that is triggered when a tablet tool proximity event occurs.",N,N],[3,"Tip","","Event that is triggered when a tablet tool tip event occurs.",N,N],[3,"Button","","Event that is triggered when a tablet tool button event occurs.",N,N],[6,"Handle","wlroots::input::tablet_tool","",N,N],[8,"Handler","","",N,N],[11,"on_axis","","Callback that is triggered when an axis event fires",50,[[["self"],["handle"],["handle"],["axis"]]]],[11,"on_proximity","","Callback that is triggered when a table tool is brought close to the input source.",50,[[["self"],["handle"],["handle"],["proximity"]]]],[11,"on_tip","","Callback that is triggered when a table tool's tip touches the input source.",50,[[["self"],["handle"],["handle"],["tip"]]]],[11,"on_button","","Callback that is triggered when a button is pressed on the tablet tool.",50,[[["self"],["handle"],["handle"],["button"]]]],[11,"destroyed","","Callback that is triggered when a tablet tool is destroyed.",50,[[["self"],["handle"],["handle"]]]],[0,"tablet_pad","wlroots::input","TODO Documentation",N,N],[3,"TabletPad","wlroots::input::tablet_pad","",N,N],[0,"event","","TODO Documentation",N,N],[4,"wlr_button_state","wlroots::input::tablet_pad::event","",N,N],[13,"WLR_BUTTON_RELEASED","","",5,N],[13,"WLR_BUTTON_PRESSED","","",5,N],[4,"wlr_tablet_pad_ring_source","","",N,N],[13,"WLR_TABLET_PAD_RING_SOURCE_UNKNOWN","","",9,N],[13,"WLR_TABLET_PAD_RING_SOURCE_FINGER","","",9,N],[4,"wlr_tablet_pad_strip_source","","",N,N],[13,"WLR_TABLET_PAD_STRIP_SOURCE_UNKNOWN","","",10,N],[13,"WLR_TABLET_PAD_STRIP_SOURCE_FINGER","","",10,N],[3,"Button","","Event that is triggered when a tablet pad button event occurs.",N,N],[3,"Ring","","Event that is triggered when a ring event occurs.",N,N],[3,"Strip","","Event that is triggered wen a strip event occurs",N,N],[6,"Handle","wlroots::input::tablet_pad","",N,N],[8,"Handler","","",N,N],[11,"on_button","","Callback that is triggered when a button is pressed on the tablet pad.",51,[[["self"],["handle"],["handle"],["button"]]]],[11,"on_strip","","Callback that is triggered when the touch strip is used.",51,[[["self"],["handle"],["handle"],["strip"]]]],[11,"on_ring","","Callback that is triggered when the ring is touched.",51,[[["self"],["handle"],["handle"],["ring"]]]],[11,"destroyed","","Callback that is triggered when the pad device is destroyed.",51,[[["self"],["handle"],["handle"]]]],[8,"ManagerHandler","wlroots::input","Handles input addition and removal.",N,N],[11,"input_added","","Callback triggered when an input device is added.",52,[[["self"],["handle"],["device"]]]],[11,"keyboard_added","","Callback triggered when a keyboard device is added.",52,[[["self"],["handle"],["handle"]],["option",["box"]]]],[11,"pointer_added","","Callback triggered when a pointer device is added.",52,[[["self"],["handle"],["handle"]],["option",["box"]]]],[11,"touch_added","","Callback triggered when a touch device is added.",52,[[["self"],["handle"],["handle"]],["option",["box"]]]],[11,"tablet_tool_added","","Callback triggered when a tablet tool is added.",52,[[["self"],["handle"],["handle"]],["option",["box"]]]],[11,"tablet_pad_added","","Callback triggered when a tablet pad is added.",52,[[["self"],["handle"],["handle"]],["option",["box"]]]],[0,"output","wlroots","",N,N],[3,"Cursor","wlroots::output","",N,N],[3,"Damage","","Tracks damage for an output.",N,N],[3,"Builder","","Used to ensure the output sets the mode before doing any other operation on the Output.",N,N],[3,"BuilderResult","","Used to ensure that the builder is used to construct the output::Handler instance.",N,N],[12,"output","","",53,N],[3,"Destroyed","","Wrapper around Output destruction so that you can't call unsafe methods (e.g anything like setting the mode).",N,N],[3,"Output","","",N,N],[3,"Mode","","",N,N],[0,"layout","","TODO Documentation",N,N],[3,"Handle","wlroots::output::layout","A handle to an `output::layout::Layout`.",N,N],[3,"Output","","The coordinate information of an `output::Output` within an `output::layout::Layout`.",N,N],[8,"Handler","","",N,N],[11,"output_added","","Callback that's triggered when an output is added to the output layout.",54,[[["self"],["handle"],["handle"],["output"]]]],[11,"output_removed","","Callback that's triggered when an output is removed from the output layout.",54,[[["self"],["handle"],["handle"],["output"]]]],[11,"on_change","","Callback that's triggered when the layout changes.",54,[[["self"],["handle"],["handle"],["output"]]]],[6,"Subpixel","wlroots::output","",N,N],[6,"Transform","","",N,N],[6,"Handle","","",N,N],[8,"ManagerHandler","","Handles output addition and removal.",N,N],[11,"output_added","","Called whenever an output is added.",55,[[["self"],["handle"],["builder"]],["option",["builderresult"]]]],[11,"output_removed","","Called whenever an output is removed.",55,[[["self"],["handle"],["destroyed"]]]],[8,"Handler","","",N,N],[11,"on_frame","","Called every time the output frame is updated.",56,[[["self"],["handle"],["handle"]]]],[11,"on_mode_change","","Called every time the output mode changes.",56,[[["self"],["handle"],["handle"]]]],[11,"on_enable","","Called every time the output is enabled.",56,[[["self"],["handle"],["handle"]]]],[11,"on_scale_change","","Called every time the output scale changes.",56,[[["self"],["handle"],["handle"]]]],[11,"on_transform","","Called every time the output transforms.",56,[[["self"],["handle"],["handle"]]]],[11,"on_buffers_swapped","","Called every time the buffers are swapped on an output.",56,[[["self"],["handle"],["handle"]]]],[11,"needs_swap","","Called every time the buffers need to be swapped on an output.",56,[[["self"],["handle"],["handle"]]]],[11,"destroyed","","Called when an output is destroyed (e.g. unplugged).",56,[[["self"],["handle"],["handle"]]]],[0,"area","wlroots","Wrapper for the `wlr_box` type. Note that we renamed it to `Area` to avoid conflicts with Rust's Box.",N,N],[3,"Origin","wlroots::area","",N,N],[12,"x","","",57,N],[12,"y","","",57,N],[3,"Size","","",N,N],[12,"width","","",58,N],[12,"height","","",58,N],[3,"Area","","Generic geometry-like struct. Container an origin (x, y) point and bounds (width, height).",N,N],[12,"origin","","",59,N],[12,"size","","",59,N],[4,"IntersectionResult","","Result of applying an intersection of two `Area`s.",N,N],[13,"Intersection","","This area is the intersection between the two points.",60,N],[13,"NoIntersection","","There was not an intersection",60,N],[0,"seat","wlroots","",N,N],[3,"Capability","wlroots::seat","seat capability bitmask",N,N],[3,"Handle","","",N,N],[3,"Client","","Contains state for a single client's bound wl_seat resource. It can be used to issue input events to the client.",N,N],[3,"TouchPoint","","",N,N],[3,"TouchId","","Wrapper around a touch id. It is valid, as it is only returned from wlroots.",N,N],[0,"drag_icon","","",N,N],[3,"DragIcon","wlroots::seat::drag_icon","",N,N],[3,"Handle","","",N,N],[8,"Handler","","Handles events from the wlr drag icon",N,N],[10,"on_map","","Called when the drag icon is ready to be displayed.",61,[[["self"],["handle"],["handle"]]]],[10,"on_unmap","","Called when the drag icon should no longer be displayed",61,[[["self"],["handle"],["handle"]]]],[10,"destroyed","","Called when the drag icon is about to be destroyed.",61,[[["self"],["handle"],["handle"]]]],[0,"grab","wlroots::seat","",N,N],[3,"Pointer","wlroots::seat::grab","",N,N],[3,"Keyboard","","",N,N],[3,"Touch","","",N,N],[0,"event","wlroots::seat","",N,N],[3,"SetCursor","wlroots::seat::event","",N,N],[8,"Handler","wlroots::seat","",N,N],[11,"pointer_grabbed","","Callback triggered when a client has grabbed a pointer.",62,[[["self"],["handle"],["handle"],["pointer"]]]],[11,"pointer_released","","Callback triggered when a client has ended a pointer grab.",62,[[["self"],["handle"],["handle"],["pointer"]]]],[11,"keyboard_grabbed","","Callback triggered when a client has grabbed a keyboard.",62,[[["self"],["handle"],["handle"],["keyboard"]]]],[11,"keyboard_released","","Callback triggered when a client has ended a keyboard grab.",62,[[["self"],["handle"],["handle"],["keyboard"]]]],[11,"touch_grabbed","","Callback triggered when a client has grabbed a touch.",62,[[["self"],["handle"],["handle"],["touch"]]]],[11,"touch_released","","Callback triggered when a client has ended a touch grab.",62,[[["self"],["handle"],["handle"],["touch"]]]],[11,"cursor_set","","Callback triggered when a client sets the cursor for this seat.",62,[[["self"],["handle"],["handle"],["setcursor"]]]],[11,"received_selection","","The seat was provided with a selection by the client.",62,[[["self"],["handle"],["handle"]]]],[11,"primary_selection","","The seat was provided with a selection from the primary buffer by the client.",62,[[["self"],["handle"],["handle"]]]],[11,"destroy","","The seat is being destroyed.",62,[[["self"],["handle"],["handle"]]]],[11,"new_drag_icon","","A new drag icon has been created.",62,N],[0,"surface","wlroots","",N,N],[3,"Surface","wlroots::surface","A Wayland object that represents the data that we display on the screen.",N,N],[3,"State","","Surface state as reported by wlroots.",N,N],[4,"InvalidState","","Represents a change in the pending state.",N,N],[13,"Buffer","","",63,N],[13,"SurfaceDamage","","",63,N],[13,"BufferDamage","","",63,N],[13,"OpaqueRegion","","",63,N],[13,"InputRegion","","",63,N],[13,"Transform","","",63,N],[13,"Scale","","",63,N],[13,"SubsurfacePosition","","",63,N],[13,"FrameCallbackList","","",63,N],[0,"subsurface","","TODO Documentation",N,N],[3,"Subsurface","wlroots::surface::subsurface","",N,N],[6,"Handle","","",N,N],[8,"Handler","","",N,N],[11,"on_destroy","","",64,[[["self"],["handle"],["handle"],["handle"]]]],[6,"Handle","wlroots::surface","",N,N],[8,"Handler","","",N,N],[11,"on_commit","","",65,[[["self"],["handle"],["handle"]]]],[11,"new_subsurface","","",65,[[["self"],["handle"],["handle"],["handle"]],["option",["box"]]]],[11,"on_destroy","","",65,[[["self"],["handle"],["handle"]]]],[0,"shell","wlroots","",N,N],[0,"xdg_shell_v6","wlroots::shell","TODO Documentation",N,N],[3,"TopLevel","wlroots::shell::xdg_shell_v6","",N,N],[3,"Popup","","",N,N],[3,"Surface","","",N,N],[4,"ShellState","","A tagged enum of the different roles used by the xdg shell.",N,N],[13,"TopLevel","","",66,N],[13,"Popup","","",66,N],[0,"event","","Events for XDG shell v6",N,N],[3,"Move","wlroots::shell::xdg_shell_v6::event","Event that triggers when the surface has been moved in coordinate space.",N,N],[3,"Resize","","Event that triggers when the suface has been resized.",N,N],[3,"SetFullscreen","","Event that is triggered when the surface toggles between being fullscreen or not.",N,N],[3,"ShowWindowMenu","","Event that is triggered when the surface shows the window menu.",N,N],[6,"Handle","wlroots::shell::xdg_shell_v6","",N,N],[8,"ManagerHandler","","",N,N],[10,"new_surface","","Callback that is triggered when a new XDG shell v6 surface appears.",67,N],[8,"Handler","","Handles events from the client XDG v6 shells.",N,N],[11,"on_commit","","Called when the surface recieve a request event.",68,[[["self"],["handle"],["handle"],["handle"]]]],[11,"destroyed","","Called when the wayland shell is destroyed (e.g by the user)",68,[[["self"],["handle"],["handle"]]]],[11,"ping_timeout","","Called when the ping request timed out.",68,[[["self"],["handle"],["handle"],["handle"]]]],[11,"new_popup","","Called when a new popup appears in the xdg tree.",68,[[["self"],["handle"],["handle"],["handle"]]]],[11,"maximize_request","","Called when there is a request to maximize the XDG surface.",68,[[["self"],["handle"],["handle"],["handle"]]]],[11,"minimize_request","","Called when there is a request to minimize the XDG surface.",68,[[["self"],["handle"],["handle"],["handle"]]]],[11,"move_request","","Called when there is a request to move the shell surface somewhere else.",68,[[["self"],["handle"],["handle"],["handle"],["move"]]]],[11,"resize_request","","Called when there is a request to resize the shell surface.",68,[[["self"],["handle"],["handle"],["handle"],["resize"]]]],[11,"fullscreen_request","","Called when there is a request to make the shell surface fullscreen.",68,[[["self"],["handle"],["handle"],["handle"],["setfullscreen"]]]],[11,"show_window_menu_request","","Called when there is a request to show the window menu.",68,[[["self"],["handle"],["handle"],["handle"],["showwindowmenu"]]]],[11,"map_request","","Called when the surface is ready to be mapped. It should be added to the list of views at this time.",68,[[["self"],["handle"],["handle"],["handle"]]]],[11,"unmap_request","","Called when the surface should be unmapped. It should be removed from the list of views at this time, but may be remapped at a later time.",68,[[["self"],["handle"],["handle"],["handle"]]]],[0,"xdg_shell","wlroots::shell","TODO Documentation",N,N],[3,"TopLevel","wlroots::shell::xdg_shell","",N,N],[3,"Popup","","",N,N],[3,"Surface","","",N,N],[4,"ShellState","","A tagged enum of the different roles used by the xdg shell.",N,N],[13,"TopLevel","","",69,N],[13,"Popup","","",69,N],[0,"event","","Events for stable XDG shell",N,N],[3,"Move","wlroots::shell::xdg_shell::event","Event that triggers when the surface has been moved in coordinate space.",N,N],[3,"Resize","","Event that triggers when the suface has been resized.",N,N],[3,"SetFullscreen","","Event that is triggered when the surface toggles between being fullscreen or not.",N,N],[3,"ShowWindowMenu","","Event that is triggered when the surface shows the window menu.",N,N],[6,"Handle","wlroots::shell::xdg_shell","",N,N],[8,"ManagerHandler","","",N,N],[10,"new_surface","","Callback that is triggered when a new stable XDG shell surface appears.",70,N],[8,"Handler","","Handles events from the client stable XDG shells.",N,N],[11,"on_commit","","Called when the surface recieve a request event.",71,[[["self"],["handle"],["handle"],["handle"]]]],[11,"destroyed","","Called when the wayland shell is destroyed (e.g by the user)",71,[[["self"],["handle"],["handle"]]]],[11,"ping_timeout","","Called when the ping request timed out.",71,[[["self"],["handle"],["handle"],["handle"]]]],[11,"new_popup","","Called when a new popup appears in the xdg tree.",71,[[["self"],["handle"],["handle"],["handle"]]]],[11,"maximize_request","","Called when there is a request to maximize the XDG surface.",71,[[["self"],["handle"],["handle"],["handle"]]]],[11,"minimize_request","","Called when there is a request to minimize the XDG surface.",71,[[["self"],["handle"],["handle"],["handle"]]]],[11,"move_request","","Called when there is a request to move the shell surface somewhere else.",71,[[["self"],["handle"],["handle"],["handle"],["move"]]]],[11,"resize_request","","Called when there is a request to resize the shell surface.",71,[[["self"],["handle"],["handle"],["handle"],["resize"]]]],[11,"fullscreen_request","","Called when there is a request to make the shell surface fullscreen.",71,[[["self"],["handle"],["handle"],["handle"],["setfullscreen"]]]],[11,"show_window_menu_request","","Called when there is a request to show the window menu.",71,[[["self"],["handle"],["handle"],["handle"],["showwindowmenu"]]]],[11,"map_request","","Called when the surface is ready to be mapped. It should be added to the list of views at this time.",71,[[["self"],["handle"],["handle"],["handle"]]]],[11,"unmap_request","","Called when the surface should be unmapped. It should be removed from the list of views at this time, but may be remapped at a later time.",71,[[["self"],["handle"],["handle"],["handle"]]]],[0,"data_device","wlroots","",N,N],[3,"Manager","wlroots::data_device","Global for the data device manager global for a certain display.",N,N],[3,"Offer","","An offering of data",N,N],[3,"Source","","",N,N],[14,"wlr_log","wlroots","Logs a message using wlroots' logging capability.",N,N],[14,"compositor_data","","Used to indicate what data is global compositor data. It will automatically implement the CompositorData trait for the struct, and also add a method to `Compositor` to unwrap the data from the fat pointer.",N,N],[14,"with_handles","","A convenience macro designed for use with Handle types.",N,N],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","wlroots::input::tablet_pad::event","",5,[[["self"],["wlr_button_state"]],["bool"]]],[11,"eq","wlroots::extensions::server_decoration","",16,[[["self"],["mode"]],["bool"]]],[11,"eq","wlroots::input::keyboard","",7,[[["self"],["wlr_key_state"]],["bool"]]],[11,"eq","wlroots::input::tablet_pad::event","",10,[[["self"],["wlr_tablet_pad_strip_source"]],["bool"]]],[11,"eq","wlroots","",8,[[["self"],["wlr_keyboard_modifier"]],["bool"]]],[11,"eq","","",11,[[["self"],["wlr_tablet_tool_proximity_state"]],["bool"]]],[11,"eq","","",4,[[["self"],["wlr_axis_source"]],["bool"]]],[11,"eq","","",1,[[["self"],["wlr_tablet_tool_axes"]],["bool"]]],[11,"eq","","",6,[[["self"],["wlr_input_device_type"]],["bool"]]],[11,"eq","wlroots::input::tablet_pad::event","",9,[[["self"],["wlr_tablet_pad_ring_source"]],["bool"]]],[11,"eq","wlroots","",2,[[["self"],["wl_shm_format"]],["bool"]]],[11,"eq","","",3,[[["self"],["wlr_axis_orientation"]],["bool"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","wlroots::input::keyboard","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","wlroots","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","wlroots::extensions::server_decoration","",16,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","wlroots","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","wlroots::input::tablet_pad::event","",10,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","wlroots","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","wlroots::input::tablet_pad::event","",9,[[["self"],["formatter"]],["result",["error"]]]],[11,"hash","","",9,N],[11,"hash","wlroots","",3,N],[11,"hash","","",8,N],[11,"hash","wlroots::input::tablet_pad::event","",10,N],[11,"hash","wlroots","",11,N],[11,"hash","","",2,N],[11,"hash","wlroots::input::keyboard","",7,N],[11,"hash","wlroots","",4,N],[11,"hash","","",6,N],[11,"hash","wlroots::input::tablet_pad::event","",5,N],[11,"hash","wlroots","",1,N],[11,"clone","wlroots::extensions::server_decoration","",16,[[["self"]],["mode"]]],[11,"clone","wlroots","",0,[[["self"]],["wlr_keyboard_modifiers"]]],[11,"clone","","",4,[[["self"]],["wlr_axis_source"]]],[11,"clone","wlroots::input::tablet_pad::event","",9,[[["self"]],["wlr_tablet_pad_ring_source"]]],[11,"clone","","",5,[[["self"]],["wlr_button_state"]]],[11,"clone","wlroots","",3,[[["self"]],["wlr_axis_orientation"]]],[11,"clone","","",8,[[["self"]],["wlr_keyboard_modifier"]]],[11,"clone","wlroots::input::tablet_pad::event","",10,[[["self"]],["wlr_tablet_pad_strip_source"]]],[11,"clone","wlroots","",2,[[["self"]],["wl_shm_format"]]],[11,"clone","","",11,[[["self"]],["wlr_tablet_tool_proximity_state"]]],[11,"clone","","",1,[[["self"]],["wlr_tablet_tool_axes"]]],[11,"clone","","",6,[[["self"]],["wlr_input_device_type"]]],[11,"clone","wlroots::input::keyboard","",7,[[["self"]],["wlr_key_state"]]],[11,"default","wlroots","",0,[[],["wlr_keyboard_modifiers"]]],[11,"fmt","wlroots::seat","",72,[[["self"],["formatter"]],["result",["error"]]]],[11,"bitor_assign","","Adds the set of flags.",72,N],[11,"bitand_assign","","Disables all flags disabled in the set.",72,N],[11,"not","","Returns the complement of this set of flags.",72,[[["self"]],["capability"]]],[11,"bitxor_assign","","Toggles the set of flags.",72,N],[11,"partial_cmp","","",72,[[["self"],["capability"]],["option",["ordering"]]]],[11,"lt","","",72,[[["self"],["capability"]],["bool"]]],[11,"le","","",72,[[["self"],["capability"]],["bool"]]],[11,"gt","","",72,[[["self"],["capability"]],["bool"]]],[11,"ge","","",72,[[["self"],["capability"]],["bool"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result",["error"]]]],[11,"from_iter","","",72,[[["t"]],["capability"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result",["error"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",72,[[["self"],["capability"]],["capability"]]],[11,"cmp","","",72,[[["self"],["capability"]],["ordering"]]],[11,"eq","","",72,[[["self"],["capability"]],["bool"]]],[11,"ne","","",72,[[["self"],["capability"]],["bool"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result",["error"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",72,[[["self"],["capability"]],["capability"]]],[11,"hash","","",72,N],[11,"sub_assign","","Disables all flags enabled in the set.",72,N],[11,"fmt","","",72,[[["self"],["formatter"]],["result",["error"]]]],[11,"extend","","",72,N],[11,"clone","","",72,[[["self"]],["capability"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",72,[[["self"],["capability"]],["capability"]]],[11,"bitor","","Returns the union of the two sets of flags.",72,[[["self"],["capability"]],["capability"]]],[11,"to_owned","wlroots","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","wlroots::input::tablet_pad::event","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","wlroots","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","wlroots::input::keyboard","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","wlroots","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","wlroots::input::tablet_pad::event","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","wlroots","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"input_added","wlroots::input","Callback triggered when an input device is added.",52,[[["self"],["handle"],["device"]]]],[11,"keyboard_added","","Callback triggered when a keyboard device is added.",52,[[["self"],["handle"],["handle"]],["option",["box"]]]],[11,"pointer_added","","Callback triggered when a pointer device is added.",52,[[["self"],["handle"],["handle"]],["option",["box"]]]],[11,"touch_added","","Callback triggered when a touch device is added.",52,[[["self"],["handle"],["handle"]],["option",["box"]]]],[11,"tablet_tool_added","","Callback triggered when a tablet tool is added.",52,[[["self"],["handle"],["handle"]],["option",["box"]]]],[11,"tablet_pad_added","","Callback triggered when a tablet pad is added.",52,[[["self"],["handle"],["handle"]],["option",["box"]]]],[11,"from","wlroots::output","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"output_added","","Called whenever an output is added.",55,[[["self"],["handle"],["builder"]],["option",["builderresult"]]]],[11,"output_removed","","Called whenever an output is removed.",55,[[["self"],["handle"],["destroyed"]]]],[11,"build_best_mode","","Build the output with the best mode.",73,[[["self"],["t"]],["builderresult"]]],[11,"on_key","wlroots::input::keyboard","Callback that is triggered when a key is pressed.",47,[[["self"],["handle"],["handle"],["key"]]]],[11,"modifiers","","Callback that is triggered when modifiers are pressed.",47,[[["self"],["handle"],["handle"]]]],[11,"keymap","","Callback that is triggered when the keymap is updated.",47,[[["self"],["handle"],["handle"]]]],[11,"repeat_info","","Callback that is triggered when repeat info is updated.",47,[[["self"],["handle"],["handle"]]]],[11,"destroyed","","Callback that is triggered when the keyboard is destroyed.",47,[[["self"],["handle"],["handle"]]]],[11,"on_motion","wlroots::input::pointer","Callback that is triggered when the pointer moves.",48,[[["self"],["handle"],["handle"],["motion"]]]],[11,"on_motion_absolute","","",48,[[["self"],["handle"],["handle"],["absolutemotion"]]]],[11,"on_button","","Callback that is triggered when the buttons on the pointer are pressed.",48,[[["self"],["handle"],["handle"],["button"]]]],[11,"on_axis","","Callback that is triggered when an axis event fires.",48,[[["self"],["handle"],["handle"],["axis"]]]],[11,"destroyed","","Callback that is triggered when the pointer is destroyed.",48,[[["self"],["handle"],["handle"]]]],[11,"on_down","wlroots::input::touch","Callback that is triggered when the user starts touching the screen/input device.",49,[[["self"],["handle"],["handle"],["down"]]]],[11,"on_up","","Callback that is triggered when the user stops touching the screen/input device.",49,[[["self"],["handle"],["handle"],["up"]]]],[11,"on_motion","","Callback that is triggered when the user moves his fingers along the screen/input device.",49,[[["self"],["handle"],["handle"],["motion"]]]],[11,"on_cancel","","Callback triggered when the touch is canceled.",49,[[["self"],["handle"],["handle"],["cancel"]]]],[11,"destroyed","","Callback that is triggered when the touch is destroyed.",49,[[["self"],["handle"],["handle"]]]],[11,"on_frame","wlroots::output","Called every time the output frame is updated.",56,[[["self"],["handle"],["handle"]]]],[11,"on_mode_change","","Called every time the output mode changes.",56,[[["self"],["handle"],["handle"]]]],[11,"on_enable","","Called every time the output is enabled.",56,[[["self"],["handle"],["handle"]]]],[11,"on_scale_change","","Called every time the output scale changes.",56,[[["self"],["handle"],["handle"]]]],[11,"on_transform","","Called every time the output transforms.",56,[[["self"],["handle"],["handle"]]]],[11,"on_buffers_swapped","","Called every time the buffers are swapped on an output.",56,[[["self"],["handle"],["handle"]]]],[11,"needs_swap","","Called every time the buffers need to be swapped on an output.",56,[[["self"],["handle"],["handle"]]]],[11,"destroyed","","Called when an output is destroyed (e.g. unplugged).",56,[[["self"],["handle"],["handle"]]]],[11,"on_commit","wlroots::shell::xdg_shell_v6","Called when the surface recieve a request event.",68,[[["self"],["handle"],["handle"],["handle"]]]],[11,"destroyed","","Called when the wayland shell is destroyed (e.g by the user)",68,[[["self"],["handle"],["handle"]]]],[11,"ping_timeout","","Called when the ping request timed out.",68,[[["self"],["handle"],["handle"],["handle"]]]],[11,"new_popup","","Called when a new popup appears in the xdg tree.",68,[[["self"],["handle"],["handle"],["handle"]]]],[11,"maximize_request","","Called when there is a request to maximize the XDG surface.",68,[[["self"],["handle"],["handle"],["handle"]]]],[11,"minimize_request","","Called when there is a request to minimize the XDG surface.",68,[[["self"],["handle"],["handle"],["handle"]]]],[11,"move_request","","Called when there is a request to move the shell surface somewhere else.",68,[[["self"],["handle"],["handle"],["handle"],["move"]]]],[11,"resize_request","","Called when there is a request to resize the shell surface.",68,[[["self"],["handle"],["handle"],["handle"],["resize"]]]],[11,"fullscreen_request","","Called when there is a request to make the shell surface fullscreen.",68,[[["self"],["handle"],["handle"],["handle"],["setfullscreen"]]]],[11,"show_window_menu_request","","Called when there is a request to show the window menu.",68,[[["self"],["handle"],["handle"],["handle"],["showwindowmenu"]]]],[11,"map_request","","Called when the surface is ready to be mapped. It should be added to the list of views at this time.",68,[[["self"],["handle"],["handle"],["handle"]]]],[11,"unmap_request","","Called when the surface should be unmapped. It should be removed from the list of views at this time, but may be remapped at a later time.",68,[[["self"],["handle"],["handle"],["handle"]]]],[11,"on_commit","wlroots::shell::xdg_shell","Called when the surface recieve a request event.",71,[[["self"],["handle"],["handle"],["handle"]]]],[11,"destroyed","","Called when the wayland shell is destroyed (e.g by the user)",71,[[["self"],["handle"],["handle"]]]],[11,"ping_timeout","","Called when the ping request timed out.",71,[[["self"],["handle"],["handle"],["handle"]]]],[11,"new_popup","","Called when a new popup appears in the xdg tree.",71,[[["self"],["handle"],["handle"],["handle"]]]],[11,"maximize_request","","Called when there is a request to maximize the XDG surface.",71,[[["self"],["handle"],["handle"],["handle"]]]],[11,"minimize_request","","Called when there is a request to minimize the XDG surface.",71,[[["self"],["handle"],["handle"],["handle"]]]],[11,"move_request","","Called when there is a request to move the shell surface somewhere else.",71,[[["self"],["handle"],["handle"],["handle"],["move"]]]],[11,"resize_request","","Called when there is a request to resize the shell surface.",71,[[["self"],["handle"],["handle"],["handle"],["resize"]]]],[11,"fullscreen_request","","Called when there is a request to make the shell surface fullscreen.",71,[[["self"],["handle"],["handle"],["handle"],["setfullscreen"]]]],[11,"show_window_menu_request","","Called when there is a request to show the window menu.",71,[[["self"],["handle"],["handle"],["handle"],["showwindowmenu"]]]],[11,"map_request","","Called when the surface is ready to be mapped. It should be added to the list of views at this time.",71,[[["self"],["handle"],["handle"],["handle"]]]],[11,"unmap_request","","Called when the surface should be unmapped. It should be removed from the list of views at this time, but may be remapped at a later time.",71,[[["self"],["handle"],["handle"],["handle"]]]],[11,"on_button","wlroots::input::tablet_pad","Callback that is triggered when a button is pressed on the tablet pad.",51,[[["self"],["handle"],["handle"],["button"]]]],[11,"on_strip","","Callback that is triggered when the touch strip is used.",51,[[["self"],["handle"],["handle"],["strip"]]]],[11,"on_ring","","Callback that is triggered when the ring is touched.",51,[[["self"],["handle"],["handle"],["ring"]]]],[11,"destroyed","","Callback that is triggered when the pad device is destroyed.",51,[[["self"],["handle"],["handle"]]]],[11,"on_axis","wlroots::input::tablet_tool","Callback that is triggered when an axis event fires",50,[[["self"],["handle"],["handle"],["axis"]]]],[11,"on_proximity","","Callback that is triggered when a table tool is brought close to the input source.",50,[[["self"],["handle"],["handle"],["proximity"]]]],[11,"on_tip","","Callback that is triggered when a table tool's tip touches the input source.",50,[[["self"],["handle"],["handle"],["tip"]]]],[11,"on_button","","Callback that is triggered when a button is pressed on the tablet tool.",50,[[["self"],["handle"],["handle"],["button"]]]],[11,"destroyed","","Callback that is triggered when a tablet tool is destroyed.",50,[[["self"],["handle"],["handle"]]]],[11,"to_owned","wlroots::compositor","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","wlroots::input::keyboard::event","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"keycode","","Gets the raw keycode from the device.",75,[[["self"]],["u32"]]],[11,"time_msec","","Get how long the key has been pressed down, in milliseconds.",75,[[["self"]],["duration"]]],[11,"update_state","","TODO What is this?",75,[[["self"]],["bool"]]],[11,"key_state","","Get the pressed/released state of the key.",75,[[["self"]],["wlr_key_state"]]],[11,"pressed_keys","","Gets the keys that are pressed using XKB to convert them to a more programmer friendly form.",75,[[["self"]],["vec",["key"]]]],[11,"from","wlroots::input::pointer::event","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"device","","Get the device this event refers to.",77,[[["self"]],["device"]]],[11,"state","","Get the state of the button (e.g pressed or released).",77,[[["self"]],["wlr_button_state"]]],[11,"time_msec","","Get the timestamp of this event.",77,[[["self"]],["u32"]]],[11,"button","","Get the value of the button pressed. This will generally be an atomically increasing value, with e.g left click being 1 and right click being 2...",77,[[["self"]],["u32"]]],[11,"device","","Get the device this event refers to.",76,[[["self"]],["device"]]],[11,"time_msec","","Get the timestamp of this event.",76,[[["self"]],["u32"]]],[11,"source","","",76,[[["self"]],["wlr_axis_source"]]],[11,"orientation","","",76,[[["self"]],["wlr_axis_orientation"]]],[11,"delta","","Get the change from the last axis value.",76,[[["self"]],["f64"]]],[11,"device","","Get the device this event refers to.",78,[[["self"]],["device"]]],[11,"time_msec","","Get the timestamp of this event.",78,[[["self"]],["u32"]]],[11,"delta","","Get the change from the last positional value.",78,N],[11,"time_msec","","Get the timestamp of this event.",79,[[["self"]],["u32"]]],[11,"pos","","Get the absolute position of the pointer from this event.",79,N],[11,"device","","Get the device this event refers to.",79,[[["self"]],["device"]]],[11,"from","wlroots::shell::xdg_shell_v6::event","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"eq","","",80,[[["self"],["move"]],["bool"]]],[11,"ne","","",80,[[["self"],["move"]],["bool"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"eq","","",81,[[["self"],["resize"]],["bool"]]],[11,"ne","","",81,[[["self"],["resize"]],["bool"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"eq","","",82,[[["self"],["setfullscreen"]],["bool"]]],[11,"ne","","",82,[[["self"],["setfullscreen"]],["bool"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"eq","","",83,[[["self"],["showwindowmenu"]],["bool"]]],[11,"ne","","",83,[[["self"],["showwindowmenu"]],["bool"]]],[11,"surface","","Get a handle to the surface associated with this event.",80,[[["self"]],["handle"]]],[11,"serial","","",80,[[["self"]],["u32"]]],[11,"surface","","Get a handle to the surface associated with this event.",81,[[["self"]],["handle"]]],[11,"serial","","",81,[[["self"]],["u32"]]],[11,"edges","","",81,[[["self"]],["edges"]]],[11,"surface","","Get a handle to the surface associated with this event.",82,[[["self"]],["handle"]]],[11,"fullscreen","","Determine if the event is to trigger fullscreen or to stop being fullscreen.",82,[[["self"]],["bool"]]],[11,"output","","Get a handle to the output that this fullscreen event refers to.",82,[[["self"]],["handle"]]],[11,"surface","","Get a handle to the surface associated with this event.",83,[[["self"]],["handle"]]],[11,"serial","","",83,[[["self"]],["u32"]]],[11,"coords","","Get the coordinates for where this show menu event takes place.",83,N],[11,"from","wlroots::shell::xdg_shell::event","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"eq","","",84,[[["self"],["move"]],["bool"]]],[11,"ne","","",84,[[["self"],["move"]],["bool"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"eq","","",85,[[["self"],["resize"]],["bool"]]],[11,"ne","","",85,[[["self"],["resize"]],["bool"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"eq","","",86,[[["self"],["setfullscreen"]],["bool"]]],[11,"ne","","",86,[[["self"],["setfullscreen"]],["bool"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"eq","","",87,[[["self"],["showwindowmenu"]],["bool"]]],[11,"ne","","",87,[[["self"],["showwindowmenu"]],["bool"]]],[11,"surface","","Get a handle to the surface associated with this event.",84,[[["self"]],["handle"]]],[11,"serial","","",84,[[["self"]],["u32"]]],[11,"surface","","Get a handle to the surface associated with this event.",85,[[["self"]],["handle"]]],[11,"serial","","",85,[[["self"]],["u32"]]],[11,"edges","","",85,[[["self"]],["edges"]]],[11,"surface","","Get a handle to the surface associated with this event.",86,[[["self"]],["handle"]]],[11,"fullscreen","","Determine if the event is to trigger fullscreen or to stop being fullscreen.",86,[[["self"]],["bool"]]],[11,"output","","Get a handle to the output that this fullscreen event refers to.",86,[[["self"]],["handle"]]],[11,"surface","","Get a handle to the surface associated with this event.",87,[[["self"]],["handle"]]],[11,"serial","","",87,[[["self"]],["u32"]]],[11,"coords","","Get the coordinates for where this show menu event takes place.",87,N],[11,"from","wlroots::input::tablet_tool::event","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"time_msec","","",88,[[["self"]],["u32"]]],[11,"updated_axes","","",88,[[["self"]],["axis"]]],[11,"position","","Gets the position of the event.",88,N],[11,"pressure","","",88,[[["self"]],["f64"]]],[11,"distance","","",88,[[["self"]],["f64"]]],[11,"tilt","","Gets the tilt of the event.",88,N],[11,"slider","","",88,[[["self"]],["f64"]]],[11,"wheel_delta","","",88,[[["self"]],["f64"]]],[11,"time_msec","","",89,[[["self"]],["u32"]]],[11,"position","","Gets the position of the event in mm.",89,N],[11,"state","","",89,[[["self"]],["wlr_tablet_tool_proximity_state"]]],[11,"time_msec","","",90,[[["self"]],["u32"]]],[11,"position","","Gets the position of the event in mm.",90,N],[11,"state","","",90,[[["self"]],["wlr_tablet_tool_tip_state"]]],[11,"time_msec","","",91,[[["self"]],["u32"]]],[11,"button","","",91,[[["self"]],["u32"]]],[11,"state","","",91,[[["self"]],["wlr_button_state"]]],[11,"from","wlroots::input::touch::event","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"time_msec","","Gets how long the touch event has been going on for.",92,[[["self"]],["u32"]]],[11,"touch_id","","Gets the touch id associated with this event.",92,[[["self"]],["i32"]]],[11,"location","","Gets the location of the touch event in mm.",92,N],[11,"time_msec","","",93,[[["self"]],["u32"]]],[11,"touch_id","","Gets the touch id associated with this event.",93,[[["self"]],["i32"]]],[11,"time_msec","","Gets how long the touch event has been going on for.",94,[[["self"]],["u32"]]],[11,"touch_id","","Gets the touch id associated with this event.",94,[[["self"]],["i32"]]],[11,"location","","Gets the location of the touch event in mm.",94,N],[11,"time_msec","","",95,[[["self"]],["u32"]]],[11,"touch_id","","Gets the touch id associated with this event.",95,[[["self"]],["i32"]]],[11,"from","wlroots::seat::event","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"seat_client","","Get the seat client associated with the seat where this event is occurring.",96,[[["self"]],["client"]]],[11,"surface","","Get the surface that is providing the cursor to the seat.",96,[[["self"]],["option",["handle"]]]],[11,"serial","","",96,[[["self"]],["u32"]]],[11,"location","","",96,N],[11,"from","wlroots::input::tablet_pad::event","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"time_msec","","",97,[[["self"]],["u32"]]],[11,"button","","",97,[[["self"]],["u32"]]],[11,"state","","",97,[[["self"]],["wlr_button_state"]]],[11,"mode","","",97,[[["self"]],["c_uint"]]],[11,"time_msec","","",98,[[["self"]],["u32"]]],[11,"source","","",98,[[["self"]],["wlr_tablet_pad_ring_source"]]],[11,"ring","","",98,[[["self"]],["u32"]]],[11,"position","","",98,[[["self"]],["c_double"]]],[11,"mode","","",98,[[["self"]],["c_uint"]]],[11,"time_msec","","",99,[[["self"]],["u32"]]],[11,"source","","",99,[[["self"]],["wlr_tablet_pad_strip_source"]]],[11,"strip","","",99,[[["self"]],["u32"]]],[11,"position","","",99,[[["self"]],["c_double"]]],[11,"mode","","",99,[[["self"]],["c_uint"]]],[11,"from","wlroots::xwayland::event","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"surface","","Get the surface associated with this configure event.",100,[[["self"]],["option",["handle"]]]],[11,"coords","","Get the coordinates for where the XWayland surface wants to be.",100,N],[11,"dimensions","","Get the dimensions the XWayland surface wants to have.",100,N],[11,"surface","","Get the surface associated with this move event.",101,[[["self"]],["option",["handle"]]]],[11,"surface","","Get the surface associated with this resize event.",102,[[["self"]],["option",["handle"]]]],[11,"edges","","Get the resize edge information for the resize action.",102,[[["self"]],["edges"]]],[11,"to_owned","wlroots::cursor","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"on_pointer_motion","","Callback that is triggered when the cursor moves.",44,[[["self"],["handle"],["handle"],["motion"]]]],[11,"on_pointer_motion_absolute","","",44,[[["self"],["handle"],["handle"],["absolutemotion"]]]],[11,"on_pointer_button","","Callback that is triggered when the buttons on the pointer are pressed.",44,[[["self"],["handle"],["handle"],["button"]]]],[11,"on_pointer_axis","","",44,[[["self"],["handle"],["handle"],["axis"]]]],[11,"on_touch_up","","",44,[[["self"],["handle"],["handle"],["up"]]]],[11,"on_touch_down","","",44,[[["self"],["handle"],["handle"],["down"]]]],[11,"on_touch_motion","","",44,[[["self"],["handle"],["handle"],["motion"]]]],[11,"on_touch_cancel","","",44,[[["self"],["handle"],["handle"],["cancel"]]]],[11,"on_tablet_tool_axis","","",44,[[["self"],["handle"],["handle"],["axis"]]]],[11,"on_tablet_tool_proximity","","",44,[[["self"],["handle"],["handle"],["proximity"]]]],[11,"on_tablet_tool_tip","","",44,[[["self"],["handle"],["handle"],["tip"]]]],[11,"on_tablet_tool_button","","",44,[[["self"],["handle"],["handle"],["button"]]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"clone","","",103,[[["self"]],["handle"]]],[11,"new","","Constructs a `cursor::Handle` that is always invalid. Calling `run` on this will always fail.",103,[[],["self"]]],[11,"run","","Run a function on the referenced Cursor, if it still exists",103,[[["self"],["f"]],["handleresult"]]],[11,"destroy","","Destroy the cursor that this handle refers to.",103,[[["self"]]]],[11,"default","","",103,[[],["self"]]],[11,"from","wlroots::cursor::xcursor","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result"]]],[11,"hash","","",104,N],[11,"eq","","",104,[[["self"],["theme"]],["bool"]]],[11,"ne","","",104,[[["self"],["theme"]],["bool"]]],[11,"cmp","","",104,[[["self"],["theme"]],["ordering"]]],[11,"partial_cmp","","",104,[[["self"],["theme"]],["option",["ordering"]]]],[11,"lt","","",104,[[["self"],["theme"]],["bool"]]],[11,"le","","",104,[[["self"],["theme"]],["bool"]]],[11,"gt","","",104,[[["self"],["theme"]],["bool"]]],[11,"ge","","",104,[[["self"],["theme"]],["bool"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"hash","","",105,N],[11,"eq","","",105,[[["self"],["xcursor"]],["bool"]]],[11,"ne","","",105,[[["self"],["xcursor"]],["bool"]]],[11,"cmp","","",105,[[["self"],["xcursor"]],["ordering"]]],[11,"partial_cmp","","",105,[[["self"],["xcursor"]],["option",["ordering"]]]],[11,"lt","","",105,[[["self"],["xcursor"]],["bool"]]],[11,"le","","",105,[[["self"],["xcursor"]],["bool"]]],[11,"gt","","",105,[[["self"],["xcursor"]],["bool"]]],[11,"ge","","",105,[[["self"],["xcursor"]],["bool"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"hash","","",43,N],[11,"eq","","",43,[[["self"],["image"]],["bool"]]],[11,"ne","","",43,[[["self"],["image"]],["bool"]]],[11,"cmp","","",43,[[["self"],["image"]],["ordering"]]],[11,"partial_cmp","","",43,[[["self"],["image"]],["option",["ordering"]]]],[11,"lt","","",43,[[["self"],["image"]],["bool"]]],[11,"le","","",43,[[["self"],["image"]],["bool"]]],[11,"gt","","",43,[[["self"],["image"]],["bool"]]],[11,"ge","","",43,[[["self"],["image"]],["bool"]]],[11,"load_theme","","Loads the named xcursor theme at the given cursor size (in pixels).",104,[[["t"],["c_int"]],["option"]]],[11,"name","","Get the name of this theme.",104,[[["self"]],["option",["string"]]]],[11,"size","","Get the size of the images.",104,[[["self"]],["c_int"]]],[11,"cursor_count","","Get the number of cursors in this theme.",104,[[["self"]],["usize"]]],[11,"cursors","","Gets all the cursors from this theme.",104,[[["self"]],["vec",["xcursor"]]]],[11,"get_cursor","","Get the cursor with the provided name (e.g. \"left_ptr\"), if it exists.",104,[[["self"],["string"]],["option",["xcursor"]]]],[11,"from_ptr","","Constructs a `Theme` from a raw pointer.",104,N],[11,"drop","","",104,[[["self"]]]],[11,"images","","Get all the image frames associated with an xcursor.",105,[[["self"]],["vec",["image"]]]],[11,"image","","Get a specific frame of the image from the animation. Returns `None` if the index is out of bounds.",105,[[["self"],["usize"]],["option",["image"]]]],[11,"frame","","Returns the current frame number for an animated cursor give a monotonic time reference in milliseconds.",105,[[["self"],["duration"]],["usize"]]],[11,"image_len","","Get the number of animation frames for the cursor.",105,[[["self"]],["usize"]]],[11,"total_delay","","Length of the animation in milliseconds.",105,[[["self"]],["u32"]]],[11,"from_ptr","","Constructs an `XCursor` from a raw pointer",105,N],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"scale","","Get the scale factor of the theme.",106,[[["self"]],["f32"]]],[11,"theme","","Get the underlying `xcursor::Theme` for this managed theme.",106,[[["self"]],["theme"]]],[11,"create","","Create a new `xcursor::Manager`.",107,[[["t"],["u32"]],["option"]]],[11,"name","","Get the name of the theme this `Manager` manages.",107,[[["self"]],["string"]]],[11,"size","","Get the base size (when scale = 1) in pixels for the theme.",107,[[["self"]],["u32"]]],[11,"get_xcursor","","Retrieves a `XCursor` for the given cursor name at the given scale factor, or None if this `Manager` has not loaded a cursor theme at the requested scale.",107,[[["self"],["t"],["f32"]],["option",["xcursor"]]]],[11,"scaled_themes","","Get a list of all the scaled `xcursor::ManagerTheme`s managed by this manager.",107,[[["self"]],["vec",["managertheme"]]]],[11,"load","","Ensures an xcursor theme at the given scale factor is loaded in the manager.",107,[[["self"],["f32"]],["bool"]]],[11,"set_cursor_image","","Set a `Cursor`'s cursor image to the specified cursor name for all scale factors. The `Cursor` will take over from this point and ensure the correct cursor is used on each output, assuming an `OutputLayout` is attached to it.",107,[[["self"],["string"],["cursor"]]]],[11,"drop","","",107,[[["self"]]]],[11,"from","wlroots::input","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"eq","","",108,[[["self"],["device"]],["bool"]]],[11,"ne","","",108,[[["self"],["device"]],["bool"]]],[11,"hash","","",108,N],[11,"cmp","","",108,[[["self"],["device"]],["ordering"]]],[11,"partial_cmp","","",108,[[["self"],["device"]],["option",["ordering"]]]],[11,"lt","","",108,[[["self"],["device"]],["bool"]]],[11,"le","","",108,[[["self"],["device"]],["bool"]]],[11,"gt","","",108,[[["self"],["device"]],["bool"]]],[11,"ge","","",108,[[["self"],["device"]],["bool"]]],[11,"vendor","","",108,[[["self"]],["c_uint"]]],[11,"product","","",108,[[["self"]],["c_uint"]]],[11,"name","","",108,[[["self"]],["option",["string"]]]],[11,"output_name","","",108,[[["self"]],["option",["string"]]]],[11,"size","","Get the size in (width_mm, height_mm) format.",108,N],[11,"dev_type","","Get the type of the device",108,[[["self"]],["wlr_input_device_type"]]],[11,"device","","Get a handle to the backing input device.",108,[[["self"]],["handle"]]],[11,"to_owned","wlroots::input::keyboard","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"from","","",111,[[["t"]],["t"]]],[11,"to_string","","",111,[[["self"]],["string"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"clone","","",46,[[["self"]],["repeatinfo"]]],[11,"eq","","",46,[[["self"],["repeatinfo"]],["bool"]]],[11,"ne","","",46,[[["self"],["repeatinfo"]],["bool"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"input_device","","Gets the wlr_input_device associated with this keyboard::Handle",109,[[["self"]],["device"]]],[11,"set_keymap","","Set the keymap for this Keyboard.",109,[[["self"],["keymap"]]]],[11,"get_keymap","","Get the XKB keymap associated with this Keyboard.",109,[[["self"]],["option",["keymap"]]]],[11,"keycodes","","Get the keycodes for this keyboard as reported by XKB.",109,[[["self"]],["vec",["keycode"]]]],[11,"led_list","","Get the list of LEDs for this keyboard as reported by XKB.",109,N],[11,"modifier_list","","Get the list of modifiers for this keyboard as reported by XKB.",109,N],[11,"keymap_size","","Get the size of the keymap.",109,[[["self"]],["usize"]]],[11,"get_xkb_state","","Get the XKB state associated with this `Keyboard`.",109,[[["self"]],["option",["state"]]]],[11,"repeat_info","","Get the repeat info for this keyboard.",109,[[["self"]],["repeatinfo"]]],[11,"update_led","","Update the LED lights using the provided bitmap.",109,[[["self"],["led"]]]],[11,"get_modifiers","","Get the modifiers that are currently pressed on the keyboard.",109,[[["self"]],["modifier"]]],[11,"get_modifier_masks","","Get the modifier masks for each group.",109,[[["self"]],["keyboardmodifiers"]]],[11,"drop","","",109,[[["self"]]]],[11,"weak_reference","","",109,[[["self"]],["handle"]]],[11,"eq","","",110,[[["self"],["led"]],["bool"]]],[11,"ne","","",110,[[["self"],["led"]],["bool"]]],[11,"clone","","",110,[[["self"]],["led"]]],[11,"partial_cmp","","",110,[[["self"],["led"]],["option",["ordering"]]]],[11,"lt","","",110,[[["self"],["led"]],["bool"]]],[11,"le","","",110,[[["self"],["led"]],["bool"]]],[11,"gt","","",110,[[["self"],["led"]],["bool"]]],[11,"ge","","",110,[[["self"],["led"]],["bool"]]],[11,"cmp","","",110,[[["self"],["led"]],["ordering"]]],[11,"hash","","",110,N],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[18,"WLR_LED_NUM_LOCK","","",110,N],[18,"WLR_LED_CAPS_LOCK","","",110,N],[18,"WLR_LED_SCROLL_LOCK","","",110,N],[11,"empty","","Returns an empty set of flags.",110,[[],["led"]]],[11,"all","","Returns the set containing all flags.",110,[[],["led"]]],[11,"bits","","Returns the raw value of the flags currently stored.",110,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",110,[[["u32"]],["option",["led"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",110,[[["u32"]],["led"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",110,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",110,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",110,[[["self"],["led"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",110,[[["self"],["led"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",110,[[["self"],["led"]]]],[11,"remove","","Removes the specified flags in-place.",110,[[["self"],["led"]]]],[11,"toggle","","Toggles the specified flags in-place.",110,[[["self"],["led"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",110,[[["self"],["led"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",110,[[["self"],["led"]],["led"]]],[11,"bitor_assign","","Adds the set of flags.",110,[[["self"],["led"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",110,[[["self"],["led"]],["led"]]],[11,"bitxor_assign","","Toggles the set of flags.",110,[[["self"],["led"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",110,[[["self"],["led"]],["led"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",110,[[["self"],["led"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",110,[[["self"],["led"]],["led"]]],[11,"sub_assign","","Disables all flags enabled in the set.",110,[[["self"],["led"]]]],[11,"not","","Returns the complement of this set of flags.",110,[[["self"]],["led"]]],[11,"extend","","",110,[[["self"],["t"]]]],[11,"from_iter","","",110,[[["t"]],["led"]]],[11,"eq","","",111,[[["self"],["modifier"]],["bool"]]],[11,"ne","","",111,[[["self"],["modifier"]],["bool"]]],[11,"clone","","",111,[[["self"]],["modifier"]]],[11,"partial_cmp","","",111,[[["self"],["modifier"]],["option",["ordering"]]]],[11,"lt","","",111,[[["self"],["modifier"]],["bool"]]],[11,"le","","",111,[[["self"],["modifier"]],["bool"]]],[11,"gt","","",111,[[["self"],["modifier"]],["bool"]]],[11,"ge","","",111,[[["self"],["modifier"]],["bool"]]],[11,"cmp","","",111,[[["self"],["modifier"]],["ordering"]]],[11,"hash","","",111,N],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[18,"WLR_MODIFIER_SHIFT","","",111,N],[18,"WLR_MODIFIER_CAPS","","",111,N],[18,"WLR_MODIFIER_CTRL","","",111,N],[18,"WLR_MODIFIER_ALT","","",111,N],[18,"WLR_MODIFIER_MOD2","","",111,N],[18,"WLR_MODIFIER_MOD3","","",111,N],[18,"WLR_MODIFIER_LOGO","","",111,N],[18,"WLR_MODIFIER_MOD5","","",111,N],[11,"empty","","Returns an empty set of flags.",111,[[],["modifier"]]],[11,"all","","Returns the set containing all flags.",111,[[],["modifier"]]],[11,"bits","","Returns the raw value of the flags currently stored.",111,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",111,[[["u32"]],["option",["modifier"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",111,[[["u32"]],["modifier"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",111,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",111,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",111,[[["self"],["modifier"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",111,[[["self"],["modifier"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",111,[[["self"],["modifier"]]]],[11,"remove","","Removes the specified flags in-place.",111,[[["self"],["modifier"]]]],[11,"toggle","","Toggles the specified flags in-place.",111,[[["self"],["modifier"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",111,[[["self"],["modifier"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",111,[[["self"],["modifier"]],["modifier"]]],[11,"bitor_assign","","Adds the set of flags.",111,[[["self"],["modifier"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",111,[[["self"],["modifier"]],["modifier"]]],[11,"bitxor_assign","","Toggles the set of flags.",111,[[["self"],["modifier"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",111,[[["self"],["modifier"]],["modifier"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",111,[[["self"],["modifier"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",111,[[["self"],["modifier"]],["modifier"]]],[11,"sub_assign","","Disables all flags enabled in the set.",111,[[["self"],["modifier"]]]],[11,"not","","Returns the complement of this set of flags.",111,[[["self"]],["modifier"]]],[11,"extend","","",111,[[["self"],["t"]]]],[11,"from_iter","","",111,[[["t"]],["modifier"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result",["error"]]]],[11,"from","wlroots::input::pointer","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"input_device","","Gets the wlr_input_device associated with this Pointer.",112,[[["self"]],["device"]]],[11,"drop","","",112,[[["self"]]]],[11,"weak_reference","","",112,[[["self"]],["handle"]]],[11,"from","wlroots::input::touch","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"input_device","","Gets the wlr_input_device associated with this `Touch`.",113,[[["self"]],["device"]]],[11,"drop","","",113,[[["self"]]]],[11,"weak_reference","","",113,[[["self"]],["handle"]]],[11,"from","wlroots::input::tablet_tool","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"eq","","",115,[[["self"],["axis"]],["bool"]]],[11,"ne","","",115,[[["self"],["axis"]],["bool"]]],[11,"clone","","",115,[[["self"]],["axis"]]],[11,"partial_cmp","","",115,[[["self"],["axis"]],["option",["ordering"]]]],[11,"lt","","",115,[[["self"],["axis"]],["bool"]]],[11,"le","","",115,[[["self"],["axis"]],["bool"]]],[11,"gt","","",115,[[["self"],["axis"]],["bool"]]],[11,"ge","","",115,[[["self"],["axis"]],["bool"]]],[11,"cmp","","",115,[[["self"],["axis"]],["ordering"]]],[11,"hash","","",115,N],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[18,"WLR_TABLET_TOOL_AXIS_X","","",115,N],[18,"WLR_TABLET_TOOL_AXIS_Y","","",115,N],[18,"WLR_TABLET_TOOL_AXIS_DISTANCE","","",115,N],[18,"WLR_TABLET_TOOL_AXIS_PRESSURE","","",115,N],[18,"WLR_TABLET_TOOL_AXIS_TILT_X","","",115,N],[18,"WLR_TABLET_TOOL_AXIS_TILT_Y","","",115,N],[11,"empty","","Returns an empty set of flags.",115,[[],["axis"]]],[11,"all","","Returns the set containing all flags.",115,[[],["axis"]]],[11,"bits","","Returns the raw value of the flags currently stored.",115,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",115,[[["u32"]],["option",["axis"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",115,[[["u32"]],["axis"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",115,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",115,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",115,[[["self"],["axis"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",115,[[["self"],["axis"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",115,[[["self"],["axis"]]]],[11,"remove","","Removes the specified flags in-place.",115,[[["self"],["axis"]]]],[11,"toggle","","Toggles the specified flags in-place.",115,[[["self"],["axis"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",115,[[["self"],["axis"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",115,[[["self"],["axis"]],["axis"]]],[11,"bitor_assign","","Adds the set of flags.",115,[[["self"],["axis"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",115,[[["self"],["axis"]],["axis"]]],[11,"bitxor_assign","","Toggles the set of flags.",115,[[["self"],["axis"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",115,[[["self"],["axis"]],["axis"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",115,[[["self"],["axis"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",115,[[["self"],["axis"]],["axis"]]],[11,"sub_assign","","Disables all flags enabled in the set.",115,[[["self"],["axis"]]]],[11,"not","","Returns the complement of this set of flags.",115,[[["self"]],["axis"]]],[11,"extend","","",115,[[["self"],["t"]]]],[11,"from_iter","","",115,[[["t"]],["axis"]]],[11,"input_device","","Gets the wlr_input_device associated with this TabletTool.",114,[[["self"]],["device"]]],[11,"drop","","",114,[[["self"]]]],[11,"weak_reference","","",114,[[["self"]],["handle"]]],[11,"from","wlroots::input::tablet_pad","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"input_device","","Gets the wlr_input_device associated with this TabletPad.",116,[[["self"]],["device"]]],[11,"drop","","",116,[[["self"]]]],[11,"weak_reference","","",116,[[["self"]],["handle"]]],[11,"from","wlroots::output","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"choose_best_mode","","Sets the best modesetting for an output.",117,[[["self"]]]],[11,"set_mode","","Set this to be the current mode for the Output.",117,[[["self"],["mode"]],["bool"]]],[11,"set_custom_mode","","Set a custom mode for this output.",117,[[["self"],["size"],["i32"]],["bool"]]],[11,"name","","Gets the name of the output in UTF-8.",117,[[["self"]],["string"]]],[11,"make","","Gets the make of the output in UTF-8.",117,[[["self"]],["string"]]],[11,"model","","Gets the model of the output in UTF-8.",117,[[["self"]],["string"]]],[11,"serial","","Gets the serial of the output in UTF-8.",117,[[["self"]],["string"]]],[11,"enabled","","Determines if the output is enabled or not.",117,[[["self"]],["bool"]]],[11,"scale","","Get the scale of the output",117,[[["self"]],["c_float"]]],[11,"needs_swap","","Determines if the output should have its buffers swapped or not.",117,[[["self"]],["bool"]]],[11,"refresh_rate","","Get the refresh rate of the output.",117,[[["self"]],["i32"]]],[11,"current_mode","","",117,[[["self"]],["option",["mode"]]]],[11,"layout_space_pos","","Gets the output position in layout space reported to clients.",117,N],[11,"subpixel","","Get subpixel information about the output.",117,[[["self"]],["subpixel"]]],[11,"get_transform","","Get the transform information about the output.",117,[[["self"]],["transform"]]],[11,"schedule_frame","","Manually schedules a `frame` event.",117,[[["self"]]]],[11,"make_current","","Make this output the current output.",117,N],[11,"swap_buffers","","Swaps the buffers and draws whatever is in the back buffer on the screen.",117,[[["self"],["t"],["u"]],["bool"]]],[11,"frame_pending","","Determines if a frame is pending or not.",117,[[["self"]],["bool"]]],[11,"size","","Get the dimensions of the output as (width, height).",117,N],[11,"physical_size","","Get the physical dimensions of the output as (width, height).",117,N],[11,"transformed_resolution","","Computes the transformed output resolution",117,N],[11,"effective_resolution","","Computes the transformed and scaled output resolution.",117,N],[11,"transform_matrix","","",117,N],[11,"transform","","",117,[[["self"],["transform"]]]],[11,"modes","","Get the modes associated with this output.",117,[[["self"]],["vec",["mode"]]]],[11,"enable","","Enables or disables an output.",117,[[["self"],["bool"]],["bool"]]],[11,"set_gamma","","Sets the gamma based on the size.",117,[[["self"],["usize"],["u16"],["u16"],["u16"]],["bool"]]],[11,"get_gamma_size","","Get the gamma size.",117,[[["self"]],["usize"]]],[11,"set_position","","Sets the position of this output.",117,[[["self"],["origin"]]]],[11,"set_scale","","Set the scale applied to this output.",117,[[["self"],["c_float"]]]],[11,"damage","","",117,[[["self"]],["damage"]]],[11,"drop","","",117,[[["self"]]]],[11,"weak_reference","","",117,[[["self"]],["handle"]]],[11,"to_owned","wlroots::output::layout","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"output_added","","Callback that's triggered when an output is added to the output layout.",54,[[["self"],["handle"],["handle"],["output"]]]],[11,"output_removed","","Callback that's triggered when an output is removed from the output layout.",54,[[["self"],["handle"],["handle"],["output"]]]],[11,"on_change","","Callback that's triggered when the layout changes.",54,[[["self"],["handle"],["handle"],["output"]]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"clone","","",118,[[["self"]],["handle"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"new","","Constructs a new Handle that is always invalid. Calling `run` on this will always fail.",118,[[],["self"]]],[11,"run","","Run a function on the referenced output::layout::Layout, if it still exists",118,[[["self"],["f"]],["handleresult"]]],[11,"destroy","","Destroy the output layout that this handle refers to.",118,[[["self"]]]],[11,"output","","Get a handle to the output that this structure describes.",119,[[["self"]],["handle"]]],[11,"coords","","Get the coordinates of this output in the layout output.",119,N],[11,"top_left_edge","","Get the absolute top left edge coordinate of this output in the output layout.",119,[[["self"]],["origin"]]],[11,"top_right_edge","","Get the absolute top right edge coordinate of this output in the output layout.",119,[[["self"]],["origin"]]],[11,"bottom_left_edge","","",119,[[["self"]],["origin"]]],[11,"bottom_right_edge","","",119,[[["self"]],["origin"]]],[11,"default","","",118,[[],["self"]]],[11,"eq","","",118,[[["self"],["handle"]],["bool"]]],[11,"from","wlroots::output","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"eq","","",120,[[["self"],["mode"]],["bool"]]],[11,"ne","","",120,[[["self"],["mode"]],["bool"]]],[11,"flags","","Gets the flags set on this Mode.",120,[[["self"]],["u32"]]],[11,"dimensions","","Gets the dimensions of this Mode.",120,N],[11,"refresh","","Get the refresh value of the output.",120,[[["self"]],["i32"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"eq","","",121,[[["self"],["cursor"]],["bool"]]],[11,"ne","","",121,[[["self"],["cursor"]],["bool"]]],[11,"new","","Creates a new `output::Cursor` that's bound to the given `Output`.",121,[[["output"]],["option",["cursor"]]]],[11,"set_image","","Sets the hardware cursor's image.",121,[[["self"],["image"]],["bool"]]],[11,"set_surface","","Sets the hardware cursor's surface.",121,[[["self"],["t"],["i32"],["i32"]]]],[11,"move_to","","Moves the hardware cursor to the desired location",121,[[["self"],["f64"],["f64"]],["bool"]]],[11,"coords","","Get the coordinates of the cursor.",121,N],[11,"enabled","","Determines if the hardware cursor is enabled or not.",121,[[["self"]],["bool"]]],[11,"visible","","Determines if the hardware cursor is visible or not.",121,[[["self"]],["bool"]]],[11,"size","","Gets the width and height of the hardware cursor.",121,N],[11,"hotspots","","Gets the hotspot coordinates of the hardware cursor.",121,N],[11,"texture","","Gets the texture for the cursor, if a software cursor is used without a surface.",121,[[["self"]],["option",["texture"]]]],[11,"surface","","Gets the surface for the cursor, if using a cursor surface.",121,[[["self"]],["option",["handle"]]]],[11,"drop","","",121,[[["self"]]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"make_current","","Makes the output rendering context current.  Returns `true` if `wlr_output_damage_swap_buffers` needs to be called.",122,[[["self"],["t"]],["bool"]]],[11,"swap_buffers","","Swaps the output buffers.",122,[[["self"],["t"],["u"]],["bool"]]],[11,"add","","Accumulates damage and schedules a `frame` event.",122,[[["self"],["pixmanregion"]]]],[11,"add_whole","","Damages the whole output and schedules a `frame` event.",122,[[["self"]]]],[11,"add_area","","Accumulates damage from an `Area` and schedules a `frame` event.",122,[[["self"],["area"]]]],[11,"drop","","",122,[[["self"]]]],[11,"to_owned","wlroots::area","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"clone","","",60,[[["self"]],["intersectionresult"]]],[11,"eq","","",60,[[["self"],["intersectionresult"]],["bool"]]],[11,"ne","","",60,[[["self"],["intersectionresult"]],["bool"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"default","","",57,[[],["origin"]]],[11,"clone","","",57,[[["self"]],["origin"]]],[11,"eq","","",57,[[["self"],["origin"]],["bool"]]],[11,"ne","","",57,[[["self"],["origin"]],["bool"]]],[11,"new","","",57,[[["c_int"],["c_int"]],["self"]]],[11,"into","","",57,[[["self"]],["area"]]],[11,"default","","",58,[[],["size"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"clone","","",58,[[["self"]],["size"]]],[11,"eq","","",58,[[["self"],["size"]],["bool"]]],[11,"ne","","",58,[[["self"],["size"]],["bool"]]],[11,"new","","",58,[[["c_int"],["c_int"]],["self"]]],[11,"into","","",58,[[["self"]],["area"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"clone","","",59,[[["self"]],["area"]]],[11,"default","","",59,[[],["area"]]],[11,"eq","","",59,[[["self"],["area"]],["bool"]]],[11,"ne","","",59,[[["self"],["area"]],["bool"]]],[11,"into","","",59,[[["self"]],["wlr_box"]]],[11,"new","","",59,[[["origin"],["size"]],["self"]]],[11,"from_box","","Construct an Area from a `wlr_box`.",59,[[["wlr_box"]],["self"]]],[11,"with_size","","Makes a new `Area` with width and height set to the values in the given `Size`.",59,[[["self"],["size"]],["self"]]],[11,"with_origin","","Makes a new `Area` with x and y set to the value in the given `Origin`.",59,[[["self"],["origin"]],["self"]]],[11,"closest_point","","Finds the closest point within the box to the given point. If the (x, y) point lies outside of the box, then it finds the closest corner and returns that.",59,N],[11,"intersection","","Gets the intersection of the two areas.",59,[[["self"],["area"]],["intersectionresult"]]],[11,"contains_point","","Determines if the box contains the given point.",59,[[["self"],["c_double"],["c_double"]],["bool"]]],[11,"is_empty","","Determines if the box is empty (e.g if the bounds give it an area of 0).",59,[[["self"]],["bool"]]],[11,"transform","","Transforms the box coordinates and bounds according to the output transformation.",59,[[["self"],["wl_output_transform"],["c_int"],["c_int"]],["area"]]],[11,"rotated_bounds","","Creates the smallest box that contains the box rotated about its center.",59,[[["self"],["c_float"]],["area"]]],[11,"from","wlroots::seat::drag_icon","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"surface","","Get a handle for the surface associated with this drag icon",123,[[["self"]],["handle"]]],[11,"mapped","","Whether or not to display the drag icon",123,[[["self"]],["bool"]]],[11,"is_pointer","","Whether or not this drag icon comes from a pointer-drive dnd operation",123,[[["self"]],["bool"]]],[11,"touch_id","","If this is a touch-driven dnd operation, the id of the touch point that started it",123,[[["self"]],["i32"]]],[11,"weak_reference","","Creates a weak reference to a `DragIcon`.",123,[[["self"]],["handle"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"clone","","",124,[[["self"]],["handle"]]],[11,"eq","","",124,[[["self"],["self"]],["bool"]]],[11,"hash","","",124,[[["self"],["h"]]]],[11,"run","","",124,[[["self"],["f"]],["handleresult"]]],[11,"from","wlroots::seat","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"client_for_wl_client","","Gets a seat::Client for the specified client, if there is one bound for that client.",125,N],[11,"from_raw","","",72,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",72,[[["self"]],["u32"]]],[18,"Pointer","","the seat has pointer devices",72,N],[18,"Keyboard","","the seat has one or more keyboards",72,N],[18,"Touch","","the seat has touch devices",72,N],[11,"empty","","Returns an empty set of flags.",72,[[],["capability"]]],[11,"all","","Returns the set containing all flags.",72,[[],["capability"]]],[11,"bits","","Returns the raw value of the flags currently stored.",72,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",72,[[["u32"]],["option",["capability"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",72,[[["u32"]],["capability"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",72,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",72,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",72,[[["self"],["capability"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",72,[[["self"],["capability"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",72,N],[11,"remove","","Removes the specified flags in-place.",72,N],[11,"toggle","","Toggles the specified flags in-place.",72,N],[11,"set","","Inserts or removes the specified flags depending on the passed value.",72,N],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"pointer_grabbed","","Callback triggered when a client has grabbed a pointer.",62,[[["self"],["handle"],["handle"],["pointer"]]]],[11,"pointer_released","","Callback triggered when a client has ended a pointer grab.",62,[[["self"],["handle"],["handle"],["pointer"]]]],[11,"keyboard_grabbed","","Callback triggered when a client has grabbed a keyboard.",62,[[["self"],["handle"],["handle"],["keyboard"]]]],[11,"keyboard_released","","Callback triggered when a client has ended a keyboard grab.",62,[[["self"],["handle"],["handle"],["keyboard"]]]],[11,"touch_grabbed","","Callback triggered when a client has grabbed a touch.",62,[[["self"],["handle"],["handle"],["touch"]]]],[11,"touch_released","","Callback triggered when a client has ended a touch grab.",62,[[["self"],["handle"],["handle"],["touch"]]]],[11,"cursor_set","","Callback triggered when a client sets the cursor for this seat.",62,[[["self"],["handle"],["handle"],["setcursor"]]]],[11,"received_selection","","The seat was provided with a selection by the client.",62,[[["self"],["handle"],["handle"]]]],[11,"primary_selection","","The seat was provided with a selection from the primary buffer by the client.",62,[[["self"],["handle"],["handle"]]]],[11,"destroy","","The seat is being destroyed.",62,[[["self"],["handle"],["handle"]]]],[11,"new_drag_icon","","A new drag icon has been created.",62,N],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"clone","","",126,[[["self"]],["handle"]]],[11,"new","","Constructs a new seat::Handle that is always invalid. Calling `run` on this will always fail.",126,[[],["self"]]],[11,"run","","Run a function on the referenced Seat, if it still exists",126,[[["self"],["f"]],["handleresult"]]],[11,"destroy","","Destroy the seat that this handle refers to.",126,[[["self"]]]],[11,"default","","",126,[[],["self"]]],[11,"eq","","",126,[[["self"],["handle"]],["bool"]]],[11,"from","wlroots::seat::grab","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"to_owned","wlroots::seat","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"clone","","",130,[[["self"]],["touchpoint"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"clone","","",131,[[["self"]],["touchid"]]],[11,"eq","","",131,[[["self"],["touchid"]],["bool"]]],[11,"ne","","",131,[[["self"],["touchid"]],["bool"]]],[11,"into","","",131,[[["self"]],["i32"]]],[11,"touch_id","","Get the touch id associated for this point.",130,[[["self"]],["touchid"]]],[11,"from","wlroots::surface","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"on_commit","","",65,[[["self"],["handle"],["handle"]]]],[11,"new_subsurface","","",65,[[["self"],["handle"],["handle"],["handle"]],["option",["box"]]]],[11,"on_destroy","","",65,[[["self"],["handle"],["handle"]]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"current_state","","Get the surface state.",132,[[["self"]],["state"]]],[11,"pending_state","","Get the pending surface state.",132,[[["self"]],["state"]]],[11,"subsurfaces","","Gets a list of handles to the `Subsurface`s of this `Surface`.",132,[[["self"]],["vec",["handle"]]]],[11,"texture","","Get the texture of this surface.",132,[[["self"]],["option",["texture"]]]],[11,"role","","Get the lifetime bound role (if one exists) for this surface.",132,[[["self"]],["option",["string"]]]],[11,"has_buffer","","Whether or not this surface currently has an attached buffer.",132,[[["self"]],["bool"]]],[11,"accepts_input","","Determines if this surface accepts input or not at the provided surface local coordinates.",132,[[["self"],["c_double"],["c_double"]],["bool"]]],[11,"is_xdg_surface","","Determines if this surface is an XDG surface.",132,[[["self"]],["bool"]]],[11,"subsurface_at","","Find a subsurface within this surface at the surface-local coordinates.",132,[[["self"],["f64"],["f64"],["f64"],["f64"]],["option",["handle"]]]],[11,"get_root_surface","","Get the top of the subsurface tree for this surface.",132,[[["self"]],["option",["handle"]]]],[11,"send_enter","","",132,[[["self"],["output"]]]],[11,"send_leave","","",132,[[["self"],["output"]]]],[11,"send_frame_done","","Send the frame done event.",132,[[["self"],["duration"]]]],[11,"weak_reference","","",132,[[["self"]],["handle"]]],[11,"drop","","",132,[[["self"]]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result"]]],[11,"committed","","Gets the state of the sub surface.",133,[[["self"]],["invalidstate"]]],[11,"position","","Get the position of the surface relative to the previous position.",133,N],[11,"size","","Get the size of the sub surface.",133,N],[11,"buffer_size","","Get the size of the buffer.",133,N],[11,"scale","","Get the scale applied to the surface.",133,[[["self"]],["i32"]]],[11,"transform","","Get the output transform applied to the surface.",133,[[["self"]],["wl_output_transform"]]],[11,"buffer","","Gets the buffer of the surface.",133,N],[11,"surface_damage","","",133,[[["self"]],["pixmanregion"]]],[11,"buffer_damage","","",133,[[["self"]],["pixmanregion"]]],[11,"opaque","","",133,[[["self"]],["pixmanregion"]]],[11,"input","","",133,[[["self"]],["pixmanregion"]]],[11,"from","wlroots::surface::subsurface","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"on_destroy","","",64,[[["self"],["handle"],["handle"],["handle"]]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"surface","","Get a handle to the surface for this sub surface.",134,[[["self"]],["handle"]]],[11,"parent_surface","","Get a handle to the parent surface for this sub surface.",134,[[["self"]],["handle"]]],[11,"cached_state","","Get the cached state of the sub surface.",134,[[["self"]],["option",["state"]]]],[11,"has_cache","","Determine if the sub surface has a cached state.",134,[[["self"]],["bool"]]],[11,"synchronized","","",134,[[["self"]],["bool"]]],[11,"reordered","","",134,[[["self"]],["bool"]]],[11,"weak_reference","","",134,[[["self"]],["handle"]]],[11,"from","wlroots::shell::xdg_shell_v6","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"eq","","",135,[[["self"],["toplevel"]],["bool"]]],[11,"ne","","",135,[[["self"],["toplevel"]],["bool"]]],[11,"hash","","",135,N],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"eq","","",136,[[["self"],["popup"]],["bool"]]],[11,"ne","","",136,[[["self"],["popup"]],["bool"]]],[11,"hash","","",136,N],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"eq","","",66,[[["self"],["shellstate"]],["bool"]]],[11,"ne","","",66,[[["self"],["shellstate"]],["bool"]]],[11,"hash","","",66,N],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"surface","","Gets the surface used by this XDG shell.",137,[[["self"]],["handle"]]],[11,"role","","Get the role of this XDG surface.",137,[[["self"]],["wlr_xdg_surface_v6_role"]]],[11,"state","","",137,[[["self"]],["option",["shellstate"]]]],[11,"configured","","Determines if this XDG shell surface has been configured or not.",137,[[["self"]],["bool"]]],[11,"added","","",137,[[["self"]],["bool"]]],[11,"configure_serial","","",137,[[["self"]],["u32"]]],[11,"configure_next_serial","","",137,[[["self"]],["u32"]]],[11,"has_next_geometry","","",137,[[["self"]],["bool"]]],[11,"next_geometry","","",137,[[["self"]],["area"]]],[11,"geometry","","",137,[[["self"]],["area"]]],[11,"ping","","Send a ping to the surface.",137,[[["self"]]]],[11,"surface_at","","Find a surface within this surface at the surface-local coordinates.",137,[[["self"],["f64"],["f64"],["f64"],["f64"]],["option",["handle"]]]],[11,"for_each_surface","","",137,[[["self"],["f"]]]],[11,"drop","","",137,[[["self"]]]],[11,"title","","Get the title associated with this XDG shell toplevel.",135,[[["self"]],["string"]]],[11,"app_id","","Get the app id associated with this XDG shell toplevel.",135,[[["self"]],["string"]]],[11,"base","","Get a handle to the base surface of the xdg tree.",135,[[["self"]],["handle"]]],[11,"parent","","Get a handle to the parent surface of the xdg tree.",135,[[["self"]],["handle"]]],[11,"added","","",135,[[["self"]],["bool"]]],[11,"client_pending_state","","Get the pending client state.",135,[[["self"]],["wlr_xdg_toplevel_v6_state"]]],[11,"server_pending_state","","Get the pending server state.",135,[[["self"]],["wlr_xdg_toplevel_v6_state"]]],[11,"current_state","","Get the current configure state.",135,[[["self"]],["wlr_xdg_toplevel_v6_state"]]],[11,"set_size","","Request that this toplevel surface be the given size.",135,[[["self"],["u32"],["u32"]],["u32"]]],[11,"set_activated","","Request that this toplevel surface show itself in an activated or deactivated state.",135,[[["self"],["bool"]],["u32"]]],[11,"set_maximized","","Request that this toplevel surface consider itself maximized or not maximized.",135,[[["self"],["bool"]],["u32"]]],[11,"set_fullscreen","","Request that this toplevel surface consider itself fullscreen or not fullscreen.",135,[[["self"],["bool"]],["u32"]]],[11,"set_resizing","","Request that this toplevel surface consider itself to be resizing or not resizing.",135,[[["self"],["bool"]],["u32"]]],[11,"close","","Request that this toplevel surface closes.",135,[[["self"]]]],[11,"base","","Get a handle to the base surface of the xdg tree.",136,[[["self"]],["handle"]]],[11,"parent","","Get a handle to the parent surface of the xdg tree.",136,[[["self"]],["handle"]]],[11,"committed","","",136,[[["self"]],["bool"]]],[11,"seat_handle","","Get a handle to the seat associated with this popup.",136,[[["self"]],["option",["handle"]]]],[11,"geometry","","",136,[[["self"]],["area"]]],[11,"from","wlroots::shell::xdg_shell","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[11,"eq","","",138,[[["self"],["toplevel"]],["bool"]]],[11,"ne","","",138,[[["self"],["toplevel"]],["bool"]]],[11,"hash","","",138,N],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"eq","","",139,[[["self"],["popup"]],["bool"]]],[11,"ne","","",139,[[["self"],["popup"]],["bool"]]],[11,"hash","","",139,N],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"eq","","",69,[[["self"],["shellstate"]],["bool"]]],[11,"ne","","",69,[[["self"],["shellstate"]],["bool"]]],[11,"hash","","",69,N],[11,"fmt","","",140,[[["self"],["formatter"]],["result"]]],[11,"surface","","Gets the surface used by this XDG shell.",140,[[["self"]],["handle"]]],[11,"role","","Get the role of this XDG surface.",140,[[["self"]],["wlr_xdg_surface_role"]]],[11,"state","","",140,[[["self"]],["option",["shellstate"]]]],[11,"configured","","Determines if this XDG shell surface has been configured or not.",140,[[["self"]],["bool"]]],[11,"added","","",140,[[["self"]],["bool"]]],[11,"configure_serial","","",140,[[["self"]],["u32"]]],[11,"configure_next_serial","","",140,[[["self"]],["u32"]]],[11,"has_next_geometry","","",140,[[["self"]],["bool"]]],[11,"next_geometry","","",140,[[["self"]],["area"]]],[11,"geometry","","",140,[[["self"]],["area"]]],[11,"ping","","Send a ping to the surface.",140,[[["self"]]]],[11,"surface_at","","Find a surface within this surface at the surface-local coordinates.",140,[[["self"],["f64"],["f64"],["f64"],["f64"]],["option",["handle"]]]],[11,"for_each_surface","","",140,[[["self"],["f"]]]],[11,"drop","","",140,[[["self"]]]],[11,"title","","Get the title associated with this XDG shell toplevel.",138,[[["self"]],["string"]]],[11,"app_id","","Get the app id associated with this XDG shell toplevel.",138,[[["self"]],["string"]]],[11,"base","","Get a handle to the base surface of the xdg tree.",138,[[["self"]],["handle"]]],[11,"parent","","Get a handle to the parent surface of the xdg tree.",138,[[["self"]],["handle"]]],[11,"added","","",138,[[["self"]],["bool"]]],[11,"client_pending_state","","Get the pending client state.",138,[[["self"]],["wlr_xdg_toplevel_state"]]],[11,"server_pending_state","","Get the pending server state.",138,[[["self"]],["wlr_xdg_toplevel_state"]]],[11,"current_state","","Get the current configure state.",138,[[["self"]],["wlr_xdg_toplevel_state"]]],[11,"set_size","","Request that this toplevel surface be the given size.",138,[[["self"],["u32"],["u32"]],["u32"]]],[11,"set_activated","","Request that this toplevel surface show itself in an activated or deactivated state.",138,[[["self"],["bool"]],["u32"]]],[11,"set_maximized","","Request that this toplevel surface consider itself maximized or not maximized.",138,[[["self"],["bool"]],["u32"]]],[11,"set_fullscreen","","Request that this toplevel surface consider itself fullscreen or not fullscreen.",138,[[["self"],["bool"]],["u32"]]],[11,"set_resizing","","Request that this toplevel surface consider itself to be resizing or not resizing.",138,[[["self"],["bool"]],["u32"]]],[11,"close","","Request that this toplevel surface closes.",138,[[["self"]]]],[11,"base","","Get a handle to the base surface of the xdg tree.",139,[[["self"]],["handle"]]],[11,"parent","","Get a handle to the parent surface of the xdg tree.",139,[[["self"]],["handle"]]],[11,"committed","","",139,[[["self"]],["bool"]]],[11,"seat_handle","","Get a handle to the seat associated with this popup.",139,[[["self"]],["option",["handle"]]]],[11,"geometry","","",139,[[["self"]],["area"]]],[11,"from","wlroots::data_device","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"fmt","","",141,[[["self"],["formatter"]],["result"]]],[11,"drop","","",141,[[["self"]]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"fmt","","",142,[[["self"],["formatter"]],["result"]]],[11,"actions","","",142,[[["self"]],["u32"]]],[11,"preferred_action","","",142,[[["self"]],["wl_data_device_manager_dnd_action"]]],[11,"in_ask","","",142,[[["self"]],["bool"]]],[11,"fmt","","",143,[[["self"],["formatter"]],["result"]]],[11,"action","","",143,[[["self"]],["i32"]]],[11,"accepted","","",143,[[["self"]],["bool"]]],[11,"current_dnd_action","","",143,[[["self"]],["wl_data_device_manager_dnd_action"]]],[11,"compositor_action","","",143,[[["self"]],["u32"]]],[11,"from_raw","wlroots::extensions::server_decoration","",16,[[["u32"]],["option",["mode"]]]],[11,"to_raw","","",16,[[["self"]],["u32"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","wlroots::render","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"to_owned","wlroots::utils","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"to_owned","wlroots::utils::edges","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","wlroots::utils::region","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","wlroots::xwayland","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","wlroots::xwayland::surface","",144,[[["t"]],["t"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"flags","","",144,[[["self"]],["uint32_t"]]],[11,"input","","",144,[[["self"]],["uint32_t"]]],[11,"initial_state","","",144,[[["self"]],["int32_t"]]],[11,"icon_pixmap","","",144,[[["self"]],["u32"]]],[11,"icon_window","","",144,[[["self"]],["u32"]]],[11,"icon_coords","","Get the coordinates of the icon.",144,N],[11,"icon_mask","","",144,[[["self"]],["u32"]]],[11,"window_group","","",144,[[["self"]],["u32"]]],[11,"flags","","Get the flags associated with the surface size.",145,[[["self"]],["uint32_t"]]],[11,"coords","","Get the coordinates of the surface.",145,N],[11,"dimensions","","Get the dimensions of the surface.",145,N],[11,"min_dimensions","","Get the minimal allowed dimensions of the surface.",145,N],[11,"max_dimensions","","Get the maximal allowed dimensions of the surface.",145,N],[11,"inc_dimensions","","TODO What is this",145,N],[11,"base_dimensions","","TODO What is this",145,N],[11,"min_aspect_num","","",145,[[["self"]],["int32_t"]]],[11,"min_aspect_den","","",145,[[["self"]],["int32_t"]]],[11,"max_aspect_num","","",145,[[["self"]],["int32_t"]]],[11,"max_aspect_den","","",145,[[["self"]],["int32_t"]]],[11,"win_gravity","","",145,[[["self"]],["uint32_t"]]],[11,"on_ready","wlroots::xwayland","Callback that's triggered when the XWayland library is ready.",33,[[["self"],["handle"]]]],[11,"from","wlroots::xwayland::surface","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","wlroots::backend","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]]],"paths":[[3,"KeyboardModifiers"],[4,"TabletToolAxes"],[4,"wl_shm_format"],[4,"wlr_axis_orientation"],[4,"wlr_axis_source"],[4,"wlr_button_state"],[4,"wlr_input_device_type"],[4,"wlr_key_state"],[4,"wlr_keyboard_modifier"],[4,"wlr_tablet_pad_ring_source"],[4,"wlr_tablet_pad_strip_source"],[4,"wlr_tablet_tool_proximity_state"],[3,"Compositor"],[8,"Handler"],[3,"Handle"],[3,"Builder"],[4,"Mode"],[3,"Manager"],[3,"Renderer"],[3,"PixmanRegion"],[3,"Image"],[4,"TextureFormat"],[3,"GenericRenderer"],[3,"Texture"],[4,"HandleErr"],[3,"Edges"],[3,"PixmanRegion32"],[3,"Handle"],[8,"ToMs"],[8,"Handleable"],[3,"Server"],[8,"Handler"],[3,"Surface"],[8,"ManagerHandler"],[4,"Backend"],[3,"Wayland"],[3,"X11"],[3,"Headless"],[3,"Drm"],[3,"Libinput"],[3,"Multi"],[3,"Device"],[3,"Session"],[3,"Image"],[8,"Handler"],[4,"Handle"],[3,"RepeatInfo"],[8,"Handler"],[8,"Handler"],[8,"Handler"],[8,"Handler"],[8,"Handler"],[8,"ManagerHandler"],[3,"BuilderResult"],[8,"Handler"],[8,"ManagerHandler"],[8,"Handler"],[3,"Origin"],[3,"Size"],[3,"Area"],[4,"IntersectionResult"],[8,"Handler"],[8,"Handler"],[4,"InvalidState"],[8,"Handler"],[8,"Handler"],[4,"ShellState"],[8,"ManagerHandler"],[8,"Handler"],[4,"ShellState"],[8,"ManagerHandler"],[8,"Handler"],[3,"Capability"],[3,"Builder"],[3,"Destroyed"],[3,"Key"],[3,"Axis"],[3,"Button"],[3,"Motion"],[3,"AbsoluteMotion"],[3,"Move"],[3,"Resize"],[3,"SetFullscreen"],[3,"ShowWindowMenu"],[3,"Move"],[3,"Resize"],[3,"SetFullscreen"],[3,"ShowWindowMenu"],[3,"Axis"],[3,"Proximity"],[3,"Tip"],[3,"Button"],[3,"Down"],[3,"Up"],[3,"Motion"],[3,"Cancel"],[3,"SetCursor"],[3,"Button"],[3,"Ring"],[3,"Strip"],[3,"Configure"],[3,"Move"],[3,"Resize"],[3,"Handle"],[3,"Theme"],[3,"XCursor"],[3,"ManagerTheme"],[3,"Manager"],[3,"Device"],[3,"Keyboard"],[3,"Led"],[3,"Modifier"],[3,"Pointer"],[3,"Touch"],[3,"TabletTool"],[3,"Axis"],[3,"TabletPad"],[3,"Output"],[3,"Handle"],[3,"Output"],[3,"Mode"],[3,"Cursor"],[3,"Damage"],[3,"DragIcon"],[3,"Handle"],[3,"Client"],[3,"Handle"],[3,"Pointer"],[3,"Keyboard"],[3,"Touch"],[3,"TouchPoint"],[3,"TouchId"],[3,"Surface"],[3,"State"],[3,"Subsurface"],[3,"TopLevel"],[3,"Popup"],[3,"Surface"],[3,"TopLevel"],[3,"Popup"],[3,"Surface"],[3,"Manager"],[3,"Offer"],[3,"Source"],[3,"Hints"],[3,"SizeHints"]]};
searchIndex["wlroots_dehandle"]={"doc":"","items":[[5,"wlroots_dehandle","wlroots_dehandle","Attribute to automatically call the `run` method on handles with the remaining block of code.",N,[[["tokenstream"],["tokenstream"]],["tokenstream"]]]],"paths":[]};
searchIndex["wlroots_sys"]={"doc":"","items":[[7,"RUST_MANAGED","wlroots_sys","Magic pointer for wayland objects managed by wayland-client or wayland-server",N,N],[0,"common","","Various types and functions that are used by both the client and the server libraries.",N,N],[3,"wl_message","wlroots_sys::common","",N,N],[12,"name","","",0,N],[12,"signature","","",0,N],[12,"types","","",0,N],[3,"wl_interface","","",N,N],[12,"name","","",1,N],[12,"version","","",1,N],[12,"request_count","","",1,N],[12,"requests","","",1,N],[12,"event_count","","",1,N],[12,"events","","",1,N],[3,"wl_list","","",N,N],[12,"prev","","",2,N],[12,"next","","",2,N],[3,"wl_array","","",N,N],[12,"size","","",3,N],[12,"alloc","","",3,N],[12,"data","","",3,N],[6,"wl_fixed_t","","",N,N],[5,"wl_fixed_to_double","","",N,[[["i32"]],["f64"]]],[5,"wl_fixed_from_double","","",N,[[["f64"]],["i32"]]],[5,"wl_fixed_to_int","","",N,[[["i32"]],["i32"]]],[5,"wl_fixed_from_int","","",N,[[["i32"]],["i32"]]],[19,"wl_argument","","",N,N],[12,"i","","",4,N],[12,"u","","",4,N],[12,"f","","",4,N],[12,"s","","",4,N],[12,"o","","",4,N],[12,"n","","",4,N],[12,"a","","",4,N],[12,"h","","",4,N],[6,"wl_dispatcher_func_t","","",N,N],[6,"wl_log_func_t","","",N,N],[0,"server","wlroots_sys","Bindings to the client library `libwayland-server.so`",N,N],[4,"wl_client","wlroots_sys::server","",N,N],[4,"wl_display","","",N,N],[4,"wl_event_loop","","",N,N],[4,"wl_event_source","","",N,N],[4,"wl_global","","",N,N],[4,"wl_resource","","",N,N],[4,"wl_shm_buffer","","",N,N],[6,"wl_event_loop_fd_func_t","","",N,N],[6,"wl_event_loop_timer_func_t","","",N,N],[6,"wl_event_loop_signal_func_t","","",N,N],[6,"wl_event_loop_idle_func_t","","",N,N],[6,"wl_global_bind_func_t","","",N,N],[6,"wl_notify_func_t","","",N,N],[6,"wl_resource_destroy_func_t","","",N,N],[6,"wl_display_global_filter_func_t","","",N,N],[3,"wl_listener","","",N,N],[12,"link","","",5,N],[12,"notify","","",5,N],[3,"wl_signal","","",N,N],[12,"listener_list","","",6,N],[3,"WaylandServer","","",N,N],[12,"wl_client_flush","","",7,N],[12,"wl_client_destroy","","",7,N],[12,"wl_client_get_display","","",7,N],[12,"wl_client_get_credentials","","",7,N],[12,"wl_client_get_object","","",7,N],[12,"wl_client_add_destroy_listener","","",7,N],[12,"wl_client_get_destroy_listener","","",7,N],[12,"wl_client_post_no_memory","","",7,N],[12,"wl_resource_create","","",7,N],[12,"wl_client_create","","",7,N],[12,"wl_display_create","","",7,N],[12,"wl_display_destroy","","",7,N],[12,"wl_display_destroy_clients","","",7,N],[12,"wl_display_get_serial","","",7,N],[12,"wl_display_next_serial","","",7,N],[12,"wl_display_add_socket","","",7,N],[12,"wl_display_add_socket_auto","","",7,N],[12,"wl_display_add_socket_fd","","",7,N],[12,"wl_display_add_shm_format","","",7,N],[12,"wl_display_get_event_loop","","",7,N],[12,"wl_display_terminate","","",7,N],[12,"wl_display_run","","",7,N],[12,"wl_display_flush_clients","","",7,N],[12,"wl_display_add_destroy_listener","","",7,N],[12,"wl_display_get_destroy_listener","","",7,N],[12,"wl_global_create","","",7,N],[12,"wl_display_init_shm","","",7,N],[12,"wl_display_add_client_created_listener","","",7,N],[12,"wl_display_set_global_filter","","",7,N],[12,"wl_event_loop_create","","",7,N],[12,"wl_event_loop_destroy","","",7,N],[12,"wl_event_loop_add_fd","","",7,N],[12,"wl_event_loop_add_timer","","",7,N],[12,"wl_event_loop_add_signal","","",7,N],[12,"wl_event_loop_dispatch","","",7,N],[12,"wl_event_loop_dispatch_idle","","",7,N],[12,"wl_event_loop_add_idle","","",7,N],[12,"wl_event_loop_get_fd","","",7,N],[12,"wl_event_loop_add_destroy_listener","","",7,N],[12,"wl_event_loop_get_destroy_listener","","",7,N],[12,"wl_event_source_fd_update","","",7,N],[12,"wl_event_source_timer_update","","",7,N],[12,"wl_event_source_remove","","",7,N],[12,"wl_event_source_check","","",7,N],[12,"wl_global_destroy","","",7,N],[12,"wl_global_get_user_data","","",7,N],[12,"wl_resource_post_event_array","","",7,N],[12,"wl_resource_queue_event_array","","",7,N],[12,"wl_resource_post_no_memory","","",7,N],[12,"wl_resource_set_implementation","","",7,N],[12,"wl_resource_set_dispatcher","","",7,N],[12,"wl_resource_destroy","","",7,N],[12,"wl_resource_get_client","","",7,N],[12,"wl_resource_get_id","","",7,N],[12,"wl_resource_get_link","","",7,N],[12,"wl_resource_from_link","","",7,N],[12,"wl_resource_find_for_client","","",7,N],[12,"wl_resource_set_user_data","","",7,N],[12,"wl_resource_get_user_data","","",7,N],[12,"wl_resource_get_version","","",7,N],[12,"wl_resource_set_destructor","","",7,N],[12,"wl_resource_instance_of","","",7,N],[12,"wl_resource_add_destroy_listener","","",7,N],[12,"wl_resource_get_destroy_listener","","",7,N],[12,"wl_shm_buffer_begin_access","","",7,N],[12,"wl_shm_buffer_end_access","","",7,N],[12,"wl_shm_buffer_get","","",7,N],[12,"wl_shm_buffer_get_data","","",7,N],[12,"wl_shm_buffer_get_stride","","",7,N],[12,"wl_shm_buffer_get_format","","",7,N],[12,"wl_shm_buffer_get_width","","",7,N],[12,"wl_shm_buffer_get_height","","",7,N],[12,"wl_log_set_handler_server","","",7,N],[12,"wl_list_init","","",7,N],[12,"wl_list_insert","","",7,N],[12,"wl_list_remove","","",7,N],[12,"wl_list_length","","",7,N],[12,"wl_list_empty","","",7,N],[12,"wl_list_insert_list","","",7,N],[12,"wl_array_init","","",7,N],[12,"wl_array_release","","",7,N],[12,"wl_array_add","","",7,N],[12,"wl_array_copy","","",7,N],[12,"wl_resource_post_event","","",7,N],[12,"wl_resource_queue_event","","",7,N],[12,"wl_resource_post_error","","",7,N],[3,"WAYLAND_SERVER_OPTION","","",N,N],[3,"WAYLAND_SERVER_HANDLE","","",N,N],[5,"is_lib_available","","",N,[[],["bool"]]],[0,"signal","","",N,N],[5,"wl_signal_init","wlroots_sys::server::signal","",N,N],[5,"wl_signal_add","","",N,N],[5,"wl_signal_get","","",N,N],[5,"wl_signal_emit","","",N,N],[5,"rust_listener_create","","",N,N],[5,"rust_listener_get_user_data","","",N,N],[5,"rust_listener_set_user_data","","",N,N],[5,"rust_listener_destroy","","",N,N],[6,"uid_t","wlroots_sys","",N,N],[14,"ffi_dispatch","","",N,N],[6,"pid_t","","",N,N],[6,"gid_t","","",N,N],[6,"pid_t","","",N,N],[6,"gid_t","","",N,N],[6,"uid_t","","",N,N],[0,"server","","Bindings to the client library `libwayland-server.so`",N,N],[4,"wl_client","wlroots_sys::server","",N,N],[4,"wl_display","","",N,N],[4,"wl_event_loop","","",N,N],[4,"wl_event_source","","",N,N],[4,"wl_global","","",N,N],[4,"wl_resource","","",N,N],[4,"wl_shm_buffer","","",N,N],[6,"wl_event_loop_fd_func_t","","",N,N],[6,"wl_event_loop_timer_func_t","","",N,N],[6,"wl_event_loop_signal_func_t","","",N,N],[6,"wl_event_loop_idle_func_t","","",N,N],[6,"wl_global_bind_func_t","","",N,N],[6,"wl_notify_func_t","","",N,N],[6,"wl_resource_destroy_func_t","","",N,N],[6,"wl_display_global_filter_func_t","","",N,N],[3,"wl_listener","","",N,N],[12,"link","","",5,N],[12,"notify","","",5,N],[3,"wl_signal","","",N,N],[12,"listener_list","","",6,N],[3,"WaylandServer","","",N,N],[12,"wl_client_flush","","",7,N],[12,"wl_client_destroy","","",7,N],[12,"wl_client_get_display","","",7,N],[12,"wl_client_get_credentials","","",7,N],[12,"wl_client_get_object","","",7,N],[12,"wl_client_add_destroy_listener","","",7,N],[12,"wl_client_get_destroy_listener","","",7,N],[12,"wl_client_post_no_memory","","",7,N],[12,"wl_resource_create","","",7,N],[12,"wl_client_create","","",7,N],[12,"wl_display_create","","",7,N],[12,"wl_display_destroy","","",7,N],[12,"wl_display_destroy_clients","","",7,N],[12,"wl_display_get_serial","","",7,N],[12,"wl_display_next_serial","","",7,N],[12,"wl_display_add_socket","","",7,N],[12,"wl_display_add_socket_auto","","",7,N],[12,"wl_display_add_socket_fd","","",7,N],[12,"wl_display_add_shm_format","","",7,N],[12,"wl_display_get_event_loop","","",7,N],[12,"wl_display_terminate","","",7,N],[12,"wl_display_run","","",7,N],[12,"wl_display_flush_clients","","",7,N],[12,"wl_display_add_destroy_listener","","",7,N],[12,"wl_display_get_destroy_listener","","",7,N],[12,"wl_global_create","","",7,N],[12,"wl_display_init_shm","","",7,N],[12,"wl_display_add_client_created_listener","","",7,N],[12,"wl_display_set_global_filter","","",7,N],[12,"wl_event_loop_create","","",7,N],[12,"wl_event_loop_destroy","","",7,N],[12,"wl_event_loop_add_fd","","",7,N],[12,"wl_event_loop_add_timer","","",7,N],[12,"wl_event_loop_add_signal","","",7,N],[12,"wl_event_loop_dispatch","","",7,N],[12,"wl_event_loop_dispatch_idle","","",7,N],[12,"wl_event_loop_add_idle","","",7,N],[12,"wl_event_loop_get_fd","","",7,N],[12,"wl_event_loop_add_destroy_listener","","",7,N],[12,"wl_event_loop_get_destroy_listener","","",7,N],[12,"wl_event_source_fd_update","","",7,N],[12,"wl_event_source_timer_update","","",7,N],[12,"wl_event_source_remove","","",7,N],[12,"wl_event_source_check","","",7,N],[12,"wl_global_destroy","","",7,N],[12,"wl_global_get_user_data","","",7,N],[12,"wl_resource_post_event_array","","",7,N],[12,"wl_resource_queue_event_array","","",7,N],[12,"wl_resource_post_no_memory","","",7,N],[12,"wl_resource_set_implementation","","",7,N],[12,"wl_resource_set_dispatcher","","",7,N],[12,"wl_resource_destroy","","",7,N],[12,"wl_resource_get_client","","",7,N],[12,"wl_resource_get_id","","",7,N],[12,"wl_resource_get_link","","",7,N],[12,"wl_resource_from_link","","",7,N],[12,"wl_resource_find_for_client","","",7,N],[12,"wl_resource_set_user_data","","",7,N],[12,"wl_resource_get_user_data","","",7,N],[12,"wl_resource_get_version","","",7,N],[12,"wl_resource_set_destructor","","",7,N],[12,"wl_resource_instance_of","","",7,N],[12,"wl_resource_add_destroy_listener","","",7,N],[12,"wl_resource_get_destroy_listener","","",7,N],[12,"wl_shm_buffer_begin_access","","",7,N],[12,"wl_shm_buffer_end_access","","",7,N],[12,"wl_shm_buffer_get","","",7,N],[12,"wl_shm_buffer_get_data","","",7,N],[12,"wl_shm_buffer_get_stride","","",7,N],[12,"wl_shm_buffer_get_format","","",7,N],[12,"wl_shm_buffer_get_width","","",7,N],[12,"wl_shm_buffer_get_height","","",7,N],[12,"wl_log_set_handler_server","","",7,N],[12,"wl_list_init","","",7,N],[12,"wl_list_insert","","",7,N],[12,"wl_list_remove","","",7,N],[12,"wl_list_length","","",7,N],[12,"wl_list_empty","","",7,N],[12,"wl_list_insert_list","","",7,N],[12,"wl_array_init","","",7,N],[12,"wl_array_release","","",7,N],[12,"wl_array_add","","",7,N],[12,"wl_array_copy","","",7,N],[12,"wl_resource_post_event","","",7,N],[12,"wl_resource_queue_event","","",7,N],[12,"wl_resource_post_error","","",7,N],[3,"WAYLAND_SERVER_OPTION","","",N,N],[3,"WAYLAND_SERVER_HANDLE","","",N,N],[5,"is_lib_available","","",N,[[],["bool"]]],[0,"signal","","",N,N],[5,"wl_signal_init","wlroots_sys::server::signal","",N,N],[5,"wl_signal_add","","",N,N],[5,"wl_signal_get","","",N,N],[5,"wl_signal_emit","","",N,N],[5,"rust_listener_create","","",N,N],[5,"rust_listener_get_user_data","","",N,N],[5,"rust_listener_set_user_data","","",N,N],[5,"rust_listener_destroy","","",N,N],[3,"WAYLAND_SERVER_HANDLE","wlroots_sys","",N,N],[3,"pixman_color","","",N,N],[12,"red","","",8,N],[12,"green","","",8,N],[12,"blue","","",8,N],[12,"alpha","","",8,N],[3,"pixman_point_fixed","","",N,N],[12,"x","","",9,N],[12,"y","","",9,N],[3,"pixman_line_fixed","","",N,N],[12,"p1","","",10,N],[12,"p2","","",10,N],[3,"pixman_vector","","",N,N],[12,"vector","","",11,N],[3,"pixman_transform","","",N,N],[12,"matrix","","",12,N],[3,"pixman_box16","","",N,N],[12,"x1","","",13,N],[12,"y1","","",13,N],[12,"x2","","",13,N],[12,"y2","","",13,N],[3,"pixman_image","","",N,N],[3,"pixman_f_transform","","",N,N],[12,"m","","",14,N],[3,"pixman_f_vector","","",N,N],[12,"v","","",15,N],[3,"pixman_region16_data","","",N,N],[12,"size","","",16,N],[12,"numRects","","",16,N],[3,"pixman_rectangle16","","",N,N],[12,"x","","",17,N],[12,"y","","",17,N],[12,"width","","",17,N],[12,"height","","",17,N],[3,"pixman_region16","","",N,N],[12,"extents","","",18,N],[12,"data","","",18,N],[3,"pixman_region32_data","","",N,N],[12,"size","","",19,N],[12,"numRects","","",19,N],[3,"pixman_box32","","",N,N],[12,"x1","","",20,N],[12,"y1","","",20,N],[12,"x2","","",20,N],[12,"y2","","",20,N],[3,"pixman_region32","","",N,N],[12,"extents","","",21,N],[12,"data","","",21,N],[3,"pixman_indexed","","",N,N],[12,"color","","",22,N],[12,"rgba","","",22,N],[12,"ent","","",22,N],[3,"pixman_gradient_stop","","",N,N],[12,"x","","",23,N],[12,"color","","",23,N],[3,"pixman_glyph_cache_t","","",N,N],[3,"pixman_glyph_t","","",N,N],[12,"x","","",24,N],[12,"y","","",24,N],[12,"glyph","","",24,N],[3,"pixman_edge","","",N,N],[12,"x","","",25,N],[12,"e","","",25,N],[12,"stepx","","",25,N],[12,"signdx","","",25,N],[12,"dy","","",25,N],[12,"dx","","",25,N],[12,"stepx_small","","",25,N],[12,"stepx_big","","",25,N],[12,"dx_small","","",25,N],[12,"dx_big","","",25,N],[3,"pixman_trapezoid","","",N,N],[12,"top","","",26,N],[12,"bottom","","",26,N],[12,"left","","",26,N],[12,"right","","",26,N],[3,"pixman_trap","","",N,N],[12,"top","","",27,N],[12,"bot","","",27,N],[3,"pixman_span_fix","","",N,N],[12,"l","","",28,N],[12,"r","","",28,N],[12,"y","","",28,N],[3,"pixman_triangle","","",N,N],[12,"p1","","",29,N],[12,"p2","","",29,N],[12,"p3","","",29,N],[3,"timespec","","",N,N],[12,"tv_sec","","",30,N],[12,"tv_nsec","","",30,N],[3,"wl_message","","",N,N],[12,"name","","",31,N],[12,"signature","","",31,N],[12,"types","","",31,N],[3,"wl_interface","","",N,N],[12,"name","","",32,N],[12,"version","","",32,N],[12,"method_count","","",32,N],[12,"methods","","",32,N],[12,"event_count","","",32,N],[12,"events","","",32,N],[3,"wl_list","","",N,N],[12,"prev","","",33,N],[12,"next","","",33,N],[3,"wl_array","","",N,N],[12,"size","","",34,N],[12,"alloc","","",34,N],[12,"data","","",34,N],[3,"wl_event_source","","",N,N],[3,"wl_listener","","",N,N],[12,"link","","",35,N],[12,"notify","","",35,N],[3,"wl_display","","",N,N],[3,"wl_client","","",N,N],[3,"wl_global","","",N,N],[3,"wl_resource","","",N,N],[12,"object","","",36,N],[12,"destroy","","",36,N],[12,"link","","",36,N],[12,"destroy_signal","","",36,N],[12,"client","","",36,N],[12,"data","","",36,N],[3,"wl_signal","","",N,N],[12,"listener_list","","",37,N],[3,"wl_object","","",N,N],[12,"interface","","",38,N],[12,"implementation","","",38,N],[12,"id","","",38,N],[3,"wlr_xcursor_image","","",N,N],[12,"width","","",39,N],[12,"height","","",39,N],[12,"hotspot_x","","",39,N],[12,"hotspot_y","","",39,N],[12,"delay","","",39,N],[12,"buffer","","",39,N],[3,"wlr_xcursor","","",N,N],[12,"image_count","","",40,N],[12,"images","","",40,N],[12,"name","","",40,N],[12,"total_delay","","",40,N],[3,"wlr_xcursor_theme","","Container for an Xcursor theme.",N,N],[12,"cursor_count","","",41,N],[12,"cursors","","",41,N],[12,"name","","",41,N],[12,"size","","",41,N],[3,"udev","","",N,N],[3,"udev_monitor","","",N,N],[3,"session_impl","","",N,N],[12,"create","","",42,N],[12,"destroy","","",42,N],[12,"open","","",42,N],[12,"close","","",42,N],[12,"change_vt","","",42,N],[3,"wlr_device","","",N,N],[12,"fd","","",43,N],[12,"dev","","",43,N],[12,"signal","","",43,N],[12,"link","","",43,N],[3,"wlr_session","","",N,N],[12,"impl_","","",44,N],[12,"session_signal","","",44,N],[12,"active","","",44,N],[12,"vtnr","","",44,N],[12,"seat","","",44,N],[12,"udev","","",44,N],[12,"mon","","",44,N],[12,"udev_event","","",44,N],[12,"devices","","",44,N],[12,"display_destroy","","",44,N],[12,"events","","",44,N],[3,"wlr_session__bindgen_ty_1","","",N,N],[12,"destroy","","",45,N],[3,"wlr_dmabuf_attributes","","",N,N],[12,"width","","",46,N],[12,"height","","",46,N],[12,"format","","",46,N],[12,"flags","","",46,N],[12,"modifier","","",46,N],[12,"n_planes","","",46,N],[12,"offset","","",46,N],[12,"stride","","",46,N],[12,"fd","","",46,N],[3,"wlr_egl","","",N,N],[12,"platform","","",47,N],[12,"display","","",47,N],[12,"config","","",47,N],[12,"context","","",47,N],[12,"exts_str","","",47,N],[12,"exts","","",47,N],[12,"wl_display","","",47,N],[3,"wlr_egl__bindgen_ty_1","","",N,N],[12,"bind_wayland_display_wl","","",48,N],[12,"buffer_age_ext","","",48,N],[12,"image_base_khr","","",48,N],[12,"image_dma_buf_export_mesa","","",48,N],[12,"image_dmabuf_import_ext","","",48,N],[12,"image_dmabuf_import_modifiers_ext","","",48,N],[12,"swap_buffers_with_damage_ext","","",48,N],[12,"swap_buffers_with_damage_khr","","",48,N],[3,"wlr_backend_impl","","",N,N],[12,"start","","",49,N],[12,"destroy","","",49,N],[12,"get_renderer","","",49,N],[12,"get_session","","",49,N],[12,"get_presentation_clock","","",49,N],[3,"wlr_backend","","",N,N],[12,"impl_","","",50,N],[12,"events","","",50,N],[3,"wlr_backend__bindgen_ty_1","","",N,N],[12,"destroy","","Raised when destroyed, passed the wlr_backend reference",51,N],[12,"new_input","","Raised when new inputs are added, passed the wlr_input_device",51,N],[12,"new_output","","Raised when new outputs are added, passed the wlr_output",51,N],[3,"wlr_renderer","","",N,N],[12,"impl_","","",52,N],[12,"events","","",52,N],[3,"wlr_renderer__bindgen_ty_1","","",N,N],[12,"destroy","","",53,N],[3,"wlr_output_mode","","",N,N],[12,"flags","","",54,N],[12,"width","","",54,N],[12,"height","","",54,N],[12,"refresh","","",54,N],[12,"link","","",54,N],[3,"wlr_output_cursor","","",N,N],[12,"output","","",55,N],[12,"x","","",55,N],[12,"y","","",55,N],[12,"enabled","","",55,N],[12,"visible","","",55,N],[12,"width","","",55,N],[12,"height","","",55,N],[12,"hotspot_x","","",55,N],[12,"hotspot_y","","",55,N],[12,"link","","",55,N],[12,"texture","","",55,N],[12,"surface","","",55,N],[12,"surface_commit","","",55,N],[12,"surface_destroy","","",55,N],[12,"events","","",55,N],[3,"wlr_output_cursor__bindgen_ty_1","","",N,N],[12,"destroy","","",56,N],[3,"wlr_output_impl","","",N,N],[3,"wlr_output","","A compositor output region. This typically corresponds to a monitor that displays part of the compositor space.",N,N],[12,"impl_","","",57,N],[12,"backend","","",57,N],[12,"display","","",57,N],[12,"global","","",57,N],[12,"resources","","",57,N],[12,"name","","",57,N],[12,"make","","",57,N],[12,"model","","",57,N],[12,"serial","","",57,N],[12,"phys_width","","",57,N],[12,"phys_height","","",57,N],[12,"modes","","",57,N],[12,"current_mode","","",57,N],[12,"width","","",57,N],[12,"height","","",57,N],[12,"refresh","","",57,N],[12,"enabled","","",57,N],[12,"scale","","",57,N],[12,"subpixel","","",57,N],[12,"transform","","",57,N],[12,"needs_swap","","",57,N],[12,"damage","","",57,N],[12,"frame_pending","","",57,N],[12,"transform_matrix","","",57,N],[12,"events","","",57,N],[12,"idle_frame","","",57,N],[12,"cursors","","",57,N],[12,"hardware_cursor","","",57,N],[12,"software_cursor_locks","","",57,N],[12,"lx","","",57,N],[12,"ly","","",57,N],[12,"display_destroy","","",57,N],[12,"data","","",57,N],[3,"wlr_output__bindgen_ty_1","","",N,N],[12,"frame","","",58,N],[12,"needs_swap","","",58,N],[12,"swap_buffers","","",58,N],[12,"present","","",58,N],[12,"enable","","",58,N],[12,"mode","","",58,N],[12,"scale","","",58,N],[12,"transform","","",58,N],[12,"destroy","","",58,N],[3,"wlr_output_event_swap_buffers","","",N,N],[12,"output","","",59,N],[12,"when","","",59,N],[12,"damage","","",59,N],[3,"wlr_output_event_present","","",N,N],[12,"output","","",60,N],[12,"when","","",60,N],[12,"seq","","",60,N],[12,"refresh","","",60,N],[12,"flags","","",60,N],[3,"wlr_surface","","",N,N],[12,"resource","","",61,N],[12,"renderer","","",61,N],[12,"buffer","","The surface's buffer, if any. A surface has an attached buffer when it commits with a non-null buffer in its pending state. A surface will not have a buffer if it has never committed one, has committed a null buffer, or something went wrong with uploading the buffer.",61,N],[12,"sx","","The buffer position, in surface-local units.",61,N],[12,"sy","","The buffer position, in surface-local units.",61,N],[12,"buffer_damage","","The last commit's buffer damage, in buffer-local coordinates. This contains both the damage accumulated by the client via `wlr_surface_state.surface_damage` and `wlr_surface_state.buffer_damage`. If the buffer has been resized, the whole buffer is damaged.",61,N],[12,"opaque_region","","The current opaque region, in surface-local coordinates. It is clipped to the surface bounds. If the surface's buffer is using a fully opaque format, this is set to the whole surface.",61,N],[12,"input_region","","The current input region, in surface-local coordinates. It is clipped to the surface bounds.",61,N],[12,"current","","`current` contains the current, committed surface state. `pending` accumulates state changes from the client between commits and shouldn't be accessed by the compositor directly. `previous` contains the state of the previous commit.",61,N],[12,"pending","","`current` contains the current, committed surface state. `pending` accumulates state changes from the client between commits and shouldn't be accessed by the compositor directly. `previous` contains the state of the previous commit.",61,N],[12,"previous","","`current` contains the current, committed surface state. `pending` accumulates state changes from the client between commits and shouldn't be accessed by the compositor directly. `previous` contains the state of the previous commit.",61,N],[12,"role","","",61,N],[12,"role_data","","",61,N],[12,"events","","",61,N],[12,"subsurfaces","","",61,N],[12,"subsurface_pending_list","","",61,N],[12,"renderer_destroy","","",61,N],[12,"data","","",61,N],[3,"wlr_surface__bindgen_ty_1","","",N,N],[12,"commit","","",62,N],[12,"new_subsurface","","",62,N],[12,"destroy","","",62,N],[3,"_drmModeModeInfo","","",N,N],[3,"_IO_FILE","","",N,N],[12,"_flags","","",63,N],[12,"_IO_read_ptr","","",63,N],[12,"_IO_read_end","","",63,N],[12,"_IO_read_base","","",63,N],[12,"_IO_write_base","","",63,N],[12,"_IO_write_ptr","","",63,N],[12,"_IO_write_end","","",63,N],[12,"_IO_buf_base","","",63,N],[12,"_IO_buf_end","","",63,N],[12,"_IO_save_base","","",63,N],[12,"_IO_backup_base","","",63,N],[12,"_IO_save_end","","",63,N],[12,"_markers","","",63,N],[12,"_chain","","",63,N],[12,"_fileno","","",63,N],[12,"_flags2","","",63,N],[12,"_old_offset","","",63,N],[12,"_cur_column","","",63,N],[12,"_vtable_offset","","",63,N],[12,"_shortbuf","","",63,N],[12,"_lock","","",63,N],[12,"_offset","","",63,N],[12,"_codecvt","","",63,N],[12,"_wide_data","","",63,N],[12,"_freeres_list","","",63,N],[12,"_freeres_buf","","",63,N],[12,"__pad5","","",63,N],[12,"_mode","","",63,N],[12,"_unused2","","",63,N],[3,"_IO_marker","","",N,N],[3,"_IO_codecvt","","",N,N],[3,"_IO_wide_data","","",N,N],[3,"xkb_context","","",N,N],[3,"xkb_keymap","","",N,N],[3,"xkb_state","","",N,N],[3,"xkb_rule_names","","",N,N],[12,"rules","","",64,N],[12,"model","","",64,N],[12,"layout","","",64,N],[12,"variant","","",64,N],[12,"options","","",64,N],[3,"wlr_keyboard_impl","","",N,N],[3,"wlr_keyboard_modifiers","","",N,N],[12,"depressed","","",65,N],[12,"latched","","",65,N],[12,"locked","","",65,N],[12,"group","","",65,N],[3,"wlr_keyboard","","",N,N],[12,"impl_","","",66,N],[12,"keymap_string","","",66,N],[12,"keymap_size","","",66,N],[12,"keymap","","",66,N],[12,"xkb_state","","",66,N],[12,"led_indexes","","",66,N],[12,"mod_indexes","","",66,N],[12,"keycodes","","",66,N],[12,"num_keycodes","","",66,N],[12,"modifiers","","",66,N],[12,"repeat_info","","",66,N],[12,"events","","",66,N],[12,"data","","",66,N],[3,"wlr_keyboard__bindgen_ty_1","","",N,N],[12,"rate","","",67,N],[12,"delay","","",67,N],[3,"wlr_keyboard__bindgen_ty_2","","",N,N],[12,"key","","The `key` event signals with a `wlr_event_keyboard_key` event that a key has been pressed or released on the keyboard. This event is emitted before the xkb state of the keyboard has been updated (including modifiers).",68,N],[12,"modifiers","","The `modifiers` event signals that the modifier state of the `wlr_keyboard` has been updated. At this time, you can read the modifier state of the `wlr_keyboard` and handle the updated state by sending it to clients.",68,N],[12,"keymap","","",68,N],[12,"repeat_info","","",68,N],[3,"wlr_event_keyboard_key","","",N,N],[12,"time_msec","","",69,N],[12,"keycode","","",69,N],[12,"update_state","","",69,N],[12,"state","","",69,N],[3,"wlr_pointer_impl","","",N,N],[3,"wlr_pointer","","",N,N],[12,"impl_","","",70,N],[12,"events","","",70,N],[12,"data","","",70,N],[3,"wlr_pointer__bindgen_ty_1","","",N,N],[12,"motion","","",71,N],[12,"motion_absolute","","",71,N],[12,"button","","",71,N],[12,"axis","","",71,N],[3,"wlr_event_pointer_motion","","",N,N],[12,"device","","",72,N],[12,"time_msec","","",72,N],[12,"delta_x","","",72,N],[12,"delta_y","","",72,N],[3,"wlr_event_pointer_motion_absolute","","",N,N],[12,"device","","",73,N],[12,"time_msec","","",73,N],[12,"x","","",73,N],[12,"y","","",73,N],[3,"wlr_event_pointer_button","","",N,N],[12,"device","","",74,N],[12,"time_msec","","",74,N],[12,"button","","",74,N],[12,"state","","",74,N],[3,"wlr_event_pointer_axis","","",N,N],[12,"device","","",75,N],[12,"time_msec","","",75,N],[12,"source","","",75,N],[12,"orientation","","",75,N],[12,"delta","","",75,N],[12,"delta_discrete","","",75,N],[3,"wlr_touch_impl","","",N,N],[3,"wlr_touch","","",N,N],[12,"impl_","","",76,N],[12,"events","","",76,N],[12,"data","","",76,N],[3,"wlr_touch__bindgen_ty_1","","",N,N],[12,"down","","",77,N],[12,"up","","",77,N],[12,"motion","","",77,N],[12,"cancel","","",77,N],[3,"wlr_event_touch_down","","",N,N],[12,"device","","",78,N],[12,"time_msec","","",78,N],[12,"touch_id","","",78,N],[12,"x","","",78,N],[12,"y","","",78,N],[3,"wlr_event_touch_up","","",N,N],[12,"device","","",79,N],[12,"time_msec","","",79,N],[12,"touch_id","","",79,N],[3,"wlr_event_touch_motion","","",N,N],[12,"device","","",80,N],[12,"time_msec","","",80,N],[12,"touch_id","","",80,N],[12,"x","","",80,N],[12,"y","","",80,N],[3,"wlr_event_touch_cancel","","",N,N],[12,"device","","",81,N],[12,"time_msec","","",81,N],[12,"touch_id","","",81,N],[3,"wlr_list","","",N,N],[12,"capacity","","",82,N],[12,"length","","",82,N],[12,"items","","",82,N],[3,"wlr_tablet_tool","","",N,N],[12,"type_","","",83,N],[12,"hardware_serial","","",83,N],[12,"hardware_wacom","","",83,N],[12,"tilt","","",83,N],[12,"pressure","","",83,N],[12,"distance","","",83,N],[12,"rotation","","",83,N],[12,"slider","","",83,N],[12,"wheel","","",83,N],[12,"events","","",83,N],[12,"data","","",83,N],[3,"wlr_tablet_tool__bindgen_ty_1","","",N,N],[12,"destroy","","",84,N],[3,"wlr_tablet_impl","","",N,N],[3,"wlr_tablet","","",N,N],[12,"impl_","","",85,N],[12,"events","","",85,N],[12,"name","","",85,N],[12,"paths","","",85,N],[12,"data","","",85,N],[3,"wlr_tablet__bindgen_ty_1","","",N,N],[12,"axis","","",86,N],[12,"proximity","","",86,N],[12,"tip","","",86,N],[12,"button","","",86,N],[3,"wlr_event_tablet_tool_axis","","",N,N],[12,"device","","",87,N],[12,"tool","","",87,N],[12,"time_msec","","",87,N],[12,"updated_axes","","",87,N],[12,"x","","",87,N],[12,"y","","",87,N],[12,"dx","","",87,N],[12,"dy","","",87,N],[12,"pressure","","",87,N],[12,"distance","","",87,N],[12,"tilt_x","","",87,N],[12,"tilt_y","","",87,N],[12,"rotation","","",87,N],[12,"slider","","",87,N],[12,"wheel_delta","","",87,N],[3,"wlr_event_tablet_tool_proximity","","",N,N],[12,"device","","",88,N],[12,"tool","","",88,N],[12,"time_msec","","",88,N],[12,"x","","",88,N],[12,"y","","",88,N],[12,"state","","",88,N],[3,"wlr_event_tablet_tool_tip","","",N,N],[12,"device","","",89,N],[12,"tool","","",89,N],[12,"time_msec","","",89,N],[12,"x","","",89,N],[12,"y","","",89,N],[12,"state","","",89,N],[3,"wlr_event_tablet_tool_button","","",N,N],[12,"device","","",90,N],[12,"tool","","",90,N],[12,"time_msec","","",90,N],[12,"button","","",90,N],[12,"state","","",90,N],[3,"wlr_tablet_pad_impl","","",N,N],[3,"wlr_tablet_pad","","",N,N],[12,"impl_","","",91,N],[12,"events","","",91,N],[12,"button_count","","",91,N],[12,"ring_count","","",91,N],[12,"strip_count","","",91,N],[12,"groups","","",91,N],[12,"paths","","",91,N],[12,"data","","",91,N],[3,"wlr_tablet_pad__bindgen_ty_1","","",N,N],[12,"button","","",92,N],[12,"ring","","",92,N],[12,"strip","","",92,N],[12,"attach_tablet","","",92,N],[3,"wlr_tablet_pad_group","","",N,N],[12,"link","","",93,N],[12,"button_count","","",93,N],[12,"buttons","","",93,N],[12,"strip_count","","",93,N],[12,"strips","","",93,N],[12,"ring_count","","",93,N],[12,"rings","","",93,N],[12,"mode_count","","",93,N],[3,"wlr_event_tablet_pad_button","","",N,N],[12,"time_msec","","",94,N],[12,"button","","",94,N],[12,"state","","",94,N],[12,"mode","","",94,N],[12,"group","","",94,N],[3,"wlr_event_tablet_pad_ring","","",N,N],[12,"time_msec","","",95,N],[12,"source","","",95,N],[12,"ring","","",95,N],[12,"position","","",95,N],[12,"mode","","",95,N],[3,"wlr_event_tablet_pad_strip","","",N,N],[12,"time_msec","","",96,N],[12,"source","","",96,N],[12,"strip","","",96,N],[12,"position","","",96,N],[12,"mode","","",96,N],[3,"wlr_input_device_impl","","",N,N],[3,"wlr_input_device","","",N,N],[12,"impl_","","",97,N],[12,"type_","","",97,N],[12,"vendor","","",97,N],[12,"product","","",97,N],[12,"name","","",97,N],[12,"width_mm","","",97,N],[12,"height_mm","","",97,N],[12,"output_name","","",97,N],[12,"__bindgen_anon_1","","",97,N],[12,"events","","",97,N],[12,"data","","",97,N],[12,"link","","",97,N],[3,"wlr_input_device__bindgen_ty_2","","",N,N],[12,"destroy","","",98,N],[3,"libinput_device","","",N,N],[3,"wlr_texture_impl","","",N,N],[12,"get_size","","",99,N],[12,"is_opaque","","",99,N],[12,"write_pixels","","",99,N],[12,"to_dmabuf","","",99,N],[12,"destroy","","",99,N],[3,"wlr_texture","","",N,N],[12,"impl_","","",100,N],[3,"wlr_box","","",N,N],[12,"x","","",101,N],[12,"y","","",101,N],[12,"width","","",101,N],[12,"height","","",101,N],[3,"wlr_renderer_impl","","",N,N],[12,"begin","","",102,N],[12,"end","","",102,N],[12,"clear","","",102,N],[12,"scissor","","",102,N],[12,"render_texture_with_matrix","","",102,N],[12,"render_quad_with_matrix","","",102,N],[12,"render_ellipse_with_matrix","","",102,N],[12,"formats","","",102,N],[12,"format_supported","","",102,N],[12,"resource_is_wl_drm_buffer","","",102,N],[12,"wl_drm_buffer_get_size","","",102,N],[12,"get_dmabuf_formats","","",102,N],[12,"get_dmabuf_modifiers","","",102,N],[12,"preferred_read_format","","",102,N],[12,"read_pixels","","",102,N],[12,"texture_from_pixels","","",102,N],[12,"texture_from_wl_drm","","",102,N],[12,"texture_from_dmabuf","","",102,N],[12,"destroy","","",102,N],[12,"init_wl_display","","",102,N],[3,"wlr_subcompositor","","",N,N],[12,"global","","",103,N],[12,"resources","","",103,N],[12,"subsurface_resources","","",103,N],[3,"wlr_compositor","","",N,N],[12,"global","","",104,N],[12,"resources","","",104,N],[12,"renderer","","",104,N],[12,"surface_resources","","",104,N],[12,"region_resources","","",104,N],[12,"subcompositor","","",104,N],[12,"display_destroy","","",104,N],[12,"events","","",104,N],[3,"wlr_compositor__bindgen_ty_1","","",N,N],[12,"new_surface","","",105,N],[12,"destroy","","",105,N],[3,"wlr_subsurface","","",N,N],[12,"resource","","",106,N],[12,"surface","","",106,N],[12,"parent","","",106,N],[12,"current","","",106,N],[12,"pending","","",106,N],[12,"cached","","",106,N],[12,"has_cache","","",106,N],[12,"synchronized","","",106,N],[12,"reordered","","",106,N],[12,"parent_link","","",106,N],[12,"parent_pending_link","","",106,N],[12,"surface_destroy","","",106,N],[12,"parent_destroy","","",106,N],[12,"events","","",106,N],[12,"data","","",106,N],[3,"wlr_subsurface__bindgen_ty_1","","",N,N],[12,"destroy","","",107,N],[3,"wlr_output_layout_state","","",N,N],[3,"wlr_output_layout","","",N,N],[12,"outputs","","",108,N],[12,"state","","",108,N],[12,"events","","",108,N],[12,"data","","",108,N],[3,"wlr_output_layout__bindgen_ty_1","","",N,N],[12,"add","","",109,N],[12,"change","","",109,N],[12,"destroy","","",109,N],[3,"wlr_output_layout_output_state","","",N,N],[3,"wlr_output_layout_output","","",N,N],[12,"output","","",110,N],[12,"x","","",110,N],[12,"y","","",110,N],[12,"link","","",110,N],[12,"state","","",110,N],[12,"events","","",110,N],[3,"wlr_output_layout_output__bindgen_ty_1","","",N,N],[12,"destroy","","",111,N],[3,"wlr_cursor_state","","",N,N],[3,"wlr_cursor","","",N,N],[12,"state","","",112,N],[12,"x","","",112,N],[12,"y","","",112,N],[12,"events","","",112,N],[12,"data","","",112,N],[3,"wlr_cursor__bindgen_ty_1","","The interpretation of these signals is the responsibility of the compositor, but some helpers are provided for your benefit. If you receive a relative motion event, for example, you may want to call wlr_cursor_move. If you receive an absolute event, call wlr_cursor_warp_absolute. If you pass an input device into these functions, it will apply the region/output constraints associated with that device to the resulting cursor motion. If an output layout is attached, these functions will constrain the resulting cursor motion to within the usable space of the output layout.",N,N],[12,"motion","","",113,N],[12,"motion_absolute","","",113,N],[12,"button","","",113,N],[12,"axis","","",113,N],[12,"touch_up","","",113,N],[12,"touch_down","","",113,N],[12,"touch_motion","","",113,N],[12,"touch_cancel","","",113,N],[12,"tablet_tool_axis","","",113,N],[12,"tablet_tool_proximity","","",113,N],[12,"tablet_tool_tip","","",113,N],[12,"tablet_tool_button","","",113,N],[3,"wlr_surface_state","","",N,N],[12,"committed","","",114,N],[12,"buffer_resource","","",114,N],[12,"dx","","",114,N],[12,"dy","","",114,N],[12,"surface_damage","","",114,N],[12,"buffer_damage","","",114,N],[12,"opaque","","",114,N],[12,"input","","",114,N],[12,"transform","","",114,N],[12,"scale","","",114,N],[12,"frame_callback_list","","",114,N],[12,"width","","",114,N],[12,"height","","",114,N],[12,"buffer_width","","",114,N],[12,"buffer_height","","",114,N],[12,"buffer_destroy","","",114,N],[3,"wlr_surface_role","","",N,N],[12,"name","","",115,N],[12,"commit","","",115,N],[12,"precommit","","",115,N],[3,"wlr_subsurface_state","","",N,N],[12,"x","","",116,N],[12,"y","","",116,N],[3,"wlr_seat_client","","Contains state for a single client's bound wl_seat resource and can be used to issue input events to that client. The lifetime of these objects is managed by wlr_seat; some may be NULL.",N,N],[12,"client","","",117,N],[12,"seat","","",117,N],[12,"resources","","",117,N],[12,"pointers","","",117,N],[12,"keyboards","","",117,N],[12,"touches","","",117,N],[12,"data_devices","","",117,N],[12,"primary_selection_devices","","",117,N],[12,"events","","",117,N],[12,"link","","",117,N],[3,"wlr_seat_client__bindgen_ty_1","","",N,N],[12,"destroy","","",118,N],[3,"wlr_touch_point","","",N,N],[12,"touch_id","","",119,N],[12,"surface","","",119,N],[12,"client","","",119,N],[12,"focus_surface","","",119,N],[12,"focus_client","","",119,N],[12,"sx","","",119,N],[12,"sy","","",119,N],[12,"surface_destroy","","",119,N],[12,"focus_surface_destroy","","",119,N],[12,"events","","",119,N],[12,"link","","",119,N],[3,"wlr_touch_point__bindgen_ty_1","","",N,N],[12,"destroy","","",120,N],[3,"wlr_seat_pointer_grab","","Passed to `wlr_seat_pointer_start_grab()` to start a grab of the pointer. The grabber is responsible for handling pointer events for the seat.",N,N],[12,"interface","","",121,N],[12,"seat","","",121,N],[12,"data","","",121,N],[3,"wlr_pointer_grab_interface","","",N,N],[12,"enter","","",122,N],[12,"motion","","",122,N],[12,"button","","",122,N],[12,"axis","","",122,N],[12,"cancel","","",122,N],[3,"wlr_seat_keyboard_grab","","Passed to `wlr_seat_keyboard_start_grab()` to start a grab of the keyboard. The grabber is responsible for handling keyboard events for the seat.",N,N],[12,"interface","","",123,N],[12,"seat","","",123,N],[12,"data","","",123,N],[3,"wlr_keyboard_grab_interface","","",N,N],[12,"enter","","",124,N],[12,"key","","",124,N],[12,"modifiers","","",124,N],[12,"cancel","","",124,N],[3,"wlr_seat_touch_grab","","Passed to `wlr_seat_touch_start_grab()` to start a grab of the touch device. The grabber is responsible for handling touch events for the seat.",N,N],[12,"interface","","",125,N],[12,"seat","","",125,N],[12,"data","","",125,N],[3,"wlr_touch_grab_interface","","",N,N],[12,"down","","",126,N],[12,"up","","",126,N],[12,"motion","","",126,N],[12,"enter","","",126,N],[12,"cancel","","",126,N],[3,"wlr_seat_pointer_state","","",N,N],[12,"seat","","",127,N],[12,"focused_client","","",127,N],[12,"focused_surface","","",127,N],[12,"grab","","",127,N],[12,"default_grab","","",127,N],[12,"button_count","","",127,N],[12,"grab_button","","",127,N],[12,"grab_serial","","",127,N],[12,"grab_time","","",127,N],[12,"surface_destroy","","",127,N],[12,"events","","",127,N],[3,"wlr_seat_pointer_state__bindgen_ty_1","","",N,N],[12,"focus_change","","",128,N],[3,"wlr_seat_keyboard_state","","",N,N],[12,"seat","","",129,N],[12,"keyboard","","",129,N],[12,"focused_client","","",129,N],[12,"focused_surface","","",129,N],[12,"keyboard_destroy","","",129,N],[12,"keyboard_keymap","","",129,N],[12,"keyboard_repeat_info","","",129,N],[12,"surface_destroy","","",129,N],[12,"grab","","",129,N],[12,"default_grab","","",129,N],[3,"wlr_seat_touch_state","","",N,N],[12,"seat","","",130,N],[12,"touch_points","","",130,N],[12,"grab_serial","","",130,N],[12,"grab_id","","",130,N],[12,"grab","","",130,N],[12,"default_grab","","",130,N],[3,"wlr_seat","","",N,N],[12,"global","","",131,N],[12,"display","","",131,N],[12,"clients","","",131,N],[12,"drag_icons","","",131,N],[12,"name","","",131,N],[12,"capabilities","","",131,N],[12,"last_event","","",131,N],[12,"selection_source","","",131,N],[12,"selection_serial","","",131,N],[12,"primary_selection_source","","",131,N],[12,"primary_selection_serial","","",131,N],[12,"drag","","",131,N],[12,"drag_source","","",131,N],[12,"drag_serial","","",131,N],[12,"pointer_state","","",131,N],[12,"keyboard_state","","",131,N],[12,"touch_state","","",131,N],[12,"display_destroy","","",131,N],[12,"selection_source_destroy","","",131,N],[12,"primary_selection_source_destroy","","",131,N],[12,"drag_source_destroy","","",131,N],[12,"events","","",131,N],[12,"data","","",131,N],[3,"wlr_seat__bindgen_ty_1","","",N,N],[12,"pointer_grab_begin","","",132,N],[12,"pointer_grab_end","","",132,N],[12,"keyboard_grab_begin","","",132,N],[12,"keyboard_grab_end","","",132,N],[12,"touch_grab_begin","","",132,N],[12,"touch_grab_end","","",132,N],[12,"request_set_cursor","","",132,N],[12,"selection","","",132,N],[12,"primary_selection","","",132,N],[12,"start_drag","","",132,N],[12,"new_drag_icon","","",132,N],[12,"destroy","","",132,N],[3,"wlr_seat_pointer_request_set_cursor_event","","",N,N],[12,"seat_client","","",133,N],[12,"surface","","",133,N],[12,"serial","","",133,N],[12,"hotspot_x","","",133,N],[12,"hotspot_y","","",133,N],[3,"wlr_seat_pointer_focus_change_event","","",N,N],[12,"seat","","",134,N],[12,"old_surface","","",134,N],[12,"new_surface","","",134,N],[12,"sx","","",134,N],[12,"sy","","",134,N],[3,"wlr_data_device_manager","","",N,N],[12,"global","","",135,N],[12,"resources","","",135,N],[12,"data_sources","","",135,N],[12,"display_destroy","","",135,N],[12,"events","","",135,N],[12,"data","","",135,N],[3,"wlr_data_device_manager__bindgen_ty_1","","",N,N],[12,"destroy","","",136,N],[3,"wlr_data_offer","","",N,N],[12,"resource","","",137,N],[12,"source","","",137,N],[12,"actions","","",137,N],[12,"preferred_action","","",137,N],[12,"in_ask","","",137,N],[12,"source_destroy","","",137,N],[3,"wlr_data_source_impl","","A data source implementation. Only the `send` function is mandatory. Refer to the matching wl_data_source_* functions documentation to know what they do.",N,N],[12,"send","","",138,N],[12,"accept","","",138,N],[12,"cancel","","",138,N],[12,"dnd_drop","","",138,N],[12,"dnd_finish","","",138,N],[12,"dnd_action","","",138,N],[3,"wlr_data_source","","",N,N],[12,"impl_","","",139,N],[12,"mime_types","","",139,N],[12,"actions","","",139,N],[12,"accepted","","",139,N],[12,"current_dnd_action","","",139,N],[12,"compositor_action","","",139,N],[12,"events","","",139,N],[3,"wlr_data_source__bindgen_ty_1","","",N,N],[12,"destroy","","",140,N],[3,"wlr_drag_icon","","",N,N],[12,"surface","","",141,N],[12,"client","","",141,N],[12,"link","","",141,N],[12,"mapped","","",141,N],[12,"is_pointer","","",141,N],[12,"touch_id","","",141,N],[12,"events","","",141,N],[12,"surface_destroy","","",141,N],[12,"seat_client_destroy","","",141,N],[12,"data","","",141,N],[3,"wlr_drag_icon__bindgen_ty_1","","",N,N],[12,"map","","",142,N],[12,"unmap","","",142,N],[12,"destroy","","",142,N],[3,"wlr_drag","","",N,N],[12,"pointer_grab","","",143,N],[12,"keyboard_grab","","",143,N],[12,"touch_grab","","",143,N],[12,"seat","","",143,N],[12,"seat_client","","",143,N],[12,"focus_client","","",143,N],[12,"is_pointer_grab","","",143,N],[12,"icon","","",143,N],[12,"focus","","",143,N],[12,"source","","",143,N],[12,"cancelling","","",143,N],[12,"grab_touch_id","","",143,N],[12,"point_destroy","","",143,N],[12,"source_destroy","","",143,N],[12,"seat_client_destroy","","",143,N],[12,"icon_destroy","","",143,N],[12,"events","","",143,N],[3,"wlr_drag__bindgen_ty_1","","",N,N],[12,"focus","","",144,N],[12,"motion","","",144,N],[12,"drop","","",144,N],[12,"destroy","","",144,N],[3,"wlr_drag_motion_event","","",N,N],[12,"drag","","",145,N],[12,"time","","",145,N],[12,"sx","","",145,N],[12,"sy","","",145,N],[3,"wlr_drag_drop_event","","",N,N],[12,"drag","","",146,N],[12,"time","","",146,N],[3,"wlr_gamma_control_manager","","",N,N],[12,"global","","",147,N],[12,"controls","","",147,N],[12,"display_destroy","","",147,N],[12,"events","","",147,N],[12,"data","","",147,N],[3,"wlr_gamma_control_manager__bindgen_ty_1","","",N,N],[12,"destroy","","",148,N],[3,"wlr_gamma_control","","",N,N],[12,"resource","","",149,N],[12,"output","","",149,N],[12,"link","","",149,N],[12,"output_destroy_listener","","",149,N],[12,"events","","",149,N],[12,"data","","",149,N],[3,"wlr_gamma_control__bindgen_ty_1","","",N,N],[12,"destroy","","",150,N],[3,"wlr_output_damage","","Tracks damage for an output.",N,N],[12,"output","","",151,N],[12,"max_rects","","",151,N],[12,"current","","",151,N],[12,"previous","","",151,N],[12,"previous_idx","","",151,N],[12,"events","","",151,N],[12,"output_destroy","","",151,N],[12,"output_mode","","",151,N],[12,"output_transform","","",151,N],[12,"output_scale","","",151,N],[12,"output_needs_swap","","",151,N],[12,"output_frame","","",151,N],[3,"wlr_output_damage__bindgen_ty_1","","",N,N],[12,"frame","","",152,N],[12,"destroy","","",152,N],[3,"wlr_server_decoration_manager","","",N,N],[12,"global","","",153,N],[12,"resources","","",153,N],[12,"decorations","","",153,N],[12,"default_mode","","",153,N],[12,"display_destroy","","",153,N],[12,"events","","",153,N],[12,"data","","",153,N],[3,"wlr_server_decoration_manager__bindgen_ty_1","","",N,N],[12,"new_decoration","","",154,N],[12,"destroy","","",154,N],[3,"wlr_server_decoration","","",N,N],[12,"resource","","",155,N],[12,"surface","","",155,N],[12,"link","","",155,N],[12,"mode","","",155,N],[12,"events","","",155,N],[12,"surface_destroy_listener","","",155,N],[12,"data","","",155,N],[3,"wlr_server_decoration__bindgen_ty_1","","",N,N],[12,"destroy","","",156,N],[12,"mode","","",156,N],[3,"wlr_screenshooter","","",N,N],[12,"global","","",157,N],[12,"screenshots","","",157,N],[12,"display_destroy","","",157,N],[12,"events","","",157,N],[12,"data","","",157,N],[3,"wlr_screenshooter__bindgen_ty_1","","",N,N],[12,"destroy","","",158,N],[3,"wlr_screenshot","","",N,N],[12,"resource","","",159,N],[12,"output_resource","","",159,N],[12,"link","","",159,N],[12,"output","","",159,N],[12,"screenshooter","","",159,N],[12,"data","","",159,N],[3,"wlr_wl_shell","","",N,N],[12,"global","","",160,N],[12,"resources","","",160,N],[12,"surfaces","","",160,N],[12,"popup_grabs","","",160,N],[12,"ping_timeout","","",160,N],[12,"display_destroy","","",160,N],[12,"events","","",160,N],[12,"data","","",160,N],[3,"wlr_wl_shell__bindgen_ty_1","","",N,N],[12,"new_surface","","",161,N],[12,"destroy","","",161,N],[3,"wlr_wl_shell_surface_transient_state","","",N,N],[12,"x","","",162,N],[12,"y","","",162,N],[12,"flags","","",162,N],[3,"wlr_wl_shell_surface_popup_state","","",N,N],[12,"seat","","",163,N],[12,"serial","","",163,N],[3,"wlr_wl_shell_popup_grab","","",N,N],[12,"client","","",164,N],[12,"pointer_grab","","",164,N],[12,"seat","","",164,N],[12,"popups","","",164,N],[12,"link","","",164,N],[3,"wlr_wl_shell_surface","","",N,N],[12,"shell","","",165,N],[12,"client","","",165,N],[12,"resource","","",165,N],[12,"surface","","",165,N],[12,"configured","","",165,N],[12,"link","","",165,N],[12,"ping_serial","","",165,N],[12,"ping_timer","","",165,N],[12,"state","","",165,N],[12,"transient_state","","",165,N],[12,"popup_state","","",165,N],[12,"grab_link","","",165,N],[12,"title","","",165,N],[12,"class","","",165,N],[12,"surface_destroy","","",165,N],[12,"parent","","",165,N],[12,"popup_link","","",165,N],[12,"popups","","",165,N],[12,"popup_mapped","","",165,N],[12,"events","","",165,N],[12,"data","","",165,N],[3,"wlr_wl_shell_surface__bindgen_ty_1","","",N,N],[12,"destroy","","",166,N],[12,"ping_timeout","","",166,N],[12,"new_popup","","",166,N],[12,"request_move","","",166,N],[12,"request_resize","","",166,N],[12,"request_fullscreen","","",166,N],[12,"request_maximize","","",166,N],[12,"set_state","","",166,N],[12,"set_title","","",166,N],[12,"set_class","","",166,N],[3,"wlr_wl_shell_surface_move_event","","",N,N],[12,"surface","","",167,N],[12,"seat","","",167,N],[12,"serial","","",167,N],[3,"wlr_wl_shell_surface_resize_event","","",N,N],[12,"surface","","",168,N],[12,"seat","","",168,N],[12,"serial","","",168,N],[12,"edges","","",168,N],[3,"wlr_wl_shell_surface_set_fullscreen_event","","",N,N],[12,"surface","","",169,N],[12,"method","","",169,N],[12,"framerate","","",169,N],[12,"output","","",169,N],[3,"wlr_wl_shell_surface_maximize_event","","",N,N],[12,"surface","","",170,N],[12,"output","","",170,N],[3,"wlr_xdg_shell_v6","","",N,N],[12,"global","","",171,N],[12,"clients","","",171,N],[12,"popup_grabs","","",171,N],[12,"ping_timeout","","",171,N],[12,"display_destroy","","",171,N],[12,"events","","",171,N],[12,"data","","",171,N],[3,"wlr_xdg_shell_v6__bindgen_ty_1","","",N,N],[12,"new_surface","","The `new_surface` event signals that a client has requested to create a new shell surface. At this point, the surface is ready to be configured but is not mapped or ready receive input events. The surface will be ready to be managed on the `map` event.",172,N],[12,"destroy","","",172,N],[3,"wlr_xdg_client_v6","","",N,N],[12,"shell","","",173,N],[12,"resource","","",173,N],[12,"client","","",173,N],[12,"surfaces","","",173,N],[12,"link","","",173,N],[12,"ping_serial","","",173,N],[12,"ping_timer","","",173,N],[3,"wlr_xdg_positioner_v6","","",N,N],[12,"anchor_rect","","",174,N],[12,"anchor","","",174,N],[12,"gravity","","",174,N],[12,"constraint_adjustment","","",174,N],[12,"size","","",174,N],[12,"offset","","",174,N],[3,"wlr_xdg_positioner_v6__bindgen_ty_1","","",N,N],[12,"width","","",175,N],[12,"height","","",175,N],[3,"wlr_xdg_positioner_v6__bindgen_ty_2","","",N,N],[12,"x","","",176,N],[12,"y","","",176,N],[3,"wlr_xdg_popup_v6","","",N,N],[12,"base","","",177,N],[12,"link","","",177,N],[12,"resource","","",177,N],[12,"committed","","",177,N],[12,"parent","","",177,N],[12,"seat","","",177,N],[12,"geometry","","",177,N],[12,"positioner","","",177,N],[12,"grab_link","","",177,N],[3,"wlr_xdg_popup_grab_v6","","",N,N],[12,"client","","",178,N],[12,"pointer_grab","","",178,N],[12,"keyboard_grab","","",178,N],[12,"seat","","",178,N],[12,"popups","","",178,N],[12,"link","","",178,N],[12,"seat_destroy","","",178,N],[3,"wlr_xdg_toplevel_v6_state","","",N,N],[12,"maximized","","",179,N],[12,"fullscreen","","",179,N],[12,"resizing","","",179,N],[12,"activated","","",179,N],[12,"width","","",179,N],[12,"height","","",179,N],[12,"max_width","","",179,N],[12,"max_height","","",179,N],[12,"min_width","","",179,N],[12,"min_height","","",179,N],[3,"wlr_xdg_toplevel_v6","","An xdg-surface is a user interface element requiring management by the compositor. An xdg-surface alone isn't useful, a role should be assigned to it in order to map it.",N,N],[12,"resource","","",180,N],[12,"base","","",180,N],[12,"parent","","",180,N],[12,"added","","",180,N],[12,"client_pending","","",180,N],[12,"server_pending","","",180,N],[12,"current","","",180,N],[12,"title","","",180,N],[12,"app_id","","",180,N],[12,"events","","",180,N],[3,"wlr_xdg_toplevel_v6__bindgen_ty_1","","",N,N],[12,"request_maximize","","",181,N],[12,"request_fullscreen","","",181,N],[12,"request_minimize","","",181,N],[12,"request_move","","",181,N],[12,"request_resize","","",181,N],[12,"request_show_window_menu","","",181,N],[12,"set_parent","","",181,N],[12,"set_title","","",181,N],[12,"set_app_id","","",181,N],[3,"wlr_xdg_surface_v6_configure","","",N,N],[12,"link","","",182,N],[12,"serial","","",182,N],[12,"toplevel_state","","",182,N],[3,"wlr_xdg_surface_v6","","",N,N],[12,"client","","",183,N],[12,"resource","","",183,N],[12,"surface","","",183,N],[12,"link","","",183,N],[12,"role","","",183,N],[12,"__bindgen_anon_1","","",183,N],[12,"popups","","",183,N],[12,"added","","",183,N],[12,"configured","","",183,N],[12,"mapped","","",183,N],[12,"configure_serial","","",183,N],[12,"configure_idle","","",183,N],[12,"configure_next_serial","","",183,N],[12,"configure_list","","",183,N],[12,"has_next_geometry","","",183,N],[12,"next_geometry","","",183,N],[12,"geometry","","",183,N],[12,"surface_destroy","","",183,N],[12,"surface_commit","","",183,N],[12,"events","","",183,N],[12,"data","","",183,N],[3,"wlr_xdg_surface_v6__bindgen_ty_2","","",N,N],[12,"destroy","","",184,N],[12,"ping_timeout","","",184,N],[12,"new_popup","","",184,N],[12,"map","","The `map` event signals that the shell surface is ready to be managed by the compositor and rendered on the screen. At this point, the surface has configured its properties, has had the opportunity to bind to the seat to receive input events, and has a buffer that is ready to be rendered. You can now safely add this surface to a list of views.",184,N],[12,"unmap","","The `unmap` event signals that the surface is no longer in a state where it should be shown on the screen. This might happen if the surface no longer has a displayable buffer because either the surface has been hidden or is about to be destroyed.",184,N],[3,"wlr_xdg_toplevel_v6_move_event","","",N,N],[12,"surface","","",185,N],[12,"seat","","",185,N],[12,"serial","","",185,N],[3,"wlr_xdg_toplevel_v6_resize_event","","",N,N],[12,"surface","","",186,N],[12,"seat","","",186,N],[12,"serial","","",186,N],[12,"edges","","",186,N],[3,"wlr_xdg_toplevel_v6_set_fullscreen_event","","",N,N],[12,"surface","","",187,N],[12,"fullscreen","","",187,N],[12,"output","","",187,N],[3,"wlr_xdg_toplevel_v6_show_window_menu_event","","",N,N],[12,"surface","","",188,N],[12,"seat","","",188,N],[12,"serial","","",188,N],[12,"x","","",188,N],[12,"y","","",188,N],[3,"wlr_xdg_shell","","",N,N],[12,"global","","",189,N],[12,"clients","","",189,N],[12,"popup_grabs","","",189,N],[12,"ping_timeout","","",189,N],[12,"display_destroy","","",189,N],[12,"events","","",189,N],[12,"data","","",189,N],[3,"wlr_xdg_shell__bindgen_ty_1","","",N,N],[12,"new_surface","","The `new_surface` event signals that a client has requested to create a new shell surface. At this point, the surface is ready to be configured but is not mapped or ready receive input events. The surface will be ready to be managed on the `map` event.",190,N],[12,"destroy","","",190,N],[3,"wlr_xdg_client","","",N,N],[12,"shell","","",191,N],[12,"resource","","",191,N],[12,"client","","",191,N],[12,"surfaces","","",191,N],[12,"link","","",191,N],[12,"ping_serial","","",191,N],[12,"ping_timer","","",191,N],[3,"wlr_xdg_positioner","","",N,N],[12,"resource","","",192,N],[12,"anchor_rect","","",192,N],[12,"anchor","","",192,N],[12,"gravity","","",192,N],[12,"constraint_adjustment","","",192,N],[12,"size","","",192,N],[12,"offset","","",192,N],[3,"wlr_xdg_positioner__bindgen_ty_1","","",N,N],[12,"width","","",193,N],[12,"height","","",193,N],[3,"wlr_xdg_positioner__bindgen_ty_2","","",N,N],[12,"x","","",194,N],[12,"y","","",194,N],[3,"wlr_xdg_popup","","",N,N],[12,"base","","",195,N],[12,"link","","",195,N],[12,"resource","","",195,N],[12,"committed","","",195,N],[12,"parent","","",195,N],[12,"seat","","",195,N],[12,"geometry","","",195,N],[12,"positioner","","",195,N],[12,"grab_link","","",195,N],[3,"wlr_xdg_popup_grab","","",N,N],[12,"client","","",196,N],[12,"pointer_grab","","",196,N],[12,"keyboard_grab","","",196,N],[12,"seat","","",196,N],[12,"popups","","",196,N],[12,"link","","",196,N],[12,"seat_destroy","","",196,N],[3,"wlr_xdg_toplevel_state","","",N,N],[12,"maximized","","",197,N],[12,"fullscreen","","",197,N],[12,"resizing","","",197,N],[12,"activated","","",197,N],[12,"tiled","","",197,N],[12,"width","","",197,N],[12,"height","","",197,N],[12,"max_width","","",197,N],[12,"max_height","","",197,N],[12,"min_width","","",197,N],[12,"min_height","","",197,N],[3,"wlr_xdg_toplevel","","",N,N],[12,"resource","","",198,N],[12,"base","","",198,N],[12,"parent","","",198,N],[12,"added","","",198,N],[12,"client_pending","","",198,N],[12,"server_pending","","",198,N],[12,"current","","",198,N],[12,"title","","",198,N],[12,"app_id","","",198,N],[12,"events","","",198,N],[3,"wlr_xdg_toplevel__bindgen_ty_1","","",N,N],[12,"request_maximize","","",199,N],[12,"request_fullscreen","","",199,N],[12,"request_minimize","","",199,N],[12,"request_move","","",199,N],[12,"request_resize","","",199,N],[12,"request_show_window_menu","","",199,N],[12,"set_parent","","",199,N],[12,"set_title","","",199,N],[12,"set_app_id","","",199,N],[3,"wlr_xdg_surface_configure","","",N,N],[12,"surface","","",200,N],[12,"link","","",200,N],[12,"serial","","",200,N],[12,"toplevel_state","","",200,N],[3,"wlr_xdg_surface","","An xdg-surface is a user interface element requiring management by the compositor. An xdg-surface alone isn't useful, a role should be assigned to it in order to map it.",N,N],[12,"client","","",201,N],[12,"resource","","",201,N],[12,"surface","","",201,N],[12,"link","","",201,N],[12,"role","","",201,N],[12,"__bindgen_anon_1","","",201,N],[12,"popups","","",201,N],[12,"added","","",201,N],[12,"configured","","",201,N],[12,"mapped","","",201,N],[12,"configure_serial","","",201,N],[12,"configure_idle","","",201,N],[12,"configure_next_serial","","",201,N],[12,"configure_list","","",201,N],[12,"has_next_geometry","","",201,N],[12,"next_geometry","","",201,N],[12,"geometry","","",201,N],[12,"surface_destroy","","",201,N],[12,"surface_commit","","",201,N],[12,"events","","",201,N],[12,"data","","",201,N],[3,"wlr_xdg_surface__bindgen_ty_2","","",N,N],[12,"destroy","","",202,N],[12,"ping_timeout","","",202,N],[12,"new_popup","","",202,N],[12,"map","","The `map` event signals that the shell surface is ready to be managed by the compositor and rendered on the screen. At this point, the surface has configured its properties, has had the opportunity to bind to the seat to receive input events, and has a buffer that is ready to be rendered. You can now safely add this surface to a list of views.",202,N],[12,"unmap","","The `unmap` event signals that the surface is no longer in a state where it should be shown on the screen. This might happen if the surface no longer has a displayable buffer because either the surface has been hidden or is about to be destroyed.",202,N],[12,"configure","","",202,N],[12,"ack_configure","","",202,N],[3,"wlr_xdg_toplevel_move_event","","",N,N],[12,"surface","","",203,N],[12,"seat","","",203,N],[12,"serial","","",203,N],[3,"wlr_xdg_toplevel_resize_event","","",N,N],[12,"surface","","",204,N],[12,"seat","","",204,N],[12,"serial","","",204,N],[12,"edges","","",204,N],[3,"wlr_xdg_toplevel_set_fullscreen_event","","",N,N],[12,"surface","","",205,N],[12,"fullscreen","","",205,N],[12,"output","","",205,N],[3,"wlr_xdg_toplevel_show_window_menu_event","","",N,N],[12,"surface","","",206,N],[12,"seat","","",206,N],[12,"serial","","",206,N],[12,"x","","",206,N],[12,"y","","",206,N],[3,"wlr_xcursor_manager_theme","","An XCursor theme at a particular scale factor of the base size.",N,N],[12,"scale","","",207,N],[12,"theme","","",207,N],[12,"link","","",207,N],[3,"wlr_xcursor_manager","","wlr_xcursor_manager dynamically loads xcursor themes at sizes necessary for use on outputs at arbitrary scale factors. You should call wlr_xcursor_manager_load for each output you will show your cursor on, with the scale factor parameter set to that output's scale factor.",N,N],[12,"name","","",208,N],[12,"size","","",208,N],[12,"scaled_themes","","",208,N],[3,"xcb_generic_event_t","","",N,N],[12,"response_type","","",209,N],[12,"pad0","","",209,N],[12,"sequence","","",209,N],[12,"pad","","",209,N],[12,"full_sequence","","",209,N],[3,"wlr_xwm","","",N,N],[3,"wlr_xwayland_cursor","","",N,N],[3,"wlr_xwayland","","",N,N],[12,"pid","","",210,N],[12,"client","","",210,N],[12,"sigusr1_source","","",210,N],[12,"client_destroy","","",210,N],[12,"xwm","","",210,N],[12,"cursor","","",210,N],[12,"wm_fd","","",210,N],[12,"wl_fd","","",210,N],[12,"server_start","","",210,N],[12,"display","","",210,N],[12,"x_fd","","",210,N],[12,"x_fd_read_event","","",210,N],[12,"display_destroy","","",210,N],[12,"lazy","","",210,N],[12,"wl_display","","",210,N],[12,"compositor","","",210,N],[12,"seat","","",210,N],[12,"seat_destroy","","",210,N],[12,"events","","",210,N],[12,"user_event_handler","","Add a custom event handler to xwayland. Return 1 if the event was handled or 0 to use the default wlr-xwayland handler. wlr-xwayland will free the event.",210,N],[12,"data","","",210,N],[3,"wlr_xwayland__bindgen_ty_1","","",N,N],[12,"ready","","",211,N],[12,"new_surface","","",211,N],[3,"wlr_xwayland_surface_hints","","",N,N],[12,"flags","","",212,N],[12,"input","","",212,N],[12,"initial_state","","",212,N],[12,"icon_pixmap","","",212,N],[12,"icon_window","","",212,N],[12,"icon_x","","",212,N],[12,"icon_y","","",212,N],[12,"icon_mask","","",212,N],[12,"window_group","","",212,N],[3,"wlr_xwayland_surface_size_hints","","",N,N],[12,"flags","","",213,N],[12,"x","","",213,N],[12,"y","","",213,N],[12,"width","","",213,N],[12,"height","","",213,N],[12,"min_width","","",213,N],[12,"min_height","","",213,N],[12,"max_width","","",213,N],[12,"max_height","","",213,N],[12,"width_inc","","",213,N],[12,"height_inc","","",213,N],[12,"base_width","","",213,N],[12,"base_height","","",213,N],[12,"min_aspect_num","","",213,N],[12,"min_aspect_den","","",213,N],[12,"max_aspect_num","","",213,N],[12,"max_aspect_den","","",213,N],[12,"win_gravity","","",213,N],[3,"wlr_xwayland_surface","","An Xwayland user interface component. It has an absolute position in layout-local coordinates.",N,N],[12,"window_id","","",214,N],[12,"xwm","","",214,N],[12,"surface_id","","",214,N],[12,"link","","",214,N],[12,"unpaired_link","","",214,N],[12,"surface","","",214,N],[12,"x","","",214,N],[12,"y","","",214,N],[12,"width","","",214,N],[12,"height","","",214,N],[12,"saved_width","","",214,N],[12,"saved_height","","",214,N],[12,"override_redirect","","",214,N],[12,"mapped","","",214,N],[12,"title","","",214,N],[12,"class","","",214,N],[12,"instance","","",214,N],[12,"role","","",214,N],[12,"pid","","",214,N],[12,"has_utf8_title","","",214,N],[12,"children","","",214,N],[12,"parent","","",214,N],[12,"parent_link","","",214,N],[12,"window_type","","",214,N],[12,"window_type_len","","",214,N],[12,"protocols","","",214,N],[12,"protocols_len","","",214,N],[12,"decorations","","",214,N],[12,"hints","","",214,N],[12,"hints_urgency","","",214,N],[12,"size_hints","","",214,N],[12,"pinging","","",214,N],[12,"ping_timer","","",214,N],[12,"modal","","",214,N],[12,"fullscreen","","",214,N],[12,"maximized_vert","","",214,N],[12,"maximized_horz","","",214,N],[12,"has_alpha","","",214,N],[12,"events","","",214,N],[12,"surface_destroy","","",214,N],[12,"data","","",214,N],[3,"wlr_xwayland_surface__bindgen_ty_1","","",N,N],[12,"destroy","","",215,N],[12,"request_configure","","",215,N],[12,"request_move","","",215,N],[12,"request_resize","","",215,N],[12,"request_maximize","","",215,N],[12,"request_fullscreen","","",215,N],[12,"request_activate","","",215,N],[12,"map","","",215,N],[12,"unmap","","",215,N],[12,"set_title","","",215,N],[12,"set_class","","",215,N],[12,"set_role","","",215,N],[12,"set_parent","","",215,N],[12,"set_pid","","",215,N],[12,"set_window_type","","",215,N],[12,"set_hints","","",215,N],[12,"set_decorations","","",215,N],[12,"set_override_redirect","","",215,N],[12,"ping_timeout","","",215,N],[3,"wlr_xwayland_surface_configure_event","","",N,N],[12,"surface","","",216,N],[12,"x","","",216,N],[12,"y","","",216,N],[12,"width","","",216,N],[12,"height","","",216,N],[3,"wlr_xwayland_move_event","","",N,N],[12,"surface","","",217,N],[3,"wlr_xwayland_resize_event","","",N,N],[12,"surface","","",218,N],[12,"edges","","",218,N],[3,"__va_list_tag","","",N,N],[12,"gp_offset","","",219,N],[12,"fp_offset","","",219,N],[12,"overflow_arg_area","","",219,N],[12,"reg_save_area","","",219,N],[3,"wlr_buffer","","The surface's buffer, if any. A surface has an attached buffer when it commits with a non-null buffer in its pending state. A surface will not have a buffer if it has never committed one, has committed a null buffer, or something went wrong with uploading the buffer.",N,N],[12,"_address","","",220,N],[3,"wlr_gtk_primary_selection_source","","",N,N],[12,"_address","","",221,N],[19,"wlr_input_device__bindgen_ty_1","","",N,N],[12,"_device","","",222,N],[12,"keyboard","","",222,N],[12,"pointer","","",222,N],[12,"touch","","",222,N],[12,"tablet","","",222,N],[12,"tablet_pad","","",222,N],[19,"wlr_xdg_surface_v6__bindgen_ty_1","","",N,N],[12,"toplevel","","",223,N],[12,"popup","","",223,N],[19,"wlr_xdg_surface__bindgen_ty_1","","",N,N],[12,"toplevel","","",224,N],[12,"popup","","",224,N],[4,"wlr_edges","","",N,N],[13,"WLR_EDGE_NONE","","",225,N],[13,"WLR_EDGE_TOP","","",225,N],[13,"WLR_EDGE_BOTTOM","","",225,N],[13,"WLR_EDGE_LEFT","","",225,N],[13,"WLR_EDGE_RIGHT","","",225,N],[4,"wlr_log_importance","","",N,N],[13,"WLR_SILENT","","",226,N],[13,"WLR_ERROR","","",226,N],[13,"WLR_INFO","","",226,N],[13,"WLR_DEBUG","","",226,N],[13,"WLR_LOG_IMPORTANCE_LAST","","",226,N],[4,"pixman_repeat_t","","",N,N],[13,"PIXMAN_REPEAT_NONE","","",227,N],[13,"PIXMAN_REPEAT_NORMAL","","",227,N],[13,"PIXMAN_REPEAT_PAD","","",227,N],[13,"PIXMAN_REPEAT_REFLECT","","",227,N],[4,"pixman_filter_t","","",N,N],[13,"PIXMAN_FILTER_FAST","","",228,N],[13,"PIXMAN_FILTER_GOOD","","",228,N],[13,"PIXMAN_FILTER_BEST","","",228,N],[13,"PIXMAN_FILTER_NEAREST","","",228,N],[13,"PIXMAN_FILTER_BILINEAR","","",228,N],[13,"PIXMAN_FILTER_CONVOLUTION","","",228,N],[13,"PIXMAN_FILTER_SEPARABLE_CONVOLUTION","","",228,N],[4,"pixman_op_t","","",N,N],[13,"PIXMAN_OP_CLEAR","","",229,N],[13,"PIXMAN_OP_SRC","","",229,N],[13,"PIXMAN_OP_DST","","",229,N],[13,"PIXMAN_OP_OVER","","",229,N],[13,"PIXMAN_OP_OVER_REVERSE","","",229,N],[13,"PIXMAN_OP_IN","","",229,N],[13,"PIXMAN_OP_IN_REVERSE","","",229,N],[13,"PIXMAN_OP_OUT","","",229,N],[13,"PIXMAN_OP_OUT_REVERSE","","",229,N],[13,"PIXMAN_OP_ATOP","","",229,N],[13,"PIXMAN_OP_ATOP_REVERSE","","",229,N],[13,"PIXMAN_OP_XOR","","",229,N],[13,"PIXMAN_OP_ADD","","",229,N],[13,"PIXMAN_OP_SATURATE","","",229,N],[13,"PIXMAN_OP_DISJOINT_CLEAR","","",229,N],[13,"PIXMAN_OP_DISJOINT_SRC","","",229,N],[13,"PIXMAN_OP_DISJOINT_DST","","",229,N],[13,"PIXMAN_OP_DISJOINT_OVER","","",229,N],[13,"PIXMAN_OP_DISJOINT_OVER_REVERSE","","",229,N],[13,"PIXMAN_OP_DISJOINT_IN","","",229,N],[13,"PIXMAN_OP_DISJOINT_IN_REVERSE","","",229,N],[13,"PIXMAN_OP_DISJOINT_OUT","","",229,N],[13,"PIXMAN_OP_DISJOINT_OUT_REVERSE","","",229,N],[13,"PIXMAN_OP_DISJOINT_ATOP","","",229,N],[13,"PIXMAN_OP_DISJOINT_ATOP_REVERSE","","",229,N],[13,"PIXMAN_OP_DISJOINT_XOR","","",229,N],[13,"PIXMAN_OP_CONJOINT_CLEAR","","",229,N],[13,"PIXMAN_OP_CONJOINT_SRC","","",229,N],[13,"PIXMAN_OP_CONJOINT_DST","","",229,N],[13,"PIXMAN_OP_CONJOINT_OVER","","",229,N],[13,"PIXMAN_OP_CONJOINT_OVER_REVERSE","","",229,N],[13,"PIXMAN_OP_CONJOINT_IN","","",229,N],[13,"PIXMAN_OP_CONJOINT_IN_REVERSE","","",229,N],[13,"PIXMAN_OP_CONJOINT_OUT","","",229,N],[13,"PIXMAN_OP_CONJOINT_OUT_REVERSE","","",229,N],[13,"PIXMAN_OP_CONJOINT_ATOP","","",229,N],[13,"PIXMAN_OP_CONJOINT_ATOP_REVERSE","","",229,N],[13,"PIXMAN_OP_CONJOINT_XOR","","",229,N],[13,"PIXMAN_OP_MULTIPLY","","",229,N],[13,"PIXMAN_OP_SCREEN","","",229,N],[13,"PIXMAN_OP_OVERLAY","","",229,N],[13,"PIXMAN_OP_DARKEN","","",229,N],[13,"PIXMAN_OP_LIGHTEN","","",229,N],[13,"PIXMAN_OP_COLOR_DODGE","","",229,N],[13,"PIXMAN_OP_COLOR_BURN","","",229,N],[13,"PIXMAN_OP_HARD_LIGHT","","",229,N],[13,"PIXMAN_OP_SOFT_LIGHT","","",229,N],[13,"PIXMAN_OP_DIFFERENCE","","",229,N],[13,"PIXMAN_OP_EXCLUSION","","",229,N],[13,"PIXMAN_OP_HSL_HUE","","",229,N],[13,"PIXMAN_OP_HSL_SATURATION","","",229,N],[13,"PIXMAN_OP_HSL_COLOR","","",229,N],[13,"PIXMAN_OP_HSL_LUMINOSITY","","",229,N],[4,"pixman_region_overlap_t","","",N,N],[13,"PIXMAN_REGION_OUT","","",230,N],[13,"PIXMAN_REGION_IN","","",230,N],[13,"PIXMAN_REGION_PART","","",230,N],[4,"pixman_format_code_t","","",N,N],[13,"PIXMAN_rgba_float","","",231,N],[13,"PIXMAN_rgb_float","","",231,N],[13,"PIXMAN_a8r8g8b8","","",231,N],[13,"PIXMAN_x8r8g8b8","","",231,N],[13,"PIXMAN_a8b8g8r8","","",231,N],[13,"PIXMAN_x8b8g8r8","","",231,N],[13,"PIXMAN_b8g8r8a8","","",231,N],[13,"PIXMAN_b8g8r8x8","","",231,N],[13,"PIXMAN_r8g8b8a8","","",231,N],[13,"PIXMAN_r8g8b8x8","","",231,N],[13,"PIXMAN_x14r6g6b6","","",231,N],[13,"PIXMAN_x2r10g10b10","","",231,N],[13,"PIXMAN_a2r10g10b10","","",231,N],[13,"PIXMAN_x2b10g10r10","","",231,N],[13,"PIXMAN_a2b10g10r10","","",231,N],[13,"PIXMAN_a8r8g8b8_sRGB","","",231,N],[13,"PIXMAN_r8g8b8","","",231,N],[13,"PIXMAN_b8g8r8","","",231,N],[13,"PIXMAN_r5g6b5","","",231,N],[13,"PIXMAN_b5g6r5","","",231,N],[13,"PIXMAN_a1r5g5b5","","",231,N],[13,"PIXMAN_x1r5g5b5","","",231,N],[13,"PIXMAN_a1b5g5r5","","",231,N],[13,"PIXMAN_x1b5g5r5","","",231,N],[13,"PIXMAN_a4r4g4b4","","",231,N],[13,"PIXMAN_x4r4g4b4","","",231,N],[13,"PIXMAN_a4b4g4r4","","",231,N],[13,"PIXMAN_x4b4g4r4","","",231,N],[13,"PIXMAN_a8","","",231,N],[13,"PIXMAN_r3g3b2","","",231,N],[13,"PIXMAN_b2g3r3","","",231,N],[13,"PIXMAN_a2r2g2b2","","",231,N],[13,"PIXMAN_a2b2g2r2","","",231,N],[13,"PIXMAN_c8","","",231,N],[13,"PIXMAN_g8","","",231,N],[13,"PIXMAN_x4a4","","",231,N],[13,"PIXMAN_a4","","",231,N],[13,"PIXMAN_r1g2b1","","",231,N],[13,"PIXMAN_b1g2r1","","",231,N],[13,"PIXMAN_a1r1g1b1","","",231,N],[13,"PIXMAN_a1b1g1r1","","",231,N],[13,"PIXMAN_c4","","",231,N],[13,"PIXMAN_g4","","",231,N],[13,"PIXMAN_a1","","",231,N],[13,"PIXMAN_g1","","",231,N],[13,"PIXMAN_yuy2","","",231,N],[13,"PIXMAN_yv12","","",231,N],[4,"pixman_kernel_t","","",N,N],[13,"PIXMAN_KERNEL_IMPULSE","","",232,N],[13,"PIXMAN_KERNEL_BOX","","",232,N],[13,"PIXMAN_KERNEL_LINEAR","","",232,N],[13,"PIXMAN_KERNEL_CUBIC","","",232,N],[13,"PIXMAN_KERNEL_GAUSSIAN","","",232,N],[13,"PIXMAN_KERNEL_LANCZOS2","","",232,N],[13,"PIXMAN_KERNEL_LANCZOS3","","",232,N],[13,"PIXMAN_KERNEL_LANCZOS3_STRETCHED","","",232,N],[4,"wl_shm_format","","",N,N],[13,"WL_SHM_FORMAT_ARGB8888","","",233,N],[13,"WL_SHM_FORMAT_XRGB8888","","",233,N],[13,"WL_SHM_FORMAT_C8","","",233,N],[13,"WL_SHM_FORMAT_RGB332","","",233,N],[13,"WL_SHM_FORMAT_BGR233","","",233,N],[13,"WL_SHM_FORMAT_XRGB4444","","",233,N],[13,"WL_SHM_FORMAT_XBGR4444","","",233,N],[13,"WL_SHM_FORMAT_RGBX4444","","",233,N],[13,"WL_SHM_FORMAT_BGRX4444","","",233,N],[13,"WL_SHM_FORMAT_ARGB4444","","",233,N],[13,"WL_SHM_FORMAT_ABGR4444","","",233,N],[13,"WL_SHM_FORMAT_RGBA4444","","",233,N],[13,"WL_SHM_FORMAT_BGRA4444","","",233,N],[13,"WL_SHM_FORMAT_XRGB1555","","",233,N],[13,"WL_SHM_FORMAT_XBGR1555","","",233,N],[13,"WL_SHM_FORMAT_RGBX5551","","",233,N],[13,"WL_SHM_FORMAT_BGRX5551","","",233,N],[13,"WL_SHM_FORMAT_ARGB1555","","",233,N],[13,"WL_SHM_FORMAT_ABGR1555","","",233,N],[13,"WL_SHM_FORMAT_RGBA5551","","",233,N],[13,"WL_SHM_FORMAT_BGRA5551","","",233,N],[13,"WL_SHM_FORMAT_RGB565","","",233,N],[13,"WL_SHM_FORMAT_BGR565","","",233,N],[13,"WL_SHM_FORMAT_RGB888","","",233,N],[13,"WL_SHM_FORMAT_BGR888","","",233,N],[13,"WL_SHM_FORMAT_XBGR8888","","",233,N],[13,"WL_SHM_FORMAT_RGBX8888","","",233,N],[13,"WL_SHM_FORMAT_BGRX8888","","",233,N],[13,"WL_SHM_FORMAT_ABGR8888","","",233,N],[13,"WL_SHM_FORMAT_RGBA8888","","",233,N],[13,"WL_SHM_FORMAT_BGRA8888","","",233,N],[13,"WL_SHM_FORMAT_XRGB2101010","","",233,N],[13,"WL_SHM_FORMAT_XBGR2101010","","",233,N],[13,"WL_SHM_FORMAT_RGBX1010102","","",233,N],[13,"WL_SHM_FORMAT_BGRX1010102","","",233,N],[13,"WL_SHM_FORMAT_ARGB2101010","","",233,N],[13,"WL_SHM_FORMAT_ABGR2101010","","",233,N],[13,"WL_SHM_FORMAT_RGBA1010102","","",233,N],[13,"WL_SHM_FORMAT_BGRA1010102","","",233,N],[13,"WL_SHM_FORMAT_YUYV","","",233,N],[13,"WL_SHM_FORMAT_YVYU","","",233,N],[13,"WL_SHM_FORMAT_UYVY","","",233,N],[13,"WL_SHM_FORMAT_VYUY","","",233,N],[13,"WL_SHM_FORMAT_AYUV","","",233,N],[13,"WL_SHM_FORMAT_NV12","","",233,N],[13,"WL_SHM_FORMAT_NV21","","",233,N],[13,"WL_SHM_FORMAT_NV16","","",233,N],[13,"WL_SHM_FORMAT_NV61","","",233,N],[13,"WL_SHM_FORMAT_YUV410","","",233,N],[13,"WL_SHM_FORMAT_YVU410","","",233,N],[13,"WL_SHM_FORMAT_YUV411","","",233,N],[13,"WL_SHM_FORMAT_YVU411","","",233,N],[13,"WL_SHM_FORMAT_YUV420","","",233,N],[13,"WL_SHM_FORMAT_YVU420","","",233,N],[13,"WL_SHM_FORMAT_YUV422","","",233,N],[13,"WL_SHM_FORMAT_YVU422","","",233,N],[13,"WL_SHM_FORMAT_YUV444","","",233,N],[13,"WL_SHM_FORMAT_YVU444","","",233,N],[4,"wl_data_device_manager_dnd_action","","",N,N],[13,"WL_DATA_DEVICE_MANAGER_DND_ACTION_NONE","","",234,N],[13,"WL_DATA_DEVICE_MANAGER_DND_ACTION_COPY","","",234,N],[13,"WL_DATA_DEVICE_MANAGER_DND_ACTION_MOVE","","",234,N],[13,"WL_DATA_DEVICE_MANAGER_DND_ACTION_ASK","","",234,N],[4,"wl_shell_surface_resize","","",N,N],[13,"WL_SHELL_SURFACE_RESIZE_NONE","","",235,N],[13,"WL_SHELL_SURFACE_RESIZE_TOP","","",235,N],[13,"WL_SHELL_SURFACE_RESIZE_BOTTOM","","",235,N],[13,"WL_SHELL_SURFACE_RESIZE_LEFT","","",235,N],[13,"WL_SHELL_SURFACE_RESIZE_TOP_LEFT","","",235,N],[13,"WL_SHELL_SURFACE_RESIZE_BOTTOM_LEFT","","",235,N],[13,"WL_SHELL_SURFACE_RESIZE_RIGHT","","",235,N],[13,"WL_SHELL_SURFACE_RESIZE_TOP_RIGHT","","",235,N],[13,"WL_SHELL_SURFACE_RESIZE_BOTTOM_RIGHT","","",235,N],[4,"wl_shell_surface_transient","","",N,N],[13,"WL_SHELL_SURFACE_TRANSIENT_INACTIVE","","",236,N],[4,"wl_shell_surface_fullscreen_method","","",N,N],[13,"WL_SHELL_SURFACE_FULLSCREEN_METHOD_DEFAULT","","",237,N],[13,"WL_SHELL_SURFACE_FULLSCREEN_METHOD_SCALE","","",237,N],[13,"WL_SHELL_SURFACE_FULLSCREEN_METHOD_DRIVER","","",237,N],[13,"WL_SHELL_SURFACE_FULLSCREEN_METHOD_FILL","","",237,N],[4,"wl_output_subpixel","","",N,N],[13,"WL_OUTPUT_SUBPIXEL_UNKNOWN","","",238,N],[13,"WL_OUTPUT_SUBPIXEL_NONE","","",238,N],[13,"WL_OUTPUT_SUBPIXEL_HORIZONTAL_RGB","","",238,N],[13,"WL_OUTPUT_SUBPIXEL_HORIZONTAL_BGR","","",238,N],[13,"WL_OUTPUT_SUBPIXEL_VERTICAL_RGB","","",238,N],[13,"WL_OUTPUT_SUBPIXEL_VERTICAL_BGR","","",238,N],[4,"wl_output_transform","","",N,N],[13,"WL_OUTPUT_TRANSFORM_NORMAL","","",239,N],[13,"WL_OUTPUT_TRANSFORM_90","","",239,N],[13,"WL_OUTPUT_TRANSFORM_180","","",239,N],[13,"WL_OUTPUT_TRANSFORM_270","","",239,N],[13,"WL_OUTPUT_TRANSFORM_FLIPPED","","",239,N],[13,"WL_OUTPUT_TRANSFORM_FLIPPED_90","","",239,N],[13,"WL_OUTPUT_TRANSFORM_FLIPPED_180","","",239,N],[13,"WL_OUTPUT_TRANSFORM_FLIPPED_270","","",239,N],[4,"wlr_dmabuf_attributes_flags","","",N,N],[13,"WLR_DMABUF_ATTRIBUTES_FLAGS_Y_INVERT","","",240,N],[13,"WLR_DMABUF_ATTRIBUTES_FLAGS_INTERLACED","","",240,N],[13,"WLR_DMABUF_ATTRIBUTES_FLAGS_BOTTOM_FIRST","","",240,N],[4,"wlr_output_present_flag","","",N,N],[13,"WLR_OUTPUT_PRESENT_VSYNC","","",241,N],[13,"WLR_OUTPUT_PRESENT_HW_CLOCK","","",241,N],[13,"WLR_OUTPUT_PRESENT_HW_COMPLETION","","",241,N],[13,"WLR_OUTPUT_PRESENT_ZERO_COPY","","",241,N],[4,"wlr_button_state","","",N,N],[13,"WLR_BUTTON_RELEASED","","",242,N],[13,"WLR_BUTTON_PRESSED","","",242,N],[4,"wlr_input_device_type","","",N,N],[13,"WLR_INPUT_DEVICE_KEYBOARD","","",243,N],[13,"WLR_INPUT_DEVICE_POINTER","","",243,N],[13,"WLR_INPUT_DEVICE_TOUCH","","",243,N],[13,"WLR_INPUT_DEVICE_TABLET_TOOL","","",243,N],[13,"WLR_INPUT_DEVICE_TABLET_PAD","","",243,N],[4,"xkb_keysym_flags","","",N,N],[13,"XKB_KEYSYM_NO_FLAGS","","",244,N],[13,"XKB_KEYSYM_CASE_INSENSITIVE","","",244,N],[4,"xkb_context_flags","","",N,N],[13,"XKB_CONTEXT_NO_FLAGS","","",245,N],[13,"XKB_CONTEXT_NO_DEFAULT_INCLUDES","","",245,N],[13,"XKB_CONTEXT_NO_ENVIRONMENT_NAMES","","",245,N],[4,"xkb_log_level","","",N,N],[13,"XKB_LOG_LEVEL_CRITICAL","","",246,N],[13,"XKB_LOG_LEVEL_ERROR","","",246,N],[13,"XKB_LOG_LEVEL_WARNING","","",246,N],[13,"XKB_LOG_LEVEL_INFO","","",246,N],[13,"XKB_LOG_LEVEL_DEBUG","","",246,N],[4,"xkb_keymap_compile_flags","","",N,N],[13,"XKB_KEYMAP_COMPILE_NO_FLAGS","","",247,N],[4,"xkb_keymap_format","","",N,N],[13,"XKB_KEYMAP_FORMAT_TEXT_V1","","",248,N],[4,"xkb_key_direction","","",N,N],[13,"XKB_KEY_UP","","",249,N],[13,"XKB_KEY_DOWN","","",249,N],[4,"xkb_state_component","","",N,N],[13,"XKB_STATE_MODS_DEPRESSED","","",250,N],[13,"XKB_STATE_MODS_LATCHED","","",250,N],[13,"XKB_STATE_MODS_LOCKED","","",250,N],[13,"XKB_STATE_MODS_EFFECTIVE","","",250,N],[13,"XKB_STATE_LAYOUT_DEPRESSED","","",250,N],[13,"XKB_STATE_LAYOUT_LATCHED","","",250,N],[13,"XKB_STATE_LAYOUT_LOCKED","","",250,N],[13,"XKB_STATE_LAYOUT_EFFECTIVE","","",250,N],[13,"XKB_STATE_LEDS","","",250,N],[4,"xkb_state_match","","",N,N],[13,"XKB_STATE_MATCH_ANY","","",251,N],[13,"XKB_STATE_MATCH_ALL","","",251,N],[13,"XKB_STATE_MATCH_NON_EXCLUSIVE","","",251,N],[4,"xkb_consumed_mode","","",N,N],[13,"XKB_CONSUMED_MODE_XKB","","",252,N],[13,"XKB_CONSUMED_MODE_GTK","","",252,N],[4,"wlr_keyboard_led","","",N,N],[13,"WLR_LED_NUM_LOCK","","",253,N],[13,"WLR_LED_CAPS_LOCK","","",253,N],[13,"WLR_LED_SCROLL_LOCK","","",253,N],[4,"wlr_keyboard_modifier","","",N,N],[13,"WLR_MODIFIER_SHIFT","","",254,N],[13,"WLR_MODIFIER_CAPS","","",254,N],[13,"WLR_MODIFIER_CTRL","","",254,N],[13,"WLR_MODIFIER_ALT","","",254,N],[13,"WLR_MODIFIER_MOD2","","",254,N],[13,"WLR_MODIFIER_MOD3","","",254,N],[13,"WLR_MODIFIER_LOGO","","",254,N],[13,"WLR_MODIFIER_MOD5","","",254,N],[4,"wlr_key_state","","",N,N],[13,"WLR_KEY_RELEASED","","",255,N],[13,"WLR_KEY_PRESSED","","",255,N],[4,"wlr_axis_source","","",N,N],[13,"WLR_AXIS_SOURCE_WHEEL","","",256,N],[13,"WLR_AXIS_SOURCE_FINGER","","",256,N],[13,"WLR_AXIS_SOURCE_CONTINUOUS","","",256,N],[13,"WLR_AXIS_SOURCE_WHEEL_TILT","","",256,N],[4,"wlr_axis_orientation","","",N,N],[13,"WLR_AXIS_ORIENTATION_VERTICAL","","",257,N],[13,"WLR_AXIS_ORIENTATION_HORIZONTAL","","",257,N],[4,"wlr_tablet_tool_type","","",N,N],[13,"WLR_TABLET_TOOL_TYPE_PEN","","",258,N],[13,"WLR_TABLET_TOOL_TYPE_ERASER","","",258,N],[13,"WLR_TABLET_TOOL_TYPE_BRUSH","","",258,N],[13,"WLR_TABLET_TOOL_TYPE_PENCIL","","",258,N],[13,"WLR_TABLET_TOOL_TYPE_AIRBRUSH","","",258,N],[13,"WLR_TABLET_TOOL_TYPE_MOUSE","","",258,N],[13,"WLR_TABLET_TOOL_TYPE_LENS","","",258,N],[4,"wlr_tablet_tool_axes","","",N,N],[13,"WLR_TABLET_TOOL_AXIS_X","","",259,N],[13,"WLR_TABLET_TOOL_AXIS_Y","","",259,N],[13,"WLR_TABLET_TOOL_AXIS_DISTANCE","","",259,N],[13,"WLR_TABLET_TOOL_AXIS_PRESSURE","","",259,N],[13,"WLR_TABLET_TOOL_AXIS_TILT_X","","",259,N],[13,"WLR_TABLET_TOOL_AXIS_TILT_Y","","",259,N],[13,"WLR_TABLET_TOOL_AXIS_ROTATION","","",259,N],[13,"WLR_TABLET_TOOL_AXIS_SLIDER","","",259,N],[13,"WLR_TABLET_TOOL_AXIS_WHEEL","","",259,N],[4,"wlr_tablet_tool_proximity_state","","",N,N],[13,"WLR_TABLET_TOOL_PROXIMITY_OUT","","",260,N],[13,"WLR_TABLET_TOOL_PROXIMITY_IN","","",260,N],[4,"wlr_tablet_tool_tip_state","","",N,N],[13,"WLR_TABLET_TOOL_TIP_UP","","",261,N],[13,"WLR_TABLET_TOOL_TIP_DOWN","","",261,N],[4,"wlr_tablet_pad_ring_source","","",N,N],[13,"WLR_TABLET_PAD_RING_SOURCE_UNKNOWN","","",262,N],[13,"WLR_TABLET_PAD_RING_SOURCE_FINGER","","",262,N],[4,"wlr_tablet_pad_strip_source","","",N,N],[13,"WLR_TABLET_PAD_STRIP_SOURCE_UNKNOWN","","",263,N],[13,"WLR_TABLET_PAD_STRIP_SOURCE_FINGER","","",263,N],[4,"wlr_renderer_read_pixels_flags","","",N,N],[13,"WLR_RENDERER_READ_PIXELS_Y_INVERT","","",264,N],[4,"wlr_direction","","",N,N],[13,"WLR_DIRECTION_UP","","",265,N],[13,"WLR_DIRECTION_DOWN","","",265,N],[13,"WLR_DIRECTION_LEFT","","",265,N],[13,"WLR_DIRECTION_RIGHT","","",265,N],[4,"wlr_surface_state_field","","",N,N],[13,"WLR_SURFACE_STATE_BUFFER","","",266,N],[13,"WLR_SURFACE_STATE_SURFACE_DAMAGE","","",266,N],[13,"WLR_SURFACE_STATE_BUFFER_DAMAGE","","",266,N],[13,"WLR_SURFACE_STATE_OPAQUE_REGION","","",266,N],[13,"WLR_SURFACE_STATE_INPUT_REGION","","",266,N],[13,"WLR_SURFACE_STATE_TRANSFORM","","",266,N],[13,"WLR_SURFACE_STATE_SCALE","","",266,N],[13,"WLR_SURFACE_STATE_FRAME_CALLBACK_LIST","","",266,N],[4,"wlr_server_decoration_manager_mode","","Possible values to use in request_mode and the event mode. Same as org_kde_kwin_server_decoration_manager_mode.",N,N],[13,"WLR_SERVER_DECORATION_MANAGER_MODE_NONE","","",267,N],[13,"WLR_SERVER_DECORATION_MANAGER_MODE_CLIENT","","",267,N],[13,"WLR_SERVER_DECORATION_MANAGER_MODE_SERVER","","",267,N],[4,"wlr_wl_shell_surface_state","","",N,N],[13,"WLR_WL_SHELL_SURFACE_STATE_NONE","","",268,N],[13,"WLR_WL_SHELL_SURFACE_STATE_TOPLEVEL","","",268,N],[13,"WLR_WL_SHELL_SURFACE_STATE_MAXIMIZED","","",268,N],[13,"WLR_WL_SHELL_SURFACE_STATE_FULLSCREEN","","",268,N],[13,"WLR_WL_SHELL_SURFACE_STATE_TRANSIENT","","",268,N],[13,"WLR_WL_SHELL_SURFACE_STATE_POPUP","","",268,N],[4,"zxdg_positioner_v6_anchor","","",N,N],[13,"ZXDG_POSITIONER_V6_ANCHOR_NONE","","",269,N],[13,"ZXDG_POSITIONER_V6_ANCHOR_TOP","","",269,N],[13,"ZXDG_POSITIONER_V6_ANCHOR_BOTTOM","","",269,N],[13,"ZXDG_POSITIONER_V6_ANCHOR_LEFT","","",269,N],[13,"ZXDG_POSITIONER_V6_ANCHOR_RIGHT","","",269,N],[4,"zxdg_positioner_v6_gravity","","",N,N],[13,"ZXDG_POSITIONER_V6_GRAVITY_NONE","","",270,N],[13,"ZXDG_POSITIONER_V6_GRAVITY_TOP","","",270,N],[13,"ZXDG_POSITIONER_V6_GRAVITY_BOTTOM","","",270,N],[13,"ZXDG_POSITIONER_V6_GRAVITY_LEFT","","",270,N],[13,"ZXDG_POSITIONER_V6_GRAVITY_RIGHT","","",270,N],[4,"zxdg_positioner_v6_constraint_adjustment","","@ingroup iface_zxdg_positioner_v6 vertically resize the surface",N,N],[13,"ZXDG_POSITIONER_V6_CONSTRAINT_ADJUSTMENT_NONE","","",271,N],[13,"ZXDG_POSITIONER_V6_CONSTRAINT_ADJUSTMENT_SLIDE_X","","",271,N],[13,"ZXDG_POSITIONER_V6_CONSTRAINT_ADJUSTMENT_SLIDE_Y","","",271,N],[13,"ZXDG_POSITIONER_V6_CONSTRAINT_ADJUSTMENT_FLIP_X","","",271,N],[13,"ZXDG_POSITIONER_V6_CONSTRAINT_ADJUSTMENT_FLIP_Y","","",271,N],[13,"ZXDG_POSITIONER_V6_CONSTRAINT_ADJUSTMENT_RESIZE_X","","",271,N],[13,"ZXDG_POSITIONER_V6_CONSTRAINT_ADJUSTMENT_RESIZE_Y","","",271,N],[4,"wlr_xdg_surface_v6_role","","",N,N],[13,"WLR_XDG_SURFACE_V6_ROLE_NONE","","",272,N],[13,"WLR_XDG_SURFACE_V6_ROLE_TOPLEVEL","","",272,N],[13,"WLR_XDG_SURFACE_V6_ROLE_POPUP","","",272,N],[4,"xdg_positioner_anchor","","",N,N],[13,"XDG_POSITIONER_ANCHOR_NONE","","",273,N],[13,"XDG_POSITIONER_ANCHOR_TOP","","",273,N],[13,"XDG_POSITIONER_ANCHOR_BOTTOM","","",273,N],[13,"XDG_POSITIONER_ANCHOR_LEFT","","",273,N],[13,"XDG_POSITIONER_ANCHOR_RIGHT","","",273,N],[13,"XDG_POSITIONER_ANCHOR_TOP_LEFT","","",273,N],[13,"XDG_POSITIONER_ANCHOR_BOTTOM_LEFT","","",273,N],[13,"XDG_POSITIONER_ANCHOR_TOP_RIGHT","","",273,N],[13,"XDG_POSITIONER_ANCHOR_BOTTOM_RIGHT","","",273,N],[4,"xdg_positioner_gravity","","",N,N],[13,"XDG_POSITIONER_GRAVITY_NONE","","",274,N],[13,"XDG_POSITIONER_GRAVITY_TOP","","",274,N],[13,"XDG_POSITIONER_GRAVITY_BOTTOM","","",274,N],[13,"XDG_POSITIONER_GRAVITY_LEFT","","",274,N],[13,"XDG_POSITIONER_GRAVITY_RIGHT","","",274,N],[13,"XDG_POSITIONER_GRAVITY_TOP_LEFT","","",274,N],[13,"XDG_POSITIONER_GRAVITY_BOTTOM_LEFT","","",274,N],[13,"XDG_POSITIONER_GRAVITY_TOP_RIGHT","","",274,N],[13,"XDG_POSITIONER_GRAVITY_BOTTOM_RIGHT","","",274,N],[4,"xdg_positioner_constraint_adjustment","","@ingroup iface_xdg_positioner vertically resize the surface",N,N],[13,"XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_NONE","","",275,N],[13,"XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_SLIDE_X","","",275,N],[13,"XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_SLIDE_Y","","",275,N],[13,"XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_FLIP_X","","",275,N],[13,"XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_FLIP_Y","","",275,N],[13,"XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_RESIZE_X","","",275,N],[13,"XDG_POSITIONER_CONSTRAINT_ADJUSTMENT_RESIZE_Y","","",275,N],[4,"wlr_xdg_surface_role","","",N,N],[13,"WLR_XDG_SURFACE_ROLE_NONE","","",276,N],[13,"WLR_XDG_SURFACE_ROLE_TOPLEVEL","","",276,N],[13,"WLR_XDG_SURFACE_ROLE_POPUP","","",276,N],[4,"wlr_xwayland_surface_decorations","","",N,N],[13,"WLR_XWAYLAND_SURFACE_DECORATIONS_ALL","","",277,N],[13,"WLR_XWAYLAND_SURFACE_DECORATIONS_NO_BORDER","","",277,N],[13,"WLR_XWAYLAND_SURFACE_DECORATIONS_NO_TITLE","","",277,N],[5,"wlr_log_init","","",N,N],[5,"wlr_log_get_verbosity","","",N,N],[5,"_wlr_log","","",N,N],[5,"_wlr_vlog","","",N,N],[5,"_wlr_strip_path","","",N,N],[5,"pixman_transform_init_identity","","",N,N],[5,"pixman_transform_point_3d","","",N,N],[5,"pixman_transform_point","","",N,N],[5,"pixman_transform_multiply","","",N,N],[5,"pixman_transform_init_scale","","",N,N],[5,"pixman_transform_scale","","",N,N],[5,"pixman_transform_init_rotate","","",N,N],[5,"pixman_transform_rotate","","",N,N],[5,"pixman_transform_init_translate","","",N,N],[5,"pixman_transform_translate","","",N,N],[5,"pixman_transform_bounds","","",N,N],[5,"pixman_transform_invert","","",N,N],[5,"pixman_transform_is_identity","","",N,N],[5,"pixman_transform_is_scale","","",N,N],[5,"pixman_transform_is_int_translate","","",N,N],[5,"pixman_transform_is_inverse","","",N,N],[5,"pixman_transform_from_pixman_f_transform","","",N,N],[5,"pixman_f_transform_from_pixman_transform","","",N,N],[5,"pixman_f_transform_invert","","",N,N],[5,"pixman_f_transform_point","","",N,N],[5,"pixman_f_transform_point_3d","","",N,N],[5,"pixman_f_transform_multiply","","",N,N],[5,"pixman_f_transform_init_scale","","",N,N],[5,"pixman_f_transform_scale","","",N,N],[5,"pixman_f_transform_init_rotate","","",N,N],[5,"pixman_f_transform_rotate","","",N,N],[5,"pixman_f_transform_init_translate","","",N,N],[5,"pixman_f_transform_translate","","",N,N],[5,"pixman_f_transform_bounds","","",N,N],[5,"pixman_f_transform_init_identity","","",N,N],[5,"pixman_region_set_static_pointers","","",N,N],[5,"pixman_region_init","","",N,N],[5,"pixman_region_init_rect","","",N,N],[5,"pixman_region_init_rects","","",N,N],[5,"pixman_region_init_with_extents","","",N,N],[5,"pixman_region_init_from_image","","",N,N],[5,"pixman_region_fini","","",N,N],[5,"pixman_region_translate","","",N,N],[5,"pixman_region_copy","","",N,N],[5,"pixman_region_intersect","","",N,N],[5,"pixman_region_union","","",N,N],[5,"pixman_region_union_rect","","",N,N],[5,"pixman_region_intersect_rect","","",N,N],[5,"pixman_region_subtract","","",N,N],[5,"pixman_region_inverse","","",N,N],[5,"pixman_region_contains_point","","",N,N],[5,"pixman_region_contains_rectangle","","",N,N],[5,"pixman_region_not_empty","","",N,N],[5,"pixman_region_extents","","",N,N],[5,"pixman_region_n_rects","","",N,N],[5,"pixman_region_rectangles","","",N,N],[5,"pixman_region_equal","","",N,N],[5,"pixman_region_selfcheck","","",N,N],[5,"pixman_region_reset","","",N,N],[5,"pixman_region_clear","","",N,N],[5,"pixman_region32_init","","",N,N],[5,"pixman_region32_init_rect","","",N,N],[5,"pixman_region32_init_rects","","",N,N],[5,"pixman_region32_init_with_extents","","",N,N],[5,"pixman_region32_init_from_image","","",N,N],[5,"pixman_region32_fini","","",N,N],[5,"pixman_region32_translate","","",N,N],[5,"pixman_region32_copy","","",N,N],[5,"pixman_region32_intersect","","",N,N],[5,"pixman_region32_union","","",N,N],[5,"pixman_region32_intersect_rect","","",N,N],[5,"pixman_region32_union_rect","","",N,N],[5,"pixman_region32_subtract","","",N,N],[5,"pixman_region32_inverse","","",N,N],[5,"pixman_region32_contains_point","","",N,N],[5,"pixman_region32_contains_rectangle","","",N,N],[5,"pixman_region32_not_empty","","",N,N],[5,"pixman_region32_extents","","",N,N],[5,"pixman_region32_n_rects","","",N,N],[5,"pixman_region32_rectangles","","",N,N],[5,"pixman_region32_equal","","",N,N],[5,"pixman_region32_selfcheck","","",N,N],[5,"pixman_region32_reset","","",N,N],[5,"pixman_region32_clear","","",N,N],[5,"pixman_blt","","",N,N],[5,"pixman_fill","","",N,N],[5,"pixman_version","","",N,N],[5,"pixman_version_string","","",N,N],[5,"pixman_format_supported_destination","","",N,N],[5,"pixman_format_supported_source","","",N,N],[5,"pixman_image_create_solid_fill","","",N,N],[5,"pixman_image_create_linear_gradient","","",N,N],[5,"pixman_image_create_radial_gradient","","",N,N],[5,"pixman_image_create_conical_gradient","","",N,N],[5,"pixman_image_create_bits","","",N,N],[5,"pixman_image_create_bits_no_clear","","",N,N],[5,"pixman_image_ref","","",N,N],[5,"pixman_image_unref","","",N,N],[5,"pixman_image_set_destroy_function","","",N,N],[5,"pixman_image_get_destroy_data","","",N,N],[5,"pixman_image_set_clip_region","","",N,N],[5,"pixman_image_set_clip_region32","","",N,N],[5,"pixman_image_set_has_client_clip","","",N,N],[5,"pixman_image_set_transform","","",N,N],[5,"pixman_image_set_repeat","","",N,N],[5,"pixman_image_set_filter","","",N,N],[5,"pixman_image_set_source_clipping","","",N,N],[5,"pixman_image_set_alpha_map","","",N,N],[5,"pixman_image_set_component_alpha","","",N,N],[5,"pixman_image_get_component_alpha","","",N,N],[5,"pixman_image_set_accessors","","",N,N],[5,"pixman_image_set_indexed","","",N,N],[5,"pixman_image_get_data","","",N,N],[5,"pixman_image_get_width","","",N,N],[5,"pixman_image_get_height","","",N,N],[5,"pixman_image_get_stride","","",N,N],[5,"pixman_image_get_depth","","",N,N],[5,"pixman_image_get_format","","",N,N],[5,"pixman_filter_create_separable_convolution","","",N,N],[5,"pixman_image_fill_rectangles","","",N,N],[5,"pixman_image_fill_boxes","","",N,N],[5,"pixman_compute_composite_region","","",N,N],[5,"pixman_image_composite","","",N,N],[5,"pixman_image_composite32","","",N,N],[5,"pixman_disable_out_of_bounds_workaround","","",N,N],[5,"pixman_glyph_cache_create","","",N,N],[5,"pixman_glyph_cache_destroy","","",N,N],[5,"pixman_glyph_cache_freeze","","",N,N],[5,"pixman_glyph_cache_thaw","","",N,N],[5,"pixman_glyph_cache_lookup","","",N,N],[5,"pixman_glyph_cache_insert","","",N,N],[5,"pixman_glyph_cache_remove","","",N,N],[5,"pixman_glyph_get_extents","","",N,N],[5,"pixman_glyph_get_mask_format","","",N,N],[5,"pixman_composite_glyphs","","",N,N],[5,"pixman_composite_glyphs_no_mask","","",N,N],[5,"pixman_sample_ceil_y","","",N,N],[5,"pixman_sample_floor_y","","",N,N],[5,"pixman_edge_step","","",N,N],[5,"pixman_edge_init","","",N,N],[5,"pixman_line_fixed_edge_init","","",N,N],[5,"pixman_rasterize_edges","","",N,N],[5,"pixman_add_traps","","",N,N],[5,"pixman_add_trapezoids","","",N,N],[5,"pixman_rasterize_trapezoid","","",N,N],[5,"pixman_composite_trapezoids","","",N,N],[5,"pixman_composite_triangles","","",N,N],[5,"pixman_add_triangles","","",N,N],[5,"wlr_region_scale","","Scales a region, ie. multiplies all its coordinates by `scale`.",N,N],[5,"wlr_region_transform","","Applies a transform to a region inside a box of size `width` x `height`.",N,N],[5,"wlr_region_expand","","Expands the region of `distance`. If `distance` is negative, it shrinks the region.",N,N],[5,"wlr_region_rotated_bounds","","",N,N],[5,"wlr_region_confine","","",N,N],[5,"wlr_xcursor_theme_load","","Loads the named xcursor theme at the given cursor size (in pixels). This is useful if you need cursor images for your compositor to use when a client-side cursors is not available or you wish to override client-side cursors for a particular UI interaction (such as using a grab cursor when moving a window around).",N,N],[5,"wlr_xcursor_theme_destroy","","",N,N],[5,"wlr_xcursor_theme_get_cursor","","Obtains a wlr_xcursor image for the specified cursor name (e.g. \"left_ptr\").",N,N],[5,"wlr_xcursor_frame","","Returns the current frame number for an animated cursor give a monotonic time reference.",N,N],[5,"wlr_xcursor_get_resize_name","","Get the name of the resize cursor image for the given edges.",N,N],[5,"wlr_session_create","","",N,N],[5,"wlr_session_destroy","","",N,N],[5,"wlr_session_open_file","","",N,N],[5,"wlr_session_close_file","","",N,N],[5,"wlr_session_signal_add","","",N,N],[5,"wlr_session_change_vt","","",N,N],[5,"wlr_session_find_gpus","","",N,N],[5,"wlr_dmabuf_attributes_finish","","Closes all file descriptors in the DMA-BUF attributes.",N,N],[5,"wlr_egl_init","","Initializes an EGL context for the given platform and remote display. Will attempt to load all possibly required api functions.",N,N],[5,"wlr_egl_finish","","Frees all related EGL resources, makes the context not-current and unbinds a bound wayland display.",N,N],[5,"wlr_egl_bind_display","","Binds the given display to the EGL instance. This will allow clients to create EGL surfaces from wayland ones and render to it.",N,N],[5,"wlr_egl_create_surface","","Returns a surface for the given native window The window must match the remote display the wlr_egl was created with.",N,N],[5,"wlr_egl_create_image_from_wl_drm","","Creates an EGL image from the given wl_drm buffer resource.",N,N],[5,"wlr_egl_create_image_from_dmabuf","","Creates an EGL image from the given dmabuf attributes. Check usability of the dmabuf with wlr_egl_check_import_dmabuf once first.",N,N],[5,"wlr_egl_get_dmabuf_formats","","Get the available dmabuf formats",N,N],[5,"wlr_egl_get_dmabuf_modifiers","","Get the available dmabuf modifiers for a given format",N,N],[5,"wlr_egl_export_image_to_dmabuf","","",N,N],[5,"wlr_egl_destroy_image","","Destroys an EGL image created with the given wlr_egl.",N,N],[5,"wlr_egl_make_current","","",N,N],[5,"wlr_egl_is_current","","",N,N],[5,"wlr_egl_swap_buffers","","",N,N],[5,"wlr_egl_destroy_surface","","",N,N],[5,"wlr_backend_autocreate","","Automatically initializes the most suitable backend given the environment. Will always return a multibackend. The backend is created but not started. Returns NULL on failure.",N,N],[5,"wlr_backend_start","","Start the backend. This may signal new_input or new_output immediately, but may also wait until the display's event loop begins. Returns false on failure.",N,N],[5,"wlr_backend_destroy","","Destroy the backend and clean up all of its resources. Normally called automatically when the wl_display is destroyed.",N,N],[5,"wlr_backend_get_renderer","","Obtains the wlr_renderer reference this backend is using.",N,N],[5,"wlr_backend_get_session","","Obtains the wlr_session reference from this backend if there is any. Might return NULL for backends that don't use a session.",N,N],[5,"wlr_backend_get_presentation_clock","","Returns the clock used by the backend for presentation feedback.",N,N],[5,"wlr_output_enable","","Enables or disables the output. A disabled output is turned off and doesn't emit `frame` events.",N,N],[5,"wlr_output_create_global","","",N,N],[5,"wlr_output_destroy_global","","",N,N],[5,"wlr_output_set_mode","","Sets the output mode. Enables the output if it's currently disabled.",N,N],[5,"wlr_output_set_custom_mode","","Sets a custom mode on the output. If modes are available, they are preferred. Setting `refresh` to zero lets the backend pick a preferred value.",N,N],[5,"wlr_output_set_transform","","",N,N],[5,"wlr_output_set_position","","",N,N],[5,"wlr_output_set_scale","","",N,N],[5,"wlr_output_destroy","","",N,N],[5,"wlr_output_transformed_resolution","","Computes the transformed output resolution.",N,N],[5,"wlr_output_effective_resolution","","Computes the transformed and scaled output resolution.",N,N],[5,"wlr_output_make_current","","Makes the output rendering context current.",N,N],[5,"wlr_output_preferred_read_format","","Get the preferred format for reading pixels. This function might change the current rendering context.",N,N],[5,"wlr_output_swap_buffers","","Swaps the output buffers. If the time of the frame isn't known, set `when` to NULL. If the compositor doesn't support damage tracking, set `damage` to NULL.",N,N],[5,"wlr_output_schedule_frame","","Manually schedules a `frame` event. If a `frame` event is already pending, it is a no-op.",N,N],[5,"wlr_output_get_gamma_size","","Returns the maximum length of each gamma ramp, or 0 if unsupported.",N,N],[5,"wlr_output_set_gamma","","Sets the gamma table for this output. `r`, `g` and `b` are gamma ramps for red, green and blue. `size` is the length of the ramps and must not exceed the value returned by `wlr_output_get_gamma_size`.",N,N],[5,"wlr_output_export_dmabuf","","",N,N],[5,"wlr_output_from_resource","","",N,N],[5,"wlr_output_lock_software_cursors","","Locks the output to only use software cursors instead of hardware cursors. This is useful if hardware cursors need to be temporarily disabled (e.g. during screen capture). There must be as many unlocks as there have been locks to restore the original state. There should never be an unlock before a lock.",N,N],[5,"wlr_output_render_software_cursors","","Renders software cursors. This is a utility function that can be called when compositors render.",N,N],[5,"wlr_output_cursor_create","","",N,N],[5,"wlr_output_cursor_set_image","","Sets the cursor image. The image must be already scaled for the output.",N,N],[5,"wlr_output_cursor_set_surface","","",N,N],[5,"wlr_output_cursor_move","","",N,N],[5,"wlr_output_cursor_destroy","","",N,N],[5,"wlr_output_transform_invert","","Returns the transform that, when composed with `tr`, gives `WL_OUTPUT_TRANSFORM_NORMAL`.",N,N],[5,"wlr_output_transform_compose","","Returns a transform that, when applied, has the same effect as applying sequentially `tr_a` and `tr_b`.",N,N],[5,"wlr_drm_backend_create","","Creates a DRM backend using the specified GPU file descriptor (typically from a device node in /dev/dri).",N,N],[5,"wlr_backend_is_drm","","",N,N],[5,"wlr_output_is_drm","","",N,N],[5,"wlr_drm_connector_add_mode","","",N,N],[5,"xkb_keysym_get_name","","",N,N],[5,"xkb_keysym_from_name","","",N,N],[5,"xkb_keysym_to_utf8","","",N,N],[5,"xkb_keysym_to_utf32","","",N,N],[5,"xkb_keysym_to_upper","","",N,N],[5,"xkb_keysym_to_lower","","",N,N],[5,"xkb_context_new","","",N,N],[5,"xkb_context_ref","","",N,N],[5,"xkb_context_unref","","",N,N],[5,"xkb_context_set_user_data","","",N,N],[5,"xkb_context_get_user_data","","",N,N],[5,"xkb_context_include_path_append","","",N,N],[5,"xkb_context_include_path_append_default","","",N,N],[5,"xkb_context_include_path_reset_defaults","","",N,N],[5,"xkb_context_include_path_clear","","",N,N],[5,"xkb_context_num_include_paths","","",N,N],[5,"xkb_context_include_path_get","","",N,N],[5,"xkb_context_set_log_level","","",N,N],[5,"xkb_context_get_log_level","","",N,N],[5,"xkb_context_set_log_verbosity","","",N,N],[5,"xkb_context_get_log_verbosity","","",N,N],[5,"xkb_context_set_log_fn","","",N,N],[5,"xkb_keymap_new_from_names","","",N,N],[5,"xkb_keymap_new_from_file","","",N,N],[5,"xkb_keymap_new_from_string","","",N,N],[5,"xkb_keymap_new_from_buffer","","",N,N],[5,"xkb_keymap_ref","","",N,N],[5,"xkb_keymap_unref","","",N,N],[5,"xkb_keymap_get_as_string","","",N,N],[5,"xkb_keymap_min_keycode","","",N,N],[5,"xkb_keymap_max_keycode","","",N,N],[5,"xkb_keymap_key_for_each","","",N,N],[5,"xkb_keymap_key_get_name","","",N,N],[5,"xkb_keymap_key_by_name","","",N,N],[5,"xkb_keymap_num_mods","","",N,N],[5,"xkb_keymap_mod_get_name","","",N,N],[5,"xkb_keymap_mod_get_index","","",N,N],[5,"xkb_keymap_num_layouts","","",N,N],[5,"xkb_keymap_layout_get_name","","",N,N],[5,"xkb_keymap_layout_get_index","","",N,N],[5,"xkb_keymap_num_leds","","",N,N],[5,"xkb_keymap_led_get_name","","",N,N],[5,"xkb_keymap_led_get_index","","",N,N],[5,"xkb_keymap_num_layouts_for_key","","",N,N],[5,"xkb_keymap_num_levels_for_key","","",N,N],[5,"xkb_keymap_key_get_syms_by_level","","",N,N],[5,"xkb_keymap_key_repeats","","",N,N],[5,"xkb_state_new","","",N,N],[5,"xkb_state_ref","","",N,N],[5,"xkb_state_unref","","",N,N],[5,"xkb_state_get_keymap","","",N,N],[5,"xkb_state_update_key","","",N,N],[5,"xkb_state_update_mask","","",N,N],[5,"xkb_state_key_get_syms","","",N,N],[5,"xkb_state_key_get_utf8","","",N,N],[5,"xkb_state_key_get_utf32","","",N,N],[5,"xkb_state_key_get_one_sym","","",N,N],[5,"xkb_state_key_get_layout","","",N,N],[5,"xkb_state_key_get_level","","",N,N],[5,"xkb_state_serialize_mods","","",N,N],[5,"xkb_state_serialize_layout","","",N,N],[5,"xkb_state_mod_name_is_active","","",N,N],[5,"xkb_state_mod_names_are_active","","",N,N],[5,"xkb_state_mod_index_is_active","","",N,N],[5,"xkb_state_mod_indices_are_active","","",N,N],[5,"xkb_state_key_get_consumed_mods2","","",N,N],[5,"xkb_state_key_get_consumed_mods","","",N,N],[5,"xkb_state_mod_index_is_consumed2","","",N,N],[5,"xkb_state_mod_index_is_consumed","","",N,N],[5,"xkb_state_mod_mask_remove_consumed","","",N,N],[5,"xkb_state_layout_name_is_active","","",N,N],[5,"xkb_state_layout_index_is_active","","",N,N],[5,"xkb_state_led_name_is_active","","",N,N],[5,"xkb_state_led_index_is_active","","",N,N],[5,"wlr_keyboard_set_keymap","","",N,N],[5,"wlr_keyboard_set_repeat_info","","Sets the keyboard repeat info. `rate` is in key repeats/second and delay is in milliseconds.",N,N],[5,"wlr_keyboard_led_update","","",N,N],[5,"wlr_keyboard_get_modifiers","","",N,N],[5,"wlr_list_init","","Initialize a list. Returns true on success, false on failure.",N,N],[5,"wlr_list_finish","","Deinitialize a list.",N,N],[5,"wlr_list_for_each","","Executes `callback` on each element in the list.",N,N],[5,"wlr_list_push","","Add `item` to the end of a list. Returns: new list length or `-1` on failure.",N,N],[5,"wlr_list_insert","","Place `item` into index `index` in the list. Returns: new list length or `-1` on failure.",N,N],[5,"wlr_list_del","","Remove an item from the list.",N,N],[5,"wlr_list_pop","","Remove and return an item from the end of the list.",N,N],[5,"wlr_list_peek","","Get a reference to the last item of a list without removal.",N,N],[5,"wlr_list_cat","","Append each item in `source` to `list`. Does not modify `source`. Returns: new list length or `-1` on failure.",N,N],[5,"wlr_list_qsort","","Sort a list using `qsort`.",N,N],[5,"wlr_list_find","","Return the index of the first item in the list that returns 0 for the given `compare` function, or -1 if none matches.",N,N],[5,"wlr_headless_backend_create","","Creates a headless backend. A headless backend has no outputs or inputs by default.",N,N],[5,"wlr_headless_add_output","","Create a new headless output backed by an in-memory EGL framebuffer. You can read pixels from this framebuffer via wlr_renderer_read_pixels but it is otherwise not displayed.",N,N],[5,"wlr_headless_add_input_device","","Creates a new input device. The caller is responsible for manually raising any event signals on the new input device if it wants to simulate input events.",N,N],[5,"wlr_backend_is_headless","","",N,N],[5,"wlr_input_device_is_headless","","",N,N],[5,"wlr_output_is_headless","","",N,N],[5,"wlr_backend_init","","Initializes common state on a wlr_backend and sets the implementation to the provided wlr_backend_impl reference.",N,N],[5,"wlr_libinput_backend_create","","",N,N],[5,"wlr_libinput_get_device_handle","","Gets the underlying libinput_device handle for the given wlr_input_device",N,N],[5,"wlr_backend_is_libinput","","",N,N],[5,"wlr_input_device_is_libinput","","",N,N],[5,"wlr_multi_backend_create","","Creates a multi-backend. Multi-backends wrap an arbitrary number of backends and aggregate their new_output/new_input signals.",N,N],[5,"wlr_multi_backend_add","","Adds the given backend to the multi backend. This should be done before the new backend is started.",N,N],[5,"wlr_multi_backend_remove","","",N,N],[5,"wlr_backend_is_multi","","",N,N],[5,"wlr_multi_is_empty","","",N,N],[5,"wlr_multi_for_each_backend","","",N,N],[5,"wlr_wl_backend_create","","Creates a new wlr_wl_backend. This backend will be created with no outputs; you must use wlr_wl_output_create to add them.",N,N],[5,"wlr_wl_output_create","","Adds a new output to this backend. You may remove outputs by destroying them. Note that if called before initializing the backend, this will return NULL and your outputs will be created during initialization (and given to you via the output_add signal).",N,N],[5,"wlr_backend_is_wl","","True if the given backend is a wlr_wl_backend.",N,N],[5,"wlr_input_device_is_wl","","True if the given input device is a wlr_wl_input_device.",N,N],[5,"wlr_output_is_wl","","True if the given output is a wlr_wl_output.",N,N],[5,"wlr_x11_backend_create","","",N,N],[5,"wlr_x11_output_create","","",N,N],[5,"wlr_backend_is_x11","","",N,N],[5,"wlr_input_device_is_x11","","",N,N],[5,"wlr_output_is_x11","","",N,N],[5,"wlr_texture_from_pixels","","Create a new texture from raw pixel data. `stride` is in bytes. The returned texture is mutable.",N,N],[5,"wlr_texture_from_wl_drm","","Create a new texture from a wl_drm resource. The returned texture is immutable.",N,N],[5,"wlr_texture_from_dmabuf","","Create a new texture from a DMA-BUF. The returned texture is immutable.",N,N],[5,"wlr_texture_get_size","","Get the texture width and height.",N,N],[5,"wlr_texture_is_opaque","","Returns true if this texture is using a fully opaque format.",N,N],[5,"wlr_texture_write_pixels","","Update a texture with raw pixels. The texture must be mutable, and the input data must have the same pixel format that the texture was created with.",N,N],[5,"wlr_texture_to_dmabuf","","",N,N],[5,"wlr_texture_destroy","","Destroys this wlr_texture.",N,N],[5,"wlr_box_closest_point","","",N,N],[5,"wlr_box_intersection","","",N,N],[5,"wlr_box_contains_point","","",N,N],[5,"wlr_box_empty","","",N,N],[5,"wlr_box_transform","","Transforms a box inside a `width` x `height` box.",N,N],[5,"wlr_box_rotated_bounds","","Creates the smallest box that contains the box rotated about its center.",N,N],[5,"wlr_box_from_pixman_box32","","",N,N],[5,"wlr_renderer_autocreate","","",N,N],[5,"wlr_renderer_begin","","",N,N],[5,"wlr_renderer_end","","",N,N],[5,"wlr_renderer_clear","","",N,N],[5,"wlr_renderer_scissor","","Defines a scissor box. Only pixels that lie within the scissor box can be modified by drawing functions. Providing a NULL `box` disables the scissor box.",N,N],[5,"wlr_render_texture","","Renders the requested texture.",N,N],[5,"wlr_render_texture_with_matrix","","Renders the requested texture using the provided matrix.",N,N],[5,"wlr_render_rect","","Renders a solid rectangle in the specified color.",N,N],[5,"wlr_render_quad_with_matrix","","Renders a solid quadrangle in the specified color with the specified matrix.",N,N],[5,"wlr_render_ellipse","","Renders a solid ellipse in the specified color.",N,N],[5,"wlr_render_ellipse_with_matrix","","Renders a solid ellipse in the specified color with the specified matrix.",N,N],[5,"wlr_renderer_get_formats","","Returns a list of pixel formats supported by this renderer.",N,N],[5,"wlr_renderer_resource_is_wl_drm_buffer","","Returns true if this wl_buffer is a wl_drm buffer.",N,N],[5,"wlr_renderer_wl_drm_buffer_get_size","","Gets the width and height of a wl_drm buffer.",N,N],[5,"wlr_renderer_get_dmabuf_formats","","Get the available dmabuf formats",N,N],[5,"wlr_renderer_get_dmabuf_modifiers","","Get the available dmabuf modifiers for a given format",N,N],[5,"wlr_renderer_read_pixels","","Reads out of pixels of the currently bound surface into data. `stride` is in bytes.",N,N],[5,"wlr_renderer_format_supported","","Checks if a format is supported.",N,N],[5,"wlr_renderer_init_wl_display","","",N,N],[5,"wlr_renderer_destroy","","Destroys this wlr_renderer. Textures must be destroyed separately.",N,N],[5,"wlr_gles2_renderer_create","","",N,N],[5,"wlr_gles2_texture_from_pixels","","",N,N],[5,"wlr_gles2_texture_from_wl_drm","","",N,N],[5,"wlr_gles2_texture_from_dmabuf","","",N,N],[5,"wlr_renderer_init","","",N,N],[5,"wlr_texture_init","","",N,N],[5,"wlr_matrix_identity","","Writes the identity matrix into mat",N,N],[5,"wlr_matrix_multiply","","mat ← a × b",N,N],[5,"wlr_matrix_transpose","","",N,N],[5,"wlr_matrix_translate","","Writes a 2D translation matrix to mat of magnitude (x, y)",N,N],[5,"wlr_matrix_scale","","Writes a 2D scale matrix to mat of magnitude (x, y)",N,N],[5,"wlr_matrix_rotate","","Writes a 2D rotation matrix to mat at an angle of rad radians",N,N],[5,"wlr_matrix_transform","","Writes a transformation matrix which applies the specified wl_output_transform to mat",N,N],[5,"wlr_matrix_projection","","Writes a 2D orthographic projection matrix to mat of (width, height) with a specified wl_output_transform",N,N],[5,"wlr_matrix_project_box","","Shortcut for the various matrix operations involved in projecting the specified wlr_box onto a given orthographic projection with a given rotation. The result is written to mat, which can be applied to each coordinate of the box to get a new coordinate from [-1,1].",N,N],[5,"wlr_compositor_destroy","","",N,N],[5,"wlr_compositor_create","","",N,N],[5,"wlr_surface_is_subsurface","","",N,N],[5,"wlr_subsurface_from_wlr_surface","","Get a subsurface from a surface. Can return NULL if the subsurface has been destroyed.",N,N],[5,"wlr_output_layout_create","","Creates a wlr_output_layout, which can be used to describing outputs in physical space relative to one another, and perform various useful operations on that state.",N,N],[5,"wlr_output_layout_destroy","","",N,N],[5,"wlr_output_layout_get","","",N,N],[5,"wlr_output_layout_output_at","","",N,N],[5,"wlr_output_layout_add","","",N,N],[5,"wlr_output_layout_move","","",N,N],[5,"wlr_output_layout_remove","","",N,N],[5,"wlr_output_layout_output_coords","","Given x and y in layout coordinates, adjusts them to local output coordinates relative to the given reference output.",N,N],[5,"wlr_output_layout_contains_point","","",N,N],[5,"wlr_output_layout_intersects","","",N,N],[5,"wlr_output_layout_closest_point","","Get the closest point on this layout from the given point from the reference output. If reference is NULL, gets the closest point from the entire layout.",N,N],[5,"wlr_output_layout_get_box","","Get the box of the layout for the given reference output in layout coordinates. If `reference` is NULL, the box will be for the extents of the entire layout.",N,N],[5,"wlr_output_layout_add_auto","","Add an auto configured output to the layout. This will place the output in a sensible location in the layout. The coordinates of the output in the layout may adjust dynamically when the layout changes. If the output is already in the layout, it will become auto configured. If the position of the output is set such as with `wlr_output_layout_move()`, the output will become manually configured.",N,N],[5,"wlr_output_layout_get_center_output","","Get the output closest to the center of the layout extents.",N,N],[5,"wlr_output_layout_adjacent_output","","Get the closest adjacent output to the reference output from the reference point in the given direction.",N,N],[5,"wlr_output_layout_farthest_output","","",N,N],[5,"wlr_cursor_create","","",N,N],[5,"wlr_cursor_destroy","","",N,N],[5,"wlr_cursor_warp","","Warp the cursor to the given x and y in layout coordinates. If x and y are out of the layout boundaries or constraints, no warp will happen.",N,N],[5,"wlr_cursor_absolute_to_layout_coords","","Convert absolute 0..1 coordinates to layout coordinates.",N,N],[5,"wlr_cursor_warp_closest","","Warp the cursor to the given x and y coordinates. If the given point is out of the layout boundaries or constraints, the closest point will be used. If one coordinate is NAN, it will be ignored.",N,N],[5,"wlr_cursor_warp_absolute","","Warp the cursor to the given x and y in absolute 0..1 coordinates. If the given point is out of the layout boundaries or constraints, the closest point will be used. If one coordinate is NAN, it will be ignored.",N,N],[5,"wlr_cursor_move","","Move the cursor in the direction of the given x and y layout coordinates. If one coordinate is NAN, it will be ignored.",N,N],[5,"wlr_cursor_set_image","","Set the cursor image. stride is given in bytes. If pixels is NULL, hides the cursor.",N,N],[5,"wlr_cursor_set_surface","","Set the cursor surface. The surface can be committed to update the cursor image. The surface position is subtracted from the hotspot. A NULL surface commit hides the cursor.",N,N],[5,"wlr_cursor_attach_input_device","","Attaches this input device to this cursor. The input device must be one of:",N,N],[5,"wlr_cursor_detach_input_device","","",N,N],[5,"wlr_cursor_attach_output_layout","","Uses the given layout to establish the boundaries and movement semantics of this cursor. Cursors without an output layout allow infinite movement in any direction and do not support absolute input events.",N,N],[5,"wlr_cursor_map_to_output","","Attaches this cursor to the given output, which must be among the outputs in the current output_layout for this cursor. This call is invalid for a cursor without an associated output layout.",N,N],[5,"wlr_cursor_map_input_to_output","","Maps all input from a specific input device to a given output. The input device must be attached to this cursor and the output must be among the outputs in the attached output layout.",N,N],[5,"wlr_cursor_map_to_region","","Maps this cursor to an arbitrary region on the associated wlr_output_layout.",N,N],[5,"wlr_cursor_map_input_to_region","","Maps inputs from this input device to an arbitrary region on the associated wlr_output_layout.",N,N],[5,"wlr_surface_create","","Create a new surface resource with the provided new ID. If `resource_list` is non-NULL, adds the surface's resource to the list.",N,N],[5,"wlr_surface_set_role","","Set the lifetime role for this surface. Returns 0 on success or -1 if the role cannot be set.",N,N],[5,"wlr_surface_has_buffer","","Whether or not this surface currently has an attached buffer. A surface has an attached buffer when it commits with a non-null buffer in its pending state. A surface will not have a buffer if it has never committed one, has committed a null buffer, or something went wrong with uploading the buffer.",N,N],[5,"wlr_surface_get_texture","","Get the texture of the buffer currently attached to this surface. Returns NULL if no buffer is currently attached or if something went wrong with uploading the buffer.",N,N],[5,"wlr_subsurface_create","","Create a new subsurface resource with the provided new ID. If `resource_list` is non-NULL, adds the subsurface's resource to the list.",N,N],[5,"wlr_surface_get_root_surface","","Get the root of the subsurface tree for this surface.",N,N],[5,"wlr_surface_point_accepts_input","","Check if the surface accepts input events at the given surface-local coordinates. Does not check the surface's subsurfaces.",N,N],[5,"wlr_surface_surface_at","","Find a surface in this surface's tree that accepts input events at the given surface-local coordinates. Returns the surface and coordinates in the leaf surface coordinate system or NULL if no surface is found at that location.",N,N],[5,"wlr_surface_send_enter","","",N,N],[5,"wlr_surface_send_leave","","",N,N],[5,"wlr_surface_send_frame_done","","",N,N],[5,"wlr_surface_get_extends","","Get the bounding box that contains the surface and all subsurfaces in surface coordinates. X and y may be negative, if there are subsurfaces with negative position.",N,N],[5,"wlr_surface_from_resource","","",N,N],[5,"wlr_surface_for_each_surface","","Call `iterator` on each surface in the surface tree, with the surface's position relative to the root surface. The function is called from root to leaves (in rendering order).",N,N],[5,"wlr_surface_get_effective_damage","","Get the effective damage to the surface in terms of surface local coordinates. This includes damage induced by resizing and moving the surface. The damage is not expected to be bounded by the surface itself.",N,N],[5,"wlr_seat_create","","Allocates a new wlr_seat and adds a wl_seat global to the display.",N,N],[5,"wlr_seat_destroy","","Destroys a wlr_seat and removes its wl_seat global.",N,N],[5,"wlr_seat_client_for_wl_client","","Gets a wlr_seat_client for the specified client, or returns NULL if no client is bound for that client.",N,N],[5,"wlr_seat_set_capabilities","","Updates the capabilities available on this seat. Will automatically send them to all clients.",N,N],[5,"wlr_seat_set_name","","Updates the name of this seat. Will automatically send it to all clients.",N,N],[5,"wlr_seat_pointer_surface_has_focus","","Whether or not the surface has pointer focus",N,N],[5,"wlr_seat_pointer_enter","","Send a pointer enter event to the given surface and consider it to be the focused surface for the pointer. This will send a leave event to the last surface that was entered. Coordinates for the enter event are surface-local. Compositor should use `wlr_seat_pointer_notify_enter()` to change pointer focus to respect pointer grabs.",N,N],[5,"wlr_seat_pointer_clear_focus","","Clear the focused surface for the pointer and leave all entered surfaces.",N,N],[5,"wlr_seat_pointer_send_motion","","Send a motion event to the surface with pointer focus. Coordinates for the motion event are surface-local. Compositors should use `wlr_seat_pointer_notify_motion()` to send motion events to respect pointer grabs.",N,N],[5,"wlr_seat_pointer_send_button","","Send a button event to the surface with pointer focus. Coordinates for the button event are surface-local. Returns the serial. Compositors should use `wlr_seat_pointer_notify_button()` to send button events to respect pointer grabs.",N,N],[5,"wlr_seat_pointer_send_axis","","Send an axis event to the surface with pointer focus. Compositors should use `wlr_seat_pointer_notify_axis()` to send axis events to respect pointer grabs.",N,N],[5,"wlr_seat_pointer_start_grab","","Start a grab of the pointer of this seat. The grabber is responsible for handling all pointer events until the grab ends.",N,N],[5,"wlr_seat_pointer_end_grab","","End the grab of the pointer of this seat. This reverts the grab back to the default grab for the pointer.",N,N],[5,"wlr_seat_pointer_notify_enter","","Notify the seat of a pointer enter event to the given surface and request it to be the focused surface for the pointer. Pass surface-local coordinates where the enter occurred.",N,N],[5,"wlr_seat_pointer_notify_motion","","Notify the seat of motion over the given surface. Pass surface-local coordinates where the pointer motion occurred.",N,N],[5,"wlr_seat_pointer_notify_button","","Notify the seat that a button has been pressed. Returns the serial of the button press or zero if no button press was sent.",N,N],[5,"wlr_seat_pointer_notify_axis","","Notify the seat of an axis event.",N,N],[5,"wlr_seat_pointer_has_grab","","Whether or not the pointer has a grab other than the default grab.",N,N],[5,"wlr_seat_set_keyboard","","Set this keyboard as the active keyboard for the seat.",N,N],[5,"wlr_seat_get_keyboard","","Get the active keyboard for the seat.",N,N],[5,"wlr_seat_keyboard_start_grab","","Start a grab of the keyboard of this seat. The grabber is responsible for handling all keyboard events until the grab ends.",N,N],[5,"wlr_seat_keyboard_end_grab","","End the grab of the keyboard of this seat. This reverts the grab back to the default grab for the keyboard.",N,N],[5,"wlr_seat_keyboard_send_key","","Send the keyboard key to focused keyboard resources. Compositors should use `wlr_seat_notify_key()` to respect keyboard grabs.",N,N],[5,"wlr_seat_keyboard_notify_key","","Notify the seat that a key has been pressed on the keyboard. Defers to any keyboard grabs.",N,N],[5,"wlr_seat_keyboard_send_modifiers","","Send the modifier state to focused keyboard resources. Compositors should use `wlr_seat_keyboard_notify_modifiers()` to respect any keyboard grabs.",N,N],[5,"wlr_seat_keyboard_notify_modifiers","","Notify the seat that the modifiers for the keyboard have changed. Defers to any keyboard grabs.",N,N],[5,"wlr_seat_keyboard_notify_enter","","Notify the seat that the keyboard focus has changed and request it to be the focused surface for this keyboard. Defers to any current grab of the seat's keyboard.",N,N],[5,"wlr_seat_keyboard_enter","","Send a keyboard enter event to the given surface and consider it to be the focused surface for the keyboard. This will send a leave event to the last surface that was entered. Compositors should use `wlr_seat_keyboard_notify_enter()` to change keyboard focus to respect keyboard grabs.",N,N],[5,"wlr_seat_keyboard_clear_focus","","Clear the focused surface for the keyboard and leave all entered surfaces.",N,N],[5,"wlr_seat_keyboard_has_grab","","Whether or not the keyboard has a grab other than the default grab",N,N],[5,"wlr_seat_touch_start_grab","","Start a grab of the touch device of this seat. The grabber is responsible for handling all touch events until the grab ends.",N,N],[5,"wlr_seat_touch_end_grab","","End the grab of the touch device of this seat. This reverts the grab back to the default grab for the touch device.",N,N],[5,"wlr_seat_touch_get_point","","Get the active touch point with the given `touch_id`. If the touch point does not exist or is no longer active, returns NULL.",N,N],[5,"wlr_seat_touch_notify_down","","Notify the seat of a touch down on the given surface. Defers to any grab of the touch device.",N,N],[5,"wlr_seat_touch_notify_up","","Notify the seat that the touch point given by `touch_id` is up. Defers to any grab of the touch device.",N,N],[5,"wlr_seat_touch_notify_motion","","Notify the seat that the touch point given by `touch_id` has moved. Defers to any grab of the touch device. The seat should be notified of touch motion even if the surface is not the owner of the touch point for processing by grabs.",N,N],[5,"wlr_seat_touch_point_focus","","Notify the seat that the touch point given by `touch_id` has entered a new surface. The surface is required. To clear focus, use `wlr_seat_touch_point_clear_focus()`.",N,N],[5,"wlr_seat_touch_point_clear_focus","","Clear the focused surface for the touch point given by `touch_id`.",N,N],[5,"wlr_seat_touch_send_down","","Send a touch down event to the client of the given surface. All future touch events for this point will go to this surface. If the touch down is valid, this will add a new touch point with the given `touch_id`. The touch down may not be valid if the surface seat client does not accept touch input. Coordinates are surface-local. Compositors should use `wlr_seat_touch_notify_down()` to respect any grabs of the touch device.",N,N],[5,"wlr_seat_touch_send_up","","Send a touch up event for the touch point given by the `touch_id`. The event will go to the client for the surface given in the cooresponding touch down event. This will remove the touch point. Compositors should use `wlr_seat_touch_notify_up()` to respect any grabs of the touch device.",N,N],[5,"wlr_seat_touch_send_motion","","Send a touch motion event for the touch point given by the `touch_id`. The event will go to the client for the surface given in the corresponding touch down event. Compositors should use `wlr_seat_touch_notify_motion()` to respect any grabs of the touch device.",N,N],[5,"wlr_seat_touch_num_points","","How many touch points are currently down for the seat.",N,N],[5,"wlr_seat_touch_has_grab","","Whether or not the seat has a touch grab other than the default grab.",N,N],[5,"wlr_seat_validate_grab_serial","","Check whether this serial is valid to start a grab action such as an interactive move or resize.",N,N],[5,"wlr_seat_client_from_resource","","",N,N],[5,"wlr_seat_client_from_pointer_resource","","",N,N],[5,"wlr_data_device_manager_create","","Create a wl data device manager global for this display.",N,N],[5,"wlr_data_device_manager_destroy","","Destroys a wlr_data_device_manager and removes its wl_data_device_manager global.",N,N],[5,"wlr_seat_client_send_selection","","Creates a new wl_data_offer if there is a wl_data_source currently set as the seat selection and sends it to the seat client, followed by the wl_data_device.selection() event.  If there is no current selection, the wl_data_device.selection() event will carry a NULL wl_data_offer.  If the client does not have a wl_data_device for the seat nothing * will be done.",N,N],[5,"wlr_seat_set_selection","","Sets the current selection for the seat. This removes the previous one if there was any.",N,N],[5,"wlr_data_source_init","","Initializes the data source with the provided implementation.",N,N],[5,"wlr_data_source_finish","","Finishes the data source.",N,N],[5,"wlr_data_source_send","","Sends the data as the specified MIME type over the passed file descriptor, then close it.",N,N],[5,"wlr_data_source_accept","","Notifies the data source that a target accepts one of the offered MIME types. If a target doesn't accept any of the offered types, `mime_type` is NULL.",N,N],[5,"wlr_data_source_cancel","","Notifies the data source it is no longer valid and should be destroyed. That potentially destroys immediately the data source.",N,N],[5,"wlr_data_source_dnd_drop","","Notifies the data source that the drop operation was performed. This does not indicate acceptance.",N,N],[5,"wlr_data_source_dnd_finish","","Notifies the data source that the drag-and-drop operation concluded. That potentially destroys immediately the data source.",N,N],[5,"wlr_data_source_dnd_action","","Notifies the data source that a target accepts the drag with the specified action.",N,N],[5,"wlr_gamma_control_manager_create","","",N,N],[5,"wlr_gamma_control_manager_destroy","","",N,N],[5,"wlr_output_damage_create","","",N,N],[5,"wlr_output_damage_destroy","","",N,N],[5,"wlr_output_damage_make_current","","Makes the output rendering context current. `needs_swap` is set to true if `wlr_output_damage_swap_buffers` needs to be called. The region of the output that needs to be repainted is added to `damage`.",N,N],[5,"wlr_output_damage_swap_buffers","","Swaps the output buffers. If the time of the frame isn't known, set `when` to NULL.",N,N],[5,"wlr_output_damage_add","","Accumulates damage and schedules a `frame` event.",N,N],[5,"wlr_output_damage_add_whole","","Damages the whole output and schedules a `frame` event.",N,N],[5,"wlr_output_damage_add_box","","Accumulates damage from a box and schedules a `frame` event.",N,N],[5,"wlr_region_create","","",N,N],[5,"wlr_region_from_resource","","",N,N],[5,"wlr_server_decoration_manager_create","","",N,N],[5,"wlr_server_decoration_manager_set_default_mode","","",N,N],[5,"wlr_server_decoration_manager_destroy","","",N,N],[5,"wlr_screenshooter_create","","",N,N],[5,"wlr_screenshooter_destroy","","",N,N],[5,"wlr_wl_shell_create","","Create a wl_shell for this display.",N,N],[5,"wlr_wl_shell_destroy","","Destroy this surface.",N,N],[5,"wlr_wl_shell_surface_ping","","Send a ping to the surface. If the surface does not respond with a pong within a reasonable amount of time, the ping timeout event will be emitted.",N,N],[5,"wlr_wl_shell_surface_configure","","Request that the surface configure itself to be the given size.",N,N],[5,"wlr_wl_shell_surface_surface_at","","Find a surface within this wl-shell surface tree at the given surface-local coordinates. Returns the surface and coordinates in the leaf surface coordinate system or NULL if no surface is found at that location.",N,N],[5,"wlr_surface_is_wl_shell_surface","","",N,N],[5,"wlr_wl_shell_surface_from_wlr_surface","","",N,N],[5,"wlr_wl_shell_surface_for_each_surface","","Call `iterator` on each surface in the shell surface tree, with the surface's position relative to the root xdg-surface. The function is called from root to leaves (in rendering order).",N,N],[5,"wlr_xdg_shell_v6_create","","",N,N],[5,"wlr_xdg_shell_v6_destroy","","",N,N],[5,"wlr_xdg_surface_v6_ping","","Send a ping to the surface. If the surface does not respond in a reasonable amount of time, the ping_timeout event will be emitted.",N,N],[5,"wlr_xdg_toplevel_v6_set_size","","Request that this toplevel surface be the given size. Returns the associated configure serial.",N,N],[5,"wlr_xdg_toplevel_v6_set_activated","","Request that this toplevel surface show itself in an activated or deactivated state. Returns the associated configure serial.",N,N],[5,"wlr_xdg_toplevel_v6_set_maximized","","Request that this toplevel surface consider itself maximized or not maximized. Returns the associated configure serial.",N,N],[5,"wlr_xdg_toplevel_v6_set_fullscreen","","Request that this toplevel surface consider itself fullscreen or not fullscreen. Returns the associated configure serial.",N,N],[5,"wlr_xdg_toplevel_v6_set_resizing","","Request that this toplevel surface consider itself to be resizing or not resizing. Returns the associated configure serial.",N,N],[5,"wlr_xdg_surface_v6_send_close","","Request that this xdg surface closes.",N,N],[5,"wlr_xdg_surface_v6_surface_at","","Find a surface within this xdg-surface tree at the given surface-local coordinates. Returns the surface and coordinates in the leaf surface coordinate system or NULL if no surface is found at that location.",N,N],[5,"wlr_xdg_positioner_v6_get_geometry","","Get the geometry for this positioner based on the anchor rect, gravity, and size of this positioner.",N,N],[5,"wlr_xdg_popup_v6_get_anchor_point","","Get the anchor point for this popup in the toplevel parent's coordinate system.",N,N],[5,"wlr_xdg_popup_v6_get_toplevel_coords","","Convert the given coordinates in the popup coordinate system to the toplevel surface coordinate system.",N,N],[5,"wlr_xdg_popup_v6_unconstrain_from_box","","Set the geometry of this popup to unconstrain it according to its xdg-positioner rules. The box should be in the popup's root toplevel parent surface coordinate system.",N,N],[5,"wlr_positioner_v6_invert_x","","Invert the right/left anchor and gravity for this positioner. This can be used to \"flip\" the positioner around the anchor rect in the x direction.",N,N],[5,"wlr_positioner_v6_invert_y","","Invert the top/bottom anchor and gravity for this positioner. This can be used to \"flip\" the positioner around the anchor rect in the y direction.",N,N],[5,"wlr_surface_is_xdg_surface_v6","","",N,N],[5,"wlr_xdg_surface_v6_from_wlr_surface","","",N,N],[5,"wlr_xdg_surface_v6_get_geometry","","Get the surface geometry. This is either the geometry as set by the client, or defaulted to the bounds of the surface + the subsurfaces (as specified by the protocol).",N,N],[5,"wlr_xdg_surface_v6_for_each_surface","","Call `iterator` on each surface and popup in the xdg-surface tree, with the surface's position relative to the root xdg-surface. The function is called from root to leaves (in rendering order).",N,N],[5,"wlr_xdg_surface_v6_for_each_popup","","Call `iterator` on each popup in the xdg-surface tree, with the popup's position relative to the root xdg-surface. The function is called from root to leaves (in rendering order).",N,N],[5,"wlr_xdg_shell_create","","",N,N],[5,"wlr_xdg_shell_destroy","","",N,N],[5,"wlr_xdg_surface_from_resource","","",N,N],[5,"wlr_xdg_surface_from_popup_resource","","",N,N],[5,"wlr_xdg_surface_from_toplevel_resource","","",N,N],[5,"wlr_xdg_positioner_get_geometry","","Get the geometry for this positioner based on the anchor rect, gravity, and size of this positioner.",N,N],[5,"wlr_xdg_surface_ping","","Send a ping to the surface. If the surface does not respond in a reasonable amount of time, the ping_timeout event will be emitted.",N,N],[5,"wlr_xdg_toplevel_set_size","","Request that this toplevel surface be the given size. Returns the associated configure serial.",N,N],[5,"wlr_xdg_toplevel_set_activated","","Request that this toplevel surface show itself in an activated or deactivated state. Returns the associated configure serial.",N,N],[5,"wlr_xdg_toplevel_set_maximized","","Request that this toplevel surface consider itself maximized or not maximized. Returns the associated configure serial.",N,N],[5,"wlr_xdg_toplevel_set_fullscreen","","Request that this toplevel surface consider itself fullscreen or not fullscreen. Returns the associated configure serial.",N,N],[5,"wlr_xdg_toplevel_set_resizing","","Request that this toplevel surface consider itself to be resizing or not resizing. Returns the associated configure serial.",N,N],[5,"wlr_xdg_toplevel_set_tiled","","Request that this toplevel surface consider itself in a tiled layout and some edges are adjacent to another part of the tiling grid. `tiled_edges` is a bitfield of `enum wlr_edges`. Returns the associated configure serial.",N,N],[5,"wlr_xdg_surface_send_close","","Request that this xdg surface closes.",N,N],[5,"wlr_xdg_popup_get_anchor_point","","Get the anchor point for this popup in the toplevel parent's coordinate system.",N,N],[5,"wlr_xdg_popup_get_toplevel_coords","","Convert the given coordinates in the popup coordinate system to the toplevel surface coordinate system.",N,N],[5,"wlr_xdg_popup_unconstrain_from_box","","Set the geometry of this popup to unconstrain it according to its xdg-positioner rules. The box should be in the popup's root toplevel parent surface coordinate system.",N,N],[5,"wlr_positioner_invert_x","","Invert the right/left anchor and gravity for this positioner. This can be used to \"flip\" the positioner around the anchor rect in the x direction.",N,N],[5,"wlr_positioner_invert_y","","Invert the top/bottom anchor and gravity for this positioner. This can be used to \"flip\" the positioner around the anchor rect in the y direction.",N,N],[5,"wlr_xdg_surface_surface_at","","Find a surface within this xdg-surface tree at the given surface-local coordinates. Returns the surface and coordinates in the leaf surface coordinate system or NULL if no surface is found at that location.",N,N],[5,"wlr_surface_is_xdg_surface","","",N,N],[5,"wlr_xdg_surface_from_wlr_surface","","",N,N],[5,"wlr_xdg_surface_get_geometry","","Get the surface geometry. This is either the geometry as set by the client, or defaulted to the bounds of the surface + the subsurfaces (as specified by the protocol).",N,N],[5,"wlr_xdg_surface_for_each_surface","","Call `iterator` on each surface and popup in the xdg-surface tree, with the surface's position relative to the root xdg-surface. The function is called from root to leaves (in rendering order).",N,N],[5,"wlr_xdg_surface_schedule_configure","","Schedule a surface configuration. This should only be called by protocols extending the shell.",N,N],[5,"wlr_xdg_surface_for_each_popup","","Call `iterator` on each popup in the xdg-surface tree, with the popup's position relative to the root xdg-surface. The function is called from root to leaves (in rendering order).",N,N],[5,"wlr_xcursor_manager_create","","Creates a new XCursor manager with the given xcursor theme name and base size (for use when scale=1).",N,N],[5,"wlr_xcursor_manager_destroy","","",N,N],[5,"wlr_xcursor_manager_load","","Ensures an xcursor theme at the given scale factor is loaded in the manager.",N,N],[5,"wlr_xcursor_manager_get_xcursor","","Retrieves a wlr_xcursor reference for the given cursor name at the given scale factor, or NULL if this wlr_xcursor_manager has not loaded a cursor theme at the requested scale.",N,N],[5,"wlr_xcursor_manager_set_cursor_image","","Set a wlr_cursor's cursor image to the specified cursor name for all scale factors. wlr_cursor will take over from this point and ensure the correct cursor is used on each output, assuming a wlr_output_layout is attached to it.",N,N],[5,"wlr_xwayland_create","","Create an Xwayland server.",N,N],[5,"wlr_xwayland_destroy","","",N,N],[5,"wlr_xwayland_set_cursor","","",N,N],[5,"wlr_xwayland_surface_activate","","",N,N],[5,"wlr_xwayland_surface_configure","","",N,N],[5,"wlr_xwayland_surface_close","","",N,N],[5,"wlr_xwayland_surface_set_maximized","","",N,N],[5,"wlr_xwayland_surface_set_fullscreen","","",N,N],[5,"wlr_xwayland_set_seat","","",N,N],[5,"wlr_surface_is_xwayland_surface","","",N,N],[5,"wlr_xwayland_surface_from_wlr_surface","","",N,N],[5,"wlr_xwayland_surface_ping","","",N,N],[5,"wlr_xwayland_or_surface_wants_focus","","Metric to guess if an OR window should \"receive\" focus",N,N],[11,"fmt","","",225,[[["self"],["formatter"]],["result"]]],[11,"clone","","",225,[[["self"]],["wlr_edges"]]],[11,"eq","","",225,[[["self"],["wlr_edges"]],["bool"]]],[11,"hash","","",225,N],[11,"fmt","","",226,[[["self"],["formatter"]],["result"]]],[11,"clone","","",226,[[["self"]],["wlr_log_importance"]]],[11,"eq","","",226,[[["self"],["wlr_log_importance"]],["bool"]]],[11,"hash","","",226,N],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"default","","",8,[[],["pixman_color"]]],[11,"clone","","",8,[[["self"]],["self"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"default","","",9,[[],["pixman_point_fixed"]]],[11,"clone","","",9,[[["self"]],["self"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"default","","",10,[[],["pixman_line_fixed"]]],[11,"clone","","",10,[[["self"]],["self"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"default","","",11,[[],["pixman_vector"]]],[11,"clone","","",11,[[["self"]],["self"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"default","","",12,[[],["pixman_transform"]]],[11,"clone","","",12,[[["self"]],["self"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"default","","",13,[[],["pixman_box16"]]],[11,"clone","","",13,[[["self"]],["self"]]],[11,"fmt","","",278,[[["self"],["formatter"]],["result"]]],[11,"clone","","",278,[[["self"]],["pixman_image"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"default","","",14,[[],["pixman_f_transform"]]],[11,"clone","","",14,[[["self"]],["self"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"default","","",15,[[],["pixman_f_vector"]]],[11,"clone","","",15,[[["self"]],["self"]]],[11,"fmt","","",227,[[["self"],["formatter"]],["result"]]],[11,"clone","","",227,[[["self"]],["pixman_repeat_t"]]],[11,"eq","","",227,[[["self"],["pixman_repeat_t"]],["bool"]]],[11,"hash","","",227,N],[11,"fmt","","",228,[[["self"],["formatter"]],["result"]]],[11,"clone","","",228,[[["self"]],["pixman_filter_t"]]],[11,"eq","","",228,[[["self"],["pixman_filter_t"]],["bool"]]],[11,"hash","","",228,N],[11,"fmt","","",229,[[["self"],["formatter"]],["result"]]],[11,"clone","","",229,[[["self"]],["pixman_op_t"]]],[11,"eq","","",229,[[["self"],["pixman_op_t"]],["bool"]]],[11,"hash","","",229,N],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"default","","",16,[[],["pixman_region16_data"]]],[11,"clone","","",16,[[["self"]],["self"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"default","","",17,[[],["pixman_rectangle16"]]],[11,"clone","","",17,[[["self"]],["self"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"clone","","",18,[[["self"]],["self"]]],[11,"default","","",18,[[],["self"]]],[11,"fmt","","",230,[[["self"],["formatter"]],["result"]]],[11,"clone","","",230,[[["self"]],["pixman_region_overlap_t"]]],[11,"eq","","",230,[[["self"],["pixman_region_overlap_t"]],["bool"]]],[11,"hash","","",230,N],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"default","","",19,[[],["pixman_region32_data"]]],[11,"clone","","",19,[[["self"]],["self"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"default","","",20,[[],["pixman_box32"]]],[11,"clone","","",20,[[["self"]],["self"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"clone","","",21,[[["self"]],["self"]]],[11,"default","","",21,[[],["self"]]],[11,"clone","","",22,[[["self"]],["self"]]],[11,"default","","",22,[[],["self"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"default","","",23,[[],["pixman_gradient_stop"]]],[11,"clone","","",23,[[["self"]],["self"]]],[11,"fmt","","",231,[[["self"],["formatter"]],["result"]]],[11,"clone","","",231,[[["self"]],["pixman_format_code_t"]]],[11,"eq","","",231,[[["self"],["pixman_format_code_t"]],["bool"]]],[11,"hash","","",231,N],[11,"fmt","","",232,[[["self"],["formatter"]],["result"]]],[11,"clone","","",232,[[["self"]],["pixman_kernel_t"]]],[11,"eq","","",232,[[["self"],["pixman_kernel_t"]],["bool"]]],[11,"hash","","",232,N],[11,"fmt","","",279,[[["self"],["formatter"]],["result"]]],[11,"clone","","",279,[[["self"]],["pixman_glyph_cache_t"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"clone","","",24,[[["self"]],["self"]]],[11,"default","","",24,[[],["self"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"default","","",25,[[],["pixman_edge"]]],[11,"clone","","",25,[[["self"]],["self"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"default","","",26,[[],["pixman_trapezoid"]]],[11,"clone","","",26,[[["self"]],["self"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"default","","",27,[[],["pixman_trap"]]],[11,"clone","","",27,[[["self"]],["self"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"default","","",28,[[],["pixman_span_fix"]]],[11,"clone","","",28,[[["self"]],["self"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"default","","",29,[[],["pixman_triangle"]]],[11,"clone","","",29,[[["self"]],["self"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"default","","",30,[[],["timespec"]]],[11,"clone","","",30,[[["self"]],["self"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"clone","","",31,[[["self"]],["self"]]],[11,"default","","",31,[[],["self"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"clone","","",32,[[["self"]],["self"]]],[11,"default","","",32,[[],["self"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"clone","","",33,[[["self"]],["self"]]],[11,"default","","",33,[[],["self"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"clone","","",34,[[["self"]],["self"]]],[11,"default","","",34,[[],["self"]]],[11,"fmt","","",280,[[["self"],["formatter"]],["result"]]],[11,"clone","","",280,[[["self"]],["wl_event_source"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"clone","","",35,[[["self"]],["self"]]],[11,"default","","",35,[[],["self"]]],[11,"fmt","","",281,[[["self"],["formatter"]],["result"]]],[11,"clone","","",281,[[["self"]],["wl_display"]]],[11,"fmt","","",282,[[["self"],["formatter"]],["result"]]],[11,"clone","","",282,[[["self"]],["wl_client"]]],[11,"fmt","","",283,[[["self"],["formatter"]],["result"]]],[11,"clone","","",283,[[["self"]],["wl_global"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"clone","","",36,[[["self"]],["self"]]],[11,"default","","",36,[[],["self"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"clone","","",37,[[["self"]],["self"]]],[11,"default","","",37,[[],["self"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"clone","","",38,[[["self"]],["self"]]],[11,"default","","",38,[[],["self"]]],[11,"fmt","","",233,[[["self"],["formatter"]],["result"]]],[11,"clone","","",233,[[["self"]],["wl_shm_format"]]],[11,"eq","","",233,[[["self"],["wl_shm_format"]],["bool"]]],[11,"hash","","",233,N],[11,"fmt","","",234,[[["self"],["formatter"]],["result"]]],[11,"clone","","",234,[[["self"]],["wl_data_device_manager_dnd_action"]]],[11,"eq","","",234,[[["self"],["wl_data_device_manager_dnd_action"]],["bool"]]],[11,"hash","","",234,N],[11,"fmt","","",235,[[["self"],["formatter"]],["result"]]],[11,"clone","","",235,[[["self"]],["wl_shell_surface_resize"]]],[11,"eq","","",235,[[["self"],["wl_shell_surface_resize"]],["bool"]]],[11,"hash","","",235,N],[11,"fmt","","",236,[[["self"],["formatter"]],["result"]]],[11,"clone","","",236,[[["self"]],["wl_shell_surface_transient"]]],[11,"eq","","",236,[[["self"],["wl_shell_surface_transient"]],["bool"]]],[11,"hash","","",236,N],[11,"fmt","","",237,[[["self"],["formatter"]],["result"]]],[11,"clone","","",237,[[["self"]],["wl_shell_surface_fullscreen_method"]]],[11,"eq","","",237,[[["self"],["wl_shell_surface_fullscreen_method"]],["bool"]]],[11,"hash","","",237,N],[11,"fmt","","",238,[[["self"],["formatter"]],["result"]]],[11,"clone","","",238,[[["self"]],["wl_output_subpixel"]]],[11,"eq","","",238,[[["self"],["wl_output_subpixel"]],["bool"]]],[11,"hash","","",238,N],[11,"fmt","","",239,[[["self"],["formatter"]],["result"]]],[11,"clone","","",239,[[["self"]],["wl_output_transform"]]],[11,"eq","","",239,[[["self"],["wl_output_transform"]],["bool"]]],[11,"hash","","",239,N],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"clone","","",39,[[["self"]],["self"]]],[11,"default","","",39,[[],["self"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"default","","",40,[[],["self"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"clone","","",41,[[["self"]],["self"]]],[11,"default","","",41,[[],["self"]]],[11,"fmt","","",284,[[["self"],["formatter"]],["result"]]],[11,"clone","","",284,[[["self"]],["udev"]]],[11,"fmt","","",285,[[["self"],["formatter"]],["result"]]],[11,"clone","","",285,[[["self"]],["udev_monitor"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"clone","","",42,[[["self"]],["self"]]],[11,"default","","",42,[[],["self"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"default","","",43,[[],["self"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"clone","","",45,[[["self"]],["self"]]],[11,"default","","",45,[[],["self"]]],[11,"clone","","",44,[[["self"]],["self"]]],[11,"default","","",44,[[],["self"]]],[11,"fmt","","",240,[[["self"],["formatter"]],["result"]]],[11,"clone","","",240,[[["self"]],["wlr_dmabuf_attributes_flags"]]],[11,"eq","","",240,[[["self"],["wlr_dmabuf_attributes_flags"]],["bool"]]],[11,"hash","","",240,N],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"default","","",46,[[],["wlr_dmabuf_attributes"]]],[11,"clone","","",46,[[["self"]],["self"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"default","","",48,[[],["wlr_egl__bindgen_ty_1"]]],[11,"clone","","",48,[[["self"]],["self"]]],[11,"clone","","",47,[[["self"]],["self"]]],[11,"default","","",47,[[],["self"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"clone","","",49,[[["self"]],["self"]]],[11,"default","","",49,[[],["self"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"clone","","",51,[[["self"]],["self"]]],[11,"default","","",51,[[],["self"]]],[11,"clone","","",50,[[["self"]],["self"]]],[11,"default","","",50,[[],["self"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"clone","","",53,[[["self"]],["self"]]],[11,"default","","",53,[[],["self"]]],[11,"clone","","",52,[[["self"]],["self"]]],[11,"default","","",52,[[],["self"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"clone","","",54,[[["self"]],["self"]]],[11,"default","","",54,[[],["self"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"clone","","",56,[[["self"]],["self"]]],[11,"default","","",56,[[],["self"]]],[11,"clone","","",55,[[["self"]],["self"]]],[11,"default","","",55,[[],["self"]]],[11,"fmt","","",286,[[["self"],["formatter"]],["result"]]],[11,"clone","","",286,[[["self"]],["wlr_output_impl"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"clone","","",58,[[["self"]],["self"]]],[11,"default","","",58,[[],["self"]]],[11,"clone","","",57,[[["self"]],["self"]]],[11,"default","","",57,[[],["self"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"clone","","",59,[[["self"]],["self"]]],[11,"default","","",59,[[],["self"]]],[11,"fmt","","",241,[[["self"],["formatter"]],["result"]]],[11,"clone","","",241,[[["self"]],["wlr_output_present_flag"]]],[11,"eq","","",241,[[["self"],["wlr_output_present_flag"]],["bool"]]],[11,"hash","","",241,N],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"clone","","",60,[[["self"]],["self"]]],[11,"default","","",60,[[],["self"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"clone","","",62,[[["self"]],["self"]]],[11,"default","","",62,[[],["self"]]],[11,"clone","","",61,[[["self"]],["self"]]],[11,"default","","",61,[[],["self"]]],[11,"fmt","","",287,[[["self"],["formatter"]],["result"]]],[11,"clone","","",287,[[["self"]],["_drmmodemodeinfo"]]],[11,"fmt","","",242,[[["self"],["formatter"]],["result"]]],[11,"clone","","",242,[[["self"]],["wlr_button_state"]]],[11,"eq","","",242,[[["self"],["wlr_button_state"]],["bool"]]],[11,"hash","","",242,N],[11,"fmt","","",243,[[["self"],["formatter"]],["result"]]],[11,"clone","","",243,[[["self"]],["wlr_input_device_type"]]],[11,"eq","","",243,[[["self"],["wlr_input_device_type"]],["bool"]]],[11,"hash","","",243,N],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"clone","","",63,[[["self"]],["self"]]],[11,"default","","",63,[[],["self"]]],[11,"fmt","","",288,[[["self"],["formatter"]],["result"]]],[11,"clone","","",288,[[["self"]],["_io_marker"]]],[11,"fmt","","",289,[[["self"],["formatter"]],["result"]]],[11,"clone","","",289,[[["self"]],["_io_codecvt"]]],[11,"fmt","","",290,[[["self"],["formatter"]],["result"]]],[11,"clone","","",290,[[["self"]],["_io_wide_data"]]],[11,"fmt","","",291,[[["self"],["formatter"]],["result"]]],[11,"clone","","",291,[[["self"]],["xkb_context"]]],[11,"fmt","","",292,[[["self"],["formatter"]],["result"]]],[11,"clone","","",292,[[["self"]],["xkb_keymap"]]],[11,"fmt","","",293,[[["self"],["formatter"]],["result"]]],[11,"clone","","",293,[[["self"]],["xkb_state"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"clone","","",64,[[["self"]],["self"]]],[11,"default","","",64,[[],["self"]]],[11,"fmt","","",244,[[["self"],["formatter"]],["result"]]],[11,"clone","","",244,[[["self"]],["xkb_keysym_flags"]]],[11,"eq","","",244,[[["self"],["xkb_keysym_flags"]],["bool"]]],[11,"hash","","",244,N],[11,"fmt","","",245,[[["self"],["formatter"]],["result"]]],[11,"clone","","",245,[[["self"]],["xkb_context_flags"]]],[11,"eq","","",245,[[["self"],["xkb_context_flags"]],["bool"]]],[11,"hash","","",245,N],[11,"fmt","","",246,[[["self"],["formatter"]],["result"]]],[11,"clone","","",246,[[["self"]],["xkb_log_level"]]],[11,"eq","","",246,[[["self"],["xkb_log_level"]],["bool"]]],[11,"hash","","",246,N],[11,"fmt","","",247,[[["self"],["formatter"]],["result"]]],[11,"clone","","",247,[[["self"]],["xkb_keymap_compile_flags"]]],[11,"eq","","",247,[[["self"],["xkb_keymap_compile_flags"]],["bool"]]],[11,"hash","","",247,N],[11,"fmt","","",248,[[["self"],["formatter"]],["result"]]],[11,"clone","","",248,[[["self"]],["xkb_keymap_format"]]],[11,"eq","","",248,[[["self"],["xkb_keymap_format"]],["bool"]]],[11,"hash","","",248,N],[11,"fmt","","",249,[[["self"],["formatter"]],["result"]]],[11,"clone","","",249,[[["self"]],["xkb_key_direction"]]],[11,"eq","","",249,[[["self"],["xkb_key_direction"]],["bool"]]],[11,"hash","","",249,N],[11,"fmt","","",250,[[["self"],["formatter"]],["result"]]],[11,"clone","","",250,[[["self"]],["xkb_state_component"]]],[11,"eq","","",250,[[["self"],["xkb_state_component"]],["bool"]]],[11,"hash","","",250,N],[11,"fmt","","",251,[[["self"],["formatter"]],["result"]]],[11,"clone","","",251,[[["self"]],["xkb_state_match"]]],[11,"eq","","",251,[[["self"],["xkb_state_match"]],["bool"]]],[11,"hash","","",251,N],[11,"fmt","","",252,[[["self"],["formatter"]],["result"]]],[11,"clone","","",252,[[["self"]],["xkb_consumed_mode"]]],[11,"eq","","",252,[[["self"],["xkb_consumed_mode"]],["bool"]]],[11,"hash","","",252,N],[11,"fmt","","",253,[[["self"],["formatter"]],["result"]]],[11,"clone","","",253,[[["self"]],["wlr_keyboard_led"]]],[11,"eq","","",253,[[["self"],["wlr_keyboard_led"]],["bool"]]],[11,"hash","","",253,N],[11,"fmt","","",254,[[["self"],["formatter"]],["result"]]],[11,"clone","","",254,[[["self"]],["wlr_keyboard_modifier"]]],[11,"eq","","",254,[[["self"],["wlr_keyboard_modifier"]],["bool"]]],[11,"hash","","",254,N],[11,"fmt","","",294,[[["self"],["formatter"]],["result"]]],[11,"clone","","",294,[[["self"]],["wlr_keyboard_impl"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"default","","",65,[[],["wlr_keyboard_modifiers"]]],[11,"clone","","",65,[[["self"]],["self"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"default","","",67,[[],["wlr_keyboard__bindgen_ty_1"]]],[11,"clone","","",67,[[["self"]],["self"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"clone","","",68,[[["self"]],["self"]]],[11,"default","","",68,[[],["self"]]],[11,"clone","","",66,[[["self"]],["self"]]],[11,"default","","",66,[[],["self"]]],[11,"fmt","","",255,[[["self"],["formatter"]],["result"]]],[11,"clone","","",255,[[["self"]],["wlr_key_state"]]],[11,"eq","","",255,[[["self"],["wlr_key_state"]],["bool"]]],[11,"hash","","",255,N],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"clone","","",69,[[["self"]],["self"]]],[11,"default","","",69,[[],["self"]]],[11,"fmt","","",295,[[["self"],["formatter"]],["result"]]],[11,"clone","","",295,[[["self"]],["wlr_pointer_impl"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"clone","","",71,[[["self"]],["self"]]],[11,"default","","",71,[[],["self"]]],[11,"clone","","",70,[[["self"]],["self"]]],[11,"default","","",70,[[],["self"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"clone","","",72,[[["self"]],["self"]]],[11,"default","","",72,[[],["self"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"clone","","",73,[[["self"]],["self"]]],[11,"default","","",73,[[],["self"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"clone","","",74,[[["self"]],["self"]]],[11,"default","","",74,[[],["self"]]],[11,"fmt","","",256,[[["self"],["formatter"]],["result"]]],[11,"clone","","",256,[[["self"]],["wlr_axis_source"]]],[11,"eq","","",256,[[["self"],["wlr_axis_source"]],["bool"]]],[11,"hash","","",256,N],[11,"fmt","","",257,[[["self"],["formatter"]],["result"]]],[11,"clone","","",257,[[["self"]],["wlr_axis_orientation"]]],[11,"eq","","",257,[[["self"],["wlr_axis_orientation"]],["bool"]]],[11,"hash","","",257,N],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"clone","","",75,[[["self"]],["self"]]],[11,"default","","",75,[[],["self"]]],[11,"fmt","","",296,[[["self"],["formatter"]],["result"]]],[11,"clone","","",296,[[["self"]],["wlr_touch_impl"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"clone","","",77,[[["self"]],["self"]]],[11,"default","","",77,[[],["self"]]],[11,"clone","","",76,[[["self"]],["self"]]],[11,"default","","",76,[[],["self"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"clone","","",78,[[["self"]],["self"]]],[11,"default","","",78,[[],["self"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"clone","","",79,[[["self"]],["self"]]],[11,"default","","",79,[[],["self"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"clone","","",80,[[["self"]],["self"]]],[11,"default","","",80,[[],["self"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"clone","","",81,[[["self"]],["self"]]],[11,"default","","",81,[[],["self"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"clone","","",82,[[["self"]],["self"]]],[11,"default","","",82,[[],["self"]]],[11,"fmt","","",258,[[["self"],["formatter"]],["result"]]],[11,"clone","","",258,[[["self"]],["wlr_tablet_tool_type"]]],[11,"eq","","",258,[[["self"],["wlr_tablet_tool_type"]],["bool"]]],[11,"hash","","",258,N],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"clone","","",84,[[["self"]],["self"]]],[11,"default","","",84,[[],["self"]]],[11,"clone","","",83,[[["self"]],["self"]]],[11,"default","","",83,[[],["self"]]],[11,"fmt","","",297,[[["self"],["formatter"]],["result"]]],[11,"clone","","",297,[[["self"]],["wlr_tablet_impl"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"clone","","",86,[[["self"]],["self"]]],[11,"default","","",86,[[],["self"]]],[11,"clone","","",85,[[["self"]],["self"]]],[11,"default","","",85,[[],["self"]]],[11,"fmt","","",259,[[["self"],["formatter"]],["result"]]],[11,"clone","","",259,[[["self"]],["wlr_tablet_tool_axes"]]],[11,"eq","","",259,[[["self"],["wlr_tablet_tool_axes"]],["bool"]]],[11,"hash","","",259,N],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"clone","","",87,[[["self"]],["self"]]],[11,"default","","",87,[[],["self"]]],[11,"fmt","","",260,[[["self"],["formatter"]],["result"]]],[11,"clone","","",260,[[["self"]],["wlr_tablet_tool_proximity_state"]]],[11,"eq","","",260,[[["self"],["wlr_tablet_tool_proximity_state"]],["bool"]]],[11,"hash","","",260,N],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"clone","","",88,[[["self"]],["self"]]],[11,"default","","",88,[[],["self"]]],[11,"fmt","","",261,[[["self"],["formatter"]],["result"]]],[11,"clone","","",261,[[["self"]],["wlr_tablet_tool_tip_state"]]],[11,"eq","","",261,[[["self"],["wlr_tablet_tool_tip_state"]],["bool"]]],[11,"hash","","",261,N],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"clone","","",89,[[["self"]],["self"]]],[11,"default","","",89,[[],["self"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"clone","","",90,[[["self"]],["self"]]],[11,"default","","",90,[[],["self"]]],[11,"fmt","","",298,[[["self"],["formatter"]],["result"]]],[11,"clone","","",298,[[["self"]],["wlr_tablet_pad_impl"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"clone","","",92,[[["self"]],["self"]]],[11,"default","","",92,[[],["self"]]],[11,"clone","","",91,[[["self"]],["self"]]],[11,"default","","",91,[[],["self"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"clone","","",93,[[["self"]],["self"]]],[11,"default","","",93,[[],["self"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"clone","","",94,[[["self"]],["self"]]],[11,"default","","",94,[[],["self"]]],[11,"fmt","","",262,[[["self"],["formatter"]],["result"]]],[11,"clone","","",262,[[["self"]],["wlr_tablet_pad_ring_source"]]],[11,"eq","","",262,[[["self"],["wlr_tablet_pad_ring_source"]],["bool"]]],[11,"hash","","",262,N],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"clone","","",95,[[["self"]],["self"]]],[11,"default","","",95,[[],["self"]]],[11,"fmt","","",263,[[["self"],["formatter"]],["result"]]],[11,"clone","","",263,[[["self"]],["wlr_tablet_pad_strip_source"]]],[11,"eq","","",263,[[["self"],["wlr_tablet_pad_strip_source"]],["bool"]]],[11,"hash","","",263,N],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"clone","","",96,[[["self"]],["self"]]],[11,"default","","",96,[[],["self"]]],[11,"fmt","","",299,[[["self"],["formatter"]],["result"]]],[11,"clone","","",299,[[["self"]],["wlr_input_device_impl"]]],[11,"clone","","",222,[[["self"]],["self"]]],[11,"default","","",222,[[],["self"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"clone","","",98,[[["self"]],["self"]]],[11,"default","","",98,[[],["self"]]],[11,"clone","","",97,[[["self"]],["self"]]],[11,"default","","",97,[[],["self"]]],[11,"fmt","","",300,[[["self"],["formatter"]],["result"]]],[11,"clone","","",300,[[["self"]],["libinput_device"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"clone","","",99,[[["self"]],["self"]]],[11,"default","","",99,[[],["self"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"clone","","",100,[[["self"]],["self"]]],[11,"default","","",100,[[],["self"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"default","","",101,[[],["wlr_box"]]],[11,"clone","","",101,[[["self"]],["self"]]],[11,"fmt","","",264,[[["self"],["formatter"]],["result"]]],[11,"clone","","",264,[[["self"]],["wlr_renderer_read_pixels_flags"]]],[11,"eq","","",264,[[["self"],["wlr_renderer_read_pixels_flags"]],["bool"]]],[11,"hash","","",264,N],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"clone","","",102,[[["self"]],["self"]]],[11,"default","","",102,[[],["self"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"clone","","",103,[[["self"]],["self"]]],[11,"default","","",103,[[],["self"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"clone","","",105,[[["self"]],["self"]]],[11,"default","","",105,[[],["self"]]],[11,"clone","","",104,[[["self"]],["self"]]],[11,"default","","",104,[[],["self"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"clone","","",107,[[["self"]],["self"]]],[11,"default","","",107,[[],["self"]]],[11,"clone","","",106,[[["self"]],["self"]]],[11,"default","","",106,[[],["self"]]],[11,"fmt","","",301,[[["self"],["formatter"]],["result"]]],[11,"clone","","",301,[[["self"]],["wlr_output_layout_state"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"clone","","",109,[[["self"]],["self"]]],[11,"default","","",109,[[],["self"]]],[11,"clone","","",108,[[["self"]],["self"]]],[11,"default","","",108,[[],["self"]]],[11,"fmt","","",302,[[["self"],["formatter"]],["result"]]],[11,"clone","","",302,[[["self"]],["wlr_output_layout_output_state"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"clone","","",111,[[["self"]],["self"]]],[11,"default","","",111,[[],["self"]]],[11,"clone","","",110,[[["self"]],["self"]]],[11,"default","","",110,[[],["self"]]],[11,"fmt","","",265,[[["self"],["formatter"]],["result"]]],[11,"clone","","",265,[[["self"]],["wlr_direction"]]],[11,"eq","","",265,[[["self"],["wlr_direction"]],["bool"]]],[11,"hash","","",265,N],[11,"fmt","","",303,[[["self"],["formatter"]],["result"]]],[11,"clone","","",303,[[["self"]],["wlr_cursor_state"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"clone","","",113,[[["self"]],["self"]]],[11,"default","","",113,[[],["self"]]],[11,"clone","","",112,[[["self"]],["self"]]],[11,"default","","",112,[[],["self"]]],[11,"fmt","","",266,[[["self"],["formatter"]],["result"]]],[11,"clone","","",266,[[["self"]],["wlr_surface_state_field"]]],[11,"eq","","",266,[[["self"],["wlr_surface_state_field"]],["bool"]]],[11,"hash","","",266,N],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"clone","","",114,[[["self"]],["self"]]],[11,"default","","",114,[[],["self"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"clone","","",115,[[["self"]],["self"]]],[11,"default","","",115,[[],["self"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"default","","",116,[[],["wlr_subsurface_state"]]],[11,"clone","","",116,[[["self"]],["self"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"clone","","",118,[[["self"]],["self"]]],[11,"default","","",118,[[],["self"]]],[11,"clone","","",117,[[["self"]],["self"]]],[11,"default","","",117,[[],["self"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"clone","","",120,[[["self"]],["self"]]],[11,"default","","",120,[[],["self"]]],[11,"clone","","",119,[[["self"]],["self"]]],[11,"default","","",119,[[],["self"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"clone","","",121,[[["self"]],["self"]]],[11,"default","","",121,[[],["self"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"clone","","",122,[[["self"]],["self"]]],[11,"default","","",122,[[],["self"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"clone","","",123,[[["self"]],["self"]]],[11,"default","","",123,[[],["self"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"clone","","",124,[[["self"]],["self"]]],[11,"default","","",124,[[],["self"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"clone","","",125,[[["self"]],["self"]]],[11,"default","","",125,[[],["self"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"clone","","",126,[[["self"]],["self"]]],[11,"default","","",126,[[],["self"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"clone","","",128,[[["self"]],["self"]]],[11,"default","","",128,[[],["self"]]],[11,"clone","","",127,[[["self"]],["self"]]],[11,"default","","",127,[[],["self"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"clone","","",129,[[["self"]],["self"]]],[11,"default","","",129,[[],["self"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"clone","","",130,[[["self"]],["self"]]],[11,"default","","",130,[[],["self"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"clone","","",132,[[["self"]],["self"]]],[11,"default","","",132,[[],["self"]]],[11,"clone","","",131,[[["self"]],["self"]]],[11,"default","","",131,[[],["self"]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result"]]],[11,"clone","","",133,[[["self"]],["self"]]],[11,"default","","",133,[[],["self"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"clone","","",134,[[["self"]],["self"]]],[11,"default","","",134,[[],["self"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"clone","","",136,[[["self"]],["self"]]],[11,"default","","",136,[[],["self"]]],[11,"clone","","",135,[[["self"]],["self"]]],[11,"default","","",135,[[],["self"]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"clone","","",137,[[["self"]],["self"]]],[11,"default","","",137,[[],["self"]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[11,"clone","","",138,[[["self"]],["self"]]],[11,"default","","",138,[[],["self"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",140,[[["self"],["formatter"]],["result"]]],[11,"clone","","",140,[[["self"]],["self"]]],[11,"default","","",140,[[],["self"]]],[11,"clone","","",139,[[["self"]],["self"]]],[11,"default","","",139,[[],["self"]]],[11,"fmt","","",141,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",142,[[["self"],["formatter"]],["result"]]],[11,"clone","","",142,[[["self"]],["self"]]],[11,"default","","",142,[[],["self"]]],[11,"clone","","",141,[[["self"]],["self"]]],[11,"default","","",141,[[],["self"]]],[11,"fmt","","",143,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",144,[[["self"],["formatter"]],["result"]]],[11,"clone","","",144,[[["self"]],["self"]]],[11,"default","","",144,[[],["self"]]],[11,"clone","","",143,[[["self"]],["self"]]],[11,"default","","",143,[[],["self"]]],[11,"fmt","","",145,[[["self"],["formatter"]],["result"]]],[11,"clone","","",145,[[["self"]],["self"]]],[11,"default","","",145,[[],["self"]]],[11,"fmt","","",146,[[["self"],["formatter"]],["result"]]],[11,"clone","","",146,[[["self"]],["self"]]],[11,"default","","",146,[[],["self"]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",148,[[["self"],["formatter"]],["result"]]],[11,"clone","","",148,[[["self"]],["self"]]],[11,"default","","",148,[[],["self"]]],[11,"clone","","",147,[[["self"]],["self"]]],[11,"default","","",147,[[],["self"]]],[11,"fmt","","",149,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",150,[[["self"],["formatter"]],["result"]]],[11,"clone","","",150,[[["self"]],["self"]]],[11,"default","","",150,[[],["self"]]],[11,"clone","","",149,[[["self"]],["self"]]],[11,"default","","",149,[[],["self"]]],[11,"fmt","","",151,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",152,[[["self"],["formatter"]],["result"]]],[11,"clone","","",152,[[["self"]],["self"]]],[11,"default","","",152,[[],["self"]]],[11,"clone","","",151,[[["self"]],["self"]]],[11,"default","","",151,[[],["self"]]],[11,"fmt","","",267,[[["self"],["formatter"]],["result"]]],[11,"clone","","",267,[[["self"]],["wlr_server_decoration_manager_mode"]]],[11,"eq","","",267,[[["self"],["wlr_server_decoration_manager_mode"]],["bool"]]],[11,"hash","","",267,N],[11,"fmt","","",153,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",154,[[["self"],["formatter"]],["result"]]],[11,"clone","","",154,[[["self"]],["self"]]],[11,"default","","",154,[[],["self"]]],[11,"clone","","",153,[[["self"]],["self"]]],[11,"default","","",153,[[],["self"]]],[11,"fmt","","",155,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",156,[[["self"],["formatter"]],["result"]]],[11,"clone","","",156,[[["self"]],["self"]]],[11,"default","","",156,[[],["self"]]],[11,"clone","","",155,[[["self"]],["self"]]],[11,"default","","",155,[[],["self"]]],[11,"fmt","","",157,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",158,[[["self"],["formatter"]],["result"]]],[11,"clone","","",158,[[["self"]],["self"]]],[11,"default","","",158,[[],["self"]]],[11,"clone","","",157,[[["self"]],["self"]]],[11,"default","","",157,[[],["self"]]],[11,"fmt","","",159,[[["self"],["formatter"]],["result"]]],[11,"clone","","",159,[[["self"]],["self"]]],[11,"default","","",159,[[],["self"]]],[11,"fmt","","",160,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",161,[[["self"],["formatter"]],["result"]]],[11,"clone","","",161,[[["self"]],["self"]]],[11,"default","","",161,[[],["self"]]],[11,"clone","","",160,[[["self"]],["self"]]],[11,"default","","",160,[[],["self"]]],[11,"fmt","","",162,[[["self"],["formatter"]],["result"]]],[11,"clone","","",162,[[["self"]],["self"]]],[11,"default","","",162,[[],["self"]]],[11,"fmt","","",163,[[["self"],["formatter"]],["result"]]],[11,"clone","","",163,[[["self"]],["self"]]],[11,"default","","",163,[[],["self"]]],[11,"fmt","","",164,[[["self"],["formatter"]],["result"]]],[11,"clone","","",164,[[["self"]],["self"]]],[11,"default","","",164,[[],["self"]]],[11,"fmt","","",268,[[["self"],["formatter"]],["result"]]],[11,"clone","","",268,[[["self"]],["wlr_wl_shell_surface_state"]]],[11,"eq","","",268,[[["self"],["wlr_wl_shell_surface_state"]],["bool"]]],[11,"hash","","",268,N],[11,"fmt","","",165,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",166,[[["self"],["formatter"]],["result"]]],[11,"clone","","",166,[[["self"]],["self"]]],[11,"default","","",166,[[],["self"]]],[11,"clone","","",165,[[["self"]],["self"]]],[11,"default","","",165,[[],["self"]]],[11,"fmt","","",167,[[["self"],["formatter"]],["result"]]],[11,"clone","","",167,[[["self"]],["self"]]],[11,"default","","",167,[[],["self"]]],[11,"fmt","","",168,[[["self"],["formatter"]],["result"]]],[11,"clone","","",168,[[["self"]],["self"]]],[11,"default","","",168,[[],["self"]]],[11,"fmt","","",169,[[["self"],["formatter"]],["result"]]],[11,"clone","","",169,[[["self"]],["self"]]],[11,"default","","",169,[[],["self"]]],[11,"fmt","","",170,[[["self"],["formatter"]],["result"]]],[11,"clone","","",170,[[["self"]],["self"]]],[11,"default","","",170,[[],["self"]]],[11,"fmt","","",269,[[["self"],["formatter"]],["result"]]],[11,"clone","","",269,[[["self"]],["zxdg_positioner_v6_anchor"]]],[11,"eq","","",269,[[["self"],["zxdg_positioner_v6_anchor"]],["bool"]]],[11,"hash","","",269,N],[11,"fmt","","",270,[[["self"],["formatter"]],["result"]]],[11,"clone","","",270,[[["self"]],["zxdg_positioner_v6_gravity"]]],[11,"eq","","",270,[[["self"],["zxdg_positioner_v6_gravity"]],["bool"]]],[11,"hash","","",270,N],[11,"fmt","","",271,[[["self"],["formatter"]],["result"]]],[11,"clone","","",271,[[["self"]],["zxdg_positioner_v6_constraint_adjustment"]]],[11,"eq","","",271,[[["self"],["zxdg_positioner_v6_constraint_adjustment"]],["bool"]]],[11,"hash","","",271,N],[11,"fmt","","",171,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",172,[[["self"],["formatter"]],["result"]]],[11,"clone","","",172,[[["self"]],["self"]]],[11,"default","","",172,[[],["self"]]],[11,"clone","","",171,[[["self"]],["self"]]],[11,"default","","",171,[[],["self"]]],[11,"fmt","","",173,[[["self"],["formatter"]],["result"]]],[11,"clone","","",173,[[["self"]],["self"]]],[11,"default","","",173,[[],["self"]]],[11,"fmt","","",174,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",175,[[["self"],["formatter"]],["result"]]],[11,"default","","",175,[[],["wlr_xdg_positioner_v6__bindgen_ty_1"]]],[11,"clone","","",175,[[["self"]],["self"]]],[11,"fmt","","",176,[[["self"],["formatter"]],["result"]]],[11,"default","","",176,[[],["wlr_xdg_positioner_v6__bindgen_ty_2"]]],[11,"clone","","",176,[[["self"]],["self"]]],[11,"clone","","",174,[[["self"]],["self"]]],[11,"default","","",174,[[],["self"]]],[11,"fmt","","",177,[[["self"],["formatter"]],["result"]]],[11,"clone","","",177,[[["self"]],["self"]]],[11,"default","","",177,[[],["self"]]],[11,"fmt","","",178,[[["self"],["formatter"]],["result"]]],[11,"clone","","",178,[[["self"]],["self"]]],[11,"default","","",178,[[],["self"]]],[11,"fmt","","",272,[[["self"],["formatter"]],["result"]]],[11,"clone","","",272,[[["self"]],["wlr_xdg_surface_v6_role"]]],[11,"eq","","",272,[[["self"],["wlr_xdg_surface_v6_role"]],["bool"]]],[11,"hash","","",272,N],[11,"fmt","","",179,[[["self"],["formatter"]],["result"]]],[11,"default","","",179,[[],["wlr_xdg_toplevel_v6_state"]]],[11,"clone","","",179,[[["self"]],["self"]]],[11,"fmt","","",180,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",181,[[["self"],["formatter"]],["result"]]],[11,"clone","","",181,[[["self"]],["self"]]],[11,"default","","",181,[[],["self"]]],[11,"clone","","",180,[[["self"]],["self"]]],[11,"default","","",180,[[],["self"]]],[11,"fmt","","",182,[[["self"],["formatter"]],["result"]]],[11,"clone","","",182,[[["self"]],["self"]]],[11,"default","","",182,[[],["self"]]],[11,"clone","","",223,[[["self"]],["self"]]],[11,"default","","",223,[[],["self"]]],[11,"fmt","","",184,[[["self"],["formatter"]],["result"]]],[11,"clone","","",184,[[["self"]],["self"]]],[11,"default","","",184,[[],["self"]]],[11,"clone","","",183,[[["self"]],["self"]]],[11,"default","","",183,[[],["self"]]],[11,"fmt","","",185,[[["self"],["formatter"]],["result"]]],[11,"clone","","",185,[[["self"]],["self"]]],[11,"default","","",185,[[],["self"]]],[11,"fmt","","",186,[[["self"],["formatter"]],["result"]]],[11,"clone","","",186,[[["self"]],["self"]]],[11,"default","","",186,[[],["self"]]],[11,"fmt","","",187,[[["self"],["formatter"]],["result"]]],[11,"clone","","",187,[[["self"]],["self"]]],[11,"default","","",187,[[],["self"]]],[11,"fmt","","",188,[[["self"],["formatter"]],["result"]]],[11,"clone","","",188,[[["self"]],["self"]]],[11,"default","","",188,[[],["self"]]],[11,"fmt","","",273,[[["self"],["formatter"]],["result"]]],[11,"clone","","",273,[[["self"]],["xdg_positioner_anchor"]]],[11,"eq","","",273,[[["self"],["xdg_positioner_anchor"]],["bool"]]],[11,"hash","","",273,N],[11,"fmt","","",274,[[["self"],["formatter"]],["result"]]],[11,"clone","","",274,[[["self"]],["xdg_positioner_gravity"]]],[11,"eq","","",274,[[["self"],["xdg_positioner_gravity"]],["bool"]]],[11,"hash","","",274,N],[11,"fmt","","",275,[[["self"],["formatter"]],["result"]]],[11,"clone","","",275,[[["self"]],["xdg_positioner_constraint_adjustment"]]],[11,"eq","","",275,[[["self"],["xdg_positioner_constraint_adjustment"]],["bool"]]],[11,"hash","","",275,N],[11,"fmt","","",189,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",190,[[["self"],["formatter"]],["result"]]],[11,"clone","","",190,[[["self"]],["self"]]],[11,"default","","",190,[[],["self"]]],[11,"clone","","",189,[[["self"]],["self"]]],[11,"default","","",189,[[],["self"]]],[11,"fmt","","",191,[[["self"],["formatter"]],["result"]]],[11,"clone","","",191,[[["self"]],["self"]]],[11,"default","","",191,[[],["self"]]],[11,"fmt","","",192,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",193,[[["self"],["formatter"]],["result"]]],[11,"default","","",193,[[],["wlr_xdg_positioner__bindgen_ty_1"]]],[11,"clone","","",193,[[["self"]],["self"]]],[11,"fmt","","",194,[[["self"],["formatter"]],["result"]]],[11,"default","","",194,[[],["wlr_xdg_positioner__bindgen_ty_2"]]],[11,"clone","","",194,[[["self"]],["self"]]],[11,"clone","","",192,[[["self"]],["self"]]],[11,"default","","",192,[[],["self"]]],[11,"fmt","","",195,[[["self"],["formatter"]],["result"]]],[11,"clone","","",195,[[["self"]],["self"]]],[11,"default","","",195,[[],["self"]]],[11,"fmt","","",196,[[["self"],["formatter"]],["result"]]],[11,"clone","","",196,[[["self"]],["self"]]],[11,"default","","",196,[[],["self"]]],[11,"fmt","","",276,[[["self"],["formatter"]],["result"]]],[11,"clone","","",276,[[["self"]],["wlr_xdg_surface_role"]]],[11,"eq","","",276,[[["self"],["wlr_xdg_surface_role"]],["bool"]]],[11,"hash","","",276,N],[11,"fmt","","",197,[[["self"],["formatter"]],["result"]]],[11,"default","","",197,[[],["wlr_xdg_toplevel_state"]]],[11,"clone","","",197,[[["self"]],["self"]]],[11,"fmt","","",198,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",199,[[["self"],["formatter"]],["result"]]],[11,"clone","","",199,[[["self"]],["self"]]],[11,"default","","",199,[[],["self"]]],[11,"clone","","",198,[[["self"]],["self"]]],[11,"default","","",198,[[],["self"]]],[11,"fmt","","",200,[[["self"],["formatter"]],["result"]]],[11,"clone","","",200,[[["self"]],["self"]]],[11,"default","","",200,[[],["self"]]],[11,"clone","","",224,[[["self"]],["self"]]],[11,"default","","",224,[[],["self"]]],[11,"fmt","","",202,[[["self"],["formatter"]],["result"]]],[11,"clone","","",202,[[["self"]],["self"]]],[11,"default","","",202,[[],["self"]]],[11,"clone","","",201,[[["self"]],["self"]]],[11,"default","","",201,[[],["self"]]],[11,"fmt","","",203,[[["self"],["formatter"]],["result"]]],[11,"clone","","",203,[[["self"]],["self"]]],[11,"default","","",203,[[],["self"]]],[11,"fmt","","",204,[[["self"],["formatter"]],["result"]]],[11,"clone","","",204,[[["self"]],["self"]]],[11,"default","","",204,[[],["self"]]],[11,"fmt","","",205,[[["self"],["formatter"]],["result"]]],[11,"clone","","",205,[[["self"]],["self"]]],[11,"default","","",205,[[],["self"]]],[11,"fmt","","",206,[[["self"],["formatter"]],["result"]]],[11,"clone","","",206,[[["self"]],["self"]]],[11,"default","","",206,[[],["self"]]],[11,"fmt","","",207,[[["self"],["formatter"]],["result"]]],[11,"clone","","",207,[[["self"]],["self"]]],[11,"default","","",207,[[],["self"]]],[11,"fmt","","",208,[[["self"],["formatter"]],["result"]]],[11,"clone","","",208,[[["self"]],["self"]]],[11,"default","","",208,[[],["self"]]],[11,"fmt","","",209,[[["self"],["formatter"]],["result"]]],[11,"default","","",209,[[],["xcb_generic_event_t"]]],[11,"clone","","",209,[[["self"]],["self"]]],[11,"fmt","","",304,[[["self"],["formatter"]],["result"]]],[11,"clone","","",304,[[["self"]],["wlr_xwm"]]],[11,"fmt","","",305,[[["self"],["formatter"]],["result"]]],[11,"clone","","",305,[[["self"]],["wlr_xwayland_cursor"]]],[11,"fmt","","",210,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",211,[[["self"],["formatter"]],["result"]]],[11,"clone","","",211,[[["self"]],["self"]]],[11,"default","","",211,[[],["self"]]],[11,"clone","","",210,[[["self"]],["self"]]],[11,"default","","",210,[[],["self"]]],[11,"fmt","","",277,[[["self"],["formatter"]],["result"]]],[11,"clone","","",277,[[["self"]],["wlr_xwayland_surface_decorations"]]],[11,"eq","","",277,[[["self"],["wlr_xwayland_surface_decorations"]],["bool"]]],[11,"hash","","",277,N],[11,"fmt","","",212,[[["self"],["formatter"]],["result"]]],[11,"default","","",212,[[],["wlr_xwayland_surface_hints"]]],[11,"clone","","",212,[[["self"]],["self"]]],[11,"fmt","","",213,[[["self"],["formatter"]],["result"]]],[11,"default","","",213,[[],["wlr_xwayland_surface_size_hints"]]],[11,"clone","","",213,[[["self"]],["self"]]],[11,"fmt","","",214,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",215,[[["self"],["formatter"]],["result"]]],[11,"clone","","",215,[[["self"]],["self"]]],[11,"default","","",215,[[],["self"]]],[11,"clone","","",214,[[["self"]],["self"]]],[11,"default","","",214,[[],["self"]]],[11,"fmt","","",216,[[["self"],["formatter"]],["result"]]],[11,"clone","","",216,[[["self"]],["self"]]],[11,"default","","",216,[[],["self"]]],[11,"fmt","","",217,[[["self"],["formatter"]],["result"]]],[11,"clone","","",217,[[["self"]],["self"]]],[11,"default","","",217,[[],["self"]]],[11,"fmt","","",218,[[["self"],["formatter"]],["result"]]],[11,"clone","","",218,[[["self"]],["self"]]],[11,"default","","",218,[[],["self"]]],[11,"fmt","","",219,[[["self"],["formatter"]],["result"]]],[11,"clone","","",219,[[["self"]],["self"]]],[11,"default","","",219,[[],["self"]]],[11,"fmt","","",220,[[["self"],["formatter"]],["result"]]],[11,"default","","",220,[[],["wlr_buffer"]]],[11,"clone","","",220,[[["self"]],["self"]]],[11,"fmt","","",221,[[["self"],["formatter"]],["result"]]],[11,"default","","",221,[[],["wlr_gtk_primary_selection_source"]]],[11,"clone","","",221,[[["self"]],["self"]]],[0,"protocols","","",N,N],[0,"server_decoration","wlroots_sys::protocols","",N,N],[0,"server","wlroots_sys::protocols::server_decoration","",N,N],[0,"org_kde_kwin_server_decoration_manager","wlroots_sys::protocols::server_decoration::server","Server side window decoration manager",N,N],[3,"OrgKdeKwinServerDecorationManager","wlroots_sys::protocols::server_decoration::server::org_kde_kwin_server_decoration_manager","",N,N],[4,"Mode","","Possible values to use in request_mode and the event mode.",N,N],[13,"None","","Undecorated: The surface is not decorated at all, neither server nor client-side. An example is a popup surface which should not be decorated.",306,N],[13,"Client","","Client-side decoration: The decoration is part of the surface and the client.",306,N],[13,"Server","","Server-side decoration: The server embeds the surface into a decoration frame.",306,N],[4,"Request","","",N,N],[13,"Create","","Create a server-side decoration object for a given surface",307,N],[12,"id","wlroots_sys::protocols::server_decoration::server::org_kde_kwin_server_decoration_manager::Request","",307,N],[12,"surface","","",307,N],[4,"Event","wlroots_sys::protocols::server_decoration::server::org_kde_kwin_server_decoration_manager","",N,N],[13,"DefaultMode","","The default mode used on the server",308,N],[12,"mode","wlroots_sys::protocols::server_decoration::server::org_kde_kwin_server_decoration_manager::Event","",308,N],[0,"org_kde_kwin_server_decoration","wlroots_sys::protocols::server_decoration::server","",N,N],[3,"OrgKdeKwinServerDecoration","wlroots_sys::protocols::server_decoration::server::org_kde_kwin_server_decoration","",N,N],[4,"Mode","","Possible values to use in request_mode and the event mode.",N,N],[13,"None","","Undecorated: The surface is not decorated at all, neither server nor client-side. An example is a popup surface which should not be decorated.",309,N],[13,"Client","","Client-side decoration: The decoration is part of the surface and the client.",309,N],[13,"Server","","Server-side decoration: The server embeds the surface into a decoration frame.",309,N],[4,"Request","","",N,N],[13,"Release","","release the server decoration object",310,N],[13,"RequestMode","","The decoration mode the surface wants to use.",310,N],[12,"mode","wlroots_sys::protocols::server_decoration::server::org_kde_kwin_server_decoration::Request","",310,N],[4,"Event","wlroots_sys::protocols::server_decoration::server::org_kde_kwin_server_decoration","",N,N],[13,"Mode","","The new decoration mode applied by the server",311,N],[12,"mode","wlroots_sys::protocols::server_decoration::server::org_kde_kwin_server_decoration::Event","",311,N],[6,"va_list","wlroots_sys","",N,N],[6,"wlr_log_func_t","","",N,N],[6,"__uint8_t","","",N,N],[6,"__int16_t","","",N,N],[6,"__uint16_t","","",N,N],[6,"__int32_t","","",N,N],[6,"__uint32_t","","",N,N],[6,"__uint64_t","","",N,N],[6,"__dev_t","","",N,N],[6,"__off_t","","",N,N],[6,"__off64_t","","",N,N],[6,"__pid_t","","",N,N],[6,"__time_t","","",N,N],[6,"__clockid_t","","",N,N],[6,"__ssize_t","","",N,N],[6,"__syscall_slong_t","","",N,N],[6,"pixman_bool_t","","",N,N],[6,"pixman_fixed_16_16_t","","",N,N],[6,"pixman_fixed_t","","",N,N],[6,"pixman_color_t","","",N,N],[6,"pixman_point_fixed_t","","",N,N],[6,"pixman_line_fixed_t","","",N,N],[6,"pixman_transform_t","","",N,N],[6,"pixman_image_t","","",N,N],[6,"pixman_region16_data_t","","",N,N],[6,"pixman_box16_t","","",N,N],[6,"pixman_rectangle16_t","","",N,N],[6,"pixman_region16_t","","",N,N],[6,"pixman_region32_data_t","","",N,N],[6,"pixman_box32_t","","",N,N],[6,"pixman_region32_t","","",N,N],[6,"pixman_indexed_t","","",N,N],[6,"pixman_gradient_stop_t","","",N,N],[6,"pixman_read_memory_func_t","","",N,N],[6,"pixman_write_memory_func_t","","",N,N],[6,"pixman_image_destroy_func_t","","",N,N],[6,"pixman_index_type","","",N,N],[6,"pixman_edge_t","","",N,N],[6,"pixman_trapezoid_t","","",N,N],[6,"pixman_trap_t","","",N,N],[6,"pixman_span_fix_t","","",N,N],[6,"pixman_triangle_t","","",N,N],[6,"dev_t","","",N,N],[6,"clockid_t","","",N,N],[6,"time_t","","",N,N],[6,"wl_notify_func_t","","",N,N],[6,"wl_resource_destroy_func_t","","",N,N],[6,"khronos_int32_t","","",N,N],[6,"EGLint","","",N,N],[6,"EGLDisplay","","",N,N],[6,"EGLConfig","","",N,N],[6,"EGLSurface","","",N,N],[6,"EGLContext","","",N,N],[6,"EGLenum","","",N,N],[6,"EGLImageKHR","","",N,N],[6,"wlr_renderer_create_func_t","","",N,N],[6,"drmModeModeInfo","","Add mode to the list of available modes",N,N],[6,"FILE","","",N,N],[6,"_IO_lock_t","","",N,N],[6,"xkb_keycode_t","","",N,N],[6,"xkb_keysym_t","","",N,N],[6,"xkb_layout_index_t","","",N,N],[6,"xkb_layout_mask_t","","",N,N],[6,"xkb_level_index_t","","",N,N],[6,"xkb_mod_index_t","","",N,N],[6,"xkb_mod_mask_t","","",N,N],[6,"xkb_led_index_t","","",N,N],[6,"xkb_led_mask_t","","",N,N],[6,"xkb_keymap_key_iter_t","","",N,N],[6,"wlr_surface_iterator_func_t","","",N,N],[6,"xcb_window_t","","",N,N],[6,"xcb_pixmap_t","","",N,N],[6,"xcb_atom_t","","",N,N],[6,"__builtin_va_list","","",N,N],[6,"wlr_output_events","","",N,N],[6,"wlr_input_device_pointer","","",N,N],[17,"pixman_format_code_t_PIXMAN_x4c4","","",N,N],[17,"pixman_format_code_t_PIXMAN_x4g4","","",N,N],[11,"invert","","Returns the transform that, when composed with `self`, gives `WL_OUTPUT_TRANSFORM_NORMAL`.",239,[[["self"]],["self"]]],[11,"compose","","Returns a transform that, when applied, has the same effect as applying sequentially `self` and `other`.",239,[[["self"],["self"]],["self"]]],[11,"from","wlroots_sys::common","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"deref","wlroots_sys","",312,[[["self"]],["waylandserver"]]],[11,"deref","wlroots_sys::server","",313,[[["self"]],["option"]]],[11,"initialize","","",313,N],[11,"initialize","wlroots_sys","",312,N],[11,"from","wlroots_sys::common","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","wlroots_sys::server","",314,[[["t"]],["t"]]],[11,"into","","",314,[[["self"]],["u"]]],[11,"try_from","","",314,[[["u"]],["result"]]],[11,"borrow","","",314,[[["self"]],["t"]]],[11,"try_into","","",314,[[["self"]],["result"]]],[11,"borrow_mut","","",314,[[["self"]],["t"]]],[11,"get_type_id","","",314,[[["self"]],["typeid"]]],[11,"from","","",315,[[["t"]],["t"]]],[11,"into","","",315,[[["self"]],["u"]]],[11,"try_from","","",315,[[["u"]],["result"]]],[11,"borrow","","",315,[[["self"]],["t"]]],[11,"try_into","","",315,[[["self"]],["result"]]],[11,"borrow_mut","","",315,[[["self"]],["t"]]],[11,"get_type_id","","",315,[[["self"]],["typeid"]]],[11,"from","","",316,[[["t"]],["t"]]],[11,"into","","",316,[[["self"]],["u"]]],[11,"try_from","","",316,[[["u"]],["result"]]],[11,"borrow","","",316,[[["self"]],["t"]]],[11,"try_into","","",316,[[["self"]],["result"]]],[11,"borrow_mut","","",316,[[["self"]],["t"]]],[11,"get_type_id","","",316,[[["self"]],["typeid"]]],[11,"from","","",317,[[["t"]],["t"]]],[11,"into","","",317,[[["self"]],["u"]]],[11,"try_from","","",317,[[["u"]],["result"]]],[11,"borrow","","",317,[[["self"]],["t"]]],[11,"try_into","","",317,[[["self"]],["result"]]],[11,"borrow_mut","","",317,[[["self"]],["t"]]],[11,"get_type_id","","",317,[[["self"]],["typeid"]]],[11,"from","","",318,[[["t"]],["t"]]],[11,"into","","",318,[[["self"]],["u"]]],[11,"try_from","","",318,[[["u"]],["result"]]],[11,"borrow","","",318,[[["self"]],["t"]]],[11,"try_into","","",318,[[["self"]],["result"]]],[11,"borrow_mut","","",318,[[["self"]],["t"]]],[11,"get_type_id","","",318,[[["self"]],["typeid"]]],[11,"from","","",319,[[["t"]],["t"]]],[11,"into","","",319,[[["self"]],["u"]]],[11,"try_from","","",319,[[["u"]],["result"]]],[11,"borrow","","",319,[[["self"]],["t"]]],[11,"try_into","","",319,[[["self"]],["result"]]],[11,"borrow_mut","","",319,[[["self"]],["t"]]],[11,"get_type_id","","",319,[[["self"]],["typeid"]]],[11,"from","","",320,[[["t"]],["t"]]],[11,"into","","",320,[[["self"]],["u"]]],[11,"try_from","","",320,[[["u"]],["result"]]],[11,"borrow","","",320,[[["self"]],["t"]]],[11,"try_into","","",320,[[["self"]],["result"]]],[11,"borrow_mut","","",320,[[["self"]],["t"]]],[11,"get_type_id","","",320,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"open","","",7,[[["str"]],["result",["waylandserver","dlerror"]]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",313,[[["t"]],["t"]]],[11,"into","","",313,[[["self"]],["u"]]],[11,"try_from","","",313,[[["u"]],["result"]]],[11,"borrow","","",313,[[["self"]],["t"]]],[11,"try_into","","",313,[[["self"]],["result"]]],[11,"borrow_mut","","",313,[[["self"]],["t"]]],[11,"get_type_id","","",313,[[["self"]],["typeid"]]],[11,"from","wlroots_sys","",312,[[["t"]],["t"]]],[11,"into","","",312,[[["self"]],["u"]]],[11,"try_from","","",312,[[["u"]],["result"]]],[11,"borrow","","",312,[[["self"]],["t"]]],[11,"try_into","","",312,[[["self"]],["result"]]],[11,"borrow_mut","","",312,[[["self"]],["t"]]],[11,"get_type_id","","",312,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"to_owned","","",278,[[["self"]],["t"]]],[11,"clone_into","","",278,N],[11,"from","","",278,[[["t"]],["t"]]],[11,"into","","",278,[[["self"]],["u"]]],[11,"try_from","","",278,[[["u"]],["result"]]],[11,"borrow","","",278,[[["self"]],["t"]]],[11,"try_into","","",278,[[["self"]],["result"]]],[11,"borrow_mut","","",278,[[["self"]],["t"]]],[11,"get_type_id","","",278,[[["self"]],["typeid"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"to_owned","","",279,[[["self"]],["t"]]],[11,"clone_into","","",279,N],[11,"from","","",279,[[["t"]],["t"]]],[11,"into","","",279,[[["self"]],["u"]]],[11,"try_from","","",279,[[["u"]],["result"]]],[11,"borrow","","",279,[[["self"]],["t"]]],[11,"try_into","","",279,[[["self"]],["result"]]],[11,"borrow_mut","","",279,[[["self"]],["t"]]],[11,"get_type_id","","",279,[[["self"]],["typeid"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"to_owned","","",280,[[["self"]],["t"]]],[11,"clone_into","","",280,N],[11,"from","","",280,[[["t"]],["t"]]],[11,"into","","",280,[[["self"]],["u"]]],[11,"try_from","","",280,[[["u"]],["result"]]],[11,"borrow","","",280,[[["self"]],["t"]]],[11,"try_into","","",280,[[["self"]],["result"]]],[11,"borrow_mut","","",280,[[["self"]],["t"]]],[11,"get_type_id","","",280,[[["self"]],["typeid"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"to_owned","","",281,[[["self"]],["t"]]],[11,"clone_into","","",281,N],[11,"from","","",281,[[["t"]],["t"]]],[11,"into","","",281,[[["self"]],["u"]]],[11,"try_from","","",281,[[["u"]],["result"]]],[11,"borrow","","",281,[[["self"]],["t"]]],[11,"try_into","","",281,[[["self"]],["result"]]],[11,"borrow_mut","","",281,[[["self"]],["t"]]],[11,"get_type_id","","",281,[[["self"]],["typeid"]]],[11,"to_owned","","",282,[[["self"]],["t"]]],[11,"clone_into","","",282,N],[11,"from","","",282,[[["t"]],["t"]]],[11,"into","","",282,[[["self"]],["u"]]],[11,"try_from","","",282,[[["u"]],["result"]]],[11,"borrow","","",282,[[["self"]],["t"]]],[11,"try_into","","",282,[[["self"]],["result"]]],[11,"borrow_mut","","",282,[[["self"]],["t"]]],[11,"get_type_id","","",282,[[["self"]],["typeid"]]],[11,"to_owned","","",283,[[["self"]],["t"]]],[11,"clone_into","","",283,N],[11,"from","","",283,[[["t"]],["t"]]],[11,"into","","",283,[[["self"]],["u"]]],[11,"try_from","","",283,[[["u"]],["result"]]],[11,"borrow","","",283,[[["self"]],["t"]]],[11,"try_into","","",283,[[["self"]],["result"]]],[11,"borrow_mut","","",283,[[["self"]],["t"]]],[11,"get_type_id","","",283,[[["self"]],["typeid"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"to_owned","","",284,[[["self"]],["t"]]],[11,"clone_into","","",284,N],[11,"from","","",284,[[["t"]],["t"]]],[11,"into","","",284,[[["self"]],["u"]]],[11,"try_from","","",284,[[["u"]],["result"]]],[11,"borrow","","",284,[[["self"]],["t"]]],[11,"try_into","","",284,[[["self"]],["result"]]],[11,"borrow_mut","","",284,[[["self"]],["t"]]],[11,"get_type_id","","",284,[[["self"]],["typeid"]]],[11,"to_owned","","",285,[[["self"]],["t"]]],[11,"clone_into","","",285,N],[11,"from","","",285,[[["t"]],["t"]]],[11,"into","","",285,[[["self"]],["u"]]],[11,"try_from","","",285,[[["u"]],["result"]]],[11,"borrow","","",285,[[["self"]],["t"]]],[11,"try_into","","",285,[[["self"]],["result"]]],[11,"borrow_mut","","",285,[[["self"]],["t"]]],[11,"get_type_id","","",285,[[["self"]],["typeid"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"to_owned","","",286,[[["self"]],["t"]]],[11,"clone_into","","",286,N],[11,"from","","",286,[[["t"]],["t"]]],[11,"into","","",286,[[["self"]],["u"]]],[11,"try_from","","",286,[[["u"]],["result"]]],[11,"borrow","","",286,[[["self"]],["t"]]],[11,"try_into","","",286,[[["self"]],["result"]]],[11,"borrow_mut","","",286,[[["self"]],["t"]]],[11,"get_type_id","","",286,[[["self"]],["typeid"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"to_owned","","",287,[[["self"]],["t"]]],[11,"clone_into","","",287,N],[11,"from","","",287,[[["t"]],["t"]]],[11,"into","","",287,[[["self"]],["u"]]],[11,"try_from","","",287,[[["u"]],["result"]]],[11,"borrow","","",287,[[["self"]],["t"]]],[11,"try_into","","",287,[[["self"]],["result"]]],[11,"borrow_mut","","",287,[[["self"]],["t"]]],[11,"get_type_id","","",287,[[["self"]],["typeid"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"to_owned","","",288,[[["self"]],["t"]]],[11,"clone_into","","",288,N],[11,"from","","",288,[[["t"]],["t"]]],[11,"into","","",288,[[["self"]],["u"]]],[11,"try_from","","",288,[[["u"]],["result"]]],[11,"borrow","","",288,[[["self"]],["t"]]],[11,"try_into","","",288,[[["self"]],["result"]]],[11,"borrow_mut","","",288,[[["self"]],["t"]]],[11,"get_type_id","","",288,[[["self"]],["typeid"]]],[11,"to_owned","","",289,[[["self"]],["t"]]],[11,"clone_into","","",289,N],[11,"from","","",289,[[["t"]],["t"]]],[11,"into","","",289,[[["self"]],["u"]]],[11,"try_from","","",289,[[["u"]],["result"]]],[11,"borrow","","",289,[[["self"]],["t"]]],[11,"try_into","","",289,[[["self"]],["result"]]],[11,"borrow_mut","","",289,[[["self"]],["t"]]],[11,"get_type_id","","",289,[[["self"]],["typeid"]]],[11,"to_owned","","",290,[[["self"]],["t"]]],[11,"clone_into","","",290,N],[11,"from","","",290,[[["t"]],["t"]]],[11,"into","","",290,[[["self"]],["u"]]],[11,"try_from","","",290,[[["u"]],["result"]]],[11,"borrow","","",290,[[["self"]],["t"]]],[11,"try_into","","",290,[[["self"]],["result"]]],[11,"borrow_mut","","",290,[[["self"]],["t"]]],[11,"get_type_id","","",290,[[["self"]],["typeid"]]],[11,"to_owned","","",291,[[["self"]],["t"]]],[11,"clone_into","","",291,N],[11,"from","","",291,[[["t"]],["t"]]],[11,"into","","",291,[[["self"]],["u"]]],[11,"try_from","","",291,[[["u"]],["result"]]],[11,"borrow","","",291,[[["self"]],["t"]]],[11,"try_into","","",291,[[["self"]],["result"]]],[11,"borrow_mut","","",291,[[["self"]],["t"]]],[11,"get_type_id","","",291,[[["self"]],["typeid"]]],[11,"to_owned","","",292,[[["self"]],["t"]]],[11,"clone_into","","",292,N],[11,"from","","",292,[[["t"]],["t"]]],[11,"into","","",292,[[["self"]],["u"]]],[11,"try_from","","",292,[[["u"]],["result"]]],[11,"borrow","","",292,[[["self"]],["t"]]],[11,"try_into","","",292,[[["self"]],["result"]]],[11,"borrow_mut","","",292,[[["self"]],["t"]]],[11,"get_type_id","","",292,[[["self"]],["typeid"]]],[11,"to_owned","","",293,[[["self"]],["t"]]],[11,"clone_into","","",293,N],[11,"from","","",293,[[["t"]],["t"]]],[11,"into","","",293,[[["self"]],["u"]]],[11,"try_from","","",293,[[["u"]],["result"]]],[11,"borrow","","",293,[[["self"]],["t"]]],[11,"try_into","","",293,[[["self"]],["result"]]],[11,"borrow_mut","","",293,[[["self"]],["t"]]],[11,"get_type_id","","",293,[[["self"]],["typeid"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"to_owned","","",294,[[["self"]],["t"]]],[11,"clone_into","","",294,N],[11,"from","","",294,[[["t"]],["t"]]],[11,"into","","",294,[[["self"]],["u"]]],[11,"try_from","","",294,[[["u"]],["result"]]],[11,"borrow","","",294,[[["self"]],["t"]]],[11,"try_into","","",294,[[["self"]],["result"]]],[11,"borrow_mut","","",294,[[["self"]],["t"]]],[11,"get_type_id","","",294,[[["self"]],["typeid"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"to_owned","","",295,[[["self"]],["t"]]],[11,"clone_into","","",295,N],[11,"from","","",295,[[["t"]],["t"]]],[11,"into","","",295,[[["self"]],["u"]]],[11,"try_from","","",295,[[["u"]],["result"]]],[11,"borrow","","",295,[[["self"]],["t"]]],[11,"try_into","","",295,[[["self"]],["result"]]],[11,"borrow_mut","","",295,[[["self"]],["t"]]],[11,"get_type_id","","",295,[[["self"]],["typeid"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"to_owned","","",296,[[["self"]],["t"]]],[11,"clone_into","","",296,N],[11,"from","","",296,[[["t"]],["t"]]],[11,"into","","",296,[[["self"]],["u"]]],[11,"try_from","","",296,[[["u"]],["result"]]],[11,"borrow","","",296,[[["self"]],["t"]]],[11,"try_into","","",296,[[["self"]],["result"]]],[11,"borrow_mut","","",296,[[["self"]],["t"]]],[11,"get_type_id","","",296,[[["self"]],["typeid"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"to_owned","","",297,[[["self"]],["t"]]],[11,"clone_into","","",297,N],[11,"from","","",297,[[["t"]],["t"]]],[11,"into","","",297,[[["self"]],["u"]]],[11,"try_from","","",297,[[["u"]],["result"]]],[11,"borrow","","",297,[[["self"]],["t"]]],[11,"try_into","","",297,[[["self"]],["result"]]],[11,"borrow_mut","","",297,[[["self"]],["t"]]],[11,"get_type_id","","",297,[[["self"]],["typeid"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"to_owned","","",298,[[["self"]],["t"]]],[11,"clone_into","","",298,N],[11,"from","","",298,[[["t"]],["t"]]],[11,"into","","",298,[[["self"]],["u"]]],[11,"try_from","","",298,[[["u"]],["result"]]],[11,"borrow","","",298,[[["self"]],["t"]]],[11,"try_into","","",298,[[["self"]],["result"]]],[11,"borrow_mut","","",298,[[["self"]],["t"]]],[11,"get_type_id","","",298,[[["self"]],["typeid"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"to_owned","","",299,[[["self"]],["t"]]],[11,"clone_into","","",299,N],[11,"from","","",299,[[["t"]],["t"]]],[11,"into","","",299,[[["self"]],["u"]]],[11,"try_from","","",299,[[["u"]],["result"]]],[11,"borrow","","",299,[[["self"]],["t"]]],[11,"try_into","","",299,[[["self"]],["result"]]],[11,"borrow_mut","","",299,[[["self"]],["t"]]],[11,"get_type_id","","",299,[[["self"]],["typeid"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"to_owned","","",300,[[["self"]],["t"]]],[11,"clone_into","","",300,N],[11,"from","","",300,[[["t"]],["t"]]],[11,"into","","",300,[[["self"]],["u"]]],[11,"try_from","","",300,[[["u"]],["result"]]],[11,"borrow","","",300,[[["self"]],["t"]]],[11,"try_into","","",300,[[["self"]],["result"]]],[11,"borrow_mut","","",300,[[["self"]],["t"]]],[11,"get_type_id","","",300,[[["self"]],["typeid"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"to_owned","","",301,[[["self"]],["t"]]],[11,"clone_into","","",301,N],[11,"from","","",301,[[["t"]],["t"]]],[11,"into","","",301,[[["self"]],["u"]]],[11,"try_from","","",301,[[["u"]],["result"]]],[11,"borrow","","",301,[[["self"]],["t"]]],[11,"try_into","","",301,[[["self"]],["result"]]],[11,"borrow_mut","","",301,[[["self"]],["t"]]],[11,"get_type_id","","",301,[[["self"]],["typeid"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"to_owned","","",302,[[["self"]],["t"]]],[11,"clone_into","","",302,N],[11,"from","","",302,[[["t"]],["t"]]],[11,"into","","",302,[[["self"]],["u"]]],[11,"try_from","","",302,[[["u"]],["result"]]],[11,"borrow","","",302,[[["self"]],["t"]]],[11,"try_into","","",302,[[["self"]],["result"]]],[11,"borrow_mut","","",302,[[["self"]],["t"]]],[11,"get_type_id","","",302,[[["self"]],["typeid"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"to_owned","","",303,[[["self"]],["t"]]],[11,"clone_into","","",303,N],[11,"from","","",303,[[["t"]],["t"]]],[11,"into","","",303,[[["self"]],["u"]]],[11,"try_from","","",303,[[["u"]],["result"]]],[11,"borrow","","",303,[[["self"]],["t"]]],[11,"try_into","","",303,[[["self"]],["result"]]],[11,"borrow_mut","","",303,[[["self"]],["t"]]],[11,"get_type_id","","",303,[[["self"]],["typeid"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,N],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,N],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,N],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,N],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,N],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,N],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,N],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,N],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,N],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,N],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,N],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,N],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,N],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,N],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,N],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,N],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,N],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,N],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,N],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,N],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,N],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,N],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[["self"]],["u"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"try_into","","",157,[[["self"]],["result"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"get_type_id","","",157,[[["self"]],["typeid"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,N],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,N],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,N],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[["self"]],["u"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"try_into","","",160,[[["self"]],["result"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,N],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,N],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,N],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[["self"]],["u"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"try_into","","",163,[[["self"]],["result"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,N],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[["self"]],["u"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,N],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[["self"]],["u"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,N],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[["self"]],["u"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,N],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[["self"]],["u"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"try_into","","",167,[[["self"]],["result"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"get_type_id","","",167,[[["self"]],["typeid"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,N],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[["self"]],["u"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"try_into","","",168,[[["self"]],["result"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"get_type_id","","",168,[[["self"]],["typeid"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,N],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[["self"]],["u"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"try_into","","",169,[[["self"]],["result"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"get_type_id","","",169,[[["self"]],["typeid"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,N],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[["self"]],["u"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"try_into","","",170,[[["self"]],["result"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"get_type_id","","",170,[[["self"]],["typeid"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,N],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[["self"]],["u"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"try_into","","",171,[[["self"]],["result"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"get_type_id","","",171,[[["self"]],["typeid"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,N],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[["self"]],["u"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"try_into","","",172,[[["self"]],["result"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"get_type_id","","",172,[[["self"]],["typeid"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,N],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[["self"]],["u"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"try_into","","",173,[[["self"]],["result"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"get_type_id","","",173,[[["self"]],["typeid"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,N],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[["self"]],["u"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"try_into","","",174,[[["self"]],["result"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"get_type_id","","",174,[[["self"]],["typeid"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,N],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[["self"]],["u"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"try_into","","",175,[[["self"]],["result"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"get_type_id","","",175,[[["self"]],["typeid"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,N],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[["self"]],["u"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"try_into","","",176,[[["self"]],["result"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"get_type_id","","",176,[[["self"]],["typeid"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,N],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[["self"]],["u"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"try_into","","",177,[[["self"]],["result"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"get_type_id","","",177,[[["self"]],["typeid"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,N],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[["self"]],["u"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"try_into","","",178,[[["self"]],["result"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"get_type_id","","",178,[[["self"]],["typeid"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,N],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[["self"]],["u"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"try_into","","",179,[[["self"]],["result"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"get_type_id","","",179,[[["self"]],["typeid"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,N],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[["self"]],["u"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"try_into","","",180,[[["self"]],["result"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"get_type_id","","",180,[[["self"]],["typeid"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,N],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[["self"]],["u"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"try_into","","",181,[[["self"]],["result"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"get_type_id","","",181,[[["self"]],["typeid"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,N],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[["self"]],["u"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"try_into","","",182,[[["self"]],["result"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"get_type_id","","",182,[[["self"]],["typeid"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,N],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[["self"]],["u"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"try_into","","",183,[[["self"]],["result"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"get_type_id","","",183,[[["self"]],["typeid"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,N],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[["self"]],["u"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"try_into","","",184,[[["self"]],["result"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"get_type_id","","",184,[[["self"]],["typeid"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,N],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[["self"]],["u"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"try_into","","",185,[[["self"]],["result"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"get_type_id","","",185,[[["self"]],["typeid"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,N],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[["self"]],["u"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"try_into","","",186,[[["self"]],["result"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"get_type_id","","",186,[[["self"]],["typeid"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,N],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[["self"]],["u"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"try_into","","",187,[[["self"]],["result"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"get_type_id","","",187,[[["self"]],["typeid"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,N],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[["self"]],["u"]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"try_into","","",188,[[["self"]],["result"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"get_type_id","","",188,[[["self"]],["typeid"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,N],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[["self"]],["u"]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"try_into","","",189,[[["self"]],["result"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"get_type_id","","",189,[[["self"]],["typeid"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,N],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[["self"]],["u"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"try_into","","",190,[[["self"]],["result"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"get_type_id","","",190,[[["self"]],["typeid"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,N],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[["self"]],["u"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"try_into","","",191,[[["self"]],["result"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"get_type_id","","",191,[[["self"]],["typeid"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,N],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[["self"]],["u"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"try_into","","",192,[[["self"]],["result"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"get_type_id","","",192,[[["self"]],["typeid"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,N],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[["self"]],["u"]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"try_into","","",193,[[["self"]],["result"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"get_type_id","","",193,[[["self"]],["typeid"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,N],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[["self"]],["u"]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"try_into","","",194,[[["self"]],["result"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"get_type_id","","",194,[[["self"]],["typeid"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,N],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[["self"]],["u"]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"try_into","","",195,[[["self"]],["result"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"get_type_id","","",195,[[["self"]],["typeid"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,N],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[["self"]],["u"]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"try_into","","",196,[[["self"]],["result"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"get_type_id","","",196,[[["self"]],["typeid"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,N],[11,"from","","",197,[[["t"]],["t"]]],[11,"into","","",197,[[["self"]],["u"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"try_into","","",197,[[["self"]],["result"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"get_type_id","","",197,[[["self"]],["typeid"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,N],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[["self"]],["u"]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"try_into","","",198,[[["self"]],["result"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"get_type_id","","",198,[[["self"]],["typeid"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,N],[11,"from","","",199,[[["t"]],["t"]]],[11,"into","","",199,[[["self"]],["u"]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"try_into","","",199,[[["self"]],["result"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"get_type_id","","",199,[[["self"]],["typeid"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,N],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[["self"]],["u"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"try_into","","",200,[[["self"]],["result"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"get_type_id","","",200,[[["self"]],["typeid"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,N],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[["self"]],["u"]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"try_into","","",201,[[["self"]],["result"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"get_type_id","","",201,[[["self"]],["typeid"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,N],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[["self"]],["u"]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"try_into","","",202,[[["self"]],["result"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"get_type_id","","",202,[[["self"]],["typeid"]]],[11,"to_owned","","",203,[[["self"]],["t"]]],[11,"clone_into","","",203,N],[11,"from","","",203,[[["t"]],["t"]]],[11,"into","","",203,[[["self"]],["u"]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"try_into","","",203,[[["self"]],["result"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"get_type_id","","",203,[[["self"]],["typeid"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,N],[11,"from","","",204,[[["t"]],["t"]]],[11,"into","","",204,[[["self"]],["u"]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"try_into","","",204,[[["self"]],["result"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"get_type_id","","",204,[[["self"]],["typeid"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,N],[11,"from","","",205,[[["t"]],["t"]]],[11,"into","","",205,[[["self"]],["u"]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"try_into","","",205,[[["self"]],["result"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"get_type_id","","",205,[[["self"]],["typeid"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,N],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[["self"]],["u"]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"try_into","","",206,[[["self"]],["result"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"get_type_id","","",206,[[["self"]],["typeid"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,N],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[["self"]],["u"]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"try_into","","",207,[[["self"]],["result"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"get_type_id","","",207,[[["self"]],["typeid"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,N],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[["self"]],["u"]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"try_into","","",208,[[["self"]],["result"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"get_type_id","","",208,[[["self"]],["typeid"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,N],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[["self"]],["u"]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"try_into","","",209,[[["self"]],["result"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"get_type_id","","",209,[[["self"]],["typeid"]]],[11,"to_owned","","",304,[[["self"]],["t"]]],[11,"clone_into","","",304,N],[11,"from","","",304,[[["t"]],["t"]]],[11,"into","","",304,[[["self"]],["u"]]],[11,"try_from","","",304,[[["u"]],["result"]]],[11,"borrow","","",304,[[["self"]],["t"]]],[11,"try_into","","",304,[[["self"]],["result"]]],[11,"borrow_mut","","",304,[[["self"]],["t"]]],[11,"get_type_id","","",304,[[["self"]],["typeid"]]],[11,"to_owned","","",305,[[["self"]],["t"]]],[11,"clone_into","","",305,N],[11,"from","","",305,[[["t"]],["t"]]],[11,"into","","",305,[[["self"]],["u"]]],[11,"try_from","","",305,[[["u"]],["result"]]],[11,"borrow","","",305,[[["self"]],["t"]]],[11,"try_into","","",305,[[["self"]],["result"]]],[11,"borrow_mut","","",305,[[["self"]],["t"]]],[11,"get_type_id","","",305,[[["self"]],["typeid"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,N],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[["self"]],["u"]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"try_into","","",210,[[["self"]],["result"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"get_type_id","","",210,[[["self"]],["typeid"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,N],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[["self"]],["u"]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"try_into","","",211,[[["self"]],["result"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"get_type_id","","",211,[[["self"]],["typeid"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,N],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[["self"]],["u"]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"try_into","","",212,[[["self"]],["result"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"get_type_id","","",212,[[["self"]],["typeid"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,N],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[["self"]],["u"]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"try_into","","",213,[[["self"]],["result"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"get_type_id","","",213,[[["self"]],["typeid"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,N],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[["self"]],["u"]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"try_into","","",214,[[["self"]],["result"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"get_type_id","","",214,[[["self"]],["typeid"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,N],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[["self"]],["u"]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"try_into","","",215,[[["self"]],["result"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"get_type_id","","",215,[[["self"]],["typeid"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,N],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[["self"]],["u"]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"try_into","","",216,[[["self"]],["result"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"get_type_id","","",216,[[["self"]],["typeid"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,N],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[["self"]],["u"]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"try_into","","",217,[[["self"]],["result"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"get_type_id","","",217,[[["self"]],["typeid"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,N],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[["self"]],["u"]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"try_into","","",218,[[["self"]],["result"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"get_type_id","","",218,[[["self"]],["typeid"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,N],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[["self"]],["u"]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"try_into","","",219,[[["self"]],["result"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"get_type_id","","",219,[[["self"]],["typeid"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,N],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[["self"]],["u"]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"try_into","","",220,[[["self"]],["result"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"get_type_id","","",220,[[["self"]],["typeid"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,N],[11,"from","","",221,[[["t"]],["t"]]],[11,"into","","",221,[[["self"]],["u"]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"try_into","","",221,[[["self"]],["result"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"get_type_id","","",221,[[["self"]],["typeid"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,N],[11,"from","","",222,[[["t"]],["t"]]],[11,"into","","",222,[[["self"]],["u"]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"try_into","","",222,[[["self"]],["result"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"get_type_id","","",222,[[["self"]],["typeid"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,N],[11,"from","","",223,[[["t"]],["t"]]],[11,"into","","",223,[[["self"]],["u"]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"try_into","","",223,[[["self"]],["result"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"get_type_id","","",223,[[["self"]],["typeid"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,N],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[["self"]],["u"]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"try_into","","",224,[[["self"]],["result"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"get_type_id","","",224,[[["self"]],["typeid"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,N],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[["self"]],["u"]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"try_into","","",225,[[["self"]],["result"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"get_type_id","","",225,[[["self"]],["typeid"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,N],[11,"from","","",226,[[["t"]],["t"]]],[11,"into","","",226,[[["self"]],["u"]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"try_into","","",226,[[["self"]],["result"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"get_type_id","","",226,[[["self"]],["typeid"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,N],[11,"from","","",227,[[["t"]],["t"]]],[11,"into","","",227,[[["self"]],["u"]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"try_into","","",227,[[["self"]],["result"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"get_type_id","","",227,[[["self"]],["typeid"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,N],[11,"from","","",228,[[["t"]],["t"]]],[11,"into","","",228,[[["self"]],["u"]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"try_into","","",228,[[["self"]],["result"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"get_type_id","","",228,[[["self"]],["typeid"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,N],[11,"from","","",229,[[["t"]],["t"]]],[11,"into","","",229,[[["self"]],["u"]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"try_into","","",229,[[["self"]],["result"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"get_type_id","","",229,[[["self"]],["typeid"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,N],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[["self"]],["u"]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"try_into","","",230,[[["self"]],["result"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"get_type_id","","",230,[[["self"]],["typeid"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,N],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[["self"]],["u"]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"try_into","","",231,[[["self"]],["result"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"get_type_id","","",231,[[["self"]],["typeid"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,N],[11,"from","","",232,[[["t"]],["t"]]],[11,"into","","",232,[[["self"]],["u"]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"try_into","","",232,[[["self"]],["result"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"get_type_id","","",232,[[["self"]],["typeid"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,N],[11,"from","","",233,[[["t"]],["t"]]],[11,"into","","",233,[[["self"]],["u"]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"try_into","","",233,[[["self"]],["result"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"get_type_id","","",233,[[["self"]],["typeid"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,N],[11,"from","","",234,[[["t"]],["t"]]],[11,"into","","",234,[[["self"]],["u"]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"try_into","","",234,[[["self"]],["result"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"get_type_id","","",234,[[["self"]],["typeid"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,N],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[["self"]],["u"]]],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"try_into","","",235,[[["self"]],["result"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"get_type_id","","",235,[[["self"]],["typeid"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,N],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[["self"]],["u"]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"try_into","","",236,[[["self"]],["result"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"get_type_id","","",236,[[["self"]],["typeid"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,N],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[["self"]],["u"]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"try_into","","",237,[[["self"]],["result"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"get_type_id","","",237,[[["self"]],["typeid"]]],[11,"to_owned","","",238,[[["self"]],["t"]]],[11,"clone_into","","",238,N],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[["self"]],["u"]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"try_into","","",238,[[["self"]],["result"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"get_type_id","","",238,[[["self"]],["typeid"]]],[11,"to_owned","","",239,[[["self"]],["t"]]],[11,"clone_into","","",239,N],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[["self"]],["u"]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"try_into","","",239,[[["self"]],["result"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"get_type_id","","",239,[[["self"]],["typeid"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,N],[11,"from","","",240,[[["t"]],["t"]]],[11,"into","","",240,[[["self"]],["u"]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"try_into","","",240,[[["self"]],["result"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"get_type_id","","",240,[[["self"]],["typeid"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,N],[11,"from","","",241,[[["t"]],["t"]]],[11,"into","","",241,[[["self"]],["u"]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"try_into","","",241,[[["self"]],["result"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"get_type_id","","",241,[[["self"]],["typeid"]]],[11,"to_owned","","",242,[[["self"]],["t"]]],[11,"clone_into","","",242,N],[11,"from","","",242,[[["t"]],["t"]]],[11,"into","","",242,[[["self"]],["u"]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"try_into","","",242,[[["self"]],["result"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"get_type_id","","",242,[[["self"]],["typeid"]]],[11,"to_owned","","",243,[[["self"]],["t"]]],[11,"clone_into","","",243,N],[11,"from","","",243,[[["t"]],["t"]]],[11,"into","","",243,[[["self"]],["u"]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"try_into","","",243,[[["self"]],["result"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"get_type_id","","",243,[[["self"]],["typeid"]]],[11,"to_owned","","",244,[[["self"]],["t"]]],[11,"clone_into","","",244,N],[11,"from","","",244,[[["t"]],["t"]]],[11,"into","","",244,[[["self"]],["u"]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"try_into","","",244,[[["self"]],["result"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"get_type_id","","",244,[[["self"]],["typeid"]]],[11,"to_owned","","",245,[[["self"]],["t"]]],[11,"clone_into","","",245,N],[11,"from","","",245,[[["t"]],["t"]]],[11,"into","","",245,[[["self"]],["u"]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"try_into","","",245,[[["self"]],["result"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"get_type_id","","",245,[[["self"]],["typeid"]]],[11,"to_owned","","",246,[[["self"]],["t"]]],[11,"clone_into","","",246,N],[11,"from","","",246,[[["t"]],["t"]]],[11,"into","","",246,[[["self"]],["u"]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"try_into","","",246,[[["self"]],["result"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"get_type_id","","",246,[[["self"]],["typeid"]]],[11,"to_owned","","",247,[[["self"]],["t"]]],[11,"clone_into","","",247,N],[11,"from","","",247,[[["t"]],["t"]]],[11,"into","","",247,[[["self"]],["u"]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"try_into","","",247,[[["self"]],["result"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"get_type_id","","",247,[[["self"]],["typeid"]]],[11,"to_owned","","",248,[[["self"]],["t"]]],[11,"clone_into","","",248,N],[11,"from","","",248,[[["t"]],["t"]]],[11,"into","","",248,[[["self"]],["u"]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"try_into","","",248,[[["self"]],["result"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"get_type_id","","",248,[[["self"]],["typeid"]]],[11,"to_owned","","",249,[[["self"]],["t"]]],[11,"clone_into","","",249,N],[11,"from","","",249,[[["t"]],["t"]]],[11,"into","","",249,[[["self"]],["u"]]],[11,"try_from","","",249,[[["u"]],["result"]]],[11,"borrow","","",249,[[["self"]],["t"]]],[11,"try_into","","",249,[[["self"]],["result"]]],[11,"borrow_mut","","",249,[[["self"]],["t"]]],[11,"get_type_id","","",249,[[["self"]],["typeid"]]],[11,"to_owned","","",250,[[["self"]],["t"]]],[11,"clone_into","","",250,N],[11,"from","","",250,[[["t"]],["t"]]],[11,"into","","",250,[[["self"]],["u"]]],[11,"try_from","","",250,[[["u"]],["result"]]],[11,"borrow","","",250,[[["self"]],["t"]]],[11,"try_into","","",250,[[["self"]],["result"]]],[11,"borrow_mut","","",250,[[["self"]],["t"]]],[11,"get_type_id","","",250,[[["self"]],["typeid"]]],[11,"to_owned","","",251,[[["self"]],["t"]]],[11,"clone_into","","",251,N],[11,"from","","",251,[[["t"]],["t"]]],[11,"into","","",251,[[["self"]],["u"]]],[11,"try_from","","",251,[[["u"]],["result"]]],[11,"borrow","","",251,[[["self"]],["t"]]],[11,"try_into","","",251,[[["self"]],["result"]]],[11,"borrow_mut","","",251,[[["self"]],["t"]]],[11,"get_type_id","","",251,[[["self"]],["typeid"]]],[11,"to_owned","","",252,[[["self"]],["t"]]],[11,"clone_into","","",252,N],[11,"from","","",252,[[["t"]],["t"]]],[11,"into","","",252,[[["self"]],["u"]]],[11,"try_from","","",252,[[["u"]],["result"]]],[11,"borrow","","",252,[[["self"]],["t"]]],[11,"try_into","","",252,[[["self"]],["result"]]],[11,"borrow_mut","","",252,[[["self"]],["t"]]],[11,"get_type_id","","",252,[[["self"]],["typeid"]]],[11,"to_owned","","",253,[[["self"]],["t"]]],[11,"clone_into","","",253,N],[11,"from","","",253,[[["t"]],["t"]]],[11,"into","","",253,[[["self"]],["u"]]],[11,"try_from","","",253,[[["u"]],["result"]]],[11,"borrow","","",253,[[["self"]],["t"]]],[11,"try_into","","",253,[[["self"]],["result"]]],[11,"borrow_mut","","",253,[[["self"]],["t"]]],[11,"get_type_id","","",253,[[["self"]],["typeid"]]],[11,"to_owned","","",254,[[["self"]],["t"]]],[11,"clone_into","","",254,N],[11,"from","","",254,[[["t"]],["t"]]],[11,"into","","",254,[[["self"]],["u"]]],[11,"try_from","","",254,[[["u"]],["result"]]],[11,"borrow","","",254,[[["self"]],["t"]]],[11,"try_into","","",254,[[["self"]],["result"]]],[11,"borrow_mut","","",254,[[["self"]],["t"]]],[11,"get_type_id","","",254,[[["self"]],["typeid"]]],[11,"to_owned","","",255,[[["self"]],["t"]]],[11,"clone_into","","",255,N],[11,"from","","",255,[[["t"]],["t"]]],[11,"into","","",255,[[["self"]],["u"]]],[11,"try_from","","",255,[[["u"]],["result"]]],[11,"borrow","","",255,[[["self"]],["t"]]],[11,"try_into","","",255,[[["self"]],["result"]]],[11,"borrow_mut","","",255,[[["self"]],["t"]]],[11,"get_type_id","","",255,[[["self"]],["typeid"]]],[11,"to_owned","","",256,[[["self"]],["t"]]],[11,"clone_into","","",256,N],[11,"from","","",256,[[["t"]],["t"]]],[11,"into","","",256,[[["self"]],["u"]]],[11,"try_from","","",256,[[["u"]],["result"]]],[11,"borrow","","",256,[[["self"]],["t"]]],[11,"try_into","","",256,[[["self"]],["result"]]],[11,"borrow_mut","","",256,[[["self"]],["t"]]],[11,"get_type_id","","",256,[[["self"]],["typeid"]]],[11,"to_owned","","",257,[[["self"]],["t"]]],[11,"clone_into","","",257,N],[11,"from","","",257,[[["t"]],["t"]]],[11,"into","","",257,[[["self"]],["u"]]],[11,"try_from","","",257,[[["u"]],["result"]]],[11,"borrow","","",257,[[["self"]],["t"]]],[11,"try_into","","",257,[[["self"]],["result"]]],[11,"borrow_mut","","",257,[[["self"]],["t"]]],[11,"get_type_id","","",257,[[["self"]],["typeid"]]],[11,"to_owned","","",258,[[["self"]],["t"]]],[11,"clone_into","","",258,N],[11,"from","","",258,[[["t"]],["t"]]],[11,"into","","",258,[[["self"]],["u"]]],[11,"try_from","","",258,[[["u"]],["result"]]],[11,"borrow","","",258,[[["self"]],["t"]]],[11,"try_into","","",258,[[["self"]],["result"]]],[11,"borrow_mut","","",258,[[["self"]],["t"]]],[11,"get_type_id","","",258,[[["self"]],["typeid"]]],[11,"to_owned","","",259,[[["self"]],["t"]]],[11,"clone_into","","",259,N],[11,"from","","",259,[[["t"]],["t"]]],[11,"into","","",259,[[["self"]],["u"]]],[11,"try_from","","",259,[[["u"]],["result"]]],[11,"borrow","","",259,[[["self"]],["t"]]],[11,"try_into","","",259,[[["self"]],["result"]]],[11,"borrow_mut","","",259,[[["self"]],["t"]]],[11,"get_type_id","","",259,[[["self"]],["typeid"]]],[11,"to_owned","","",260,[[["self"]],["t"]]],[11,"clone_into","","",260,N],[11,"from","","",260,[[["t"]],["t"]]],[11,"into","","",260,[[["self"]],["u"]]],[11,"try_from","","",260,[[["u"]],["result"]]],[11,"borrow","","",260,[[["self"]],["t"]]],[11,"try_into","","",260,[[["self"]],["result"]]],[11,"borrow_mut","","",260,[[["self"]],["t"]]],[11,"get_type_id","","",260,[[["self"]],["typeid"]]],[11,"to_owned","","",261,[[["self"]],["t"]]],[11,"clone_into","","",261,N],[11,"from","","",261,[[["t"]],["t"]]],[11,"into","","",261,[[["self"]],["u"]]],[11,"try_from","","",261,[[["u"]],["result"]]],[11,"borrow","","",261,[[["self"]],["t"]]],[11,"try_into","","",261,[[["self"]],["result"]]],[11,"borrow_mut","","",261,[[["self"]],["t"]]],[11,"get_type_id","","",261,[[["self"]],["typeid"]]],[11,"to_owned","","",262,[[["self"]],["t"]]],[11,"clone_into","","",262,N],[11,"from","","",262,[[["t"]],["t"]]],[11,"into","","",262,[[["self"]],["u"]]],[11,"try_from","","",262,[[["u"]],["result"]]],[11,"borrow","","",262,[[["self"]],["t"]]],[11,"try_into","","",262,[[["self"]],["result"]]],[11,"borrow_mut","","",262,[[["self"]],["t"]]],[11,"get_type_id","","",262,[[["self"]],["typeid"]]],[11,"to_owned","","",263,[[["self"]],["t"]]],[11,"clone_into","","",263,N],[11,"from","","",263,[[["t"]],["t"]]],[11,"into","","",263,[[["self"]],["u"]]],[11,"try_from","","",263,[[["u"]],["result"]]],[11,"borrow","","",263,[[["self"]],["t"]]],[11,"try_into","","",263,[[["self"]],["result"]]],[11,"borrow_mut","","",263,[[["self"]],["t"]]],[11,"get_type_id","","",263,[[["self"]],["typeid"]]],[11,"to_owned","","",264,[[["self"]],["t"]]],[11,"clone_into","","",264,N],[11,"from","","",264,[[["t"]],["t"]]],[11,"into","","",264,[[["self"]],["u"]]],[11,"try_from","","",264,[[["u"]],["result"]]],[11,"borrow","","",264,[[["self"]],["t"]]],[11,"try_into","","",264,[[["self"]],["result"]]],[11,"borrow_mut","","",264,[[["self"]],["t"]]],[11,"get_type_id","","",264,[[["self"]],["typeid"]]],[11,"to_owned","","",265,[[["self"]],["t"]]],[11,"clone_into","","",265,N],[11,"from","","",265,[[["t"]],["t"]]],[11,"into","","",265,[[["self"]],["u"]]],[11,"try_from","","",265,[[["u"]],["result"]]],[11,"borrow","","",265,[[["self"]],["t"]]],[11,"try_into","","",265,[[["self"]],["result"]]],[11,"borrow_mut","","",265,[[["self"]],["t"]]],[11,"get_type_id","","",265,[[["self"]],["typeid"]]],[11,"to_owned","","",266,[[["self"]],["t"]]],[11,"clone_into","","",266,N],[11,"from","","",266,[[["t"]],["t"]]],[11,"into","","",266,[[["self"]],["u"]]],[11,"try_from","","",266,[[["u"]],["result"]]],[11,"borrow","","",266,[[["self"]],["t"]]],[11,"try_into","","",266,[[["self"]],["result"]]],[11,"borrow_mut","","",266,[[["self"]],["t"]]],[11,"get_type_id","","",266,[[["self"]],["typeid"]]],[11,"to_owned","","",267,[[["self"]],["t"]]],[11,"clone_into","","",267,N],[11,"from","","",267,[[["t"]],["t"]]],[11,"into","","",267,[[["self"]],["u"]]],[11,"try_from","","",267,[[["u"]],["result"]]],[11,"borrow","","",267,[[["self"]],["t"]]],[11,"try_into","","",267,[[["self"]],["result"]]],[11,"borrow_mut","","",267,[[["self"]],["t"]]],[11,"get_type_id","","",267,[[["self"]],["typeid"]]],[11,"to_owned","","",268,[[["self"]],["t"]]],[11,"clone_into","","",268,N],[11,"from","","",268,[[["t"]],["t"]]],[11,"into","","",268,[[["self"]],["u"]]],[11,"try_from","","",268,[[["u"]],["result"]]],[11,"borrow","","",268,[[["self"]],["t"]]],[11,"try_into","","",268,[[["self"]],["result"]]],[11,"borrow_mut","","",268,[[["self"]],["t"]]],[11,"get_type_id","","",268,[[["self"]],["typeid"]]],[11,"to_owned","","",269,[[["self"]],["t"]]],[11,"clone_into","","",269,N],[11,"from","","",269,[[["t"]],["t"]]],[11,"into","","",269,[[["self"]],["u"]]],[11,"try_from","","",269,[[["u"]],["result"]]],[11,"borrow","","",269,[[["self"]],["t"]]],[11,"try_into","","",269,[[["self"]],["result"]]],[11,"borrow_mut","","",269,[[["self"]],["t"]]],[11,"get_type_id","","",269,[[["self"]],["typeid"]]],[11,"to_owned","","",270,[[["self"]],["t"]]],[11,"clone_into","","",270,N],[11,"from","","",270,[[["t"]],["t"]]],[11,"into","","",270,[[["self"]],["u"]]],[11,"try_from","","",270,[[["u"]],["result"]]],[11,"borrow","","",270,[[["self"]],["t"]]],[11,"try_into","","",270,[[["self"]],["result"]]],[11,"borrow_mut","","",270,[[["self"]],["t"]]],[11,"get_type_id","","",270,[[["self"]],["typeid"]]],[11,"to_owned","","",271,[[["self"]],["t"]]],[11,"clone_into","","",271,N],[11,"from","","",271,[[["t"]],["t"]]],[11,"into","","",271,[[["self"]],["u"]]],[11,"try_from","","",271,[[["u"]],["result"]]],[11,"borrow","","",271,[[["self"]],["t"]]],[11,"try_into","","",271,[[["self"]],["result"]]],[11,"borrow_mut","","",271,[[["self"]],["t"]]],[11,"get_type_id","","",271,[[["self"]],["typeid"]]],[11,"to_owned","","",272,[[["self"]],["t"]]],[11,"clone_into","","",272,N],[11,"from","","",272,[[["t"]],["t"]]],[11,"into","","",272,[[["self"]],["u"]]],[11,"try_from","","",272,[[["u"]],["result"]]],[11,"borrow","","",272,[[["self"]],["t"]]],[11,"try_into","","",272,[[["self"]],["result"]]],[11,"borrow_mut","","",272,[[["self"]],["t"]]],[11,"get_type_id","","",272,[[["self"]],["typeid"]]],[11,"to_owned","","",273,[[["self"]],["t"]]],[11,"clone_into","","",273,N],[11,"from","","",273,[[["t"]],["t"]]],[11,"into","","",273,[[["self"]],["u"]]],[11,"try_from","","",273,[[["u"]],["result"]]],[11,"borrow","","",273,[[["self"]],["t"]]],[11,"try_into","","",273,[[["self"]],["result"]]],[11,"borrow_mut","","",273,[[["self"]],["t"]]],[11,"get_type_id","","",273,[[["self"]],["typeid"]]],[11,"to_owned","","",274,[[["self"]],["t"]]],[11,"clone_into","","",274,N],[11,"from","","",274,[[["t"]],["t"]]],[11,"into","","",274,[[["self"]],["u"]]],[11,"try_from","","",274,[[["u"]],["result"]]],[11,"borrow","","",274,[[["self"]],["t"]]],[11,"try_into","","",274,[[["self"]],["result"]]],[11,"borrow_mut","","",274,[[["self"]],["t"]]],[11,"get_type_id","","",274,[[["self"]],["typeid"]]],[11,"to_owned","","",275,[[["self"]],["t"]]],[11,"clone_into","","",275,N],[11,"from","","",275,[[["t"]],["t"]]],[11,"into","","",275,[[["self"]],["u"]]],[11,"try_from","","",275,[[["u"]],["result"]]],[11,"borrow","","",275,[[["self"]],["t"]]],[11,"try_into","","",275,[[["self"]],["result"]]],[11,"borrow_mut","","",275,[[["self"]],["t"]]],[11,"get_type_id","","",275,[[["self"]],["typeid"]]],[11,"to_owned","","",276,[[["self"]],["t"]]],[11,"clone_into","","",276,N],[11,"from","","",276,[[["t"]],["t"]]],[11,"into","","",276,[[["self"]],["u"]]],[11,"try_from","","",276,[[["u"]],["result"]]],[11,"borrow","","",276,[[["self"]],["t"]]],[11,"try_into","","",276,[[["self"]],["result"]]],[11,"borrow_mut","","",276,[[["self"]],["t"]]],[11,"get_type_id","","",276,[[["self"]],["typeid"]]],[11,"to_owned","","",277,[[["self"]],["t"]]],[11,"clone_into","","",277,N],[11,"from","","",277,[[["t"]],["t"]]],[11,"into","","",277,[[["self"]],["u"]]],[11,"try_from","","",277,[[["u"]],["result"]]],[11,"borrow","","",277,[[["self"]],["t"]]],[11,"try_into","","",277,[[["self"]],["result"]]],[11,"borrow_mut","","",277,[[["self"]],["t"]]],[11,"get_type_id","","",277,[[["self"]],["typeid"]]],[11,"from","wlroots_sys::protocols::server_decoration::server::org_kde_kwin_server_decoration_manager","",321,[[["t"]],["t"]]],[11,"into","","",321,[[["self"]],["u"]]],[11,"try_from","","",321,[[["u"]],["result"]]],[11,"borrow","","",321,[[["self"]],["t"]]],[11,"try_into","","",321,[[["self"]],["result"]]],[11,"borrow_mut","","",321,[[["self"]],["t"]]],[11,"get_type_id","","",321,[[["self"]],["typeid"]]],[11,"to_owned","","",306,[[["self"]],["t"]]],[11,"clone_into","","",306,N],[11,"from","","",306,[[["t"]],["t"]]],[11,"into","","",306,[[["self"]],["u"]]],[11,"try_from","","",306,[[["u"]],["result"]]],[11,"borrow","","",306,[[["self"]],["t"]]],[11,"try_into","","",306,[[["self"]],["result"]]],[11,"borrow_mut","","",306,[[["self"]],["t"]]],[11,"get_type_id","","",306,[[["self"]],["typeid"]]],[11,"from","","",307,[[["t"]],["t"]]],[11,"into","","",307,[[["self"]],["u"]]],[11,"try_from","","",307,[[["u"]],["result"]]],[11,"borrow","","",307,[[["self"]],["t"]]],[11,"try_into","","",307,[[["self"]],["result"]]],[11,"borrow_mut","","",307,[[["self"]],["t"]]],[11,"get_type_id","","",307,[[["self"]],["typeid"]]],[11,"from","","",308,[[["t"]],["t"]]],[11,"into","","",308,[[["self"]],["u"]]],[11,"try_from","","",308,[[["u"]],["result"]]],[11,"borrow","","",308,[[["self"]],["t"]]],[11,"try_into","","",308,[[["self"]],["result"]]],[11,"borrow_mut","","",308,[[["self"]],["t"]]],[11,"get_type_id","","",308,[[["self"]],["typeid"]]],[11,"clone","","",306,[[["self"]],["mode"]]],[11,"fmt","","",306,[[["self"],["formatter"]],["result"]]],[11,"eq","","",306,[[["self"],["mode"]],["bool"]]],[11,"from_raw","","",306,[[["u32"]],["option",["mode"]]]],[11,"to_raw","","",306,[[["self"]],["u32"]]],[11,"is_destructor","","",307,[[["self"]],["bool"]]],[11,"opcode","","",307,[[["self"]],["u16"]]],[11,"child","","",307,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",307,N],[11,"into_raw","","",307,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",307,N],[11,"as_raw_c_in","","",307,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",308,[[["self"]],["bool"]]],[11,"opcode","","",308,[[["self"]],["u16"]]],[11,"child","","",308,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",308,N],[11,"into_raw","","",308,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",308,N],[11,"as_raw_c_in","","",308,[[["self"],["f"]],["t"]]],[11,"c_interface","","",321,N],[11,"from","wlroots_sys::protocols::server_decoration::server::org_kde_kwin_server_decoration","",322,[[["t"]],["t"]]],[11,"into","","",322,[[["self"]],["u"]]],[11,"try_from","","",322,[[["u"]],["result"]]],[11,"borrow","","",322,[[["self"]],["t"]]],[11,"try_into","","",322,[[["self"]],["result"]]],[11,"borrow_mut","","",322,[[["self"]],["t"]]],[11,"get_type_id","","",322,[[["self"]],["typeid"]]],[11,"to_owned","","",309,[[["self"]],["t"]]],[11,"clone_into","","",309,N],[11,"from","","",309,[[["t"]],["t"]]],[11,"into","","",309,[[["self"]],["u"]]],[11,"try_from","","",309,[[["u"]],["result"]]],[11,"borrow","","",309,[[["self"]],["t"]]],[11,"try_into","","",309,[[["self"]],["result"]]],[11,"borrow_mut","","",309,[[["self"]],["t"]]],[11,"get_type_id","","",309,[[["self"]],["typeid"]]],[11,"from","","",310,[[["t"]],["t"]]],[11,"into","","",310,[[["self"]],["u"]]],[11,"try_from","","",310,[[["u"]],["result"]]],[11,"borrow","","",310,[[["self"]],["t"]]],[11,"try_into","","",310,[[["self"]],["result"]]],[11,"borrow_mut","","",310,[[["self"]],["t"]]],[11,"get_type_id","","",310,[[["self"]],["typeid"]]],[11,"from","","",311,[[["t"]],["t"]]],[11,"into","","",311,[[["self"]],["u"]]],[11,"try_from","","",311,[[["u"]],["result"]]],[11,"borrow","","",311,[[["self"]],["t"]]],[11,"try_into","","",311,[[["self"]],["result"]]],[11,"borrow_mut","","",311,[[["self"]],["t"]]],[11,"get_type_id","","",311,[[["self"]],["typeid"]]],[11,"clone","","",309,[[["self"]],["mode"]]],[11,"fmt","","",309,[[["self"],["formatter"]],["result"]]],[11,"eq","","",309,[[["self"],["mode"]],["bool"]]],[11,"from_raw","","",309,[[["u32"]],["option",["mode"]]]],[11,"to_raw","","",309,[[["self"]],["u32"]]],[11,"is_destructor","","",310,[[["self"]],["bool"]]],[11,"opcode","","",310,[[["self"]],["u16"]]],[11,"child","","",310,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",310,N],[11,"into_raw","","",310,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",310,N],[11,"as_raw_c_in","","",310,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",311,[[["self"]],["bool"]]],[11,"opcode","","",311,[[["self"]],["u16"]]],[11,"child","","",311,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",311,N],[11,"into_raw","","",311,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",311,N],[11,"as_raw_c_in","","",311,[[["self"],["f"]],["t"]]],[11,"c_interface","","",322,N]],"paths":[[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[3,"wl_listener"],[3,"wl_signal"],[3,"WaylandServer"],[3,"pixman_color"],[3,"pixman_point_fixed"],[3,"pixman_line_fixed"],[3,"pixman_vector"],[3,"pixman_transform"],[3,"pixman_box16"],[3,"pixman_f_transform"],[3,"pixman_f_vector"],[3,"pixman_region16_data"],[3,"pixman_rectangle16"],[3,"pixman_region16"],[3,"pixman_region32_data"],[3,"pixman_box32"],[3,"pixman_region32"],[3,"pixman_indexed"],[3,"pixman_gradient_stop"],[3,"pixman_glyph_t"],[3,"pixman_edge"],[3,"pixman_trapezoid"],[3,"pixman_trap"],[3,"pixman_span_fix"],[3,"pixman_triangle"],[3,"timespec"],[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[3,"wl_listener"],[3,"wl_resource"],[3,"wl_signal"],[3,"wl_object"],[3,"wlr_xcursor_image"],[3,"wlr_xcursor"],[3,"wlr_xcursor_theme"],[3,"session_impl"],[3,"wlr_device"],[3,"wlr_session"],[3,"wlr_session__bindgen_ty_1"],[3,"wlr_dmabuf_attributes"],[3,"wlr_egl"],[3,"wlr_egl__bindgen_ty_1"],[3,"wlr_backend_impl"],[3,"wlr_backend"],[3,"wlr_backend__bindgen_ty_1"],[3,"wlr_renderer"],[3,"wlr_renderer__bindgen_ty_1"],[3,"wlr_output_mode"],[3,"wlr_output_cursor"],[3,"wlr_output_cursor__bindgen_ty_1"],[3,"wlr_output"],[3,"wlr_output__bindgen_ty_1"],[3,"wlr_output_event_swap_buffers"],[3,"wlr_output_event_present"],[3,"wlr_surface"],[3,"wlr_surface__bindgen_ty_1"],[3,"_IO_FILE"],[3,"xkb_rule_names"],[3,"wlr_keyboard_modifiers"],[3,"wlr_keyboard"],[3,"wlr_keyboard__bindgen_ty_1"],[3,"wlr_keyboard__bindgen_ty_2"],[3,"wlr_event_keyboard_key"],[3,"wlr_pointer"],[3,"wlr_pointer__bindgen_ty_1"],[3,"wlr_event_pointer_motion"],[3,"wlr_event_pointer_motion_absolute"],[3,"wlr_event_pointer_button"],[3,"wlr_event_pointer_axis"],[3,"wlr_touch"],[3,"wlr_touch__bindgen_ty_1"],[3,"wlr_event_touch_down"],[3,"wlr_event_touch_up"],[3,"wlr_event_touch_motion"],[3,"wlr_event_touch_cancel"],[3,"wlr_list"],[3,"wlr_tablet_tool"],[3,"wlr_tablet_tool__bindgen_ty_1"],[3,"wlr_tablet"],[3,"wlr_tablet__bindgen_ty_1"],[3,"wlr_event_tablet_tool_axis"],[3,"wlr_event_tablet_tool_proximity"],[3,"wlr_event_tablet_tool_tip"],[3,"wlr_event_tablet_tool_button"],[3,"wlr_tablet_pad"],[3,"wlr_tablet_pad__bindgen_ty_1"],[3,"wlr_tablet_pad_group"],[3,"wlr_event_tablet_pad_button"],[3,"wlr_event_tablet_pad_ring"],[3,"wlr_event_tablet_pad_strip"],[3,"wlr_input_device"],[3,"wlr_input_device__bindgen_ty_2"],[3,"wlr_texture_impl"],[3,"wlr_texture"],[3,"wlr_box"],[3,"wlr_renderer_impl"],[3,"wlr_subcompositor"],[3,"wlr_compositor"],[3,"wlr_compositor__bindgen_ty_1"],[3,"wlr_subsurface"],[3,"wlr_subsurface__bindgen_ty_1"],[3,"wlr_output_layout"],[3,"wlr_output_layout__bindgen_ty_1"],[3,"wlr_output_layout_output"],[3,"wlr_output_layout_output__bindgen_ty_1"],[3,"wlr_cursor"],[3,"wlr_cursor__bindgen_ty_1"],[3,"wlr_surface_state"],[3,"wlr_surface_role"],[3,"wlr_subsurface_state"],[3,"wlr_seat_client"],[3,"wlr_seat_client__bindgen_ty_1"],[3,"wlr_touch_point"],[3,"wlr_touch_point__bindgen_ty_1"],[3,"wlr_seat_pointer_grab"],[3,"wlr_pointer_grab_interface"],[3,"wlr_seat_keyboard_grab"],[3,"wlr_keyboard_grab_interface"],[3,"wlr_seat_touch_grab"],[3,"wlr_touch_grab_interface"],[3,"wlr_seat_pointer_state"],[3,"wlr_seat_pointer_state__bindgen_ty_1"],[3,"wlr_seat_keyboard_state"],[3,"wlr_seat_touch_state"],[3,"wlr_seat"],[3,"wlr_seat__bindgen_ty_1"],[3,"wlr_seat_pointer_request_set_cursor_event"],[3,"wlr_seat_pointer_focus_change_event"],[3,"wlr_data_device_manager"],[3,"wlr_data_device_manager__bindgen_ty_1"],[3,"wlr_data_offer"],[3,"wlr_data_source_impl"],[3,"wlr_data_source"],[3,"wlr_data_source__bindgen_ty_1"],[3,"wlr_drag_icon"],[3,"wlr_drag_icon__bindgen_ty_1"],[3,"wlr_drag"],[3,"wlr_drag__bindgen_ty_1"],[3,"wlr_drag_motion_event"],[3,"wlr_drag_drop_event"],[3,"wlr_gamma_control_manager"],[3,"wlr_gamma_control_manager__bindgen_ty_1"],[3,"wlr_gamma_control"],[3,"wlr_gamma_control__bindgen_ty_1"],[3,"wlr_output_damage"],[3,"wlr_output_damage__bindgen_ty_1"],[3,"wlr_server_decoration_manager"],[3,"wlr_server_decoration_manager__bindgen_ty_1"],[3,"wlr_server_decoration"],[3,"wlr_server_decoration__bindgen_ty_1"],[3,"wlr_screenshooter"],[3,"wlr_screenshooter__bindgen_ty_1"],[3,"wlr_screenshot"],[3,"wlr_wl_shell"],[3,"wlr_wl_shell__bindgen_ty_1"],[3,"wlr_wl_shell_surface_transient_state"],[3,"wlr_wl_shell_surface_popup_state"],[3,"wlr_wl_shell_popup_grab"],[3,"wlr_wl_shell_surface"],[3,"wlr_wl_shell_surface__bindgen_ty_1"],[3,"wlr_wl_shell_surface_move_event"],[3,"wlr_wl_shell_surface_resize_event"],[3,"wlr_wl_shell_surface_set_fullscreen_event"],[3,"wlr_wl_shell_surface_maximize_event"],[3,"wlr_xdg_shell_v6"],[3,"wlr_xdg_shell_v6__bindgen_ty_1"],[3,"wlr_xdg_client_v6"],[3,"wlr_xdg_positioner_v6"],[3,"wlr_xdg_positioner_v6__bindgen_ty_1"],[3,"wlr_xdg_positioner_v6__bindgen_ty_2"],[3,"wlr_xdg_popup_v6"],[3,"wlr_xdg_popup_grab_v6"],[3,"wlr_xdg_toplevel_v6_state"],[3,"wlr_xdg_toplevel_v6"],[3,"wlr_xdg_toplevel_v6__bindgen_ty_1"],[3,"wlr_xdg_surface_v6_configure"],[3,"wlr_xdg_surface_v6"],[3,"wlr_xdg_surface_v6__bindgen_ty_2"],[3,"wlr_xdg_toplevel_v6_move_event"],[3,"wlr_xdg_toplevel_v6_resize_event"],[3,"wlr_xdg_toplevel_v6_set_fullscreen_event"],[3,"wlr_xdg_toplevel_v6_show_window_menu_event"],[3,"wlr_xdg_shell"],[3,"wlr_xdg_shell__bindgen_ty_1"],[3,"wlr_xdg_client"],[3,"wlr_xdg_positioner"],[3,"wlr_xdg_positioner__bindgen_ty_1"],[3,"wlr_xdg_positioner__bindgen_ty_2"],[3,"wlr_xdg_popup"],[3,"wlr_xdg_popup_grab"],[3,"wlr_xdg_toplevel_state"],[3,"wlr_xdg_toplevel"],[3,"wlr_xdg_toplevel__bindgen_ty_1"],[3,"wlr_xdg_surface_configure"],[3,"wlr_xdg_surface"],[3,"wlr_xdg_surface__bindgen_ty_2"],[3,"wlr_xdg_toplevel_move_event"],[3,"wlr_xdg_toplevel_resize_event"],[3,"wlr_xdg_toplevel_set_fullscreen_event"],[3,"wlr_xdg_toplevel_show_window_menu_event"],[3,"wlr_xcursor_manager_theme"],[3,"wlr_xcursor_manager"],[3,"xcb_generic_event_t"],[3,"wlr_xwayland"],[3,"wlr_xwayland__bindgen_ty_1"],[3,"wlr_xwayland_surface_hints"],[3,"wlr_xwayland_surface_size_hints"],[3,"wlr_xwayland_surface"],[3,"wlr_xwayland_surface__bindgen_ty_1"],[3,"wlr_xwayland_surface_configure_event"],[3,"wlr_xwayland_move_event"],[3,"wlr_xwayland_resize_event"],[3,"__va_list_tag"],[3,"wlr_buffer"],[3,"wlr_gtk_primary_selection_source"],[19,"wlr_input_device__bindgen_ty_1"],[19,"wlr_xdg_surface_v6__bindgen_ty_1"],[19,"wlr_xdg_surface__bindgen_ty_1"],[4,"wlr_edges"],[4,"wlr_log_importance"],[4,"pixman_repeat_t"],[4,"pixman_filter_t"],[4,"pixman_op_t"],[4,"pixman_region_overlap_t"],[4,"pixman_format_code_t"],[4,"pixman_kernel_t"],[4,"wl_shm_format"],[4,"wl_data_device_manager_dnd_action"],[4,"wl_shell_surface_resize"],[4,"wl_shell_surface_transient"],[4,"wl_shell_surface_fullscreen_method"],[4,"wl_output_subpixel"],[4,"wl_output_transform"],[4,"wlr_dmabuf_attributes_flags"],[4,"wlr_output_present_flag"],[4,"wlr_button_state"],[4,"wlr_input_device_type"],[4,"xkb_keysym_flags"],[4,"xkb_context_flags"],[4,"xkb_log_level"],[4,"xkb_keymap_compile_flags"],[4,"xkb_keymap_format"],[4,"xkb_key_direction"],[4,"xkb_state_component"],[4,"xkb_state_match"],[4,"xkb_consumed_mode"],[4,"wlr_keyboard_led"],[4,"wlr_keyboard_modifier"],[4,"wlr_key_state"],[4,"wlr_axis_source"],[4,"wlr_axis_orientation"],[4,"wlr_tablet_tool_type"],[4,"wlr_tablet_tool_axes"],[4,"wlr_tablet_tool_proximity_state"],[4,"wlr_tablet_tool_tip_state"],[4,"wlr_tablet_pad_ring_source"],[4,"wlr_tablet_pad_strip_source"],[4,"wlr_renderer_read_pixels_flags"],[4,"wlr_direction"],[4,"wlr_surface_state_field"],[4,"wlr_server_decoration_manager_mode"],[4,"wlr_wl_shell_surface_state"],[4,"zxdg_positioner_v6_anchor"],[4,"zxdg_positioner_v6_gravity"],[4,"zxdg_positioner_v6_constraint_adjustment"],[4,"wlr_xdg_surface_v6_role"],[4,"xdg_positioner_anchor"],[4,"xdg_positioner_gravity"],[4,"xdg_positioner_constraint_adjustment"],[4,"wlr_xdg_surface_role"],[4,"wlr_xwayland_surface_decorations"],[3,"pixman_image"],[3,"pixman_glyph_cache_t"],[3,"wl_event_source"],[3,"wl_display"],[3,"wl_client"],[3,"wl_global"],[3,"udev"],[3,"udev_monitor"],[3,"wlr_output_impl"],[3,"_drmModeModeInfo"],[3,"_IO_marker"],[3,"_IO_codecvt"],[3,"_IO_wide_data"],[3,"xkb_context"],[3,"xkb_keymap"],[3,"xkb_state"],[3,"wlr_keyboard_impl"],[3,"wlr_pointer_impl"],[3,"wlr_touch_impl"],[3,"wlr_tablet_impl"],[3,"wlr_tablet_pad_impl"],[3,"wlr_input_device_impl"],[3,"libinput_device"],[3,"wlr_output_layout_state"],[3,"wlr_output_layout_output_state"],[3,"wlr_cursor_state"],[3,"wlr_xwm"],[3,"wlr_xwayland_cursor"],[4,"Mode"],[4,"Request"],[4,"Event"],[4,"Mode"],[4,"Request"],[4,"Event"],[3,"WAYLAND_SERVER_HANDLE"],[3,"WAYLAND_SERVER_OPTION"],[4,"wl_client"],[4,"wl_display"],[4,"wl_event_loop"],[4,"wl_event_source"],[4,"wl_global"],[4,"wl_resource"],[4,"wl_shm_buffer"],[3,"OrgKdeKwinServerDecorationManager"],[3,"OrgKdeKwinServerDecoration"]]};
searchIndex["xkbcommon"]={"doc":"","items":[[0,"xkb","xkbcommon","",N,N],[3,"Context","xkbcommon::xkb","Top level library context object.",N,N],[3,"ContextIncludePaths","","Iterator to a Context include paths",N,N],[3,"Keymap","","Compiled keymap object.",N,N],[3,"KeymapMods","","iterator to the modifiers in a Keymap",N,N],[3,"KeymapLayouts","","iterator to the layouts in Keymap",N,N],[3,"KeymapLeds","","iterator to the leds in a Keymap",N,N],[3,"State","","Keyboard state object.",N,N],[4,"LogLevel","","",N,N],[13,"Critical","","",0,N],[13,"Error","","",0,N],[13,"Warning","","",0,N],[13,"Info","","",0,N],[13,"Debug","","",0,N],[4,"KeyDirection","","Specifies the direction of the key (press / release).",N,N],[13,"Up","","the key was released",1,N],[13,"Down","","the key was pressed",1,N],[5,"keycode_is_legal_ext","","Test whether a value is a valid extended keycode. @sa xkb_keycode_t",N,[[["u32"]],["bool"]]],[5,"keycode_is_legal_x11","","Names to compile a keymap with, also known as RMLVO.",N,[[["u32"]],["bool"]]],[5,"keysym_get_name","","Get the name of a keysym.",N,[[["keysym"]],["string"]]],[5,"keysym_from_name","","Get a keysym from its name.",N,[[["str"],["keysymflags"]],["keysym"]]],[5,"keysym_to_utf8","","Get the Unicode/UTF-8 representation of a keysym.",N,[[["keysym"]],["string"]]],[5,"keysym_to_utf32","","Get the Unicode/UTF-32 representation of a keysym.",N,[[["keysym"]],["u32"]]],[0,"ffi","","",N,N],[3,"xkb_rule_names","xkbcommon::xkb::ffi","",N,N],[12,"rules","","",2,N],[12,"model","","",2,N],[12,"layout","","",2,N],[12,"variant","","",2,N],[12,"options","","",2,N],[4,"xkb_context","","",N,N],[4,"xkb_keymap","","",N,N],[4,"xkb_state","","",N,N],[4,"xkb_log_level","","",N,N],[13,"CRITICAL","","",3,N],[13,"ERROR","","",3,N],[13,"WARNING","","",3,N],[13,"INFO","","",3,N],[13,"DEBUG","","",3,N],[4,"xkb_key_direction","","",N,N],[13,"UP","","",4,N],[13,"DOWN","","",4,N],[5,"xkb_keycode_is_legal_ext","","",N,[[["u32"]],["bool"]]],[5,"xkb_keycode_is_legal_x11","","",N,[[["u32"]],["bool"]]],[5,"xkb_keysym_get_name","","",N,N],[5,"xkb_keysym_from_name","","",N,N],[5,"xkb_keysym_to_utf8","","",N,N],[5,"xkb_keysym_to_utf32","","",N,N],[5,"xkb_context_new","","",N,N],[5,"xkb_context_ref","","",N,N],[5,"xkb_context_unref","","",N,N],[5,"xkb_context_set_user_data","","",N,N],[5,"xkb_context_get_user_data","","",N,N],[5,"xkb_context_include_path_append","","",N,N],[5,"xkb_context_include_path_append_default","","",N,N],[5,"xkb_context_include_path_reset_defaults","","",N,N],[5,"xkb_context_include_path_clear","","",N,N],[5,"xkb_context_num_include_paths","","",N,N],[5,"xkb_context_include_path_get","","",N,N],[5,"xkb_context_set_log_level","","",N,N],[5,"xkb_context_get_log_level","","",N,N],[5,"xkb_context_set_log_verbosity","","",N,N],[5,"xkb_context_get_log_verbosity","","",N,N],[5,"xkb_context_set_log_fn","","",N,N],[5,"xkb_keymap_new_from_names","","",N,N],[5,"xkb_keymap_new_from_file","","",N,N],[5,"xkb_keymap_new_from_string","","",N,N],[5,"xkb_keymap_new_from_buffer","","",N,N],[5,"xkb_keymap_ref","","",N,N],[5,"xkb_keymap_unref","","",N,N],[5,"xkb_keymap_get_as_string","","",N,N],[5,"xkb_keymap_min_keycode","","",N,N],[5,"xkb_keymap_max_keycode","","",N,N],[5,"xkb_keymap_key_for_each","","",N,N],[5,"xkb_keymap_num_mods","","",N,N],[5,"xkb_keymap_mod_get_name","","",N,N],[5,"xkb_keymap_mod_get_index","","",N,N],[5,"xkb_keymap_num_layouts","","",N,N],[5,"xkb_keymap_layout_get_name","","",N,N],[5,"xkb_keymap_layout_get_index","","",N,N],[5,"xkb_keymap_num_leds","","",N,N],[5,"xkb_keymap_led_get_name","","",N,N],[5,"xkb_keymap_led_get_index","","",N,N],[5,"xkb_keymap_num_layouts_for_key","","",N,N],[5,"xkb_keymap_num_levels_for_key","","",N,N],[5,"xkb_keymap_key_get_syms_by_level","","",N,N],[5,"xkb_keymap_key_repeats","","",N,N],[5,"xkb_state_ref","","",N,N],[5,"xkb_state_unref","","",N,N],[5,"xkb_state_new","","",N,N],[5,"xkb_state_get_keymap","","",N,N],[5,"xkb_state_update_key","","",N,N],[5,"xkb_state_update_mask","","",N,N],[5,"xkb_state_key_get_syms","","",N,N],[5,"xkb_state_key_get_utf8","","",N,N],[5,"xkb_state_key_get_utf32","","",N,N],[5,"xkb_state_key_get_one_sym","","",N,N],[5,"xkb_state_key_get_layout","","",N,N],[5,"xkb_state_key_get_level","","",N,N],[5,"xkb_state_serialize_mods","","",N,N],[5,"xkb_state_serialize_layout","","",N,N],[5,"xkb_state_mod_name_is_active","","",N,N],[5,"xkb_state_mod_names_are_active","","",N,N],[5,"xkb_state_mod_index_is_active","","",N,N],[5,"xkb_state_mod_index_are_active","","",N,N],[5,"xkb_state_mod_index_is_consumed","","",N,N],[5,"xkb_state_mod_mask_remove_consumed","","",N,N],[5,"xkb_state_key_get_consumed_mods","","",N,N],[5,"xkb_state_layout_name_is_active","","",N,N],[5,"xkb_state_layout_index_is_active","","",N,N],[5,"xkb_state_led_name_is_active","","",N,N],[5,"xkb_state_led_index_is_active","","",N,N],[6,"xkb_keycode_t","","",N,N],[6,"xkb_keysym_t","","",N,N],[6,"xkb_layout_index_t","","",N,N],[6,"xkb_layout_mask_t","","",N,N],[6,"xkb_level_index_t","","",N,N],[6,"xkb_mod_index_t","","",N,N],[6,"xkb_mod_mask_t","","",N,N],[6,"xkb_led_index_t","","",N,N],[6,"xkb_led_mask_t","","",N,N],[6,"xkb_keysym_flags","","",N,N],[6,"xkb_context_flags","","",N,N],[6,"xkb_keymap_compile_flags","","",N,N],[6,"xkb_keymap_format","","",N,N],[6,"xkb_state_component","","",N,N],[6,"xkb_state_match","","",N,N],[6,"xkb_log_fn_t","","",N,N],[6,"xkb_keymap_key_iter_t","","",N,N],[17,"XKB_KEYCODE_INVALID","","",N,N],[17,"XKB_LAYOUT_INVALID","","",N,N],[17,"XKB_LEVEL_INVALID","","",N,N],[17,"XKB_MOD_INVALID","","",N,N],[17,"XKB_LED_INVALID","","",N,N],[17,"XKB_KEYCODE_MAX","","",N,N],[17,"XKB_KEYSYM_NO_FLAGS","","",N,N],[17,"XKB_KEYSYM_CASE_INSENSITIVE","","",N,N],[17,"XKB_CONTEXT_NO_FLAGS","","",N,N],[17,"XKB_CONTEXT_NO_DEFAULT_INCLUDES","","",N,N],[17,"XKB_CONTEXT_NO_ENVIRONMENT_NAMES","","",N,N],[17,"XKB_KEYMAP_COMPILE_NO_FLAGS","","",N,N],[17,"XKB_KEYMAP_FORMAT_TEXT_V1","","",N,N],[17,"XKB_KEYMAP_FORMAT_USE_ORIGINAL","","",N,N],[17,"XKB_STATE_MODS_DEPRESSED","","",N,N],[17,"XKB_STATE_MODS_LATCHED","","",N,N],[17,"XKB_STATE_MODS_LOCKED","","",N,N],[17,"XKB_STATE_MODS_EFFECTIVE","","",N,N],[17,"XKB_STATE_LAYOUT_DEPRESSED","","",N,N],[17,"XKB_STATE_LAYOUT_LATCHED","","",N,N],[17,"XKB_STATE_LAYOUT_LOCKED","","",N,N],[17,"XKB_STATE_LAYOUT_EFFECTIVE","","",N,N],[17,"XKB_STATE_LEDS","","",N,N],[17,"XKB_STATE_MATCH_ANY","","",N,N],[17,"XKB_STATE_MATCH_ALL","","",N,N],[17,"XKB_STATE_MATCH_NON_EXCLUSIVE","","",N,N],[0,"keysyms","xkbcommon::xkb","",N,N],[17,"KEY_NoSymbol","xkbcommon::xkb::keysyms","",N,N],[17,"KEY_VoidSymbol","","",N,N],[17,"KEY_BackSpace","","",N,N],[17,"KEY_Tab","","",N,N],[17,"KEY_Linefeed","","",N,N],[17,"KEY_Clear","","",N,N],[17,"KEY_Return","","",N,N],[17,"KEY_Pause","","",N,N],[17,"KEY_Scroll_Lock","","",N,N],[17,"KEY_Sys_Req","","",N,N],[17,"KEY_Escape","","",N,N],[17,"KEY_Delete","","",N,N],[17,"KEY_Multi_key","","",N,N],[17,"KEY_Codeinput","","",N,N],[17,"KEY_SingleCandidate","","",N,N],[17,"KEY_MultipleCandidate","","",N,N],[17,"KEY_PreviousCandidate","","",N,N],[17,"KEY_Kanji","","",N,N],[17,"KEY_Muhenkan","","",N,N],[17,"KEY_Henkan_Mode","","",N,N],[17,"KEY_Henkan","","",N,N],[17,"KEY_Romaji","","",N,N],[17,"KEY_Hiragana","","",N,N],[17,"KEY_Katakana","","",N,N],[17,"KEY_Hiragana_Katakana","","",N,N],[17,"KEY_Zenkaku","","",N,N],[17,"KEY_Hankaku","","",N,N],[17,"KEY_Zenkaku_Hankaku","","",N,N],[17,"KEY_Touroku","","",N,N],[17,"KEY_Massyo","","",N,N],[17,"KEY_Kana_Lock","","",N,N],[17,"KEY_Kana_Shift","","",N,N],[17,"KEY_Eisu_Shift","","",N,N],[17,"KEY_Eisu_toggle","","",N,N],[17,"KEY_Kanji_Bangou","","",N,N],[17,"KEY_Zen_Koho","","",N,N],[17,"KEY_Mae_Koho","","",N,N],[17,"KEY_Home","","",N,N],[17,"KEY_Left","","",N,N],[17,"KEY_Up","","",N,N],[17,"KEY_Right","","",N,N],[17,"KEY_Down","","",N,N],[17,"KEY_Prior","","",N,N],[17,"KEY_Page_Up","","",N,N],[17,"KEY_Next","","",N,N],[17,"KEY_Page_Down","","",N,N],[17,"KEY_End","","",N,N],[17,"KEY_Begin","","",N,N],[17,"KEY_Select","","",N,N],[17,"KEY_Print","","",N,N],[17,"KEY_Execute","","",N,N],[17,"KEY_Insert","","",N,N],[17,"KEY_Undo","","",N,N],[17,"KEY_Redo","","",N,N],[17,"KEY_Menu","","",N,N],[17,"KEY_Find","","",N,N],[17,"KEY_Cancel","","",N,N],[17,"KEY_Help","","",N,N],[17,"KEY_Break","","",N,N],[17,"KEY_Mode_switch","","",N,N],[17,"KEY_script_switch","","",N,N],[17,"KEY_Num_Lock","","",N,N],[17,"KEY_KP_Space","","",N,N],[17,"KEY_KP_Tab","","",N,N],[17,"KEY_KP_Enter","","",N,N],[17,"KEY_KP_F1","","",N,N],[17,"KEY_KP_F2","","",N,N],[17,"KEY_KP_F3","","",N,N],[17,"KEY_KP_F4","","",N,N],[17,"KEY_KP_Home","","",N,N],[17,"KEY_KP_Left","","",N,N],[17,"KEY_KP_Up","","",N,N],[17,"KEY_KP_Right","","",N,N],[17,"KEY_KP_Down","","",N,N],[17,"KEY_KP_Prior","","",N,N],[17,"KEY_KP_Page_Up","","",N,N],[17,"KEY_KP_Next","","",N,N],[17,"KEY_KP_Page_Down","","",N,N],[17,"KEY_KP_End","","",N,N],[17,"KEY_KP_Begin","","",N,N],[17,"KEY_KP_Insert","","",N,N],[17,"KEY_KP_Delete","","",N,N],[17,"KEY_KP_Equal","","",N,N],[17,"KEY_KP_Multiply","","",N,N],[17,"KEY_KP_Add","","",N,N],[17,"KEY_KP_Separator","","",N,N],[17,"KEY_KP_Subtract","","",N,N],[17,"KEY_KP_Decimal","","",N,N],[17,"KEY_KP_Divide","","",N,N],[17,"KEY_KP_0","","",N,N],[17,"KEY_KP_1","","",N,N],[17,"KEY_KP_2","","",N,N],[17,"KEY_KP_3","","",N,N],[17,"KEY_KP_4","","",N,N],[17,"KEY_KP_5","","",N,N],[17,"KEY_KP_6","","",N,N],[17,"KEY_KP_7","","",N,N],[17,"KEY_KP_8","","",N,N],[17,"KEY_KP_9","","",N,N],[17,"KEY_F1","","",N,N],[17,"KEY_F2","","",N,N],[17,"KEY_F3","","",N,N],[17,"KEY_F4","","",N,N],[17,"KEY_F5","","",N,N],[17,"KEY_F6","","",N,N],[17,"KEY_F7","","",N,N],[17,"KEY_F8","","",N,N],[17,"KEY_F9","","",N,N],[17,"KEY_F10","","",N,N],[17,"KEY_F11","","",N,N],[17,"KEY_L1","","",N,N],[17,"KEY_F12","","",N,N],[17,"KEY_L2","","",N,N],[17,"KEY_F13","","",N,N],[17,"KEY_L3","","",N,N],[17,"KEY_F14","","",N,N],[17,"KEY_L4","","",N,N],[17,"KEY_F15","","",N,N],[17,"KEY_L5","","",N,N],[17,"KEY_F16","","",N,N],[17,"KEY_L6","","",N,N],[17,"KEY_F17","","",N,N],[17,"KEY_L7","","",N,N],[17,"KEY_F18","","",N,N],[17,"KEY_L8","","",N,N],[17,"KEY_F19","","",N,N],[17,"KEY_L9","","",N,N],[17,"KEY_F20","","",N,N],[17,"KEY_L10","","",N,N],[17,"KEY_F21","","",N,N],[17,"KEY_R1","","",N,N],[17,"KEY_F22","","",N,N],[17,"KEY_R2","","",N,N],[17,"KEY_F23","","",N,N],[17,"KEY_R3","","",N,N],[17,"KEY_F24","","",N,N],[17,"KEY_R4","","",N,N],[17,"KEY_F25","","",N,N],[17,"KEY_R5","","",N,N],[17,"KEY_F26","","",N,N],[17,"KEY_R6","","",N,N],[17,"KEY_F27","","",N,N],[17,"KEY_R7","","",N,N],[17,"KEY_F28","","",N,N],[17,"KEY_R8","","",N,N],[17,"KEY_F29","","",N,N],[17,"KEY_R9","","",N,N],[17,"KEY_F30","","",N,N],[17,"KEY_R10","","",N,N],[17,"KEY_F31","","",N,N],[17,"KEY_R11","","",N,N],[17,"KEY_F32","","",N,N],[17,"KEY_R12","","",N,N],[17,"KEY_F33","","",N,N],[17,"KEY_R13","","",N,N],[17,"KEY_F34","","",N,N],[17,"KEY_R14","","",N,N],[17,"KEY_F35","","",N,N],[17,"KEY_R15","","",N,N],[17,"KEY_Shift_L","","",N,N],[17,"KEY_Shift_R","","",N,N],[17,"KEY_Control_L","","",N,N],[17,"KEY_Control_R","","",N,N],[17,"KEY_Caps_Lock","","",N,N],[17,"KEY_Shift_Lock","","",N,N],[17,"KEY_Meta_L","","",N,N],[17,"KEY_Meta_R","","",N,N],[17,"KEY_Alt_L","","",N,N],[17,"KEY_Alt_R","","",N,N],[17,"KEY_Super_L","","",N,N],[17,"KEY_Super_R","","",N,N],[17,"KEY_Hyper_L","","",N,N],[17,"KEY_Hyper_R","","",N,N],[17,"KEY_ISO_Lock","","",N,N],[17,"KEY_ISO_Level2_Latch","","",N,N],[17,"KEY_ISO_Level3_Shift","","",N,N],[17,"KEY_ISO_Level3_Latch","","",N,N],[17,"KEY_ISO_Level3_Lock","","",N,N],[17,"KEY_ISO_Level5_Shift","","",N,N],[17,"KEY_ISO_Level5_Latch","","",N,N],[17,"KEY_ISO_Level5_Lock","","",N,N],[17,"KEY_ISO_Group_Shift","","",N,N],[17,"KEY_ISO_Group_Latch","","",N,N],[17,"KEY_ISO_Group_Lock","","",N,N],[17,"KEY_ISO_Next_Group","","",N,N],[17,"KEY_ISO_Next_Group_Lock","","",N,N],[17,"KEY_ISO_Prev_Group","","",N,N],[17,"KEY_ISO_Prev_Group_Lock","","",N,N],[17,"KEY_ISO_First_Group","","",N,N],[17,"KEY_ISO_First_Group_Lock","","",N,N],[17,"KEY_ISO_Last_Group","","",N,N],[17,"KEY_ISO_Last_Group_Lock","","",N,N],[17,"KEY_ISO_Left_Tab","","",N,N],[17,"KEY_ISO_Move_Line_Up","","",N,N],[17,"KEY_ISO_Move_Line_Down","","",N,N],[17,"KEY_ISO_Partial_Line_Up","","",N,N],[17,"KEY_ISO_Partial_Line_Down","","",N,N],[17,"KEY_ISO_Partial_Space_Left","","",N,N],[17,"KEY_ISO_Partial_Space_Right","","",N,N],[17,"KEY_ISO_Set_Margin_Left","","",N,N],[17,"KEY_ISO_Set_Margin_Right","","",N,N],[17,"KEY_ISO_Release_Margin_Left","","",N,N],[17,"KEY_ISO_Release_Margin_Right","","",N,N],[17,"KEY_ISO_Release_Both_Margins","","",N,N],[17,"KEY_ISO_Fast_Cursor_Left","","",N,N],[17,"KEY_ISO_Fast_Cursor_Right","","",N,N],[17,"KEY_ISO_Fast_Cursor_Up","","",N,N],[17,"KEY_ISO_Fast_Cursor_Down","","",N,N],[17,"KEY_ISO_Continuous_Underline","","",N,N],[17,"KEY_ISO_Discontinuous_Underline","","",N,N],[17,"KEY_ISO_Emphasize","","",N,N],[17,"KEY_ISO_Center_Object","","",N,N],[17,"KEY_ISO_Enter","","",N,N],[17,"KEY_dead_grave","","",N,N],[17,"KEY_dead_acute","","",N,N],[17,"KEY_dead_circumflex","","",N,N],[17,"KEY_dead_tilde","","",N,N],[17,"KEY_dead_perispomeni","","",N,N],[17,"KEY_dead_macron","","",N,N],[17,"KEY_dead_breve","","",N,N],[17,"KEY_dead_abovedot","","",N,N],[17,"KEY_dead_diaeresis","","",N,N],[17,"KEY_dead_abovering","","",N,N],[17,"KEY_dead_doubleacute","","",N,N],[17,"KEY_dead_caron","","",N,N],[17,"KEY_dead_cedilla","","",N,N],[17,"KEY_dead_ogonek","","",N,N],[17,"KEY_dead_iota","","",N,N],[17,"KEY_dead_voiced_sound","","",N,N],[17,"KEY_dead_semivoiced_sound","","",N,N],[17,"KEY_dead_belowdot","","",N,N],[17,"KEY_dead_hook","","",N,N],[17,"KEY_dead_horn","","",N,N],[17,"KEY_dead_stroke","","",N,N],[17,"KEY_dead_abovecomma","","",N,N],[17,"KEY_dead_psili","","",N,N],[17,"KEY_dead_abovereversedcomma","","",N,N],[17,"KEY_dead_dasia","","",N,N],[17,"KEY_dead_doublegrave","","",N,N],[17,"KEY_dead_belowring","","",N,N],[17,"KEY_dead_belowmacron","","",N,N],[17,"KEY_dead_belowcircumflex","","",N,N],[17,"KEY_dead_belowtilde","","",N,N],[17,"KEY_dead_belowbreve","","",N,N],[17,"KEY_dead_belowdiaeresis","","",N,N],[17,"KEY_dead_invertedbreve","","",N,N],[17,"KEY_dead_belowcomma","","",N,N],[17,"KEY_dead_currency","","",N,N],[17,"KEY_dead_lowline","","",N,N],[17,"KEY_dead_aboveverticalline","","",N,N],[17,"KEY_dead_belowverticalline","","",N,N],[17,"KEY_dead_longsolidusoverlay","","",N,N],[17,"KEY_dead_a","","",N,N],[17,"KEY_dead_A","","",N,N],[17,"KEY_dead_e","","",N,N],[17,"KEY_dead_E","","",N,N],[17,"KEY_dead_i","","",N,N],[17,"KEY_dead_I","","",N,N],[17,"KEY_dead_o","","",N,N],[17,"KEY_dead_O","","",N,N],[17,"KEY_dead_u","","",N,N],[17,"KEY_dead_U","","",N,N],[17,"KEY_dead_small_schwa","","",N,N],[17,"KEY_dead_capital_schwa","","",N,N],[17,"KEY_dead_greek","","",N,N],[17,"KEY_First_Virtual_Screen","","",N,N],[17,"KEY_Prev_Virtual_Screen","","",N,N],[17,"KEY_Next_Virtual_Screen","","",N,N],[17,"KEY_Last_Virtual_Screen","","",N,N],[17,"KEY_Terminate_Server","","",N,N],[17,"KEY_AccessX_Enable","","",N,N],[17,"KEY_AccessX_Feedback_Enable","","",N,N],[17,"KEY_RepeatKeys_Enable","","",N,N],[17,"KEY_SlowKeys_Enable","","",N,N],[17,"KEY_BounceKeys_Enable","","",N,N],[17,"KEY_StickyKeys_Enable","","",N,N],[17,"KEY_MouseKeys_Enable","","",N,N],[17,"KEY_MouseKeys_Accel_Enable","","",N,N],[17,"KEY_Overlay1_Enable","","",N,N],[17,"KEY_Overlay2_Enable","","",N,N],[17,"KEY_AudibleBell_Enable","","",N,N],[17,"KEY_Pointer_Left","","",N,N],[17,"KEY_Pointer_Right","","",N,N],[17,"KEY_Pointer_Up","","",N,N],[17,"KEY_Pointer_Down","","",N,N],[17,"KEY_Pointer_UpLeft","","",N,N],[17,"KEY_Pointer_UpRight","","",N,N],[17,"KEY_Pointer_DownLeft","","",N,N],[17,"KEY_Pointer_DownRight","","",N,N],[17,"KEY_Pointer_Button_Dflt","","",N,N],[17,"KEY_Pointer_Button1","","",N,N],[17,"KEY_Pointer_Button2","","",N,N],[17,"KEY_Pointer_Button3","","",N,N],[17,"KEY_Pointer_Button4","","",N,N],[17,"KEY_Pointer_Button5","","",N,N],[17,"KEY_Pointer_DblClick_Dflt","","",N,N],[17,"KEY_Pointer_DblClick1","","",N,N],[17,"KEY_Pointer_DblClick2","","",N,N],[17,"KEY_Pointer_DblClick3","","",N,N],[17,"KEY_Pointer_DblClick4","","",N,N],[17,"KEY_Pointer_DblClick5","","",N,N],[17,"KEY_Pointer_Drag_Dflt","","",N,N],[17,"KEY_Pointer_Drag1","","",N,N],[17,"KEY_Pointer_Drag2","","",N,N],[17,"KEY_Pointer_Drag3","","",N,N],[17,"KEY_Pointer_Drag4","","",N,N],[17,"KEY_Pointer_Drag5","","",N,N],[17,"KEY_Pointer_EnableKeys","","",N,N],[17,"KEY_Pointer_Accelerate","","",N,N],[17,"KEY_Pointer_DfltBtnNext","","",N,N],[17,"KEY_Pointer_DfltBtnPrev","","",N,N],[17,"KEY_ch","","",N,N],[17,"KEY_Ch","","",N,N],[17,"KEY_CH","","",N,N],[17,"KEY_c_h","","",N,N],[17,"KEY_C_h","","",N,N],[17,"KEY_C_H","","",N,N],[17,"KEY_3270_Duplicate","","",N,N],[17,"KEY_3270_FieldMark","","",N,N],[17,"KEY_3270_Right2","","",N,N],[17,"KEY_3270_Left2","","",N,N],[17,"KEY_3270_BackTab","","",N,N],[17,"KEY_3270_EraseEOF","","",N,N],[17,"KEY_3270_EraseInput","","",N,N],[17,"KEY_3270_Reset","","",N,N],[17,"KEY_3270_Quit","","",N,N],[17,"KEY_3270_PA1","","",N,N],[17,"KEY_3270_PA2","","",N,N],[17,"KEY_3270_PA3","","",N,N],[17,"KEY_3270_Test","","",N,N],[17,"KEY_3270_Attn","","",N,N],[17,"KEY_3270_CursorBlink","","",N,N],[17,"KEY_3270_AltCursor","","",N,N],[17,"KEY_3270_KeyClick","","",N,N],[17,"KEY_3270_Jump","","",N,N],[17,"KEY_3270_Ident","","",N,N],[17,"KEY_3270_Rule","","",N,N],[17,"KEY_3270_Copy","","",N,N],[17,"KEY_3270_Play","","",N,N],[17,"KEY_3270_Setup","","",N,N],[17,"KEY_3270_Record","","",N,N],[17,"KEY_3270_ChangeScreen","","",N,N],[17,"KEY_3270_DeleteWord","","",N,N],[17,"KEY_3270_ExSelect","","",N,N],[17,"KEY_3270_CursorSelect","","",N,N],[17,"KEY_3270_PrintScreen","","",N,N],[17,"KEY_3270_Enter","","",N,N],[17,"KEY_space","","",N,N],[17,"KEY_exclam","","",N,N],[17,"KEY_quotedbl","","",N,N],[17,"KEY_numbersign","","",N,N],[17,"KEY_dollar","","",N,N],[17,"KEY_percent","","",N,N],[17,"KEY_ampersand","","",N,N],[17,"KEY_apostrophe","","",N,N],[17,"KEY_quoteright","","",N,N],[17,"KEY_parenleft","","",N,N],[17,"KEY_parenright","","",N,N],[17,"KEY_asterisk","","",N,N],[17,"KEY_plus","","",N,N],[17,"KEY_comma","","",N,N],[17,"KEY_minus","","",N,N],[17,"KEY_period","","",N,N],[17,"KEY_slash","","",N,N],[17,"KEY_0","","",N,N],[17,"KEY_1","","",N,N],[17,"KEY_2","","",N,N],[17,"KEY_3","","",N,N],[17,"KEY_4","","",N,N],[17,"KEY_5","","",N,N],[17,"KEY_6","","",N,N],[17,"KEY_7","","",N,N],[17,"KEY_8","","",N,N],[17,"KEY_9","","",N,N],[17,"KEY_colon","","",N,N],[17,"KEY_semicolon","","",N,N],[17,"KEY_less","","",N,N],[17,"KEY_equal","","",N,N],[17,"KEY_greater","","",N,N],[17,"KEY_question","","",N,N],[17,"KEY_at","","",N,N],[17,"KEY_A","","",N,N],[17,"KEY_B","","",N,N],[17,"KEY_C","","",N,N],[17,"KEY_D","","",N,N],[17,"KEY_E","","",N,N],[17,"KEY_F","","",N,N],[17,"KEY_G","","",N,N],[17,"KEY_H","","",N,N],[17,"KEY_I","","",N,N],[17,"KEY_J","","",N,N],[17,"KEY_K","","",N,N],[17,"KEY_L","","",N,N],[17,"KEY_M","","",N,N],[17,"KEY_N","","",N,N],[17,"KEY_O","","",N,N],[17,"KEY_P","","",N,N],[17,"KEY_Q","","",N,N],[17,"KEY_R","","",N,N],[17,"KEY_S","","",N,N],[17,"KEY_T","","",N,N],[17,"KEY_U","","",N,N],[17,"KEY_V","","",N,N],[17,"KEY_W","","",N,N],[17,"KEY_X","","",N,N],[17,"KEY_Y","","",N,N],[17,"KEY_Z","","",N,N],[17,"KEY_bracketleft","","",N,N],[17,"KEY_backslash","","",N,N],[17,"KEY_bracketright","","",N,N],[17,"KEY_asciicircum","","",N,N],[17,"KEY_underscore","","",N,N],[17,"KEY_grave","","",N,N],[17,"KEY_quoteleft","","",N,N],[17,"KEY_a","","",N,N],[17,"KEY_b","","",N,N],[17,"KEY_c","","",N,N],[17,"KEY_d","","",N,N],[17,"KEY_e","","",N,N],[17,"KEY_f","","",N,N],[17,"KEY_g","","",N,N],[17,"KEY_h","","",N,N],[17,"KEY_i","","",N,N],[17,"KEY_j","","",N,N],[17,"KEY_k","","",N,N],[17,"KEY_l","","",N,N],[17,"KEY_m","","",N,N],[17,"KEY_n","","",N,N],[17,"KEY_o","","",N,N],[17,"KEY_p","","",N,N],[17,"KEY_q","","",N,N],[17,"KEY_r","","",N,N],[17,"KEY_s","","",N,N],[17,"KEY_t","","",N,N],[17,"KEY_u","","",N,N],[17,"KEY_v","","",N,N],[17,"KEY_w","","",N,N],[17,"KEY_x","","",N,N],[17,"KEY_y","","",N,N],[17,"KEY_z","","",N,N],[17,"KEY_braceleft","","",N,N],[17,"KEY_bar","","",N,N],[17,"KEY_braceright","","",N,N],[17,"KEY_asciitilde","","",N,N],[17,"KEY_nobreakspace","","",N,N],[17,"KEY_exclamdown","","",N,N],[17,"KEY_cent","","",N,N],[17,"KEY_sterling","","",N,N],[17,"KEY_currency","","",N,N],[17,"KEY_yen","","",N,N],[17,"KEY_brokenbar","","",N,N],[17,"KEY_section","","",N,N],[17,"KEY_diaeresis","","",N,N],[17,"KEY_copyright","","",N,N],[17,"KEY_ordfeminine","","",N,N],[17,"KEY_guillemotleft","","",N,N],[17,"KEY_notsign","","",N,N],[17,"KEY_hyphen","","",N,N],[17,"KEY_registered","","",N,N],[17,"KEY_macron","","",N,N],[17,"KEY_degree","","",N,N],[17,"KEY_plusminus","","",N,N],[17,"KEY_twosuperior","","",N,N],[17,"KEY_threesuperior","","",N,N],[17,"KEY_acute","","",N,N],[17,"KEY_mu","","",N,N],[17,"KEY_paragraph","","",N,N],[17,"KEY_periodcentered","","",N,N],[17,"KEY_cedilla","","",N,N],[17,"KEY_onesuperior","","",N,N],[17,"KEY_masculine","","",N,N],[17,"KEY_guillemotright","","",N,N],[17,"KEY_onequarter","","",N,N],[17,"KEY_onehalf","","",N,N],[17,"KEY_threequarters","","",N,N],[17,"KEY_questiondown","","",N,N],[17,"KEY_Agrave","","",N,N],[17,"KEY_Aacute","","",N,N],[17,"KEY_Acircumflex","","",N,N],[17,"KEY_Atilde","","",N,N],[17,"KEY_Adiaeresis","","",N,N],[17,"KEY_Aring","","",N,N],[17,"KEY_AE","","",N,N],[17,"KEY_Ccedilla","","",N,N],[17,"KEY_Egrave","","",N,N],[17,"KEY_Eacute","","",N,N],[17,"KEY_Ecircumflex","","",N,N],[17,"KEY_Ediaeresis","","",N,N],[17,"KEY_Igrave","","",N,N],[17,"KEY_Iacute","","",N,N],[17,"KEY_Icircumflex","","",N,N],[17,"KEY_Idiaeresis","","",N,N],[17,"KEY_ETH","","",N,N],[17,"KEY_Eth","","",N,N],[17,"KEY_Ntilde","","",N,N],[17,"KEY_Ograve","","",N,N],[17,"KEY_Oacute","","",N,N],[17,"KEY_Ocircumflex","","",N,N],[17,"KEY_Otilde","","",N,N],[17,"KEY_Odiaeresis","","",N,N],[17,"KEY_multiply","","",N,N],[17,"KEY_Oslash","","",N,N],[17,"KEY_Ooblique","","",N,N],[17,"KEY_Ugrave","","",N,N],[17,"KEY_Uacute","","",N,N],[17,"KEY_Ucircumflex","","",N,N],[17,"KEY_Udiaeresis","","",N,N],[17,"KEY_Yacute","","",N,N],[17,"KEY_THORN","","",N,N],[17,"KEY_Thorn","","",N,N],[17,"KEY_ssharp","","",N,N],[17,"KEY_agrave","","",N,N],[17,"KEY_aacute","","",N,N],[17,"KEY_acircumflex","","",N,N],[17,"KEY_atilde","","",N,N],[17,"KEY_adiaeresis","","",N,N],[17,"KEY_aring","","",N,N],[17,"KEY_ae","","",N,N],[17,"KEY_ccedilla","","",N,N],[17,"KEY_egrave","","",N,N],[17,"KEY_eacute","","",N,N],[17,"KEY_ecircumflex","","",N,N],[17,"KEY_ediaeresis","","",N,N],[17,"KEY_igrave","","",N,N],[17,"KEY_iacute","","",N,N],[17,"KEY_icircumflex","","",N,N],[17,"KEY_idiaeresis","","",N,N],[17,"KEY_eth","","",N,N],[17,"KEY_ntilde","","",N,N],[17,"KEY_ograve","","",N,N],[17,"KEY_oacute","","",N,N],[17,"KEY_ocircumflex","","",N,N],[17,"KEY_otilde","","",N,N],[17,"KEY_odiaeresis","","",N,N],[17,"KEY_division","","",N,N],[17,"KEY_oslash","","",N,N],[17,"KEY_ooblique","","",N,N],[17,"KEY_ugrave","","",N,N],[17,"KEY_uacute","","",N,N],[17,"KEY_ucircumflex","","",N,N],[17,"KEY_udiaeresis","","",N,N],[17,"KEY_yacute","","",N,N],[17,"KEY_thorn","","",N,N],[17,"KEY_ydiaeresis","","",N,N],[17,"KEY_Aogonek","","",N,N],[17,"KEY_breve","","",N,N],[17,"KEY_Lstroke","","",N,N],[17,"KEY_Lcaron","","",N,N],[17,"KEY_Sacute","","",N,N],[17,"KEY_Scaron","","",N,N],[17,"KEY_Scedilla","","",N,N],[17,"KEY_Tcaron","","",N,N],[17,"KEY_Zacute","","",N,N],[17,"KEY_Zcaron","","",N,N],[17,"KEY_Zabovedot","","",N,N],[17,"KEY_aogonek","","",N,N],[17,"KEY_ogonek","","",N,N],[17,"KEY_lstroke","","",N,N],[17,"KEY_lcaron","","",N,N],[17,"KEY_sacute","","",N,N],[17,"KEY_caron","","",N,N],[17,"KEY_scaron","","",N,N],[17,"KEY_scedilla","","",N,N],[17,"KEY_tcaron","","",N,N],[17,"KEY_zacute","","",N,N],[17,"KEY_doubleacute","","",N,N],[17,"KEY_zcaron","","",N,N],[17,"KEY_zabovedot","","",N,N],[17,"KEY_Racute","","",N,N],[17,"KEY_Abreve","","",N,N],[17,"KEY_Lacute","","",N,N],[17,"KEY_Cacute","","",N,N],[17,"KEY_Ccaron","","",N,N],[17,"KEY_Eogonek","","",N,N],[17,"KEY_Ecaron","","",N,N],[17,"KEY_Dcaron","","",N,N],[17,"KEY_Dstroke","","",N,N],[17,"KEY_Nacute","","",N,N],[17,"KEY_Ncaron","","",N,N],[17,"KEY_Odoubleacute","","",N,N],[17,"KEY_Rcaron","","",N,N],[17,"KEY_Uring","","",N,N],[17,"KEY_Udoubleacute","","",N,N],[17,"KEY_Tcedilla","","",N,N],[17,"KEY_racute","","",N,N],[17,"KEY_abreve","","",N,N],[17,"KEY_lacute","","",N,N],[17,"KEY_cacute","","",N,N],[17,"KEY_ccaron","","",N,N],[17,"KEY_eogonek","","",N,N],[17,"KEY_ecaron","","",N,N],[17,"KEY_dcaron","","",N,N],[17,"KEY_dstroke","","",N,N],[17,"KEY_nacute","","",N,N],[17,"KEY_ncaron","","",N,N],[17,"KEY_odoubleacute","","",N,N],[17,"KEY_rcaron","","",N,N],[17,"KEY_uring","","",N,N],[17,"KEY_udoubleacute","","",N,N],[17,"KEY_tcedilla","","",N,N],[17,"KEY_abovedot","","",N,N],[17,"KEY_Hstroke","","",N,N],[17,"KEY_Hcircumflex","","",N,N],[17,"KEY_Iabovedot","","",N,N],[17,"KEY_Gbreve","","",N,N],[17,"KEY_Jcircumflex","","",N,N],[17,"KEY_hstroke","","",N,N],[17,"KEY_hcircumflex","","",N,N],[17,"KEY_idotless","","",N,N],[17,"KEY_gbreve","","",N,N],[17,"KEY_jcircumflex","","",N,N],[17,"KEY_Cabovedot","","",N,N],[17,"KEY_Ccircumflex","","",N,N],[17,"KEY_Gabovedot","","",N,N],[17,"KEY_Gcircumflex","","",N,N],[17,"KEY_Ubreve","","",N,N],[17,"KEY_Scircumflex","","",N,N],[17,"KEY_cabovedot","","",N,N],[17,"KEY_ccircumflex","","",N,N],[17,"KEY_gabovedot","","",N,N],[17,"KEY_gcircumflex","","",N,N],[17,"KEY_ubreve","","",N,N],[17,"KEY_scircumflex","","",N,N],[17,"KEY_kra","","",N,N],[17,"KEY_kappa","","",N,N],[17,"KEY_Rcedilla","","",N,N],[17,"KEY_Itilde","","",N,N],[17,"KEY_Lcedilla","","",N,N],[17,"KEY_Emacron","","",N,N],[17,"KEY_Gcedilla","","",N,N],[17,"KEY_Tslash","","",N,N],[17,"KEY_rcedilla","","",N,N],[17,"KEY_itilde","","",N,N],[17,"KEY_lcedilla","","",N,N],[17,"KEY_emacron","","",N,N],[17,"KEY_gcedilla","","",N,N],[17,"KEY_tslash","","",N,N],[17,"KEY_ENG","","",N,N],[17,"KEY_eng","","",N,N],[17,"KEY_Amacron","","",N,N],[17,"KEY_Iogonek","","",N,N],[17,"KEY_Eabovedot","","",N,N],[17,"KEY_Imacron","","",N,N],[17,"KEY_Ncedilla","","",N,N],[17,"KEY_Omacron","","",N,N],[17,"KEY_Kcedilla","","",N,N],[17,"KEY_Uogonek","","",N,N],[17,"KEY_Utilde","","",N,N],[17,"KEY_Umacron","","",N,N],[17,"KEY_amacron","","",N,N],[17,"KEY_iogonek","","",N,N],[17,"KEY_eabovedot","","",N,N],[17,"KEY_imacron","","",N,N],[17,"KEY_ncedilla","","",N,N],[17,"KEY_omacron","","",N,N],[17,"KEY_kcedilla","","",N,N],[17,"KEY_uogonek","","",N,N],[17,"KEY_utilde","","",N,N],[17,"KEY_umacron","","",N,N],[17,"KEY_Wcircumflex","","",N,N],[17,"KEY_wcircumflex","","",N,N],[17,"KEY_Ycircumflex","","",N,N],[17,"KEY_ycircumflex","","",N,N],[17,"KEY_Babovedot","","",N,N],[17,"KEY_babovedot","","",N,N],[17,"KEY_Dabovedot","","",N,N],[17,"KEY_dabovedot","","",N,N],[17,"KEY_Fabovedot","","",N,N],[17,"KEY_fabovedot","","",N,N],[17,"KEY_Mabovedot","","",N,N],[17,"KEY_mabovedot","","",N,N],[17,"KEY_Pabovedot","","",N,N],[17,"KEY_pabovedot","","",N,N],[17,"KEY_Sabovedot","","",N,N],[17,"KEY_sabovedot","","",N,N],[17,"KEY_Tabovedot","","",N,N],[17,"KEY_tabovedot","","",N,N],[17,"KEY_Wgrave","","",N,N],[17,"KEY_wgrave","","",N,N],[17,"KEY_Wacute","","",N,N],[17,"KEY_wacute","","",N,N],[17,"KEY_Wdiaeresis","","",N,N],[17,"KEY_wdiaeresis","","",N,N],[17,"KEY_Ygrave","","",N,N],[17,"KEY_ygrave","","",N,N],[17,"KEY_OE","","",N,N],[17,"KEY_oe","","",N,N],[17,"KEY_Ydiaeresis","","",N,N],[17,"KEY_overline","","",N,N],[17,"KEY_kana_fullstop","","",N,N],[17,"KEY_kana_openingbracket","","",N,N],[17,"KEY_kana_closingbracket","","",N,N],[17,"KEY_kana_comma","","",N,N],[17,"KEY_kana_conjunctive","","",N,N],[17,"KEY_kana_middledot","","",N,N],[17,"KEY_kana_WO","","",N,N],[17,"KEY_kana_a","","",N,N],[17,"KEY_kana_i","","",N,N],[17,"KEY_kana_u","","",N,N],[17,"KEY_kana_e","","",N,N],[17,"KEY_kana_o","","",N,N],[17,"KEY_kana_ya","","",N,N],[17,"KEY_kana_yu","","",N,N],[17,"KEY_kana_yo","","",N,N],[17,"KEY_kana_tsu","","",N,N],[17,"KEY_kana_tu","","",N,N],[17,"KEY_prolongedsound","","",N,N],[17,"KEY_kana_A","","",N,N],[17,"KEY_kana_I","","",N,N],[17,"KEY_kana_U","","",N,N],[17,"KEY_kana_E","","",N,N],[17,"KEY_kana_O","","",N,N],[17,"KEY_kana_KA","","",N,N],[17,"KEY_kana_KI","","",N,N],[17,"KEY_kana_KU","","",N,N],[17,"KEY_kana_KE","","",N,N],[17,"KEY_kana_KO","","",N,N],[17,"KEY_kana_SA","","",N,N],[17,"KEY_kana_SHI","","",N,N],[17,"KEY_kana_SU","","",N,N],[17,"KEY_kana_SE","","",N,N],[17,"KEY_kana_SO","","",N,N],[17,"KEY_kana_TA","","",N,N],[17,"KEY_kana_CHI","","",N,N],[17,"KEY_kana_TI","","",N,N],[17,"KEY_kana_TSU","","",N,N],[17,"KEY_kana_TU","","",N,N],[17,"KEY_kana_TE","","",N,N],[17,"KEY_kana_TO","","",N,N],[17,"KEY_kana_NA","","",N,N],[17,"KEY_kana_NI","","",N,N],[17,"KEY_kana_NU","","",N,N],[17,"KEY_kana_NE","","",N,N],[17,"KEY_kana_NO","","",N,N],[17,"KEY_kana_HA","","",N,N],[17,"KEY_kana_HI","","",N,N],[17,"KEY_kana_FU","","",N,N],[17,"KEY_kana_HU","","",N,N],[17,"KEY_kana_HE","","",N,N],[17,"KEY_kana_HO","","",N,N],[17,"KEY_kana_MA","","",N,N],[17,"KEY_kana_MI","","",N,N],[17,"KEY_kana_MU","","",N,N],[17,"KEY_kana_ME","","",N,N],[17,"KEY_kana_MO","","",N,N],[17,"KEY_kana_YA","","",N,N],[17,"KEY_kana_YU","","",N,N],[17,"KEY_kana_YO","","",N,N],[17,"KEY_kana_RA","","",N,N],[17,"KEY_kana_RI","","",N,N],[17,"KEY_kana_RU","","",N,N],[17,"KEY_kana_RE","","",N,N],[17,"KEY_kana_RO","","",N,N],[17,"KEY_kana_WA","","",N,N],[17,"KEY_kana_N","","",N,N],[17,"KEY_voicedsound","","",N,N],[17,"KEY_semivoicedsound","","",N,N],[17,"KEY_kana_switch","","",N,N],[17,"KEY_Farsi_0","","",N,N],[17,"KEY_Farsi_1","","",N,N],[17,"KEY_Farsi_2","","",N,N],[17,"KEY_Farsi_3","","",N,N],[17,"KEY_Farsi_4","","",N,N],[17,"KEY_Farsi_5","","",N,N],[17,"KEY_Farsi_6","","",N,N],[17,"KEY_Farsi_7","","",N,N],[17,"KEY_Farsi_8","","",N,N],[17,"KEY_Farsi_9","","",N,N],[17,"KEY_Arabic_percent","","",N,N],[17,"KEY_Arabic_superscript_alef","","",N,N],[17,"KEY_Arabic_tteh","","",N,N],[17,"KEY_Arabic_peh","","",N,N],[17,"KEY_Arabic_tcheh","","",N,N],[17,"KEY_Arabic_ddal","","",N,N],[17,"KEY_Arabic_rreh","","",N,N],[17,"KEY_Arabic_comma","","",N,N],[17,"KEY_Arabic_fullstop","","",N,N],[17,"KEY_Arabic_0","","",N,N],[17,"KEY_Arabic_1","","",N,N],[17,"KEY_Arabic_2","","",N,N],[17,"KEY_Arabic_3","","",N,N],[17,"KEY_Arabic_4","","",N,N],[17,"KEY_Arabic_5","","",N,N],[17,"KEY_Arabic_6","","",N,N],[17,"KEY_Arabic_7","","",N,N],[17,"KEY_Arabic_8","","",N,N],[17,"KEY_Arabic_9","","",N,N],[17,"KEY_Arabic_semicolon","","",N,N],[17,"KEY_Arabic_question_mark","","",N,N],[17,"KEY_Arabic_hamza","","",N,N],[17,"KEY_Arabic_maddaonalef","","",N,N],[17,"KEY_Arabic_hamzaonalef","","",N,N],[17,"KEY_Arabic_hamzaonwaw","","",N,N],[17,"KEY_Arabic_hamzaunderalef","","",N,N],[17,"KEY_Arabic_hamzaonyeh","","",N,N],[17,"KEY_Arabic_alef","","",N,N],[17,"KEY_Arabic_beh","","",N,N],[17,"KEY_Arabic_tehmarbuta","","",N,N],[17,"KEY_Arabic_teh","","",N,N],[17,"KEY_Arabic_theh","","",N,N],[17,"KEY_Arabic_jeem","","",N,N],[17,"KEY_Arabic_hah","","",N,N],[17,"KEY_Arabic_khah","","",N,N],[17,"KEY_Arabic_dal","","",N,N],[17,"KEY_Arabic_thal","","",N,N],[17,"KEY_Arabic_ra","","",N,N],[17,"KEY_Arabic_zain","","",N,N],[17,"KEY_Arabic_seen","","",N,N],[17,"KEY_Arabic_sheen","","",N,N],[17,"KEY_Arabic_sad","","",N,N],[17,"KEY_Arabic_dad","","",N,N],[17,"KEY_Arabic_tah","","",N,N],[17,"KEY_Arabic_zah","","",N,N],[17,"KEY_Arabic_ain","","",N,N],[17,"KEY_Arabic_ghain","","",N,N],[17,"KEY_Arabic_tatweel","","",N,N],[17,"KEY_Arabic_feh","","",N,N],[17,"KEY_Arabic_qaf","","",N,N],[17,"KEY_Arabic_kaf","","",N,N],[17,"KEY_Arabic_lam","","",N,N],[17,"KEY_Arabic_meem","","",N,N],[17,"KEY_Arabic_noon","","",N,N],[17,"KEY_Arabic_ha","","",N,N],[17,"KEY_Arabic_heh","","",N,N],[17,"KEY_Arabic_waw","","",N,N],[17,"KEY_Arabic_alefmaksura","","",N,N],[17,"KEY_Arabic_yeh","","",N,N],[17,"KEY_Arabic_fathatan","","",N,N],[17,"KEY_Arabic_dammatan","","",N,N],[17,"KEY_Arabic_kasratan","","",N,N],[17,"KEY_Arabic_fatha","","",N,N],[17,"KEY_Arabic_damma","","",N,N],[17,"KEY_Arabic_kasra","","",N,N],[17,"KEY_Arabic_shadda","","",N,N],[17,"KEY_Arabic_sukun","","",N,N],[17,"KEY_Arabic_madda_above","","",N,N],[17,"KEY_Arabic_hamza_above","","",N,N],[17,"KEY_Arabic_hamza_below","","",N,N],[17,"KEY_Arabic_jeh","","",N,N],[17,"KEY_Arabic_veh","","",N,N],[17,"KEY_Arabic_keheh","","",N,N],[17,"KEY_Arabic_gaf","","",N,N],[17,"KEY_Arabic_noon_ghunna","","",N,N],[17,"KEY_Arabic_heh_doachashmee","","",N,N],[17,"KEY_Farsi_yeh","","",N,N],[17,"KEY_Arabic_farsi_yeh","","",N,N],[17,"KEY_Arabic_yeh_baree","","",N,N],[17,"KEY_Arabic_heh_goal","","",N,N],[17,"KEY_Arabic_switch","","",N,N],[17,"KEY_Cyrillic_GHE_bar","","",N,N],[17,"KEY_Cyrillic_ghe_bar","","",N,N],[17,"KEY_Cyrillic_ZHE_descender","","",N,N],[17,"KEY_Cyrillic_zhe_descender","","",N,N],[17,"KEY_Cyrillic_KA_descender","","",N,N],[17,"KEY_Cyrillic_ka_descender","","",N,N],[17,"KEY_Cyrillic_KA_vertstroke","","",N,N],[17,"KEY_Cyrillic_ka_vertstroke","","",N,N],[17,"KEY_Cyrillic_EN_descender","","",N,N],[17,"KEY_Cyrillic_en_descender","","",N,N],[17,"KEY_Cyrillic_U_straight","","",N,N],[17,"KEY_Cyrillic_u_straight","","",N,N],[17,"KEY_Cyrillic_U_straight_bar","","",N,N],[17,"KEY_Cyrillic_u_straight_bar","","",N,N],[17,"KEY_Cyrillic_HA_descender","","",N,N],[17,"KEY_Cyrillic_ha_descender","","",N,N],[17,"KEY_Cyrillic_CHE_descender","","",N,N],[17,"KEY_Cyrillic_che_descender","","",N,N],[17,"KEY_Cyrillic_CHE_vertstroke","","",N,N],[17,"KEY_Cyrillic_che_vertstroke","","",N,N],[17,"KEY_Cyrillic_SHHA","","",N,N],[17,"KEY_Cyrillic_shha","","",N,N],[17,"KEY_Cyrillic_SCHWA","","",N,N],[17,"KEY_Cyrillic_schwa","","",N,N],[17,"KEY_Cyrillic_I_macron","","",N,N],[17,"KEY_Cyrillic_i_macron","","",N,N],[17,"KEY_Cyrillic_O_bar","","",N,N],[17,"KEY_Cyrillic_o_bar","","",N,N],[17,"KEY_Cyrillic_U_macron","","",N,N],[17,"KEY_Cyrillic_u_macron","","",N,N],[17,"KEY_Serbian_dje","","",N,N],[17,"KEY_Macedonia_gje","","",N,N],[17,"KEY_Cyrillic_io","","",N,N],[17,"KEY_Ukrainian_ie","","",N,N],[17,"KEY_Ukranian_je","","",N,N],[17,"KEY_Macedonia_dse","","",N,N],[17,"KEY_Ukrainian_i","","",N,N],[17,"KEY_Ukranian_i","","",N,N],[17,"KEY_Ukrainian_yi","","",N,N],[17,"KEY_Ukranian_yi","","",N,N],[17,"KEY_Cyrillic_je","","",N,N],[17,"KEY_Serbian_je","","",N,N],[17,"KEY_Cyrillic_lje","","",N,N],[17,"KEY_Serbian_lje","","",N,N],[17,"KEY_Cyrillic_nje","","",N,N],[17,"KEY_Serbian_nje","","",N,N],[17,"KEY_Serbian_tshe","","",N,N],[17,"KEY_Macedonia_kje","","",N,N],[17,"KEY_Ukrainian_ghe_with_upturn","","",N,N],[17,"KEY_Byelorussian_shortu","","",N,N],[17,"KEY_Cyrillic_dzhe","","",N,N],[17,"KEY_Serbian_dze","","",N,N],[17,"KEY_numerosign","","",N,N],[17,"KEY_Serbian_DJE","","",N,N],[17,"KEY_Macedonia_GJE","","",N,N],[17,"KEY_Cyrillic_IO","","",N,N],[17,"KEY_Ukrainian_IE","","",N,N],[17,"KEY_Ukranian_JE","","",N,N],[17,"KEY_Macedonia_DSE","","",N,N],[17,"KEY_Ukrainian_I","","",N,N],[17,"KEY_Ukranian_I","","",N,N],[17,"KEY_Ukrainian_YI","","",N,N],[17,"KEY_Ukranian_YI","","",N,N],[17,"KEY_Cyrillic_JE","","",N,N],[17,"KEY_Serbian_JE","","",N,N],[17,"KEY_Cyrillic_LJE","","",N,N],[17,"KEY_Serbian_LJE","","",N,N],[17,"KEY_Cyrillic_NJE","","",N,N],[17,"KEY_Serbian_NJE","","",N,N],[17,"KEY_Serbian_TSHE","","",N,N],[17,"KEY_Macedonia_KJE","","",N,N],[17,"KEY_Ukrainian_GHE_WITH_UPTURN","","",N,N],[17,"KEY_Byelorussian_SHORTU","","",N,N],[17,"KEY_Cyrillic_DZHE","","",N,N],[17,"KEY_Serbian_DZE","","",N,N],[17,"KEY_Cyrillic_yu","","",N,N],[17,"KEY_Cyrillic_a","","",N,N],[17,"KEY_Cyrillic_be","","",N,N],[17,"KEY_Cyrillic_tse","","",N,N],[17,"KEY_Cyrillic_de","","",N,N],[17,"KEY_Cyrillic_ie","","",N,N],[17,"KEY_Cyrillic_ef","","",N,N],[17,"KEY_Cyrillic_ghe","","",N,N],[17,"KEY_Cyrillic_ha","","",N,N],[17,"KEY_Cyrillic_i","","",N,N],[17,"KEY_Cyrillic_shorti","","",N,N],[17,"KEY_Cyrillic_ka","","",N,N],[17,"KEY_Cyrillic_el","","",N,N],[17,"KEY_Cyrillic_em","","",N,N],[17,"KEY_Cyrillic_en","","",N,N],[17,"KEY_Cyrillic_o","","",N,N],[17,"KEY_Cyrillic_pe","","",N,N],[17,"KEY_Cyrillic_ya","","",N,N],[17,"KEY_Cyrillic_er","","",N,N],[17,"KEY_Cyrillic_es","","",N,N],[17,"KEY_Cyrillic_te","","",N,N],[17,"KEY_Cyrillic_u","","",N,N],[17,"KEY_Cyrillic_zhe","","",N,N],[17,"KEY_Cyrillic_ve","","",N,N],[17,"KEY_Cyrillic_softsign","","",N,N],[17,"KEY_Cyrillic_yeru","","",N,N],[17,"KEY_Cyrillic_ze","","",N,N],[17,"KEY_Cyrillic_sha","","",N,N],[17,"KEY_Cyrillic_e","","",N,N],[17,"KEY_Cyrillic_shcha","","",N,N],[17,"KEY_Cyrillic_che","","",N,N],[17,"KEY_Cyrillic_hardsign","","",N,N],[17,"KEY_Cyrillic_YU","","",N,N],[17,"KEY_Cyrillic_A","","",N,N],[17,"KEY_Cyrillic_BE","","",N,N],[17,"KEY_Cyrillic_TSE","","",N,N],[17,"KEY_Cyrillic_DE","","",N,N],[17,"KEY_Cyrillic_IE","","",N,N],[17,"KEY_Cyrillic_EF","","",N,N],[17,"KEY_Cyrillic_GHE","","",N,N],[17,"KEY_Cyrillic_HA","","",N,N],[17,"KEY_Cyrillic_I","","",N,N],[17,"KEY_Cyrillic_SHORTI","","",N,N],[17,"KEY_Cyrillic_KA","","",N,N],[17,"KEY_Cyrillic_EL","","",N,N],[17,"KEY_Cyrillic_EM","","",N,N],[17,"KEY_Cyrillic_EN","","",N,N],[17,"KEY_Cyrillic_O","","",N,N],[17,"KEY_Cyrillic_PE","","",N,N],[17,"KEY_Cyrillic_YA","","",N,N],[17,"KEY_Cyrillic_ER","","",N,N],[17,"KEY_Cyrillic_ES","","",N,N],[17,"KEY_Cyrillic_TE","","",N,N],[17,"KEY_Cyrillic_U","","",N,N],[17,"KEY_Cyrillic_ZHE","","",N,N],[17,"KEY_Cyrillic_VE","","",N,N],[17,"KEY_Cyrillic_SOFTSIGN","","",N,N],[17,"KEY_Cyrillic_YERU","","",N,N],[17,"KEY_Cyrillic_ZE","","",N,N],[17,"KEY_Cyrillic_SHA","","",N,N],[17,"KEY_Cyrillic_E","","",N,N],[17,"KEY_Cyrillic_SHCHA","","",N,N],[17,"KEY_Cyrillic_CHE","","",N,N],[17,"KEY_Cyrillic_HARDSIGN","","",N,N],[17,"KEY_Greek_ALPHAaccent","","",N,N],[17,"KEY_Greek_EPSILONaccent","","",N,N],[17,"KEY_Greek_ETAaccent","","",N,N],[17,"KEY_Greek_IOTAaccent","","",N,N],[17,"KEY_Greek_IOTAdieresis","","",N,N],[17,"KEY_Greek_IOTAdiaeresis","","",N,N],[17,"KEY_Greek_OMICRONaccent","","",N,N],[17,"KEY_Greek_UPSILONaccent","","",N,N],[17,"KEY_Greek_UPSILONdieresis","","",N,N],[17,"KEY_Greek_OMEGAaccent","","",N,N],[17,"KEY_Greek_accentdieresis","","",N,N],[17,"KEY_Greek_horizbar","","",N,N],[17,"KEY_Greek_alphaaccent","","",N,N],[17,"KEY_Greek_epsilonaccent","","",N,N],[17,"KEY_Greek_etaaccent","","",N,N],[17,"KEY_Greek_iotaaccent","","",N,N],[17,"KEY_Greek_iotadieresis","","",N,N],[17,"KEY_Greek_iotaaccentdieresis","","",N,N],[17,"KEY_Greek_omicronaccent","","",N,N],[17,"KEY_Greek_upsilonaccent","","",N,N],[17,"KEY_Greek_upsilondieresis","","",N,N],[17,"KEY_Greek_upsilonaccentdieresis","","",N,N],[17,"KEY_Greek_omegaaccent","","",N,N],[17,"KEY_Greek_ALPHA","","",N,N],[17,"KEY_Greek_BETA","","",N,N],[17,"KEY_Greek_GAMMA","","",N,N],[17,"KEY_Greek_DELTA","","",N,N],[17,"KEY_Greek_EPSILON","","",N,N],[17,"KEY_Greek_ZETA","","",N,N],[17,"KEY_Greek_ETA","","",N,N],[17,"KEY_Greek_THETA","","",N,N],[17,"KEY_Greek_IOTA","","",N,N],[17,"KEY_Greek_KAPPA","","",N,N],[17,"KEY_Greek_LAMDA","","",N,N],[17,"KEY_Greek_LAMBDA","","",N,N],[17,"KEY_Greek_MU","","",N,N],[17,"KEY_Greek_NU","","",N,N],[17,"KEY_Greek_XI","","",N,N],[17,"KEY_Greek_OMICRON","","",N,N],[17,"KEY_Greek_PI","","",N,N],[17,"KEY_Greek_RHO","","",N,N],[17,"KEY_Greek_SIGMA","","",N,N],[17,"KEY_Greek_TAU","","",N,N],[17,"KEY_Greek_UPSILON","","",N,N],[17,"KEY_Greek_PHI","","",N,N],[17,"KEY_Greek_CHI","","",N,N],[17,"KEY_Greek_PSI","","",N,N],[17,"KEY_Greek_OMEGA","","",N,N],[17,"KEY_Greek_alpha","","",N,N],[17,"KEY_Greek_beta","","",N,N],[17,"KEY_Greek_gamma","","",N,N],[17,"KEY_Greek_delta","","",N,N],[17,"KEY_Greek_epsilon","","",N,N],[17,"KEY_Greek_zeta","","",N,N],[17,"KEY_Greek_eta","","",N,N],[17,"KEY_Greek_theta","","",N,N],[17,"KEY_Greek_iota","","",N,N],[17,"KEY_Greek_kappa","","",N,N],[17,"KEY_Greek_lamda","","",N,N],[17,"KEY_Greek_lambda","","",N,N],[17,"KEY_Greek_mu","","",N,N],[17,"KEY_Greek_nu","","",N,N],[17,"KEY_Greek_xi","","",N,N],[17,"KEY_Greek_omicron","","",N,N],[17,"KEY_Greek_pi","","",N,N],[17,"KEY_Greek_rho","","",N,N],[17,"KEY_Greek_sigma","","",N,N],[17,"KEY_Greek_finalsmallsigma","","",N,N],[17,"KEY_Greek_tau","","",N,N],[17,"KEY_Greek_upsilon","","",N,N],[17,"KEY_Greek_phi","","",N,N],[17,"KEY_Greek_chi","","",N,N],[17,"KEY_Greek_psi","","",N,N],[17,"KEY_Greek_omega","","",N,N],[17,"KEY_Greek_switch","","",N,N],[17,"KEY_leftradical","","",N,N],[17,"KEY_topleftradical","","",N,N],[17,"KEY_horizconnector","","",N,N],[17,"KEY_topintegral","","",N,N],[17,"KEY_botintegral","","",N,N],[17,"KEY_vertconnector","","",N,N],[17,"KEY_topleftsqbracket","","",N,N],[17,"KEY_botleftsqbracket","","",N,N],[17,"KEY_toprightsqbracket","","",N,N],[17,"KEY_botrightsqbracket","","",N,N],[17,"KEY_topleftparens","","",N,N],[17,"KEY_botleftparens","","",N,N],[17,"KEY_toprightparens","","",N,N],[17,"KEY_botrightparens","","",N,N],[17,"KEY_leftmiddlecurlybrace","","",N,N],[17,"KEY_rightmiddlecurlybrace","","",N,N],[17,"KEY_topleftsummation","","",N,N],[17,"KEY_botleftsummation","","",N,N],[17,"KEY_topvertsummationconnector","","",N,N],[17,"KEY_botvertsummationconnector","","",N,N],[17,"KEY_toprightsummation","","",N,N],[17,"KEY_botrightsummation","","",N,N],[17,"KEY_rightmiddlesummation","","",N,N],[17,"KEY_lessthanequal","","",N,N],[17,"KEY_notequal","","",N,N],[17,"KEY_greaterthanequal","","",N,N],[17,"KEY_integral","","",N,N],[17,"KEY_therefore","","",N,N],[17,"KEY_variation","","",N,N],[17,"KEY_infinity","","",N,N],[17,"KEY_nabla","","",N,N],[17,"KEY_approximate","","",N,N],[17,"KEY_similarequal","","",N,N],[17,"KEY_ifonlyif","","",N,N],[17,"KEY_implies","","",N,N],[17,"KEY_identical","","",N,N],[17,"KEY_radical","","",N,N],[17,"KEY_includedin","","",N,N],[17,"KEY_includes","","",N,N],[17,"KEY_intersection","","",N,N],[17,"KEY_union","","",N,N],[17,"KEY_logicaland","","",N,N],[17,"KEY_logicalor","","",N,N],[17,"KEY_partialderivative","","",N,N],[17,"KEY_function","","",N,N],[17,"KEY_leftarrow","","",N,N],[17,"KEY_uparrow","","",N,N],[17,"KEY_rightarrow","","",N,N],[17,"KEY_downarrow","","",N,N],[17,"KEY_blank","","",N,N],[17,"KEY_soliddiamond","","",N,N],[17,"KEY_checkerboard","","",N,N],[17,"KEY_ht","","",N,N],[17,"KEY_ff","","",N,N],[17,"KEY_cr","","",N,N],[17,"KEY_lf","","",N,N],[17,"KEY_nl","","",N,N],[17,"KEY_vt","","",N,N],[17,"KEY_lowrightcorner","","",N,N],[17,"KEY_uprightcorner","","",N,N],[17,"KEY_upleftcorner","","",N,N],[17,"KEY_lowleftcorner","","",N,N],[17,"KEY_crossinglines","","",N,N],[17,"KEY_horizlinescan1","","",N,N],[17,"KEY_horizlinescan3","","",N,N],[17,"KEY_horizlinescan5","","",N,N],[17,"KEY_horizlinescan7","","",N,N],[17,"KEY_horizlinescan9","","",N,N],[17,"KEY_leftt","","",N,N],[17,"KEY_rightt","","",N,N],[17,"KEY_bott","","",N,N],[17,"KEY_topt","","",N,N],[17,"KEY_vertbar","","",N,N],[17,"KEY_emspace","","",N,N],[17,"KEY_enspace","","",N,N],[17,"KEY_em3space","","",N,N],[17,"KEY_em4space","","",N,N],[17,"KEY_digitspace","","",N,N],[17,"KEY_punctspace","","",N,N],[17,"KEY_thinspace","","",N,N],[17,"KEY_hairspace","","",N,N],[17,"KEY_emdash","","",N,N],[17,"KEY_endash","","",N,N],[17,"KEY_signifblank","","",N,N],[17,"KEY_ellipsis","","",N,N],[17,"KEY_doubbaselinedot","","",N,N],[17,"KEY_onethird","","",N,N],[17,"KEY_twothirds","","",N,N],[17,"KEY_onefifth","","",N,N],[17,"KEY_twofifths","","",N,N],[17,"KEY_threefifths","","",N,N],[17,"KEY_fourfifths","","",N,N],[17,"KEY_onesixth","","",N,N],[17,"KEY_fivesixths","","",N,N],[17,"KEY_careof","","",N,N],[17,"KEY_figdash","","",N,N],[17,"KEY_leftanglebracket","","",N,N],[17,"KEY_decimalpoint","","",N,N],[17,"KEY_rightanglebracket","","",N,N],[17,"KEY_marker","","",N,N],[17,"KEY_oneeighth","","",N,N],[17,"KEY_threeeighths","","",N,N],[17,"KEY_fiveeighths","","",N,N],[17,"KEY_seveneighths","","",N,N],[17,"KEY_trademark","","",N,N],[17,"KEY_signaturemark","","",N,N],[17,"KEY_trademarkincircle","","",N,N],[17,"KEY_leftopentriangle","","",N,N],[17,"KEY_rightopentriangle","","",N,N],[17,"KEY_emopencircle","","",N,N],[17,"KEY_emopenrectangle","","",N,N],[17,"KEY_leftsinglequotemark","","",N,N],[17,"KEY_rightsinglequotemark","","",N,N],[17,"KEY_leftdoublequotemark","","",N,N],[17,"KEY_rightdoublequotemark","","",N,N],[17,"KEY_prescription","","",N,N],[17,"KEY_permille","","",N,N],[17,"KEY_minutes","","",N,N],[17,"KEY_seconds","","",N,N],[17,"KEY_latincross","","",N,N],[17,"KEY_hexagram","","",N,N],[17,"KEY_filledrectbullet","","",N,N],[17,"KEY_filledlefttribullet","","",N,N],[17,"KEY_filledrighttribullet","","",N,N],[17,"KEY_emfilledcircle","","",N,N],[17,"KEY_emfilledrect","","",N,N],[17,"KEY_enopencircbullet","","",N,N],[17,"KEY_enopensquarebullet","","",N,N],[17,"KEY_openrectbullet","","",N,N],[17,"KEY_opentribulletup","","",N,N],[17,"KEY_opentribulletdown","","",N,N],[17,"KEY_openstar","","",N,N],[17,"KEY_enfilledcircbullet","","",N,N],[17,"KEY_enfilledsqbullet","","",N,N],[17,"KEY_filledtribulletup","","",N,N],[17,"KEY_filledtribulletdown","","",N,N],[17,"KEY_leftpointer","","",N,N],[17,"KEY_rightpointer","","",N,N],[17,"KEY_club","","",N,N],[17,"KEY_diamond","","",N,N],[17,"KEY_heart","","",N,N],[17,"KEY_maltesecross","","",N,N],[17,"KEY_dagger","","",N,N],[17,"KEY_doubledagger","","",N,N],[17,"KEY_checkmark","","",N,N],[17,"KEY_ballotcross","","",N,N],[17,"KEY_musicalsharp","","",N,N],[17,"KEY_musicalflat","","",N,N],[17,"KEY_malesymbol","","",N,N],[17,"KEY_femalesymbol","","",N,N],[17,"KEY_telephone","","",N,N],[17,"KEY_telephonerecorder","","",N,N],[17,"KEY_phonographcopyright","","",N,N],[17,"KEY_caret","","",N,N],[17,"KEY_singlelowquotemark","","",N,N],[17,"KEY_doublelowquotemark","","",N,N],[17,"KEY_cursor","","",N,N],[17,"KEY_leftcaret","","",N,N],[17,"KEY_rightcaret","","",N,N],[17,"KEY_downcaret","","",N,N],[17,"KEY_upcaret","","",N,N],[17,"KEY_overbar","","",N,N],[17,"KEY_downtack","","",N,N],[17,"KEY_upshoe","","",N,N],[17,"KEY_downstile","","",N,N],[17,"KEY_underbar","","",N,N],[17,"KEY_jot","","",N,N],[17,"KEY_quad","","",N,N],[17,"KEY_uptack","","",N,N],[17,"KEY_circle","","",N,N],[17,"KEY_upstile","","",N,N],[17,"KEY_downshoe","","",N,N],[17,"KEY_rightshoe","","",N,N],[17,"KEY_leftshoe","","",N,N],[17,"KEY_lefttack","","",N,N],[17,"KEY_righttack","","",N,N],[17,"KEY_hebrew_doublelowline","","",N,N],[17,"KEY_hebrew_aleph","","",N,N],[17,"KEY_hebrew_bet","","",N,N],[17,"KEY_hebrew_beth","","",N,N],[17,"KEY_hebrew_gimel","","",N,N],[17,"KEY_hebrew_gimmel","","",N,N],[17,"KEY_hebrew_dalet","","",N,N],[17,"KEY_hebrew_daleth","","",N,N],[17,"KEY_hebrew_he","","",N,N],[17,"KEY_hebrew_waw","","",N,N],[17,"KEY_hebrew_zain","","",N,N],[17,"KEY_hebrew_zayin","","",N,N],[17,"KEY_hebrew_chet","","",N,N],[17,"KEY_hebrew_het","","",N,N],[17,"KEY_hebrew_tet","","",N,N],[17,"KEY_hebrew_teth","","",N,N],[17,"KEY_hebrew_yod","","",N,N],[17,"KEY_hebrew_finalkaph","","",N,N],[17,"KEY_hebrew_kaph","","",N,N],[17,"KEY_hebrew_lamed","","",N,N],[17,"KEY_hebrew_finalmem","","",N,N],[17,"KEY_hebrew_mem","","",N,N],[17,"KEY_hebrew_finalnun","","",N,N],[17,"KEY_hebrew_nun","","",N,N],[17,"KEY_hebrew_samech","","",N,N],[17,"KEY_hebrew_samekh","","",N,N],[17,"KEY_hebrew_ayin","","",N,N],[17,"KEY_hebrew_finalpe","","",N,N],[17,"KEY_hebrew_pe","","",N,N],[17,"KEY_hebrew_finalzade","","",N,N],[17,"KEY_hebrew_finalzadi","","",N,N],[17,"KEY_hebrew_zade","","",N,N],[17,"KEY_hebrew_zadi","","",N,N],[17,"KEY_hebrew_qoph","","",N,N],[17,"KEY_hebrew_kuf","","",N,N],[17,"KEY_hebrew_resh","","",N,N],[17,"KEY_hebrew_shin","","",N,N],[17,"KEY_hebrew_taw","","",N,N],[17,"KEY_hebrew_taf","","",N,N],[17,"KEY_Hebrew_switch","","",N,N],[17,"KEY_Thai_kokai","","",N,N],[17,"KEY_Thai_khokhai","","",N,N],[17,"KEY_Thai_khokhuat","","",N,N],[17,"KEY_Thai_khokhwai","","",N,N],[17,"KEY_Thai_khokhon","","",N,N],[17,"KEY_Thai_khorakhang","","",N,N],[17,"KEY_Thai_ngongu","","",N,N],[17,"KEY_Thai_chochan","","",N,N],[17,"KEY_Thai_choching","","",N,N],[17,"KEY_Thai_chochang","","",N,N],[17,"KEY_Thai_soso","","",N,N],[17,"KEY_Thai_chochoe","","",N,N],[17,"KEY_Thai_yoying","","",N,N],[17,"KEY_Thai_dochada","","",N,N],[17,"KEY_Thai_topatak","","",N,N],[17,"KEY_Thai_thothan","","",N,N],[17,"KEY_Thai_thonangmontho","","",N,N],[17,"KEY_Thai_thophuthao","","",N,N],[17,"KEY_Thai_nonen","","",N,N],[17,"KEY_Thai_dodek","","",N,N],[17,"KEY_Thai_totao","","",N,N],[17,"KEY_Thai_thothung","","",N,N],[17,"KEY_Thai_thothahan","","",N,N],[17,"KEY_Thai_thothong","","",N,N],[17,"KEY_Thai_nonu","","",N,N],[17,"KEY_Thai_bobaimai","","",N,N],[17,"KEY_Thai_popla","","",N,N],[17,"KEY_Thai_phophung","","",N,N],[17,"KEY_Thai_fofa","","",N,N],[17,"KEY_Thai_phophan","","",N,N],[17,"KEY_Thai_fofan","","",N,N],[17,"KEY_Thai_phosamphao","","",N,N],[17,"KEY_Thai_moma","","",N,N],[17,"KEY_Thai_yoyak","","",N,N],[17,"KEY_Thai_rorua","","",N,N],[17,"KEY_Thai_ru","","",N,N],[17,"KEY_Thai_loling","","",N,N],[17,"KEY_Thai_lu","","",N,N],[17,"KEY_Thai_wowaen","","",N,N],[17,"KEY_Thai_sosala","","",N,N],[17,"KEY_Thai_sorusi","","",N,N],[17,"KEY_Thai_sosua","","",N,N],[17,"KEY_Thai_hohip","","",N,N],[17,"KEY_Thai_lochula","","",N,N],[17,"KEY_Thai_oang","","",N,N],[17,"KEY_Thai_honokhuk","","",N,N],[17,"KEY_Thai_paiyannoi","","",N,N],[17,"KEY_Thai_saraa","","",N,N],[17,"KEY_Thai_maihanakat","","",N,N],[17,"KEY_Thai_saraaa","","",N,N],[17,"KEY_Thai_saraam","","",N,N],[17,"KEY_Thai_sarai","","",N,N],[17,"KEY_Thai_saraii","","",N,N],[17,"KEY_Thai_saraue","","",N,N],[17,"KEY_Thai_sarauee","","",N,N],[17,"KEY_Thai_sarau","","",N,N],[17,"KEY_Thai_sarauu","","",N,N],[17,"KEY_Thai_phinthu","","",N,N],[17,"KEY_Thai_maihanakat_maitho","","",N,N],[17,"KEY_Thai_baht","","",N,N],[17,"KEY_Thai_sarae","","",N,N],[17,"KEY_Thai_saraae","","",N,N],[17,"KEY_Thai_sarao","","",N,N],[17,"KEY_Thai_saraaimaimuan","","",N,N],[17,"KEY_Thai_saraaimaimalai","","",N,N],[17,"KEY_Thai_lakkhangyao","","",N,N],[17,"KEY_Thai_maiyamok","","",N,N],[17,"KEY_Thai_maitaikhu","","",N,N],[17,"KEY_Thai_maiek","","",N,N],[17,"KEY_Thai_maitho","","",N,N],[17,"KEY_Thai_maitri","","",N,N],[17,"KEY_Thai_maichattawa","","",N,N],[17,"KEY_Thai_thanthakhat","","",N,N],[17,"KEY_Thai_nikhahit","","",N,N],[17,"KEY_Thai_leksun","","",N,N],[17,"KEY_Thai_leknung","","",N,N],[17,"KEY_Thai_leksong","","",N,N],[17,"KEY_Thai_leksam","","",N,N],[17,"KEY_Thai_leksi","","",N,N],[17,"KEY_Thai_lekha","","",N,N],[17,"KEY_Thai_lekhok","","",N,N],[17,"KEY_Thai_lekchet","","",N,N],[17,"KEY_Thai_lekpaet","","",N,N],[17,"KEY_Thai_lekkao","","",N,N],[17,"KEY_Hangul","","",N,N],[17,"KEY_Hangul_Start","","",N,N],[17,"KEY_Hangul_End","","",N,N],[17,"KEY_Hangul_Hanja","","",N,N],[17,"KEY_Hangul_Jamo","","",N,N],[17,"KEY_Hangul_Romaja","","",N,N],[17,"KEY_Hangul_Codeinput","","",N,N],[17,"KEY_Hangul_Jeonja","","",N,N],[17,"KEY_Hangul_Banja","","",N,N],[17,"KEY_Hangul_PreHanja","","",N,N],[17,"KEY_Hangul_PostHanja","","",N,N],[17,"KEY_Hangul_SingleCandidate","","",N,N],[17,"KEY_Hangul_MultipleCandidate","","",N,N],[17,"KEY_Hangul_PreviousCandidate","","",N,N],[17,"KEY_Hangul_Special","","",N,N],[17,"KEY_Hangul_switch","","",N,N],[17,"KEY_Hangul_Kiyeog","","",N,N],[17,"KEY_Hangul_SsangKiyeog","","",N,N],[17,"KEY_Hangul_KiyeogSios","","",N,N],[17,"KEY_Hangul_Nieun","","",N,N],[17,"KEY_Hangul_NieunJieuj","","",N,N],[17,"KEY_Hangul_NieunHieuh","","",N,N],[17,"KEY_Hangul_Dikeud","","",N,N],[17,"KEY_Hangul_SsangDikeud","","",N,N],[17,"KEY_Hangul_Rieul","","",N,N],[17,"KEY_Hangul_RieulKiyeog","","",N,N],[17,"KEY_Hangul_RieulMieum","","",N,N],[17,"KEY_Hangul_RieulPieub","","",N,N],[17,"KEY_Hangul_RieulSios","","",N,N],[17,"KEY_Hangul_RieulTieut","","",N,N],[17,"KEY_Hangul_RieulPhieuf","","",N,N],[17,"KEY_Hangul_RieulHieuh","","",N,N],[17,"KEY_Hangul_Mieum","","",N,N],[17,"KEY_Hangul_Pieub","","",N,N],[17,"KEY_Hangul_SsangPieub","","",N,N],[17,"KEY_Hangul_PieubSios","","",N,N],[17,"KEY_Hangul_Sios","","",N,N],[17,"KEY_Hangul_SsangSios","","",N,N],[17,"KEY_Hangul_Ieung","","",N,N],[17,"KEY_Hangul_Jieuj","","",N,N],[17,"KEY_Hangul_SsangJieuj","","",N,N],[17,"KEY_Hangul_Cieuc","","",N,N],[17,"KEY_Hangul_Khieuq","","",N,N],[17,"KEY_Hangul_Tieut","","",N,N],[17,"KEY_Hangul_Phieuf","","",N,N],[17,"KEY_Hangul_Hieuh","","",N,N],[17,"KEY_Hangul_A","","",N,N],[17,"KEY_Hangul_AE","","",N,N],[17,"KEY_Hangul_YA","","",N,N],[17,"KEY_Hangul_YAE","","",N,N],[17,"KEY_Hangul_EO","","",N,N],[17,"KEY_Hangul_E","","",N,N],[17,"KEY_Hangul_YEO","","",N,N],[17,"KEY_Hangul_YE","","",N,N],[17,"KEY_Hangul_O","","",N,N],[17,"KEY_Hangul_WA","","",N,N],[17,"KEY_Hangul_WAE","","",N,N],[17,"KEY_Hangul_OE","","",N,N],[17,"KEY_Hangul_YO","","",N,N],[17,"KEY_Hangul_U","","",N,N],[17,"KEY_Hangul_WEO","","",N,N],[17,"KEY_Hangul_WE","","",N,N],[17,"KEY_Hangul_WI","","",N,N],[17,"KEY_Hangul_YU","","",N,N],[17,"KEY_Hangul_EU","","",N,N],[17,"KEY_Hangul_YI","","",N,N],[17,"KEY_Hangul_I","","",N,N],[17,"KEY_Hangul_J_Kiyeog","","",N,N],[17,"KEY_Hangul_J_SsangKiyeog","","",N,N],[17,"KEY_Hangul_J_KiyeogSios","","",N,N],[17,"KEY_Hangul_J_Nieun","","",N,N],[17,"KEY_Hangul_J_NieunJieuj","","",N,N],[17,"KEY_Hangul_J_NieunHieuh","","",N,N],[17,"KEY_Hangul_J_Dikeud","","",N,N],[17,"KEY_Hangul_J_Rieul","","",N,N],[17,"KEY_Hangul_J_RieulKiyeog","","",N,N],[17,"KEY_Hangul_J_RieulMieum","","",N,N],[17,"KEY_Hangul_J_RieulPieub","","",N,N],[17,"KEY_Hangul_J_RieulSios","","",N,N],[17,"KEY_Hangul_J_RieulTieut","","",N,N],[17,"KEY_Hangul_J_RieulPhieuf","","",N,N],[17,"KEY_Hangul_J_RieulHieuh","","",N,N],[17,"KEY_Hangul_J_Mieum","","",N,N],[17,"KEY_Hangul_J_Pieub","","",N,N],[17,"KEY_Hangul_J_PieubSios","","",N,N],[17,"KEY_Hangul_J_Sios","","",N,N],[17,"KEY_Hangul_J_SsangSios","","",N,N],[17,"KEY_Hangul_J_Ieung","","",N,N],[17,"KEY_Hangul_J_Jieuj","","",N,N],[17,"KEY_Hangul_J_Cieuc","","",N,N],[17,"KEY_Hangul_J_Khieuq","","",N,N],[17,"KEY_Hangul_J_Tieut","","",N,N],[17,"KEY_Hangul_J_Phieuf","","",N,N],[17,"KEY_Hangul_J_Hieuh","","",N,N],[17,"KEY_Hangul_RieulYeorinHieuh","","",N,N],[17,"KEY_Hangul_SunkyeongeumMieum","","",N,N],[17,"KEY_Hangul_SunkyeongeumPieub","","",N,N],[17,"KEY_Hangul_PanSios","","",N,N],[17,"KEY_Hangul_KkogjiDalrinIeung","","",N,N],[17,"KEY_Hangul_SunkyeongeumPhieuf","","",N,N],[17,"KEY_Hangul_YeorinHieuh","","",N,N],[17,"KEY_Hangul_AraeA","","",N,N],[17,"KEY_Hangul_AraeAE","","",N,N],[17,"KEY_Hangul_J_PanSios","","",N,N],[17,"KEY_Hangul_J_KkogjiDalrinIeung","","",N,N],[17,"KEY_Hangul_J_YeorinHieuh","","",N,N],[17,"KEY_Korean_Won","","",N,N],[17,"KEY_Armenian_ligature_ew","","",N,N],[17,"KEY_Armenian_full_stop","","",N,N],[17,"KEY_Armenian_verjaket","","",N,N],[17,"KEY_Armenian_separation_mark","","",N,N],[17,"KEY_Armenian_but","","",N,N],[17,"KEY_Armenian_hyphen","","",N,N],[17,"KEY_Armenian_yentamna","","",N,N],[17,"KEY_Armenian_exclam","","",N,N],[17,"KEY_Armenian_amanak","","",N,N],[17,"KEY_Armenian_accent","","",N,N],[17,"KEY_Armenian_shesht","","",N,N],[17,"KEY_Armenian_question","","",N,N],[17,"KEY_Armenian_paruyk","","",N,N],[17,"KEY_Armenian_AYB","","",N,N],[17,"KEY_Armenian_ayb","","",N,N],[17,"KEY_Armenian_BEN","","",N,N],[17,"KEY_Armenian_ben","","",N,N],[17,"KEY_Armenian_GIM","","",N,N],[17,"KEY_Armenian_gim","","",N,N],[17,"KEY_Armenian_DA","","",N,N],[17,"KEY_Armenian_da","","",N,N],[17,"KEY_Armenian_YECH","","",N,N],[17,"KEY_Armenian_yech","","",N,N],[17,"KEY_Armenian_ZA","","",N,N],[17,"KEY_Armenian_za","","",N,N],[17,"KEY_Armenian_E","","",N,N],[17,"KEY_Armenian_e","","",N,N],[17,"KEY_Armenian_AT","","",N,N],[17,"KEY_Armenian_at","","",N,N],[17,"KEY_Armenian_TO","","",N,N],[17,"KEY_Armenian_to","","",N,N],[17,"KEY_Armenian_ZHE","","",N,N],[17,"KEY_Armenian_zhe","","",N,N],[17,"KEY_Armenian_INI","","",N,N],[17,"KEY_Armenian_ini","","",N,N],[17,"KEY_Armenian_LYUN","","",N,N],[17,"KEY_Armenian_lyun","","",N,N],[17,"KEY_Armenian_KHE","","",N,N],[17,"KEY_Armenian_khe","","",N,N],[17,"KEY_Armenian_TSA","","",N,N],[17,"KEY_Armenian_tsa","","",N,N],[17,"KEY_Armenian_KEN","","",N,N],[17,"KEY_Armenian_ken","","",N,N],[17,"KEY_Armenian_HO","","",N,N],[17,"KEY_Armenian_ho","","",N,N],[17,"KEY_Armenian_DZA","","",N,N],[17,"KEY_Armenian_dza","","",N,N],[17,"KEY_Armenian_GHAT","","",N,N],[17,"KEY_Armenian_ghat","","",N,N],[17,"KEY_Armenian_TCHE","","",N,N],[17,"KEY_Armenian_tche","","",N,N],[17,"KEY_Armenian_MEN","","",N,N],[17,"KEY_Armenian_men","","",N,N],[17,"KEY_Armenian_HI","","",N,N],[17,"KEY_Armenian_hi","","",N,N],[17,"KEY_Armenian_NU","","",N,N],[17,"KEY_Armenian_nu","","",N,N],[17,"KEY_Armenian_SHA","","",N,N],[17,"KEY_Armenian_sha","","",N,N],[17,"KEY_Armenian_VO","","",N,N],[17,"KEY_Armenian_vo","","",N,N],[17,"KEY_Armenian_CHA","","",N,N],[17,"KEY_Armenian_cha","","",N,N],[17,"KEY_Armenian_PE","","",N,N],[17,"KEY_Armenian_pe","","",N,N],[17,"KEY_Armenian_JE","","",N,N],[17,"KEY_Armenian_je","","",N,N],[17,"KEY_Armenian_RA","","",N,N],[17,"KEY_Armenian_ra","","",N,N],[17,"KEY_Armenian_SE","","",N,N],[17,"KEY_Armenian_se","","",N,N],[17,"KEY_Armenian_VEV","","",N,N],[17,"KEY_Armenian_vev","","",N,N],[17,"KEY_Armenian_TYUN","","",N,N],[17,"KEY_Armenian_tyun","","",N,N],[17,"KEY_Armenian_RE","","",N,N],[17,"KEY_Armenian_re","","",N,N],[17,"KEY_Armenian_TSO","","",N,N],[17,"KEY_Armenian_tso","","",N,N],[17,"KEY_Armenian_VYUN","","",N,N],[17,"KEY_Armenian_vyun","","",N,N],[17,"KEY_Armenian_PYUR","","",N,N],[17,"KEY_Armenian_pyur","","",N,N],[17,"KEY_Armenian_KE","","",N,N],[17,"KEY_Armenian_ke","","",N,N],[17,"KEY_Armenian_O","","",N,N],[17,"KEY_Armenian_o","","",N,N],[17,"KEY_Armenian_FE","","",N,N],[17,"KEY_Armenian_fe","","",N,N],[17,"KEY_Armenian_apostrophe","","",N,N],[17,"KEY_Georgian_an","","",N,N],[17,"KEY_Georgian_ban","","",N,N],[17,"KEY_Georgian_gan","","",N,N],[17,"KEY_Georgian_don","","",N,N],[17,"KEY_Georgian_en","","",N,N],[17,"KEY_Georgian_vin","","",N,N],[17,"KEY_Georgian_zen","","",N,N],[17,"KEY_Georgian_tan","","",N,N],[17,"KEY_Georgian_in","","",N,N],[17,"KEY_Georgian_kan","","",N,N],[17,"KEY_Georgian_las","","",N,N],[17,"KEY_Georgian_man","","",N,N],[17,"KEY_Georgian_nar","","",N,N],[17,"KEY_Georgian_on","","",N,N],[17,"KEY_Georgian_par","","",N,N],[17,"KEY_Georgian_zhar","","",N,N],[17,"KEY_Georgian_rae","","",N,N],[17,"KEY_Georgian_san","","",N,N],[17,"KEY_Georgian_tar","","",N,N],[17,"KEY_Georgian_un","","",N,N],[17,"KEY_Georgian_phar","","",N,N],[17,"KEY_Georgian_khar","","",N,N],[17,"KEY_Georgian_ghan","","",N,N],[17,"KEY_Georgian_qar","","",N,N],[17,"KEY_Georgian_shin","","",N,N],[17,"KEY_Georgian_chin","","",N,N],[17,"KEY_Georgian_can","","",N,N],[17,"KEY_Georgian_jil","","",N,N],[17,"KEY_Georgian_cil","","",N,N],[17,"KEY_Georgian_char","","",N,N],[17,"KEY_Georgian_xan","","",N,N],[17,"KEY_Georgian_jhan","","",N,N],[17,"KEY_Georgian_hae","","",N,N],[17,"KEY_Georgian_he","","",N,N],[17,"KEY_Georgian_hie","","",N,N],[17,"KEY_Georgian_we","","",N,N],[17,"KEY_Georgian_har","","",N,N],[17,"KEY_Georgian_hoe","","",N,N],[17,"KEY_Georgian_fi","","",N,N],[17,"KEY_Xabovedot","","",N,N],[17,"KEY_Ibreve","","",N,N],[17,"KEY_Zstroke","","",N,N],[17,"KEY_Gcaron","","",N,N],[17,"KEY_Ocaron","","",N,N],[17,"KEY_Obarred","","",N,N],[17,"KEY_xabovedot","","",N,N],[17,"KEY_ibreve","","",N,N],[17,"KEY_zstroke","","",N,N],[17,"KEY_gcaron","","",N,N],[17,"KEY_ocaron","","",N,N],[17,"KEY_obarred","","",N,N],[17,"KEY_SCHWA","","",N,N],[17,"KEY_schwa","","",N,N],[17,"KEY_EZH","","",N,N],[17,"KEY_ezh","","",N,N],[17,"KEY_Lbelowdot","","",N,N],[17,"KEY_lbelowdot","","",N,N],[17,"KEY_Abelowdot","","",N,N],[17,"KEY_abelowdot","","",N,N],[17,"KEY_Ahook","","",N,N],[17,"KEY_ahook","","",N,N],[17,"KEY_Acircumflexacute","","",N,N],[17,"KEY_acircumflexacute","","",N,N],[17,"KEY_Acircumflexgrave","","",N,N],[17,"KEY_acircumflexgrave","","",N,N],[17,"KEY_Acircumflexhook","","",N,N],[17,"KEY_acircumflexhook","","",N,N],[17,"KEY_Acircumflextilde","","",N,N],[17,"KEY_acircumflextilde","","",N,N],[17,"KEY_Acircumflexbelowdot","","",N,N],[17,"KEY_acircumflexbelowdot","","",N,N],[17,"KEY_Abreveacute","","",N,N],[17,"KEY_abreveacute","","",N,N],[17,"KEY_Abrevegrave","","",N,N],[17,"KEY_abrevegrave","","",N,N],[17,"KEY_Abrevehook","","",N,N],[17,"KEY_abrevehook","","",N,N],[17,"KEY_Abrevetilde","","",N,N],[17,"KEY_abrevetilde","","",N,N],[17,"KEY_Abrevebelowdot","","",N,N],[17,"KEY_abrevebelowdot","","",N,N],[17,"KEY_Ebelowdot","","",N,N],[17,"KEY_ebelowdot","","",N,N],[17,"KEY_Ehook","","",N,N],[17,"KEY_ehook","","",N,N],[17,"KEY_Etilde","","",N,N],[17,"KEY_etilde","","",N,N],[17,"KEY_Ecircumflexacute","","",N,N],[17,"KEY_ecircumflexacute","","",N,N],[17,"KEY_Ecircumflexgrave","","",N,N],[17,"KEY_ecircumflexgrave","","",N,N],[17,"KEY_Ecircumflexhook","","",N,N],[17,"KEY_ecircumflexhook","","",N,N],[17,"KEY_Ecircumflextilde","","",N,N],[17,"KEY_ecircumflextilde","","",N,N],[17,"KEY_Ecircumflexbelowdot","","",N,N],[17,"KEY_ecircumflexbelowdot","","",N,N],[17,"KEY_Ihook","","",N,N],[17,"KEY_ihook","","",N,N],[17,"KEY_Ibelowdot","","",N,N],[17,"KEY_ibelowdot","","",N,N],[17,"KEY_Obelowdot","","",N,N],[17,"KEY_obelowdot","","",N,N],[17,"KEY_Ohook","","",N,N],[17,"KEY_ohook","","",N,N],[17,"KEY_Ocircumflexacute","","",N,N],[17,"KEY_ocircumflexacute","","",N,N],[17,"KEY_Ocircumflexgrave","","",N,N],[17,"KEY_ocircumflexgrave","","",N,N],[17,"KEY_Ocircumflexhook","","",N,N],[17,"KEY_ocircumflexhook","","",N,N],[17,"KEY_Ocircumflextilde","","",N,N],[17,"KEY_ocircumflextilde","","",N,N],[17,"KEY_Ocircumflexbelowdot","","",N,N],[17,"KEY_ocircumflexbelowdot","","",N,N],[17,"KEY_Ohornacute","","",N,N],[17,"KEY_ohornacute","","",N,N],[17,"KEY_Ohorngrave","","",N,N],[17,"KEY_ohorngrave","","",N,N],[17,"KEY_Ohornhook","","",N,N],[17,"KEY_ohornhook","","",N,N],[17,"KEY_Ohorntilde","","",N,N],[17,"KEY_ohorntilde","","",N,N],[17,"KEY_Ohornbelowdot","","",N,N],[17,"KEY_ohornbelowdot","","",N,N],[17,"KEY_Ubelowdot","","",N,N],[17,"KEY_ubelowdot","","",N,N],[17,"KEY_Uhook","","",N,N],[17,"KEY_uhook","","",N,N],[17,"KEY_Uhornacute","","",N,N],[17,"KEY_uhornacute","","",N,N],[17,"KEY_Uhorngrave","","",N,N],[17,"KEY_uhorngrave","","",N,N],[17,"KEY_Uhornhook","","",N,N],[17,"KEY_uhornhook","","",N,N],[17,"KEY_Uhorntilde","","",N,N],[17,"KEY_uhorntilde","","",N,N],[17,"KEY_Uhornbelowdot","","",N,N],[17,"KEY_uhornbelowdot","","",N,N],[17,"KEY_Ybelowdot","","",N,N],[17,"KEY_ybelowdot","","",N,N],[17,"KEY_Yhook","","",N,N],[17,"KEY_yhook","","",N,N],[17,"KEY_Ytilde","","",N,N],[17,"KEY_ytilde","","",N,N],[17,"KEY_Ohorn","","",N,N],[17,"KEY_ohorn","","",N,N],[17,"KEY_Uhorn","","",N,N],[17,"KEY_uhorn","","",N,N],[17,"KEY_EcuSign","","",N,N],[17,"KEY_ColonSign","","",N,N],[17,"KEY_CruzeiroSign","","",N,N],[17,"KEY_FFrancSign","","",N,N],[17,"KEY_LiraSign","","",N,N],[17,"KEY_MillSign","","",N,N],[17,"KEY_NairaSign","","",N,N],[17,"KEY_PesetaSign","","",N,N],[17,"KEY_RupeeSign","","",N,N],[17,"KEY_WonSign","","",N,N],[17,"KEY_NewSheqelSign","","",N,N],[17,"KEY_DongSign","","",N,N],[17,"KEY_EuroSign","","",N,N],[17,"KEY_zerosuperior","","",N,N],[17,"KEY_foursuperior","","",N,N],[17,"KEY_fivesuperior","","",N,N],[17,"KEY_sixsuperior","","",N,N],[17,"KEY_sevensuperior","","",N,N],[17,"KEY_eightsuperior","","",N,N],[17,"KEY_ninesuperior","","",N,N],[17,"KEY_zerosubscript","","",N,N],[17,"KEY_onesubscript","","",N,N],[17,"KEY_twosubscript","","",N,N],[17,"KEY_threesubscript","","",N,N],[17,"KEY_foursubscript","","",N,N],[17,"KEY_fivesubscript","","",N,N],[17,"KEY_sixsubscript","","",N,N],[17,"KEY_sevensubscript","","",N,N],[17,"KEY_eightsubscript","","",N,N],[17,"KEY_ninesubscript","","",N,N],[17,"KEY_partdifferential","","",N,N],[17,"KEY_emptyset","","",N,N],[17,"KEY_elementof","","",N,N],[17,"KEY_notelementof","","",N,N],[17,"KEY_containsas","","",N,N],[17,"KEY_squareroot","","",N,N],[17,"KEY_cuberoot","","",N,N],[17,"KEY_fourthroot","","",N,N],[17,"KEY_dintegral","","",N,N],[17,"KEY_tintegral","","",N,N],[17,"KEY_because","","",N,N],[17,"KEY_approxeq","","",N,N],[17,"KEY_notapproxeq","","",N,N],[17,"KEY_notidentical","","",N,N],[17,"KEY_stricteq","","",N,N],[17,"KEY_braille_dot_1","","",N,N],[17,"KEY_braille_dot_2","","",N,N],[17,"KEY_braille_dot_3","","",N,N],[17,"KEY_braille_dot_4","","",N,N],[17,"KEY_braille_dot_5","","",N,N],[17,"KEY_braille_dot_6","","",N,N],[17,"KEY_braille_dot_7","","",N,N],[17,"KEY_braille_dot_8","","",N,N],[17,"KEY_braille_dot_9","","",N,N],[17,"KEY_braille_dot_10","","",N,N],[17,"KEY_braille_blank","","",N,N],[17,"KEY_braille_dots_1","","",N,N],[17,"KEY_braille_dots_2","","",N,N],[17,"KEY_braille_dots_12","","",N,N],[17,"KEY_braille_dots_3","","",N,N],[17,"KEY_braille_dots_13","","",N,N],[17,"KEY_braille_dots_23","","",N,N],[17,"KEY_braille_dots_123","","",N,N],[17,"KEY_braille_dots_4","","",N,N],[17,"KEY_braille_dots_14","","",N,N],[17,"KEY_braille_dots_24","","",N,N],[17,"KEY_braille_dots_124","","",N,N],[17,"KEY_braille_dots_34","","",N,N],[17,"KEY_braille_dots_134","","",N,N],[17,"KEY_braille_dots_234","","",N,N],[17,"KEY_braille_dots_1234","","",N,N],[17,"KEY_braille_dots_5","","",N,N],[17,"KEY_braille_dots_15","","",N,N],[17,"KEY_braille_dots_25","","",N,N],[17,"KEY_braille_dots_125","","",N,N],[17,"KEY_braille_dots_35","","",N,N],[17,"KEY_braille_dots_135","","",N,N],[17,"KEY_braille_dots_235","","",N,N],[17,"KEY_braille_dots_1235","","",N,N],[17,"KEY_braille_dots_45","","",N,N],[17,"KEY_braille_dots_145","","",N,N],[17,"KEY_braille_dots_245","","",N,N],[17,"KEY_braille_dots_1245","","",N,N],[17,"KEY_braille_dots_345","","",N,N],[17,"KEY_braille_dots_1345","","",N,N],[17,"KEY_braille_dots_2345","","",N,N],[17,"KEY_braille_dots_12345","","",N,N],[17,"KEY_braille_dots_6","","",N,N],[17,"KEY_braille_dots_16","","",N,N],[17,"KEY_braille_dots_26","","",N,N],[17,"KEY_braille_dots_126","","",N,N],[17,"KEY_braille_dots_36","","",N,N],[17,"KEY_braille_dots_136","","",N,N],[17,"KEY_braille_dots_236","","",N,N],[17,"KEY_braille_dots_1236","","",N,N],[17,"KEY_braille_dots_46","","",N,N],[17,"KEY_braille_dots_146","","",N,N],[17,"KEY_braille_dots_246","","",N,N],[17,"KEY_braille_dots_1246","","",N,N],[17,"KEY_braille_dots_346","","",N,N],[17,"KEY_braille_dots_1346","","",N,N],[17,"KEY_braille_dots_2346","","",N,N],[17,"KEY_braille_dots_12346","","",N,N],[17,"KEY_braille_dots_56","","",N,N],[17,"KEY_braille_dots_156","","",N,N],[17,"KEY_braille_dots_256","","",N,N],[17,"KEY_braille_dots_1256","","",N,N],[17,"KEY_braille_dots_356","","",N,N],[17,"KEY_braille_dots_1356","","",N,N],[17,"KEY_braille_dots_2356","","",N,N],[17,"KEY_braille_dots_12356","","",N,N],[17,"KEY_braille_dots_456","","",N,N],[17,"KEY_braille_dots_1456","","",N,N],[17,"KEY_braille_dots_2456","","",N,N],[17,"KEY_braille_dots_12456","","",N,N],[17,"KEY_braille_dots_3456","","",N,N],[17,"KEY_braille_dots_13456","","",N,N],[17,"KEY_braille_dots_23456","","",N,N],[17,"KEY_braille_dots_123456","","",N,N],[17,"KEY_braille_dots_7","","",N,N],[17,"KEY_braille_dots_17","","",N,N],[17,"KEY_braille_dots_27","","",N,N],[17,"KEY_braille_dots_127","","",N,N],[17,"KEY_braille_dots_37","","",N,N],[17,"KEY_braille_dots_137","","",N,N],[17,"KEY_braille_dots_237","","",N,N],[17,"KEY_braille_dots_1237","","",N,N],[17,"KEY_braille_dots_47","","",N,N],[17,"KEY_braille_dots_147","","",N,N],[17,"KEY_braille_dots_247","","",N,N],[17,"KEY_braille_dots_1247","","",N,N],[17,"KEY_braille_dots_347","","",N,N],[17,"KEY_braille_dots_1347","","",N,N],[17,"KEY_braille_dots_2347","","",N,N],[17,"KEY_braille_dots_12347","","",N,N],[17,"KEY_braille_dots_57","","",N,N],[17,"KEY_braille_dots_157","","",N,N],[17,"KEY_braille_dots_257","","",N,N],[17,"KEY_braille_dots_1257","","",N,N],[17,"KEY_braille_dots_357","","",N,N],[17,"KEY_braille_dots_1357","","",N,N],[17,"KEY_braille_dots_2357","","",N,N],[17,"KEY_braille_dots_12357","","",N,N],[17,"KEY_braille_dots_457","","",N,N],[17,"KEY_braille_dots_1457","","",N,N],[17,"KEY_braille_dots_2457","","",N,N],[17,"KEY_braille_dots_12457","","",N,N],[17,"KEY_braille_dots_3457","","",N,N],[17,"KEY_braille_dots_13457","","",N,N],[17,"KEY_braille_dots_23457","","",N,N],[17,"KEY_braille_dots_123457","","",N,N],[17,"KEY_braille_dots_67","","",N,N],[17,"KEY_braille_dots_167","","",N,N],[17,"KEY_braille_dots_267","","",N,N],[17,"KEY_braille_dots_1267","","",N,N],[17,"KEY_braille_dots_367","","",N,N],[17,"KEY_braille_dots_1367","","",N,N],[17,"KEY_braille_dots_2367","","",N,N],[17,"KEY_braille_dots_12367","","",N,N],[17,"KEY_braille_dots_467","","",N,N],[17,"KEY_braille_dots_1467","","",N,N],[17,"KEY_braille_dots_2467","","",N,N],[17,"KEY_braille_dots_12467","","",N,N],[17,"KEY_braille_dots_3467","","",N,N],[17,"KEY_braille_dots_13467","","",N,N],[17,"KEY_braille_dots_23467","","",N,N],[17,"KEY_braille_dots_123467","","",N,N],[17,"KEY_braille_dots_567","","",N,N],[17,"KEY_braille_dots_1567","","",N,N],[17,"KEY_braille_dots_2567","","",N,N],[17,"KEY_braille_dots_12567","","",N,N],[17,"KEY_braille_dots_3567","","",N,N],[17,"KEY_braille_dots_13567","","",N,N],[17,"KEY_braille_dots_23567","","",N,N],[17,"KEY_braille_dots_123567","","",N,N],[17,"KEY_braille_dots_4567","","",N,N],[17,"KEY_braille_dots_14567","","",N,N],[17,"KEY_braille_dots_24567","","",N,N],[17,"KEY_braille_dots_124567","","",N,N],[17,"KEY_braille_dots_34567","","",N,N],[17,"KEY_braille_dots_134567","","",N,N],[17,"KEY_braille_dots_234567","","",N,N],[17,"KEY_braille_dots_1234567","","",N,N],[17,"KEY_braille_dots_8","","",N,N],[17,"KEY_braille_dots_18","","",N,N],[17,"KEY_braille_dots_28","","",N,N],[17,"KEY_braille_dots_128","","",N,N],[17,"KEY_braille_dots_38","","",N,N],[17,"KEY_braille_dots_138","","",N,N],[17,"KEY_braille_dots_238","","",N,N],[17,"KEY_braille_dots_1238","","",N,N],[17,"KEY_braille_dots_48","","",N,N],[17,"KEY_braille_dots_148","","",N,N],[17,"KEY_braille_dots_248","","",N,N],[17,"KEY_braille_dots_1248","","",N,N],[17,"KEY_braille_dots_348","","",N,N],[17,"KEY_braille_dots_1348","","",N,N],[17,"KEY_braille_dots_2348","","",N,N],[17,"KEY_braille_dots_12348","","",N,N],[17,"KEY_braille_dots_58","","",N,N],[17,"KEY_braille_dots_158","","",N,N],[17,"KEY_braille_dots_258","","",N,N],[17,"KEY_braille_dots_1258","","",N,N],[17,"KEY_braille_dots_358","","",N,N],[17,"KEY_braille_dots_1358","","",N,N],[17,"KEY_braille_dots_2358","","",N,N],[17,"KEY_braille_dots_12358","","",N,N],[17,"KEY_braille_dots_458","","",N,N],[17,"KEY_braille_dots_1458","","",N,N],[17,"KEY_braille_dots_2458","","",N,N],[17,"KEY_braille_dots_12458","","",N,N],[17,"KEY_braille_dots_3458","","",N,N],[17,"KEY_braille_dots_13458","","",N,N],[17,"KEY_braille_dots_23458","","",N,N],[17,"KEY_braille_dots_123458","","",N,N],[17,"KEY_braille_dots_68","","",N,N],[17,"KEY_braille_dots_168","","",N,N],[17,"KEY_braille_dots_268","","",N,N],[17,"KEY_braille_dots_1268","","",N,N],[17,"KEY_braille_dots_368","","",N,N],[17,"KEY_braille_dots_1368","","",N,N],[17,"KEY_braille_dots_2368","","",N,N],[17,"KEY_braille_dots_12368","","",N,N],[17,"KEY_braille_dots_468","","",N,N],[17,"KEY_braille_dots_1468","","",N,N],[17,"KEY_braille_dots_2468","","",N,N],[17,"KEY_braille_dots_12468","","",N,N],[17,"KEY_braille_dots_3468","","",N,N],[17,"KEY_braille_dots_13468","","",N,N],[17,"KEY_braille_dots_23468","","",N,N],[17,"KEY_braille_dots_123468","","",N,N],[17,"KEY_braille_dots_568","","",N,N],[17,"KEY_braille_dots_1568","","",N,N],[17,"KEY_braille_dots_2568","","",N,N],[17,"KEY_braille_dots_12568","","",N,N],[17,"KEY_braille_dots_3568","","",N,N],[17,"KEY_braille_dots_13568","","",N,N],[17,"KEY_braille_dots_23568","","",N,N],[17,"KEY_braille_dots_123568","","",N,N],[17,"KEY_braille_dots_4568","","",N,N],[17,"KEY_braille_dots_14568","","",N,N],[17,"KEY_braille_dots_24568","","",N,N],[17,"KEY_braille_dots_124568","","",N,N],[17,"KEY_braille_dots_34568","","",N,N],[17,"KEY_braille_dots_134568","","",N,N],[17,"KEY_braille_dots_234568","","",N,N],[17,"KEY_braille_dots_1234568","","",N,N],[17,"KEY_braille_dots_78","","",N,N],[17,"KEY_braille_dots_178","","",N,N],[17,"KEY_braille_dots_278","","",N,N],[17,"KEY_braille_dots_1278","","",N,N],[17,"KEY_braille_dots_378","","",N,N],[17,"KEY_braille_dots_1378","","",N,N],[17,"KEY_braille_dots_2378","","",N,N],[17,"KEY_braille_dots_12378","","",N,N],[17,"KEY_braille_dots_478","","",N,N],[17,"KEY_braille_dots_1478","","",N,N],[17,"KEY_braille_dots_2478","","",N,N],[17,"KEY_braille_dots_12478","","",N,N],[17,"KEY_braille_dots_3478","","",N,N],[17,"KEY_braille_dots_13478","","",N,N],[17,"KEY_braille_dots_23478","","",N,N],[17,"KEY_braille_dots_123478","","",N,N],[17,"KEY_braille_dots_578","","",N,N],[17,"KEY_braille_dots_1578","","",N,N],[17,"KEY_braille_dots_2578","","",N,N],[17,"KEY_braille_dots_12578","","",N,N],[17,"KEY_braille_dots_3578","","",N,N],[17,"KEY_braille_dots_13578","","",N,N],[17,"KEY_braille_dots_23578","","",N,N],[17,"KEY_braille_dots_123578","","",N,N],[17,"KEY_braille_dots_4578","","",N,N],[17,"KEY_braille_dots_14578","","",N,N],[17,"KEY_braille_dots_24578","","",N,N],[17,"KEY_braille_dots_124578","","",N,N],[17,"KEY_braille_dots_34578","","",N,N],[17,"KEY_braille_dots_134578","","",N,N],[17,"KEY_braille_dots_234578","","",N,N],[17,"KEY_braille_dots_1234578","","",N,N],[17,"KEY_braille_dots_678","","",N,N],[17,"KEY_braille_dots_1678","","",N,N],[17,"KEY_braille_dots_2678","","",N,N],[17,"KEY_braille_dots_12678","","",N,N],[17,"KEY_braille_dots_3678","","",N,N],[17,"KEY_braille_dots_13678","","",N,N],[17,"KEY_braille_dots_23678","","",N,N],[17,"KEY_braille_dots_123678","","",N,N],[17,"KEY_braille_dots_4678","","",N,N],[17,"KEY_braille_dots_14678","","",N,N],[17,"KEY_braille_dots_24678","","",N,N],[17,"KEY_braille_dots_124678","","",N,N],[17,"KEY_braille_dots_34678","","",N,N],[17,"KEY_braille_dots_134678","","",N,N],[17,"KEY_braille_dots_234678","","",N,N],[17,"KEY_braille_dots_1234678","","",N,N],[17,"KEY_braille_dots_5678","","",N,N],[17,"KEY_braille_dots_15678","","",N,N],[17,"KEY_braille_dots_25678","","",N,N],[17,"KEY_braille_dots_125678","","",N,N],[17,"KEY_braille_dots_35678","","",N,N],[17,"KEY_braille_dots_135678","","",N,N],[17,"KEY_braille_dots_235678","","",N,N],[17,"KEY_braille_dots_1235678","","",N,N],[17,"KEY_braille_dots_45678","","",N,N],[17,"KEY_braille_dots_145678","","",N,N],[17,"KEY_braille_dots_245678","","",N,N],[17,"KEY_braille_dots_1245678","","",N,N],[17,"KEY_braille_dots_345678","","",N,N],[17,"KEY_braille_dots_1345678","","",N,N],[17,"KEY_braille_dots_2345678","","",N,N],[17,"KEY_braille_dots_12345678","","",N,N],[17,"KEY_Sinh_ng","","",N,N],[17,"KEY_Sinh_h2","","",N,N],[17,"KEY_Sinh_a","","",N,N],[17,"KEY_Sinh_aa","","",N,N],[17,"KEY_Sinh_ae","","",N,N],[17,"KEY_Sinh_aee","","",N,N],[17,"KEY_Sinh_i","","",N,N],[17,"KEY_Sinh_ii","","",N,N],[17,"KEY_Sinh_u","","",N,N],[17,"KEY_Sinh_uu","","",N,N],[17,"KEY_Sinh_ri","","",N,N],[17,"KEY_Sinh_rii","","",N,N],[17,"KEY_Sinh_lu","","",N,N],[17,"KEY_Sinh_luu","","",N,N],[17,"KEY_Sinh_e","","",N,N],[17,"KEY_Sinh_ee","","",N,N],[17,"KEY_Sinh_ai","","",N,N],[17,"KEY_Sinh_o","","",N,N],[17,"KEY_Sinh_oo","","",N,N],[17,"KEY_Sinh_au","","",N,N],[17,"KEY_Sinh_ka","","",N,N],[17,"KEY_Sinh_kha","","",N,N],[17,"KEY_Sinh_ga","","",N,N],[17,"KEY_Sinh_gha","","",N,N],[17,"KEY_Sinh_ng2","","",N,N],[17,"KEY_Sinh_nga","","",N,N],[17,"KEY_Sinh_ca","","",N,N],[17,"KEY_Sinh_cha","","",N,N],[17,"KEY_Sinh_ja","","",N,N],[17,"KEY_Sinh_jha","","",N,N],[17,"KEY_Sinh_nya","","",N,N],[17,"KEY_Sinh_jnya","","",N,N],[17,"KEY_Sinh_nja","","",N,N],[17,"KEY_Sinh_tta","","",N,N],[17,"KEY_Sinh_ttha","","",N,N],[17,"KEY_Sinh_dda","","",N,N],[17,"KEY_Sinh_ddha","","",N,N],[17,"KEY_Sinh_nna","","",N,N],[17,"KEY_Sinh_ndda","","",N,N],[17,"KEY_Sinh_tha","","",N,N],[17,"KEY_Sinh_thha","","",N,N],[17,"KEY_Sinh_dha","","",N,N],[17,"KEY_Sinh_dhha","","",N,N],[17,"KEY_Sinh_na","","",N,N],[17,"KEY_Sinh_ndha","","",N,N],[17,"KEY_Sinh_pa","","",N,N],[17,"KEY_Sinh_pha","","",N,N],[17,"KEY_Sinh_ba","","",N,N],[17,"KEY_Sinh_bha","","",N,N],[17,"KEY_Sinh_ma","","",N,N],[17,"KEY_Sinh_mba","","",N,N],[17,"KEY_Sinh_ya","","",N,N],[17,"KEY_Sinh_ra","","",N,N],[17,"KEY_Sinh_la","","",N,N],[17,"KEY_Sinh_va","","",N,N],[17,"KEY_Sinh_sha","","",N,N],[17,"KEY_Sinh_ssha","","",N,N],[17,"KEY_Sinh_sa","","",N,N],[17,"KEY_Sinh_ha","","",N,N],[17,"KEY_Sinh_lla","","",N,N],[17,"KEY_Sinh_fa","","",N,N],[17,"KEY_Sinh_al","","",N,N],[17,"KEY_Sinh_aa2","","",N,N],[17,"KEY_Sinh_ae2","","",N,N],[17,"KEY_Sinh_aee2","","",N,N],[17,"KEY_Sinh_i2","","",N,N],[17,"KEY_Sinh_ii2","","",N,N],[17,"KEY_Sinh_u2","","",N,N],[17,"KEY_Sinh_uu2","","",N,N],[17,"KEY_Sinh_ru2","","",N,N],[17,"KEY_Sinh_e2","","",N,N],[17,"KEY_Sinh_ee2","","",N,N],[17,"KEY_Sinh_ai2","","",N,N],[17,"KEY_Sinh_o2","","",N,N],[17,"KEY_Sinh_oo2","","",N,N],[17,"KEY_Sinh_au2","","",N,N],[17,"KEY_Sinh_lu2","","",N,N],[17,"KEY_Sinh_ruu2","","",N,N],[17,"KEY_Sinh_luu2","","",N,N],[17,"KEY_Sinh_kunddaliya","","",N,N],[17,"KEY_XF86ModeLock","","",N,N],[17,"KEY_XF86MonBrightnessUp","","",N,N],[17,"KEY_XF86MonBrightnessDown","","",N,N],[17,"KEY_XF86KbdLightOnOff","","",N,N],[17,"KEY_XF86KbdBrightnessUp","","",N,N],[17,"KEY_XF86KbdBrightnessDown","","",N,N],[17,"KEY_XF86Standby","","",N,N],[17,"KEY_XF86AudioLowerVolume","","",N,N],[17,"KEY_XF86AudioMute","","",N,N],[17,"KEY_XF86AudioRaiseVolume","","",N,N],[17,"KEY_XF86AudioPlay","","",N,N],[17,"KEY_XF86AudioStop","","",N,N],[17,"KEY_XF86AudioPrev","","",N,N],[17,"KEY_XF86AudioNext","","",N,N],[17,"KEY_XF86HomePage","","",N,N],[17,"KEY_XF86Mail","","",N,N],[17,"KEY_XF86Start","","",N,N],[17,"KEY_XF86Search","","",N,N],[17,"KEY_XF86AudioRecord","","",N,N],[17,"KEY_XF86Calculator","","",N,N],[17,"KEY_XF86Memo","","",N,N],[17,"KEY_XF86ToDoList","","",N,N],[17,"KEY_XF86Calendar","","",N,N],[17,"KEY_XF86PowerDown","","",N,N],[17,"KEY_XF86ContrastAdjust","","",N,N],[17,"KEY_XF86RockerUp","","",N,N],[17,"KEY_XF86RockerDown","","",N,N],[17,"KEY_XF86RockerEnter","","",N,N],[17,"KEY_XF86Back","","",N,N],[17,"KEY_XF86Forward","","",N,N],[17,"KEY_XF86Stop","","",N,N],[17,"KEY_XF86Refresh","","",N,N],[17,"KEY_XF86PowerOff","","",N,N],[17,"KEY_XF86WakeUp","","",N,N],[17,"KEY_XF86Eject","","",N,N],[17,"KEY_XF86ScreenSaver","","",N,N],[17,"KEY_XF86WWW","","",N,N],[17,"KEY_XF86Sleep","","",N,N],[17,"KEY_XF86Favorites","","",N,N],[17,"KEY_XF86AudioPause","","",N,N],[17,"KEY_XF86AudioMedia","","",N,N],[17,"KEY_XF86MyComputer","","",N,N],[17,"KEY_XF86VendorHome","","",N,N],[17,"KEY_XF86LightBulb","","",N,N],[17,"KEY_XF86Shop","","",N,N],[17,"KEY_XF86History","","",N,N],[17,"KEY_XF86OpenURL","","",N,N],[17,"KEY_XF86AddFavorite","","",N,N],[17,"KEY_XF86HotLinks","","",N,N],[17,"KEY_XF86BrightnessAdjust","","",N,N],[17,"KEY_XF86Finance","","",N,N],[17,"KEY_XF86Community","","",N,N],[17,"KEY_XF86AudioRewind","","",N,N],[17,"KEY_XF86BackForward","","",N,N],[17,"KEY_XF86Launch0","","",N,N],[17,"KEY_XF86Launch1","","",N,N],[17,"KEY_XF86Launch2","","",N,N],[17,"KEY_XF86Launch3","","",N,N],[17,"KEY_XF86Launch4","","",N,N],[17,"KEY_XF86Launch5","","",N,N],[17,"KEY_XF86Launch6","","",N,N],[17,"KEY_XF86Launch7","","",N,N],[17,"KEY_XF86Launch8","","",N,N],[17,"KEY_XF86Launch9","","",N,N],[17,"KEY_XF86LaunchA","","",N,N],[17,"KEY_XF86LaunchB","","",N,N],[17,"KEY_XF86LaunchC","","",N,N],[17,"KEY_XF86LaunchD","","",N,N],[17,"KEY_XF86LaunchE","","",N,N],[17,"KEY_XF86LaunchF","","",N,N],[17,"KEY_XF86ApplicationLeft","","",N,N],[17,"KEY_XF86ApplicationRight","","",N,N],[17,"KEY_XF86Book","","",N,N],[17,"KEY_XF86CD","","",N,N],[17,"KEY_XF86Calculater","","",N,N],[17,"KEY_XF86Clear","","",N,N],[17,"KEY_XF86Close","","",N,N],[17,"KEY_XF86Copy","","",N,N],[17,"KEY_XF86Cut","","",N,N],[17,"KEY_XF86Display","","",N,N],[17,"KEY_XF86DOS","","",N,N],[17,"KEY_XF86Documents","","",N,N],[17,"KEY_XF86Excel","","",N,N],[17,"KEY_XF86Explorer","","",N,N],[17,"KEY_XF86Game","","",N,N],[17,"KEY_XF86Go","","",N,N],[17,"KEY_XF86iTouch","","",N,N],[17,"KEY_XF86LogOff","","",N,N],[17,"KEY_XF86Market","","",N,N],[17,"KEY_XF86Meeting","","",N,N],[17,"KEY_XF86MenuKB","","",N,N],[17,"KEY_XF86MenuPB","","",N,N],[17,"KEY_XF86MySites","","",N,N],[17,"KEY_XF86New","","",N,N],[17,"KEY_XF86News","","",N,N],[17,"KEY_XF86OfficeHome","","",N,N],[17,"KEY_XF86Open","","",N,N],[17,"KEY_XF86Option","","",N,N],[17,"KEY_XF86Paste","","",N,N],[17,"KEY_XF86Phone","","",N,N],[17,"KEY_XF86Q","","",N,N],[17,"KEY_XF86Reply","","",N,N],[17,"KEY_XF86Reload","","",N,N],[17,"KEY_XF86RotateWindows","","",N,N],[17,"KEY_XF86RotationPB","","",N,N],[17,"KEY_XF86RotationKB","","",N,N],[17,"KEY_XF86Save","","",N,N],[17,"KEY_XF86ScrollUp","","",N,N],[17,"KEY_XF86ScrollDown","","",N,N],[17,"KEY_XF86ScrollClick","","",N,N],[17,"KEY_XF86Send","","",N,N],[17,"KEY_XF86Spell","","",N,N],[17,"KEY_XF86SplitScreen","","",N,N],[17,"KEY_XF86Support","","",N,N],[17,"KEY_XF86TaskPane","","",N,N],[17,"KEY_XF86Terminal","","",N,N],[17,"KEY_XF86Tools","","",N,N],[17,"KEY_XF86Travel","","",N,N],[17,"KEY_XF86UserPB","","",N,N],[17,"KEY_XF86User1KB","","",N,N],[17,"KEY_XF86User2KB","","",N,N],[17,"KEY_XF86Video","","",N,N],[17,"KEY_XF86WheelButton","","",N,N],[17,"KEY_XF86Word","","",N,N],[17,"KEY_XF86Xfer","","",N,N],[17,"KEY_XF86ZoomIn","","",N,N],[17,"KEY_XF86ZoomOut","","",N,N],[17,"KEY_XF86Away","","",N,N],[17,"KEY_XF86Messenger","","",N,N],[17,"KEY_XF86WebCam","","",N,N],[17,"KEY_XF86MailForward","","",N,N],[17,"KEY_XF86Pictures","","",N,N],[17,"KEY_XF86Music","","",N,N],[17,"KEY_XF86Battery","","",N,N],[17,"KEY_XF86Bluetooth","","",N,N],[17,"KEY_XF86WLAN","","",N,N],[17,"KEY_XF86UWB","","",N,N],[17,"KEY_XF86AudioForward","","",N,N],[17,"KEY_XF86AudioRepeat","","",N,N],[17,"KEY_XF86AudioRandomPlay","","",N,N],[17,"KEY_XF86Subtitle","","",N,N],[17,"KEY_XF86AudioCycleTrack","","",N,N],[17,"KEY_XF86CycleAngle","","",N,N],[17,"KEY_XF86FrameBack","","",N,N],[17,"KEY_XF86FrameForward","","",N,N],[17,"KEY_XF86Time","","",N,N],[17,"KEY_XF86Select","","",N,N],[17,"KEY_XF86View","","",N,N],[17,"KEY_XF86TopMenu","","",N,N],[17,"KEY_XF86Red","","",N,N],[17,"KEY_XF86Green","","",N,N],[17,"KEY_XF86Yellow","","",N,N],[17,"KEY_XF86Blue","","",N,N],[17,"KEY_XF86Suspend","","",N,N],[17,"KEY_XF86Hibernate","","",N,N],[17,"KEY_XF86TouchpadToggle","","",N,N],[17,"KEY_XF86TouchpadOn","","",N,N],[17,"KEY_XF86TouchpadOff","","",N,N],[17,"KEY_XF86AudioMicMute","","",N,N],[17,"KEY_XF86Switch_VT_1","","",N,N],[17,"KEY_XF86Switch_VT_2","","",N,N],[17,"KEY_XF86Switch_VT_3","","",N,N],[17,"KEY_XF86Switch_VT_4","","",N,N],[17,"KEY_XF86Switch_VT_5","","",N,N],[17,"KEY_XF86Switch_VT_6","","",N,N],[17,"KEY_XF86Switch_VT_7","","",N,N],[17,"KEY_XF86Switch_VT_8","","",N,N],[17,"KEY_XF86Switch_VT_9","","",N,N],[17,"KEY_XF86Switch_VT_10","","",N,N],[17,"KEY_XF86Switch_VT_11","","",N,N],[17,"KEY_XF86Switch_VT_12","","",N,N],[17,"KEY_XF86Ungrab","","",N,N],[17,"KEY_XF86ClearGrab","","",N,N],[17,"KEY_XF86Next_VMode","","",N,N],[17,"KEY_XF86Prev_VMode","","",N,N],[17,"KEY_XF86LogWindowTree","","",N,N],[17,"KEY_XF86LogGrabInfo","","",N,N],[17,"KEY_SunFA_Grave","","",N,N],[17,"KEY_SunFA_Circum","","",N,N],[17,"KEY_SunFA_Tilde","","",N,N],[17,"KEY_SunFA_Acute","","",N,N],[17,"KEY_SunFA_Diaeresis","","",N,N],[17,"KEY_SunFA_Cedilla","","",N,N],[17,"KEY_SunF36","","",N,N],[17,"KEY_SunF37","","",N,N],[17,"KEY_SunSys_Req","","",N,N],[17,"KEY_SunPrint_Screen","","",N,N],[17,"KEY_SunCompose","","",N,N],[17,"KEY_SunAltGraph","","",N,N],[17,"KEY_SunPageUp","","",N,N],[17,"KEY_SunPageDown","","",N,N],[17,"KEY_SunUndo","","",N,N],[17,"KEY_SunAgain","","",N,N],[17,"KEY_SunFind","","",N,N],[17,"KEY_SunStop","","",N,N],[17,"KEY_SunProps","","",N,N],[17,"KEY_SunFront","","",N,N],[17,"KEY_SunCopy","","",N,N],[17,"KEY_SunOpen","","",N,N],[17,"KEY_SunPaste","","",N,N],[17,"KEY_SunCut","","",N,N],[17,"KEY_SunPowerSwitch","","",N,N],[17,"KEY_SunAudioLowerVolume","","",N,N],[17,"KEY_SunAudioMute","","",N,N],[17,"KEY_SunAudioRaiseVolume","","",N,N],[17,"KEY_SunVideoDegauss","","",N,N],[17,"KEY_SunVideoLowerBrightness","","",N,N],[17,"KEY_SunVideoRaiseBrightness","","",N,N],[17,"KEY_SunPowerSwitchShift","","",N,N],[17,"KEY_Dring_accent","","",N,N],[17,"KEY_Dcircumflex_accent","","",N,N],[17,"KEY_Dcedilla_accent","","",N,N],[17,"KEY_Dacute_accent","","",N,N],[17,"KEY_Dgrave_accent","","",N,N],[17,"KEY_Dtilde","","",N,N],[17,"KEY_Ddiaeresis","","",N,N],[17,"KEY_DRemove","","",N,N],[17,"KEY_hpClearLine","","",N,N],[17,"KEY_hpInsertLine","","",N,N],[17,"KEY_hpDeleteLine","","",N,N],[17,"KEY_hpInsertChar","","",N,N],[17,"KEY_hpDeleteChar","","",N,N],[17,"KEY_hpBackTab","","",N,N],[17,"KEY_hpKP_BackTab","","",N,N],[17,"KEY_hpModelock1","","",N,N],[17,"KEY_hpModelock2","","",N,N],[17,"KEY_hpReset","","",N,N],[17,"KEY_hpSystem","","",N,N],[17,"KEY_hpUser","","",N,N],[17,"KEY_hpmute_acute","","",N,N],[17,"KEY_hpmute_grave","","",N,N],[17,"KEY_hpmute_asciicircum","","",N,N],[17,"KEY_hpmute_diaeresis","","",N,N],[17,"KEY_hpmute_asciitilde","","",N,N],[17,"KEY_hplira","","",N,N],[17,"KEY_hpguilder","","",N,N],[17,"KEY_hpYdiaeresis","","",N,N],[17,"KEY_hpIO","","",N,N],[17,"KEY_hplongminus","","",N,N],[17,"KEY_hpblock","","",N,N],[17,"KEY_osfCopy","","",N,N],[17,"KEY_osfCut","","",N,N],[17,"KEY_osfPaste","","",N,N],[17,"KEY_osfBackTab","","",N,N],[17,"KEY_osfBackSpace","","",N,N],[17,"KEY_osfClear","","",N,N],[17,"KEY_osfEscape","","",N,N],[17,"KEY_osfAddMode","","",N,N],[17,"KEY_osfPrimaryPaste","","",N,N],[17,"KEY_osfQuickPaste","","",N,N],[17,"KEY_osfPageLeft","","",N,N],[17,"KEY_osfPageUp","","",N,N],[17,"KEY_osfPageDown","","",N,N],[17,"KEY_osfPageRight","","",N,N],[17,"KEY_osfActivate","","",N,N],[17,"KEY_osfMenuBar","","",N,N],[17,"KEY_osfLeft","","",N,N],[17,"KEY_osfUp","","",N,N],[17,"KEY_osfRight","","",N,N],[17,"KEY_osfDown","","",N,N],[17,"KEY_osfEndLine","","",N,N],[17,"KEY_osfBeginLine","","",N,N],[17,"KEY_osfEndData","","",N,N],[17,"KEY_osfBeginData","","",N,N],[17,"KEY_osfPrevMenu","","",N,N],[17,"KEY_osfNextMenu","","",N,N],[17,"KEY_osfPrevField","","",N,N],[17,"KEY_osfNextField","","",N,N],[17,"KEY_osfSelect","","",N,N],[17,"KEY_osfInsert","","",N,N],[17,"KEY_osfUndo","","",N,N],[17,"KEY_osfMenu","","",N,N],[17,"KEY_osfCancel","","",N,N],[17,"KEY_osfHelp","","",N,N],[17,"KEY_osfSelectAll","","",N,N],[17,"KEY_osfDeselectAll","","",N,N],[17,"KEY_osfReselect","","",N,N],[17,"KEY_osfExtend","","",N,N],[17,"KEY_osfRestore","","",N,N],[17,"KEY_osfDelete","","",N,N],[17,"KEY_Reset","","",N,N],[17,"KEY_System","","",N,N],[17,"KEY_User","","",N,N],[17,"KEY_ClearLine","","",N,N],[17,"KEY_InsertLine","","",N,N],[17,"KEY_DeleteLine","","",N,N],[17,"KEY_InsertChar","","",N,N],[17,"KEY_DeleteChar","","",N,N],[17,"KEY_BackTab","","",N,N],[17,"KEY_KP_BackTab","","",N,N],[17,"KEY_Ext16bit_L","","",N,N],[17,"KEY_Ext16bit_R","","",N,N],[17,"KEY_mute_acute","","",N,N],[17,"KEY_mute_grave","","",N,N],[17,"KEY_mute_asciicircum","","",N,N],[17,"KEY_mute_diaeresis","","",N,N],[17,"KEY_mute_asciitilde","","",N,N],[17,"KEY_lira","","",N,N],[17,"KEY_guilder","","",N,N],[17,"KEY_IO","","",N,N],[17,"KEY_longminus","","",N,N],[17,"KEY_block","","",N,N],[6,"Keycode","xkbcommon::xkb","A number used to represent a physical key on a keyboard.",N,N],[6,"Keysym","","A number used to represent the symbols generated from a key on a keyboard.",N,N],[6,"LayoutIndex","","Index of a keyboard layout.",N,N],[6,"LayoutMask","","A mask of layout indices",N,N],[6,"LevelIndex","","Index of a shift level.",N,N],[6,"ModIndex","","Index of a modifier.",N,N],[6,"ModMask","","A mask of modifier indices.",N,N],[6,"LedIndex","","Index of a keyboard LED.",N,N],[6,"LedMask","","A mask of LED indices.",N,N],[6,"KeysymFlags","","",N,N],[6,"ContextFlags","","Flags for context creation.",N,N],[6,"KeymapCompileFlags","","Flags for keymap compilation.",N,N],[6,"KeymapFormat","","The possible keymap formats.",N,N],[6,"StateComponent","","Modifier and layout types for state objects.  This enum is bitmaskable, e.g. (xkb::STATE_MODS_DEPRESSED | xkb::STATE_MODS_LATCHED) is valid to exclude locked modifiers.",N,N],[6,"StateMatch","","Match flags for xkb_state_mod_indices_are_active and xkb_state_mod_names_are_active, specifying how the conditions for a successful match.  xkb::STATE_MATCH_NON_EXCLUSIVE is bitmaskable with the other modes.",N,N],[17,"KEYCODE_INVALID","","",N,N],[17,"LAYOUT_INVALID","","",N,N],[17,"LEVEL_INVALID","","",N,N],[17,"MOD_INVALID","","",N,N],[17,"LED_INVALID","","",N,N],[17,"KEYCODE_MAX","","",N,N],[17,"KEYSYM_NO_FLAGS","","",N,N],[17,"KEYSYM_CASE_INSENSITIVE","","",N,N],[17,"CONTEXT_NO_FLAGS","","Do not apply any context flags.",N,N],[17,"CONTEXT_NO_DEFAULT_INCLUDES","","Create this context with an empty include path.",N,N],[17,"CONTEXT_NO_ENVIRONMENT_NAMES","","Don't take RMLVO names from the environment.",N,N],[17,"KEYMAP_COMPILE_NO_FLAGS","","Do not apply any flags.",N,N],[17,"KEYMAP_FORMAT_TEXT_V1","","The current/classic XKB text format, as generated by xkbcomp -xkb.",N,N],[17,"KEYMAP_FORMAT_USE_ORIGINAL","","Get the keymap as a string in the format from which it was created.",N,N],[17,"STATE_MODS_DEPRESSED","","Depressed modifiers, i.e. a key is physically holding them.",N,N],[17,"STATE_MODS_LATCHED","","Latched modifiers, i.e. will be unset after the next non-modifier key press.",N,N],[17,"STATE_MODS_LOCKED","","Locked modifiers, i.e. will be unset after the key provoking the lock has been pressed again.",N,N],[17,"STATE_MODS_EFFECTIVE","","Effective modifiers, i.e. currently active and affect key processing (derived from the other state components). Use this unless you explictly care how the state came about.",N,N],[17,"STATE_LAYOUT_DEPRESSED","","Depressed layout, i.e. a key is physically holding it.",N,N],[17,"STATE_LAYOUT_LATCHED","","Latched layout, i.e. will be unset after the next non-modifier key press.",N,N],[17,"STATE_LAYOUT_LOCKED","","Locked layout, i.e. will be unset after the key provoking the lock has been pressed again.",N,N],[17,"STATE_LAYOUT_EFFECTIVE","","Effective layout, i.e. currently active and affects key processing (derived from the other state components). Use this unless you explictly care how the state came about.",N,N],[17,"STATE_LEDS","","LEDs (derived from the other state components).",N,N],[17,"STATE_MATCH_ANY","","Returns true if any of the modifiers are active.",N,N],[17,"STATE_MATCH_ALL","","Returns true if all of the modifiers are active.",N,N],[17,"STATE_MATCH_NON_EXCLUSIVE","","Makes matching non-exclusive, i.e. will not return false if a modifier not specified in the arguments is active.",N,N],[17,"MOD_NAME_SHIFT","","",N,N],[17,"MOD_NAME_CAPS","","",N,N],[17,"MOD_NAME_CTRL","","",N,N],[17,"MOD_NAME_ALT","","",N,N],[17,"MOD_NAME_NUM","","",N,N],[17,"MOD_NAME_LOGO","","",N,N],[17,"LED_NAME_CAPS","","",N,N],[17,"LED_NAME_NUM","","",N,N],[17,"LED_NAME_SCROLL","","",N,N],[11,"from_raw_ptr","","contruct a context from a raw ffi pointer. This context must already been referenced as xkb_context_unref will be called at drop time",5,N],[11,"get_raw_ptr","","get the raw pointer from this context",5,N],[11,"new","","Create a new context.",5,[[["contextflags"]],["context"]]],[11,"include_path_append","","append a new entry to the context's include path returns true on success, or false if the include path could not be added or is inaccessible",5,[[["self"],["path"]],["bool"]]],[11,"include_path_append_default","","Append the default include paths to the context's include path.",5,[[["self"]],["bool"]]],[11,"include_path_reset_defaults","","Reset the context's include path to the default.",5,[[["self"]],["bool"]]],[11,"include_path_clear","","Remove all entries from the context's include path.",5,[[["self"]]]],[11,"include_paths","","get an iterator on the include paths of this context",5,[[["self"]],["contextincludepaths"]]],[11,"set_log_level","","Set the current logging level.",5,[[["self"],["loglevel"]]]],[11,"get_log_level","","",5,[[["self"]],["loglevel"]]],[11,"set_log_verbosity","","Sets the current logging verbosity.",5,[[["self"],["i32"]]]],[11,"get_log_verbosity","","",5,[[["self"]],["i32"]]],[11,"clone","","",5,[[["self"]],["context"]]],[11,"drop","","",5,[[["self"]]]],[11,"next","","",6,[[["self"]],["option",["path"]]]],[11,"from_raw_ptr","","",7,N],[11,"get_raw_ptr","","",7,N],[11,"new_from_names","","Create a keymap from RMLVO names.",7,[[["context"],["s"],["s"],["s"],["s"],["option",["string"]],["keymapcompileflags"]],["option",["keymap"]]]],[11,"new_from_file","","Create a keymap from a keymap file.",7,[[["context"],["file"],["keymapformat"],["keymapcompileflags"]],["option",["keymap"]]]],[11,"new_from_string","","Create a keymap from a keymap string.",7,[[["context"],["string"],["keymapformat"],["keymapcompileflags"]],["option",["keymap"]]]],[11,"get_as_string","","Get the compiled keymap as a string.",7,[[["self"],["keymapformat"]],["string"]]],[11,"min_keycode","","Get the minimum keycode in the keymap.",7,[[["self"]],["keycode"]]],[11,"max_keycode","","Get the maximum keycode in the keymap.",7,[[["self"]],["keycode"]]],[11,"mods","","Get an iterator to the modifiers of this keymap",7,[[["self"]],["keymapmods"]]],[11,"num_mods","","Get the number of modifiers in the keymap.",7,[[["self"]],["modindex"]]],[11,"mod_get_name","","Get the name of a modifier by index.",7,[[["self"],["modindex"]],["str"]]],[11,"mod_get_index","","Get the index of a modifier by name.",7,[[["self"],["s"]],["modindex"]]],[11,"layouts","","Returns an iterator to the layouts in this keymap",7,[[["self"]],["keymaplayouts"]]],[11,"num_layouts","","Get the number of layouts in the keymap.",7,[[["self"]],["layoutindex"]]],[11,"layout_get_name","","Get the name of a layout by index.",7,[[["self"],["layoutindex"]],["str"]]],[11,"layout_get_index","","Get the index of a layout by name.",7,[[["self"],["s"]],["layoutindex"]]],[11,"leds","","Returns an iterator to the leds in this keymap",7,[[["self"]],["keymapleds"]]],[11,"num_leds","","Get the number of LEDs in the keymap.",7,[[["self"]],["ledindex"]]],[11,"led_get_name","","Get the name of a LED by index.",7,[[["self"],["ledindex"]],["str"]]],[11,"led_get_index","","Get the index of a LED by name.",7,[[["self"],["s"]],["ledindex"]]],[11,"num_layouts_for_key","","Get the number of layouts for a specific key.",7,[[["self"],["keycode"]],["layoutindex"]]],[11,"num_levels_for_key","","Get the number of shift levels for a specific key and layout.",7,[[["self"],["keycode"],["layoutindex"]],["levelindex"]]],[11,"key_get_syms_by_level","","Get the keysyms obtained from pressing a key in a given layout and shift level.",7,N],[11,"key_repeats","","Determine whether a key should repeat or not.",7,[[["self"],["keycode"]],["bool"]]],[11,"clone","","",7,[[["self"]],["keymap"]]],[11,"drop","","",7,[[["self"]]]],[11,"next","","",8,[[["self"]],["option",["str"]]]],[11,"next","","",9,[[["self"]],["option",["str"]]]],[11,"next","","",10,[[["self"]],["option",["str"]]]],[11,"from_raw_ptr","","",11,N],[11,"get_raw_ptr","","",11,N],[11,"new","","Create a new keyboard state object from a keymap.",11,[[["keymap"]],["state"]]],[11,"get_keymap","","Get the keymap which a keyboard state object is using.",11,[[["self"]],["keymap"]]],[11,"update_key","","Update the keyboard state to reflect a given key being pressed or released.",11,[[["self"],["keycode"],["keydirection"]],["statecomponent"]]],[11,"update_mask","","Update a keyboard state from a set of explicit masks.",11,[[["self"],["modmask"],["modmask"],["modmask"],["layoutindex"],["layoutindex"],["layoutindex"]],["statecomponent"]]],[11,"key_get_syms","","Get the keysyms obtained from pressing a particular key in a given keyboard state.",11,N],[11,"key_get_utf8","","Get the Unicode/UTF-8 string obtained from pressing a particular key in a given keyboard state.",11,[[["self"],["keycode"]],["string"]]],[11,"key_get_utf32","","Get the Unicode/UTF-32 codepoint obtained from pressing a particular key in a a given keyboard state.",11,[[["self"],["keycode"]],["u32"]]],[11,"key_get_one_sym","","Get the single keysym obtained from pressing a particular key in a given keyboard state.",11,[[["self"],["keycode"]],["keysym"]]],[11,"key_get_layout","","Get the effective layout index for a key in a given keyboard state.",11,[[["self"],["keycode"]],["layoutindex"]]],[11,"key_get_level","","Get the effective shift level for a key in a given keyboard state and layout.",11,[[["self"],["keycode"],["layoutindex"]],["levelindex"]]],[11,"serialize_mods","","The counterpart to xkb_state_update_mask for modifiers, to be used on the server side of serialization.",11,[[["self"],["statecomponent"]],["modmask"]]],[11,"serialize_layout","","",11,[[["self"],["statecomponent"]],["layoutindex"]]],[11,"mod_name_is_active","","Test whether a modifier is active in a given keyboard state by name.",11,[[["self"],["s"],["statecomponent"]],["bool"]]],[11,"mod_index_is_active","","Test whether a modifier is active in a given keyboard state by index.",11,[[["self"],["modindex"],["statecomponent"]],["bool"]]],[11,"mod_index_is_consumed","","Test whether a modifier is consumed by keyboard state translation for a key.",11,[[["self"],["keycode"],["modindex"]],["bool"]]],[11,"mod_mask_remove_consumed","","Remove consumed modifiers from a modifier mask for a key.",11,[[["self"],["keycode"],["modmask"]],["modmask"]]],[11,"key_get_consumed_mods","","Get the mask of modifiers consumed by translating a given key.",11,[[["self"],["keycode"]],["modmask"]]],[11,"layout_name_is_active","","Test whether a layout is active in a given keyboard state by name.",11,[[["self"],["s"],["statecomponent"]],["bool"]]],[11,"layout_index_is_active","","Test whether a layout is active in a given keyboard state by index.",11,[[["self"],["layoutindex"],["statecomponent"]],["bool"]]],[11,"led_name_is_active","","Test whether a LED is active in a given keyboard state by name.",11,[[["self"],["s"]],["bool"]]],[11,"led_index_is_active","","Test whether a LED is active in a given keyboard state by index.",11,[[["self"],["ledindex"]],["bool"]]],[11,"clone","","",11,[[["self"]],["state"]]],[11,"drop","","",11,[[["self"]]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","xkbcommon::xkb::ffi","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]]],"paths":[[4,"LogLevel"],[4,"KeyDirection"],[3,"xkb_rule_names"],[4,"xkb_log_level"],[4,"xkb_key_direction"],[3,"Context"],[3,"ContextIncludePaths"],[3,"Keymap"],[3,"KeymapMods"],[3,"KeymapLayouts"],[3,"KeymapLeds"],[3,"State"],[4,"xkb_context"],[4,"xkb_keymap"],[4,"xkb_state"]]};
initSearch(searchIndex);
